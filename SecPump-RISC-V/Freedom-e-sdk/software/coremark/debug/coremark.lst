
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/debug/coremark.elf:     format de fichier elf32-littleriscv
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/debug/coremark.elf
architecture: riscv:rv32, fanions 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
adresse de départ 0x20400000

En-tête de programme:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x0000036e memsz 0x0000036e flags rwx
    LOAD off    0x00002000 vaddr 0x80000000 paddr 0x2040a4c0 align 2**12
         filesz 0x0000205c memsz 0x0000205c flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004060 vaddr 0x80002060 paddr 0x80002060 align 2**12
         filesz 0x00000000 memsz 0x000018c0 flags rw-
    LOAD off    0x0000405c vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004380 vaddr 0x20400380 paddr 0x20400380 align 2**12
         filesz 0x0000a13a memsz 0x0000a13a flags r-x
    LOAD off    0x0000e4ba vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections :
Idx Name              Taille    VMA       LMA       Off fich  Algn  Fanions
  0 .init             000002e8  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e8  204002e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002f4  204002f4  000012f4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text             0000a13a  20400380  20400380  00004380  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .data             0000205c  80000000  2040a4c0  00002000  2**3  CONTENTS, ALLOC, LOAD, DATA
  5 .bss              000000b8  80002060  80002060  00004060  2**3  ALLOC
  6 .stack            00001000  80002120  80002120  00004060  2**4  ALLOC
  7 .heap             00000800  80003120  80003120  00004060  2**3  ALLOC
  8 .debug_info       000331db  00000000  00000000  0000e4ba  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev     00004e1e  00000000  00000000  00041695  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc        000050ca  00000000  00000000  000464b3  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000dc8  00000000  00000000  0004b580  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     000019a0  00000000  00000000  0004c348  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       00017087  00000000  00000000  0004dce8  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        000060f6  00000000  00000000  00064d6f  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  0006ae65  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  0006ae8d  2**0  CONTENTS, READONLY
 17 .debug_frame      00003504  00000000  00000000  0006aeb8  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e8 l    d  .init_array	00000000 .init_array
204002f4 l    d  .ctors	00000000 .ctors
20400380 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80002060 l    d  .bss	00000000 .bss
80002120 l    d  .stack	00000000 .stack
80003120 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000d2 l     F .init	00000000 __metal_memory_scrub
20400140 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400254 l       .init	00000000 _skip_init
800013fc l       .data	00000000 argv
80001400 l       .data	00000000 envp
80001404 l       .data	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20408b4c l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20408b66 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20408b80 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20408b96 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20408baa l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20408bbc l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20408bcc l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20408be2 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20408bf4 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
80001714 l     O .data	00000880 pll_configs
20408c06 l     F .text	0000004e get_pll_config_freq
20408e7e l     F .text	000000ac find_closest_config
20408f2a l     F .text	000001a4 configure_pll
00000000 l    df *ABS*	00000000 core_list_join.c
20400380 l     F .text	0000000c core_bench_list.cold.1
2040038c l     F .text	00000006 core_list_init.cold.2
00000000 l    df *ABS*	00000000 core_main.c
80000ad0 l     O .data	0000000a list_known_crc
80001258 l     O .data	0000000a matrix_known_crc
80001264 l     O .data	0000000a state_known_crc
00000000 l    df *ABS*	00000000 core_matrix.c
00000000 l    df *ABS*	00000000 core_state.c
80001270 l     O .data	00000010 errpat
80001280 l     O .data	00000010 floatpat
80001290 l     O .data	00000010 intpat
800012a0 l     O .data	00000010 scipat
00000000 l    df *ABS*	00000000 core_util.c
00000000 l    df *ABS*	00000000 core_portme.c
8000206c l     O .bss	00000004 start_time_val
80002070 l     O .bss	00000004 stop_time_val
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 timesr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
204042ee l     F .text	00000068 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
2040479e l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000a8c l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_times.c
204051b4 l     F .text	000000e0 muldiv
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80002088 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 init.c
80002080 l     O .bss	00000004 init_done.1531
80002084 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20405f78 l     F .text	00000026 __metal_driver_sifive_clint0_control_base
20405f9e l     F .text	00000024 __metal_driver_sifive_clint0_num_interrupts
20405fc2 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20405ffe l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2040615e l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
204066a2 l     F .text	00000024 __metal_driver_cpu_hartid
204066c6 l     F .text	0000002a __metal_driver_cpu_timebase
204066f0 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
2040671a l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20408084 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
204080ae l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
204080d8 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20408100 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20408128 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2040814a l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
2040895e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20408978 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
2040898e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
204089a2 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20408a5c l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20408a76 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20408a8c l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20408aa0 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20409234 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_gpio0.c
204092b0 l     F .text	00000026 __metal_driver_sifive_gpio0_base
204092d6 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20409300 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20409b64 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20409b8e l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20409bbc l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20409be4 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20409c12 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20409c3c l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20409c64 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
2040a02e l     F .text	000000d8 pre_rate_change_callback_func
2040a106 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
2040a380 l       .text	00000000 IRQ_0
2040a384 l       .text	00000000 IRQ_1
2040a388 l       .text	00000000 IRQ_2
2040a38c l       .text	00000000 IRQ_3
2040a390 l       .text	00000000 IRQ_4
2040a394 l       .text	00000000 IRQ_5
2040a398 l       .text	00000000 IRQ_6
2040a39c l       .text	00000000 IRQ_7
2040a3a0 l       .text	00000000 IRQ_8
2040a3a4 l       .text	00000000 IRQ_9
2040a3a8 l       .text	00000000 IRQ_10
2040a3ac l       .text	00000000 IRQ_11
2040a3b0 l       .text	00000000 IRQ_12
2040a3b4 l       .text	00000000 IRQ_13
2040a3b8 l       .text	00000000 IRQ_14
2040a3bc l       .text	00000000 IRQ_15
2040a3c0 l       .text	00000000 IRQ_LC0
2040a3c4 l       .text	00000000 IRQ_LC1
2040a3c8 l       .text	00000000 IRQ_LC2
2040a3cc l       .text	00000000 IRQ_LC3
2040a3d0 l       .text	00000000 IRQ_LC4
2040a3d4 l       .text	00000000 IRQ_LC5
2040a3d8 l       .text	00000000 IRQ_LC6
2040a3dc l       .text	00000000 IRQ_LC7
2040a3e0 l       .text	00000000 IRQ_LC8
2040a3e4 l       .text	00000000 IRQ_LC9
2040a3e8 l       .text	00000000 IRQ_LC10
2040a3ec l       .text	00000000 IRQ_LC11
2040a3f0 l       .text	00000000 IRQ_LC12
2040a3f4 l       .text	00000000 IRQ_LC13
2040a3f8 l       .text	00000000 IRQ_LC14
2040a3fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
2040a400 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 
204002f4 l       .init_array	00000000 metal_constructors_end
204002f8 l       .init_array	00000000 __fini_array_end
204002f8 l       .init_array	00000000 metal_destructors_end
204002f8 l       .init_array	00000000 metal_destructors_start
204002f8 l       .init_array	00000000 __fini_array_start
204002e8 l       .init_array	00000000 __init_array_end
204002e8 l       .init_array	00000000 __preinit_array_end
204002e8 l       .init_array	00000000 __init_array_start
204002e8 l       .init_array	00000000 metal_constructors_start
204002e8 l       .init_array	00000000 __preinit_array_start
8000201c g     O .data	00000040 __metal_driver_vtable_sifive_uart0
20404c1a g     F .text	00000030 _isatty_r
20406fbe  w    F .text	00000092 metal_lc4_interrupt_vector_handler
80002060 g     O .bss	00000004 seed1_volatile
20403eba g     F .text	000000ce _puts_r
20404c4a g     F .text	00000034 _lseek_r
2040a29c g     F .text	00000026 metal_clock_get_rate_hz
20409f8e g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
2040633a g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20409de2 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
20406f2c  w    F .text	00000092 metal_lc3_interrupt_vector_handler
2040777a g     F .text	00000064 __metal_valid_interrupt_id
20403e7a g     F .text	00000040 printf
204002f0 g     O .init_array	00000004 _use_hfxosc_ptr
20407bfa g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80001278 g       .data	00000000 __global_pointer$
204012b0 g     F .text	00000328 core_list_init
204002f4 g     F .ctors	00000024 metal_tty_init
2040a248 g     F .text	00000054 _metal_clock_append_to_callbacks
204081a4 g     F .text	00000048 __metal_plic0_complete_interrupt
204079c8 g     F .text	000001da __metal_driver_riscv_cpu_controller_interrupt_register
204002ec g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20404b46 g     F .text	00000036 __sseek
204043a4 g     F .text	00000066 __sinit
204038f0 g     F .text	000002e8 crcu32
20403f98 g     F .text	000000b4 __swbuf_r
80002060 g       .data	00000000 __tls_base
20404360 g     F .text	00000044 __sfmoreglue
20404c9a g     F .text	00000002 __malloc_unlock
20403d70 g     F .text	00000004 check_data_types
20405ce2 g     F .text	0000002a metal_cpu_get
20403db0 g     F .text	00000014 stop_time
80000a30 g     O .data	00000020 __metal_dt_serial_10013000
2040973e g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
80001510 g     O .data	00000064 __metal_driver_vtable_riscv_clint0
80002118 g       .bss	00000000 metal_segment_bss_target_end
2040602e g     F .text	0000009a __metal_clint0_mtime_get
20407ff8 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
20403770 g     F .text	0000016e crcu16
00000001 g       *ABS*	00000000 __metal_chicken_bit
20409ea6 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
204094f4 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
204053a2 g     F .text	00000008 __errno
80000000 g       .text	00000000 metal_segment_itim_target_start
20405294  w    F .text	00000094 times
20405c92 g     F .text	0000002a metal_cpu_get_timebase
20409db2 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20409d40 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400152 g     F .init	0000000e __metal_synchronize_harts
80002060 g       .data	00000000 metal_segment_bss_target_start
204060c8 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20404be8 g     F .text	00000032 _fstat_r
2040998e g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80002114 g     O .bss	00000004 errno
20408d00 g     F .text	0000017e __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00001000 g       *ABS*	00000000 __stack_size
2040a30e g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20403e40 g     F .text	00000006 portable_fini
20407298  w    F .text	00000092 metal_lc9_interrupt_vector_handler
204000de  w    F .init	00000000 __metal_before_start
20405e16  w    F .text	00000014 metal_init_run
20403dd0 g     F .text	00000014 get_time
20402ce0 g     F .text	00000872 core_bench_state
800016b0 g     O .data	00000064 __metal_driver_vtable_riscv_plic0
8000166c g     O .data	00000044 __metal_driver_vtable_cpu
20405f4a g     F .text	0000002e metal_uart_set_baud_rate
2040a136 g     F .text	000000d2 __metal_driver_sifive_uart0_init
20400bd0 g     F .text	000006cc core_bench_list
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20403f92 g     F .text	00000006 _times_r
20407c86 g     F .text	00000072 __metal_driver_cpu_mcycle_get
80001f94 g     O .data	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80003120 g       .heap	00000000 metal_segment_heap_target_start
20404356 g     F .text	0000000a _cleanup_r
80000a9c g     O .data	00000008 __metal_dt_cpu_0
20407206  w    F .text	00000092 metal_lc8_interrupt_vector_handler
204090ce g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405e84 g     F .text	00000046 metal_timer_get_timebase_frequency
204088c2 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20403f88 g     F .text	0000000a puts
204074e0  w    F .text	00000092 metal_lc13_interrupt_vector_handler
204068a8 g     F .text	00000018 __metal_default_exception_handler
204050a0 g     F .text	00000026 _fstat
2040666e g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20407c16 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
80000a7c g     O .data	00000004 seed3_volatile
2040673e g     F .text	0000002c __metal_driver_cpu_get
80001608 g     O .data	00000064 __metal_driver_vtable_riscv_cpu_intc
2040679c g     F .text	00000018 __metal_interrupt_global_disable
20408936 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20407174  w    F .text	00000092 metal_lc7_interrupt_vector_handler
2040732a  w    F .text	00000092 metal_lc10_interrupt_vector_handler
20404a98 g     F .text	00000030 _sbrk_r
204086e2 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20407896 g     F .text	0000004e __metal_exception_register
20405d26 g     F .text	00000078 metal_init
2040504a g     F .text	00000034 _read_r
20407e1a g     F .text	00000016 __metal_driver_cpu_timer_controller_interrupt
204095d6 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000a80 g     O .data	00000004 seed4_volatile
80000000 g       .text	00000000 metal_segment_lim_target_end
20406994 g     F .text	00000066 __metal_default_sw_handler
2040a340 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20409c8e g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
2040591e g     F .text	0000034a .hidden __umoddi3
204050c6 g     F .text	00000020 _isatty
2040969c g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
204015f0 g     F .text	000001cc iterate
20409cce g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
80000ac4 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000a88 g     O .data	00000004 _global_impure_ptr
204069fa  w    F .text	00000092 metal_timer_interrupt_vector_handler
2040540a g     F .text	0000006a __libc_init_array
20409616 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
204073bc  w    F .text	00000092 metal_lc11_interrupt_vector_handler
204055c8 g     F .text	00000356 .hidden __udivdi3
20408b28 g     F .text	00000024 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20407ba2 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
2040513a g     F .text	0000007a _sbrk
20409590 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2040a208 g     F .text	00000040 _metal_clock_call_all_callbacks
204002c8 g     F .init	00000002 _init
204067fe g     F .text	0000001a __metal_interrupt_timer_disable
20409788 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20407ed0 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
80001fe0 g     O .data	0000003c __metal_driver_vtable_sifive_gpio0
20409d08 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
204096dc g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
204053d2 g     F .text	00000038 __libc_fini_array
20405294 g     F .text	00000094 _times
80000a68 g     O .data	0000000c __metal_dt_clock_4
20409b16 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20405d9e g     F .text	00000078 metal_fini
20407e5a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20408064 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20406850 g     F .text	0000002c __metal_interrupt_local_enable
2040663a g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20405eca g     F .text	00000026 metal_tty_putc
204083b0 g     F .text	00000018 __metal_plic0_default_handler
20405328  w    F .text	00000070 write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
204017c0 g     F .text	000012c2 core_bench_matrix
20408732 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20406a8c g     F .text	00000016 __metal_default_beu_handler
80001360 g     O .data	00000020 __sf_fake_stderr
20406834 g     F .text	0000001c __metal_interrupt_external_disable
20409cae g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20407c6a g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20403d90 g     F .text	00000014 start_time
204078e4 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
204047c8 g     F .text	00000042 __sfputs_r
20407fb2 g     F .text	00000046 __metal_driver_cpu_exception_register
204067b4 g     F .text	00000018 __metal_interrupt_software_enable
20406e08  w    F .text	00000092 metal_lc1_interrupt_vector_handler
20404c7e g     F .text	0000001a memchr
20404614 g     F .text	000000ac _free_r
8000207c g     O .bss	00000004 _global_atexit
80002068 g     O .bss	00000004 seed5_volatile
20408270 g     F .text	00000066 __metal_driver_riscv_plic0_set_priority
20407696 g     F .text	00000050 __metal_controller_interrupt_vector_mode
20405500 g     F .text	000000c8 __call_exitprocs
80003120 g       .stack	00000000 _sp
204002e8 g     O .init_array	00000004 _metal_tty_init_ptr
20400160 g     F .init	00000000 _start
204089b4 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20405e3e g     F .text	00000046 metal_timer_get_cyclecount
204050e6 g     F .text	0000002a _lseek
20407f92 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20408026 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20406818 g     F .text	0000001c __metal_interrupt_external_enable
20405474 g     F .text	0000008c __register_exitproc
20409ed6 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20408474 g     F .text	0000015c __metal_driver_riscv_plic0_init
20408692 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20403bf0 g     F .text	00000172 crc16
20409564 g     F .text	0000002c __metal_driver_sifive_gpio0_output
204070e2  w    F .text	00000092 metal_lc6_interrupt_vector_handler
2040676a g     F .text	0000001a __metal_myhart_id
20409b36 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20406906  w    F .text	0000008e metal_software_interrupt_vector_handler
20407bce g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20404bb8 g     F .text	00000030 _close_r
20405c68 g     F .text	0000002a metal_cpu_get_timer
20409f6e g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
2040621c g     F .text	000000da __metal_driver_riscv_clint0_register
80000a94 g     O .data	00000008 __metal_dt_clint_2000000
2040404c g     F .text	00000100 __swsetup_r
2040440a g     F .text	0000009a __sfp
2040a2c2 g     F .text	0000004c metal_clock_set_rate_hz
20404ac8 g     F .text	00000030 __sread
204094b4 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002ca  w    F .init	00000000 secondary_main
204068d8  w    F .text	0000002e metal_interrupt_vector_handler
20404c98 g     F .text	00000002 __malloc_lock
20409d7a g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20404296 g     F .text	00000058 _fflush_r
20408234 g     F .text	0000003c __metal_plic0_get_threshold
20409246 g     F .text	00000030 __metal_driver_sifive_fe310_g000_prci_get_reg
80001380 g     O .data	00000020 __sf_fake_stdin
204077de g     F .text	000000b8 __metal_local_interrupt_enable
20406504 g     F .text	00000136 __metal_driver_riscv_clint0_command_request
20404604 g     F .text	00000010 memset
20407050  w    F .text	00000092 metal_lc5_interrupt_vector_handler
204003a0 g     F .text	0000081c main
80002060 g       .data	00000000 metal_segment_data_target_end
20409e5c g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
80000aac g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20407e6e g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20407f32 g     F .text	00000060 __metal_driver_cpu_get_msip
2040a372 g     F .text	0000000e metal_shutdown
80000000 g       .text	00000000 metal_segment_itim_target_end
20408044 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20408168 g     F .text	0000003c __metal_plic0_claim_interrupt
20409e2c g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20404b7c g     F .text	00000006 __sclose
2040744e  w    F .text	00000092 metal_lc12_interrupt_vector_handler
2040009a g     F .init	00000000 metal_mem_scrub
20403700 g     F .text	00000062 get_seed_32
204046c0 g     F .text	000000de _malloc_r
2040631e g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000aa8 g     O .data	00000004 __metal_dt_prci_10008000
20407cf8 g     F .text	00000046 __metal_driver_cpu_timebase_get
20408826 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20405d0c g     F .text	0000001a metal_cpu_get_current_hartid
20408ab2 g     F .text	00000076 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
2040a380 g       .text	00000000 __metal_vector_table
20400370 g       *ABS*	00000000 metal_segment_itim_source_start
80000a90  w    O .data	00000004 __metal_cpu_table
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002c8 g     F .init	00000002 _fini
20403e7a g     F .text	00000040 iprintf
80000000 g       .text	00000000 metal_segment_lim_target_start
80001410 g     O .data	00000100 .hidden __clz_tab
204082d6 g     F .text	00000036 __metal_driver_riscv_plic0_get_priority
20400344 g     F .ctors	0000002a use_hfxosc
20406784 g     F .text	00000018 __metal_interrupt_global_enable
20405398 g     F .text	0000000a atexit
20404b82 g     F .text	00000036 _write_r
204067e4 g     F .text	0000001a __metal_interrupt_timer_enable
20409f18 g     F .text	00000056 __metal_driver_sifive_uart0_getc
2040644a g     F .text	000000ba __metal_driver_riscv_clint0_disable
20404c9c g     F .text	0000010c _printf_common
80000a84 g     O .data	00000004 _impure_ptr
20407da4 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
2040414c g     F .text	0000014a __sflush_r
20408762 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20408c54 g     F .text	000000ac __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20409276 g     F .text	0000003a __metal_driver_sifive_fe310_g000_prci_set_reg
2040a462 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20403e20 g     F .text	00000008 portable_init
20406392 g     F .text	000000b8 __metal_driver_riscv_clint0_enable
2040a4c0 g       *ABS*	00000000 metal_segment_data_source_start
20402a90 g     F .text	00000248 core_init_matrix
20400144 g       .init	00000000 early_trap_vector
80003920 g       .heap	00000000 metal_segment_heap_target_end
204076e6 g     F .text	00000094 __metal_controller_interrupt_vector
80000a5c g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20404510 g     F .text	00000058 __swhatbuf_r
20409656 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20406aa2 g     F .text	0000006a __metal_default_timer_handler
20405328 g     F .text	00000070 _write
204083c8 g     F .text	000000ac __metal_plic0_handler
20406e9a  w    F .text	00000092 metal_lc2_interrupt_vector_handler
20407604  w    F .text	00000092 metal_lc15_interrupt_vector_handler
20405cbc g     F .text	00000026 metal_cpu_interrupt_controller
20404af8 g     F .text	0000004e __swrite
204053aa g     F .text	00000028 exit
2040480a g     F .text	0000028e _vfiprintf_r
204044a4 g     F .text	0000006c _fwalk_reent
20403560 g     F .text	00000194 core_init_state
2040a482 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20400370 g       *ABS*	00000000 metal_segment_lim_source_start
800013a0 g     O .data	00000020 __sf_fake_stdout
80000aa4 g     O .data	00000004 __metal_dt_gpio_10012000
20403e00 g     F .text	0000000e time_in_secs
204068c0 g     F .text	00000018 __metal_default_interrupt_handler
20405f1c g     F .text	0000002e metal_uart_putc
20405110 g     F .text	0000002a _read
20405e2a  w    F .text	00000014 metal_fini_run
2040953a g     F .text	0000002a __metal_driver_sifive_gpio0_input
20406b80 g     F .text	0000017c __metal_exception_handler
20406d76  w    F .text	00000092 metal_lc0_interrupt_vector_handler
2040a4a6 g     F .text	00000014 _exit
20407d3e g     F .text	00000066 __metal_driver_cpu_mtime_get
20404568 g     F .text	0000009c __smakebuf_r
204062f6 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20404da8 g     F .text	000002a2 _printf_i
80002078 g     O .bss	00000004 __malloc_sbrk_start
20403e52 g     F .text	00000028 clock
20407572  w    F .text	00000092 metal_lc14_interrupt_vector_handler
80000ab4 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20406194 g     F .text	00000088 __metal_driver_riscv_clint0_init
80002074 g     O .bss	00000004 __malloc_free_list
80002064 g     O .bss	00000004 seed2_volatile
20400318 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
2040480a g     F .text	0000028e _vfprintf_r
20407e30 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
2040830c g     F .text	000000a4 __metal_plic0_enable
20400098  w      .init	00000000 __register_frame_info
20408a38 g     F .text	00000024 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20407e44 g     F .text	00000016 __metal_driver_cpu_sw_controller_interrupt
2040687c g     F .text	0000002c __metal_interrupt_local_disable
204067cc g     F .text	00000018 __metal_interrupt_software_disable
20405ef0 g     F .text	0000002c metal_uart_init
80000a78 g     O .data	00000004 default_num_contexts
80000a50 g     O .data	0000000c __metal_dt_clock_3
204081ec g     F .text	00000048 __metal_plic0_set_threshold
2040878a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
2040507e g     F .text	00000022 _close
80000abc g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
204085d0 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Déassemblage de la section .init :

20400000 <_enter>:
_enter():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	27818193          	addi	gp,gp,632 # 80001278 <__global_pointer$>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	12428293          	addi	t0,t0,292 # 20400144 <early_trap_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	dfc00117          	auipc	sp,0xdfc00
20400030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400034:	00011663          	bnez	sp,20400040 <_enter+0x40>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:56
    la sp, _sp
20400038:	5fc03117          	auipc	sp,0x5fc03
2040003c:	0e810113          	addi	sp,sp,232 # 80003120 <_sp>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20400040:	f1402573          	csrr	a0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:60
    li t0, 0
20400044:	4281                	li	t0,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:61
    la t1, __stack_size
20400046:	dfc01317          	auipc	t1,0xdfc01
2040004a:	fba30313          	addi	t1,t1,-70 # 1000 <__stack_size>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
2040004e:	ff017113          	andi	sp,sp,-16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20400052:	00a28563          	beq	t0,a0,2040005c <_enter+0x5c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:65
    add sp, sp, t1
20400056:	911a                	add	sp,sp,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20400058:	0285                	addi	t0,t0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:67
    j 1b
2040005a:	bfd5                	j	2040004e <_enter+0x4e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
2040005c:	00000097          	auipc	ra,0x0
20400060:	08208093          	addi	ra,ra,130 # 204000de <__metal_before_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:77
    beqz ra, 1f
20400064:	00008363          	beqz	ra,2040006a <_enter+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:78
    jalr ra
20400068:	9082                	jalr	ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2040006a:	f1402573          	csrr	a0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:85
    li a1, 0
2040006e:	4581                	li	a1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:86
    li a2, 0
20400070:	4601                	li	a2,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:87
    call _start
20400072:	20fd                	jal	20400160 <_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400074:	dfc00097          	auipc	ra,0xdfc00
20400078:	f8c08093          	addi	ra,ra,-116 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:93
    beqz ra, 1f
2040007c:	00008363          	beqz	ra,20400082 <_enter+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:94
    jalr ra
20400080:	9082                	jalr	ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400082:	00000297          	auipc	t0,0x0
20400086:	00c28293          	addi	t0,t0,12 # 2040008e <_enter+0x8e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040008a:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2040008e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:103
     j 1b
20400092:	bff5                	j	2040008e <_enter+0x8e>
20400094:	0000                	unimp
	...

20400098 <__register_frame_info>:
__register_frame_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400098:	8082                	ret

2040009a <metal_mem_scrub>:
metal_mem_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040009a:	46a1                	li	a3,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2040009c:	3006b373          	csrrc	t1,mstatus,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
204000a0:	00400293          	li	t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
204000a4:	0055c563          	blt	a1,t0,204000ae <metal_mem_scrub+0x14>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
204000a8:	00357613          	andi	a2,a0,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
204000ac:	ca11                	beqz	a2,204000c0 <metal_mem_scrub+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
204000ae:	00050023          	sb	zero,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000b2:	0505                	addi	a0,a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000b4:	15fd                	addi	a1,a1,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000b6:	feb047e3          	bgtz	a1,204000a4 <metal_mem_scrub+0xa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000ba:	30031073          	csrw	mstatus,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:39
    ret
204000be:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000c0:	00052023          	sw	zero,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000c4:	0511                	addi	a0,a0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000c6:	15f1                	addi	a1,a1,-4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000c8:	fcb04ee3          	bgtz	a1,204000a4 <metal_mem_scrub+0xa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000cc:	30031073          	csrw	mstatus,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:46
    ret
204000d0:	8082                	ret

204000d2 <__metal_memory_scrub>:
__metal_memory_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000d2:	00032023          	sw	zero,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000d6:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000d8:	fe734de3          	blt	t1,t2,204000d2 <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000dc:	8082                	ret

204000de <__metal_before_start>:
__metal_before_start():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000de:	8406                	mv	s0,ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000e0:	dfc00297          	auipc	t0,0xdfc00
204000e4:	f2028293          	addi	t0,t0,-224 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000e8:	04028c63          	beqz	t0,20400140 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000ec:	dfc00297          	auipc	t0,0xdfc00
204000f0:	f1428293          	addi	t0,t0,-236 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000f4:	f14027f3          	csrr	a5,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000f8:	46a1                	li	a3,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000fa:	3006b073          	csrc	mstatus,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000fe:	830a                	mv	t1,sp
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
20400100:	dfc01397          	auipc	t2,0xdfc01
20400104:	f0038393          	addi	t2,t2,-256 # 1000 <__stack_size>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20400108:	938a                	add	t2,t2,sp
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
2040010a:	00730363          	beq	t1,t2,20400110 <__metal_before_start+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
2040010e:	37d1                	jal	204000d2 <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20400110:	02579863          	bne	a5,t0,20400140 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400114:	5fc00317          	auipc	t1,0x5fc00
20400118:	eec30313          	addi	t1,t1,-276 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040011c:	5fc02397          	auipc	t2,0x5fc02
20400120:	f4438393          	addi	t2,t2,-188 # 80002060 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400124:	00730363          	beq	t1,t2,2040012a <__metal_before_start+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400128:	376d                	jal	204000d2 <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
2040012a:	5fc00317          	auipc	t1,0x5fc00
2040012e:	ed630313          	addi	t1,t1,-298 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400132:	5fc00397          	auipc	t2,0x5fc00
20400136:	ece38393          	addi	t2,t2,-306 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
2040013a:	00730363          	beq	t1,t2,20400140 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2040013e:	3f51                	jal	204000d2 <__metal_memory_scrub>

20400140 <skip_scrub>:
skip_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20400140:	80a2                	mv	ra,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:130
    ret
20400142:	8082                	ret

20400144 <early_trap_vector>:
early_trap_vector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400144:	342022f3          	csrr	t0,mcause
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400148:	34102373          	csrr	t1,mepc
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:66
    csrr t2, mtval
2040014c:	343023f3          	csrr	t2,mtval
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:67
    j early_trap_vector
20400150:	bfd5                	j	20400144 <early_trap_vector>

20400152 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400152:	1141                	addi	sp,sp,-16
20400154:	c622                	sw	s0,12(sp)
20400156:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400158:	0001                	nop
2040015a:	4432                	lw	s0,12(sp)
2040015c:	0141                	addi	sp,sp,16
2040015e:	8082                	ret

20400160 <_start>:
_start():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400160:	8406                	mv	s0,ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400162:	5fc01197          	auipc	gp,0x5fc01
20400166:	11618193          	addi	gp,gp,278 # 80001278 <__global_pointer$>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040016a:	00000293          	li	t0,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2040016e:	0e551363          	bne	a0,t0,20400254 <_skip_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400172:	0000a297          	auipc	t0,0xa
20400176:	34e28293          	addi	t0,t0,846 # 2040a4c0 <metal_segment_data_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040017a:	5fc00317          	auipc	t1,0x5fc00
2040017e:	e8630313          	addi	t1,t1,-378 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400182:	5fc02397          	auipc	t2,0x5fc02
20400186:	ede38393          	addi	t2,t2,-290 # 80002060 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040018a:	00628c63          	beq	t0,t1,204001a2 <_start+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2040018e:	00735a63          	bge	t1,t2,204001a2 <_start+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400192:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20400196:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400198:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2040019c:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2040019e:	fe734ae3          	blt	t1,t2,20400192 <_start+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
204001a2:	00000297          	auipc	t0,0x0
204001a6:	1ce28293          	addi	t0,t0,462 # 20400370 <metal_segment_itim_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
204001aa:	5fc00317          	auipc	t1,0x5fc00
204001ae:	e5630313          	addi	t1,t1,-426 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001b2:	5fc00397          	auipc	t2,0x5fc00
204001b6:	e4e38393          	addi	t2,t2,-434 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001ba:	00628c63          	beq	t0,t1,204001d2 <_start+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001be:	00735a63          	bge	t1,t2,204001d2 <_start+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001c2:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001c6:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001c8:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001cc:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001ce:	fe734ae3          	blt	t1,t2,204001c2 <_start+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001d2:	0000100f          	fence.i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001d6:	00000297          	auipc	t0,0x0
204001da:	19a28293          	addi	t0,t0,410 # 20400370 <metal_segment_itim_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001de:	5fc00317          	auipc	t1,0x5fc00
204001e2:	e2230313          	addi	t1,t1,-478 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001e6:	5fc00397          	auipc	t2,0x5fc00
204001ea:	e1a38393          	addi	t2,t2,-486 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001ee:	00628c63          	beq	t0,t1,20400206 <_start+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001f2:	00735a63          	bge	t1,t2,20400206 <_start+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001f6:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001fa:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001fc:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
20400200:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
20400202:	fe734ae3          	blt	t1,t2,204001f6 <_start+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
20400206:	0000100f          	fence.i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
2040020a:	5fc02317          	auipc	t1,0x5fc02
2040020e:	e5630313          	addi	t1,t1,-426 # 80002060 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400212:	5fc02397          	auipc	t2,0x5fc02
20400216:	f0638393          	addi	t2,t2,-250 # 80002118 <metal_segment_bss_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2040021a:	00735763          	bge	t1,t2,20400228 <_start+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040021e:	00032023          	sw	zero,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20400222:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400224:	fe734de3          	blt	t1,t2,2040021e <_start+0xbe>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400228:	5fc02217          	auipc	tp,0x5fc02
2040022c:	e3820213          	addi	tp,tp,-456 # 80002060 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400230:	c211                	beqz	a2,20400234 <_start+0xd4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  jalr a2
20400232:	9602                	jalr	a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400234:	00005517          	auipc	a0,0x5
20400238:	19e50513          	addi	a0,a0,414 # 204053d2 <__libc_fini_array>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:172
  call atexit
2040023c:	15c050ef          	jal	ra,20405398 <atexit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20400240:	1ca050ef          	jal	ra,2040540a <__libc_init_array>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400244:	00006517          	auipc	a0,0x6
20400248:	be650513          	addi	a0,a0,-1050 # 20405e2a <metal_fini_run>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  call atexit
2040024c:	14c050ef          	jal	ra,20405398 <atexit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20400250:	3c7050ef          	jal	ra,20405e16 <metal_init_run>

20400254 <_skip_init>:
_skip_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400254:	3dfd                	jal	20400152 <__metal_synchronize_harts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400256:	56fd                	li	a3,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400258:	3046b073          	csrc	mie,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
2040025c:	3446b073          	csrc	mip,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20400260:	301027f3          	csrr	a5,misa
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400264:	00042737          	lui	a4,0x42
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400268:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2040026a:	c709                	beqz	a4,20400274 <_skip_init+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
2040026c:	3036b073          	csrc	mideleg,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20400270:	3026b073          	csrc	medeleg,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400274:	00040737          	lui	a4,0x40
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400278:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2040027a:	c319                	beqz	a4,20400280 <_skip_init+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
2040027c:	1806b073          	csrc	satp,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20400280:	00010737          	lui	a4,0x10
20400284:	02870713          	addi	a4,a4,40 # 10028 <__stack_size+0xf028>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400288:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2040028a:	cb89                	beqz	a5,2040029c <_skip_init+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
2040028c:	300027f3          	csrr	a5,mstatus
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20400290:	6709                	lui	a4,0x2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20400292:	8fd9                	or	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20400294:	30079073          	csrw	mstatus,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400298:	00305073          	csrwi	fcsr,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
2040029c:	301027f3          	csrr	a5,misa
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
204002a0:	00200737          	lui	a4,0x200
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
204002a4:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
204002a6:	c799                	beqz	a5,204002b4 <_skip_init+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
204002a8:	300027f3          	csrr	a5,mstatus
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
204002ac:	2007e793          	ori	a5,a5,512
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
204002b0:	30079073          	csrw	mstatus,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
204002b4:	4505                	li	a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002b6:	18418593          	addi	a1,gp,388 # 800013fc <argv>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002ba:	18818613          	addi	a2,gp,392 # 80001400 <envp>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002be:	2031                	jal	204002ca <secondary_main>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002c0:	0ea050ef          	jal	ra,204053aa <exit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002c4:	80a2                	mv	ra,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:248
  ret
204002c6:	8082                	ret

204002c8 <_fini>:
_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002c8:	8082                	ret

204002ca <secondary_main>:
secondary_main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002ca:	1141                	addi	sp,sp,-16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002cc:	c206                	sw	ra,4(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002ce:	f14022f3          	csrr	t0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002d2:	00000313          	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002d6:	00628563          	beq	t0,t1,204002e0 <secondary_main+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002da:	10500073          	wfi
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:282
  j 1b
204002de:	bff5                	j	204002da <secondary_main+0x10>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:284
2:
  call main
204002e0:	20c1                	jal	204003a0 <main>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002e2:	4092                	lw	ra,4(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002e4:	0141                	addi	sp,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:291
  ret
204002e6:	8082                	ret

Déassemblage de la section .ctors :

204002f4 <metal_tty_init>:
metal_tty_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002f4:	1141                	addi	sp,sp,-16
204002f6:	c606                	sw	ra,12(sp)
204002f8:	c422                	sw	s0,8(sp)
204002fa:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002fc:	67f1                	lui	a5,0x1c
204002fe:	20078593          	addi	a1,a5,512 # 1c200 <__stack_size+0x1b200>
20400302:	800017b7          	lui	a5,0x80001
20400306:	a3078513          	addi	a0,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
2040030a:	3e7050ef          	jal	ra,20405ef0 <metal_uart_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:30
}
2040030e:	0001                	nop
20400310:	40b2                	lw	ra,12(sp)
20400312:	4422                	lw	s0,8(sp)
20400314:	0141                	addi	sp,sp,16
20400316:	8082                	ret

20400318 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400318:	1101                	addi	sp,sp,-32
2040031a:	ce06                	sw	ra,28(sp)
2040031c:	cc22                	sw	s0,24(sp)
2040031e:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400320:	0ad080ef          	jal	ra,20408bcc <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400324:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400328:	fec42783          	lw	a5,-20(s0)
2040032c:	c799                	beqz	a5,2040033a <metal_sifive_fe310_g000_pll_init+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2040032e:	800017b7          	lui	a5,0x80001
20400332:	a6878513          	addi	a0,a5,-1432 # 80000a68 <metal_segment_heap_target_end+0xffffd148>
20400336:	11f080ef          	jal	ra,20408c54 <__metal_driver_sifive_fe310_g000_pll_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
2040033a:	0001                	nop
2040033c:	40f2                	lw	ra,28(sp)
2040033e:	4462                	lw	s0,24(sp)
20400340:	6105                	addi	sp,sp,32
20400342:	8082                	ret

20400344 <use_hfxosc>:
use_hfxosc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20400344:	1101                	addi	sp,sp,-32
20400346:	ce06                	sw	ra,28(sp)
20400348:	cc22                	sw	s0,24(sp)
2040034a:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2040034c:	081080ef          	jal	ra,20408bcc <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400350:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20400354:	fec42583          	lw	a1,-20(s0)
20400358:	800017b7          	lui	a5,0x80001
2040035c:	a6878513          	addi	a0,a5,-1432 # 80000a68 <metal_segment_heap_target_end+0xffffd148>
20400360:	763090ef          	jal	ra,2040a2c2 <metal_clock_set_rate_hz>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20400364:	0001                	nop
20400366:	40f2                	lw	ra,28(sp)
20400368:	4462                	lw	s0,24(sp)
2040036a:	6105                	addi	sp,sp,32
2040036c:	8082                	ret

Déassemblage de la section .text :

20400380 <core_bench_list.cold.1>:
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:483

			/* now p has stepped `insize' places along, and q has too */
			p = q;
        }
		
	    tail->next = NULL;
20400380:	00002023          	sw	zero,0(zero) # 0 <__metal_boot_hart>
20400384:	9002                	ebreak
20400386:	00002023          	sw	zero,0(zero) # 0 <__metal_boot_hart>
2040038a:	9002                	ebreak

2040038c <core_list_init.cold.2>:
2040038c:	00002023          	sw	zero,0(zero) # 0 <__metal_boot_hart>
20400390:	9002                	ebreak
	...

204003a0 <main>:
main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:89
	4 - Iterations  : Special, if set to 0, iterations will be automatically determined such that the benchmark will run between 10 to 100 secs

*/

#if MAIN_HAS_NOARGC
MAIN_RETURN_TYPE main(void) {
204003a0:	7159                	addi	sp,sp,-112
204003a2:	d686                	sw	ra,108(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:90
	int argc=0;
204003a4:	6705                	lui	a4,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:89
MAIN_RETURN_TYPE main(void) {
204003a6:	d4a2                	sw	s0,104(sp)
204003a8:	d2a6                	sw	s1,100(sp)
204003aa:	d0ca                	sw	s2,96(sp)
204003ac:	cece                	sw	s3,92(sp)
204003ae:	ccd2                	sw	s4,88(sp)
204003b0:	cad6                	sw	s5,84(sp)
204003b2:	c8da                	sw	s6,80(sp)
204003b4:	c6de                	sw	s7,76(sp)
204003b6:	c4e2                	sw	s8,72(sp)
204003b8:	c2e6                	sw	s9,68(sp)
204003ba:	c0ea                	sw	s10,64(sp)
204003bc:	81010113          	addi	sp,sp,-2032
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:90
	int argc=0;
204003c0:	82070693          	addi	a3,a4,-2016 # 820 <__heap_size+0x20>
204003c4:	0808                	addi	a0,sp,16
204003c6:	96aa                	add	a3,a3,a0
204003c8:	77fd                	lui	a5,0xfffff
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:104
	core_results results[MULTITHREAD];
#if (MEM_METHOD==MEM_STACK)
	ee_u8 stack_memblock[TOTAL_DATA_SIZE*MULTITHREAD];
#endif
	/* first call any initializations needed */
	portable_init(&(results[0].port), &argc, argv);
204003ca:	7e878613          	addi	a2,a5,2024 # fffff7e8 <metal_segment_heap_target_end+0x7fffbec8>
204003ce:	7e478593          	addi	a1,a5,2020
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:90
	int argc=0;
204003d2:	97b6                	add	a5,a5,a3
204003d4:	c63e                	sw	a5,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:104
	portable_init(&(results[0].port), &argc, argv);
204003d6:	82070793          	addi	a5,a4,-2016
204003da:	97aa                	add	a5,a5,a0
204003dc:	963e                	add	a2,a2,a5
204003de:	82070793          	addi	a5,a4,-2016
204003e2:	97aa                	add	a5,a5,a0
204003e4:	95be                	add	a1,a1,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:90
	int argc=0;
204003e6:	47b2                	lw	a5,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:104
	portable_init(&(results[0].port), &argc, argv);
204003e8:	05e10513          	addi	a0,sp,94
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:90
	int argc=0;
204003ec:	7e07a223          	sw	zero,2020(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:104
	portable_init(&(results[0].port), &argc, argv);
204003f0:	231030ef          	jal	ra,20403e20 <portable_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:110
	/* First some checks to make sure benchmark will run ok */
	if (sizeof(struct list_head_s)>128) {
		ee_printf("list_head structure too big for comparable data!\n");
		return MAIN_RETURN_VAL;
	}
	results[0].seed1=get_seed(1);
204003f4:	4505                	li	a0,1
204003f6:	30a030ef          	jal	ra,20403700 <get_seed_32>
204003fa:	47b2                	lw	a5,12(sp)
204003fc:	7ea79623          	sh	a0,2028(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:111
	results[0].seed2=get_seed(2);
20400400:	4509                	li	a0,2
20400402:	2fe030ef          	jal	ra,20403700 <get_seed_32>
20400406:	47b2                	lw	a5,12(sp)
20400408:	7ea79723          	sh	a0,2030(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:112
	results[0].seed3=get_seed(3);
2040040c:	450d                	li	a0,3
2040040e:	2f2030ef          	jal	ra,20403700 <get_seed_32>
20400412:	47b2                	lw	a5,12(sp)
20400414:	7ea79823          	sh	a0,2032(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:113
	results[0].iterations=get_seed_32(4);
20400418:	4511                	li	a0,4
2040041a:	2e6030ef          	jal	ra,20403700 <get_seed_32>
2040041e:	dc2a                	sw	a0,56(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:117
#if CORE_DEBUG
	results[0].iterations=1;
#endif
	results[0].execs=get_seed_32(5);
20400420:	4515                	li	a0,5
20400422:	2de030ef          	jal	ra,20403700 <get_seed_32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:118
	if (results[0].execs==0) { /* if not supplied, execute all algorithms */
20400426:	6e050463          	beqz	a0,20400b0e <main+0x76e>
2040042a:	de2a                	sw	a0,60(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:122
		results[0].execs=ALL_ALGORITHMS_MASK;
	}
		/* put in some default values based on one seed only for easy testing */
	if ((results[0].seed1==0) && (results[0].seed2==0) && (results[0].seed3==0)) { /* validation run */
2040042c:	6705                	lui	a4,0x1
2040042e:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
20400432:	0814                	addi	a3,sp,16
20400434:	77fd                	lui	a5,0xfffff
20400436:	9736                	add	a4,a4,a3
20400438:	97ba                	add	a5,a5,a4
2040043a:	c63e                	sw	a5,12(sp)
2040043c:	7ec7a783          	lw	a5,2028(a5) # fffff7ec <metal_segment_heap_target_end+0x7fffbecc>
20400440:	40078763          	beqz	a5,2040084e <main+0x4ae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:127
		results[0].seed1=0;
		results[0].seed2=0;
		results[0].seed3=0x66;
	}
	if ((results[0].seed1==1) && (results[0].seed2==0) && (results[0].seed3==0)) { /* perfromance run */
20400444:	6705                	lui	a4,0x1
20400446:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
2040044a:	0814                	addi	a3,sp,16
2040044c:	9736                	add	a4,a4,a3
2040044e:	77fd                	lui	a5,0xfffff
20400450:	97ba                	add	a5,a5,a4
20400452:	7ec7a703          	lw	a4,2028(a5) # fffff7ec <metal_segment_heap_target_end+0x7fffbecc>
20400456:	c63e                	sw	a5,12(sp)
20400458:	4785                	li	a5,1
2040045a:	6cf70e63          	beq	a4,a5,20400b36 <main+0x796>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:155
		results[i].err=0;
		results[i].execs=results[0].execs;
	}
#elif (MEM_METHOD==MEM_STACK)
	for (i=0 ; i<MULTITHREAD; i++) {
		results[i].memblock[0]=stack_memblock+i*TOTAL_DATA_SIZE;
2040045e:	6585                	lui	a1,0x1
20400460:	0808                	addi	a0,sp,16
20400462:	82058593          	addi	a1,a1,-2016 # 820 <__heap_size+0x20>
20400466:	95aa                	add	a1,a1,a0
20400468:	767d                	lui	a2,0xfffff
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:169
#error "Please define a way to initialize a memory block."
#endif
	/* Data init */ 
	/* Find out how space much we have based on number of algorithms */
	for (i=0; i<NUM_ALGORITHMS; i++) {
		if ((1<<(ee_u32)i) & results[0].execs)
2040046a:	57f2                	lw	a5,60(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:155
		results[i].memblock[0]=stack_memblock+i*TOTAL_DATA_SIZE;
2040046c:	962e                	add	a2,a2,a1
2040046e:	c632                	sw	a2,12(sp)
20400470:	45b2                	lw	a1,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:169
		if ((1<<(ee_u32)i) & results[0].execs)
20400472:	0017f693          	andi	a3,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:155
		results[i].memblock[0]=stack_memblock+i*TOTAL_DATA_SIZE;
20400476:	1090                	addi	a2,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:169
		if ((1<<(ee_u32)i) & results[0].execs)
20400478:	0027f713          	andi	a4,a5,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:170
			num_algorithms++;
2040047c:	01069513          	slli	a0,a3,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:155
		results[i].memblock[0]=stack_memblock+i*TOTAL_DATA_SIZE;
20400480:	7ec5aa23          	sw	a2,2036(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:170
			num_algorithms++;
20400484:	8141                	srli	a0,a0,0x10
20400486:	00e035b3          	snez	a1,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:160
		results[i].err=0;
2040048a:	04011e23          	sh	zero,92(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:169
		if ((1<<(ee_u32)i) & results[0].execs)
2040048e:	0047f613          	andi	a2,a5,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:170
			num_algorithms++;
20400492:	952e                	add	a0,a0,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:169
		if ((1<<(ee_u32)i) & results[0].execs)
20400494:	c601                	beqz	a2,2040049c <main+0xfc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:170
			num_algorithms++;
20400496:	0505                	addi	a0,a0,1
20400498:	0542                	slli	a0,a0,0x10
2040049a:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:173 (discriminator 2)
	}
	for (i=0 ; i<MULTITHREAD; i++) 
		results[i].size=results[i].size/num_algorithms;
2040049c:	7d000613          	li	a2,2000
204004a0:	02a64533          	div	a0,a2,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:179 (discriminator 2)
	/* Assign pointers */
	for (i=0; i<NUM_ALGORITHMS; i++) {
		ee_u32 ctx;
		if ((1<<(ee_u32)i) & results[0].execs) {
			for (ctx=0 ; ctx<MULTITHREAD; ctx++)
				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
204004a4:	6485                	lui	s1,0x1
204004a6:	01010893          	addi	a7,sp,16
204004aa:	767d                	lui	a2,0xfffff
204004ac:	82048413          	addi	s0,s1,-2016 # 820 <__heap_size+0x20>
204004b0:	9446                	add	s0,s0,a7
204004b2:	7ec60593          	addi	a1,a2,2028 # fffff7ec <metal_segment_heap_target_end+0x7fffbecc>
204004b6:	95a2                	add	a1,a1,s0
204004b8:	82048413          	addi	s0,s1,-2016
204004bc:	9446                	add	s0,s0,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:173 (discriminator 2)
		results[i].size=results[i].size/num_algorithms;
204004be:	4801                	li	a6,0
204004c0:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:177 (discriminator 2)
		if ((1<<(ee_u32)i) & results[0].execs) {
204004c2:	4e05                	li	t3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:179 (discriminator 2)
				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
204004c4:	9622                	add	a2,a2,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:175 (discriminator 2)
	for (i=0; i<NUM_ALGORITHMS; i++) {
204004c6:	488d                	li	a7,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:173 (discriminator 2)
		results[i].size=results[i].size/num_algorithms;
204004c8:	da2a                	sw	a0,52(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:177
		if ((1<<(ee_u32)i) & results[0].execs) {
204004ca:	010e1eb3          	sll	t4,t3,a6
204004ce:	00fefeb3          	and	t4,t4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:179
				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
204004d2:	02a30f33          	mul	t5,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:177
		if ((1<<(ee_u32)i) & results[0].execs) {
204004d6:	6a0e9363          	bnez	t4,20400b7c <main+0x7dc>
204004da:	0805                	addi	a6,a6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:175 (discriminator 2)
	for (i=0; i<NUM_ALGORITHMS; i++) {
204004dc:	ff1817e3          	bne	a6,a7,204004ca <main+0x12a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:185
			j++;
		}
	}
	/* call inits */
	for (i=0 ; i<MULTITHREAD; i++) {
		if (results[i].execs & ID_LIST) {
204004e0:	38069263          	bnez	a3,20400864 <main+0x4c4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:188
			results[i].list=core_list_init(results[0].size,results[i].memblock[1],results[i].seed1);
		}
		if (results[i].execs & ID_MATRIX) {
204004e4:	3a071463          	bnez	a4,2040088c <main+0x4ec>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:191
			core_init_matrix(results[0].size, results[i].memblock[2], (ee_s32)results[i].seed1 | (((ee_s32)results[i].seed2) << 16), &(results[i].mat) );
		}
		if (results[i].execs & ID_STATE) {
204004e8:	8b91                	andi	a5,a5,4
204004ea:	cf99                	beqz	a5,20400508 <main+0x168>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:192
			core_init_state(results[0].size,results[i].seed1,results[i].memblock[3]);
204004ec:	6705                	lui	a4,0x1
204004ee:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
204004f2:	0814                	addi	a3,sp,16
204004f4:	77fd                	lui	a5,0xfffff
204004f6:	9736                	add	a4,a4,a3
204004f8:	97ba                	add	a5,a5,a4
204004fa:	5642                	lw	a2,48(sp)
204004fc:	7ec79583          	lh	a1,2028(a5) # fffff7ec <metal_segment_heap_target_end+0x7fffbecc>
20400500:	5552                	lw	a0,52(sp)
20400502:	c63e                	sw	a5,12(sp)
20400504:	05c030ef          	jal	ra,20403560 <core_init_state>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:197
		}
	}
	
	/* automatically determine number of iterations if not set */
	if (results[0].iterations==0) { 
20400508:	57e2                	lw	a5,56(sp)
2040050a:	1a079c63          	bnez	a5,204006c2 <main+0x322>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:200
		secs_ret secs_passed=0;
		ee_u32 divisor;
		results[0].iterations=1;
2040050e:	4785                	li	a5,1
20400510:	dc3e                	sw	a5,56(sp)
iterate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20400512:	6785                	lui	a5,0x1
20400514:	747d                	lui	s0,0xfffff
20400516:	82078793          	addi	a5,a5,-2016 # 820 <__heap_size+0x20>
2040051a:	0818                	addi	a4,sp,16
2040051c:	7ec40413          	addi	s0,s0,2028 # fffff7ec <metal_segment_heap_target_end+0x7fffbecc>
20400520:	97ba                	add	a5,a5,a4
20400522:	943e                	add	s0,s0,a5
main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:202
		while (secs_passed < (secs_ret)1) {
			results[0].iterations*=10;
20400524:	5762                	lw	a4,56(sp)
iterate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
20400526:	4481                	li	s1,0
main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:202
			results[0].iterations*=10;
20400528:	00271793          	slli	a5,a4,0x2
2040052c:	97ba                	add	a5,a5,a4
2040052e:	0786                	slli	a5,a5,0x1
20400530:	dc3e                	sw	a5,56(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:203
			start_time();
20400532:	05f030ef          	jal	ra,20403d90 <start_time>
iterate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:42
	ee_u32 iterations=res->iterations;
20400536:	59e2                	lw	s3,56(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:43
	res->crc=0;
20400538:	ca82                	sw	zero,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:45
	res->crcmatrix=0;
2040053a:	cc82                	sw	zero,88(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
2040053c:	17305363          	blez	s3,204006a2 <main+0x302>
20400540:	0039f793          	andi	a5,s3,3
20400544:	cfc9                	beqz	a5,204005de <main+0x23e>
20400546:	4705                	li	a4,1
20400548:	06e78363          	beq	a5,a4,204005ae <main+0x20e>
2040054c:	4709                	li	a4,2
2040054e:	02e78963          	beq	a5,a4,20400580 <main+0x1e0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20400552:	4585                	li	a1,1
20400554:	8522                	mv	a0,s0
20400556:	67a000ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
2040055a:	05415583          	lhu	a1,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
2040055e:	4485                	li	s1,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
20400560:	210030ef          	jal	ra,20403770 <crcu16>
20400564:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
20400568:	55fd                	li	a1,-1
2040056a:	8522                	mv	a0,s0
2040056c:	664000ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
20400570:	05415583          	lhu	a1,84(sp)
20400574:	1fc030ef          	jal	ra,20403770 <crcu16>
20400578:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
2040057c:	04a11b23          	sh	a0,86(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20400580:	4585                	li	a1,1
20400582:	8522                	mv	a0,s0
20400584:	64c000ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
20400588:	05415583          	lhu	a1,84(sp)
2040058c:	1e4030ef          	jal	ra,20403770 <crcu16>
20400590:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
20400594:	55fd                	li	a1,-1
20400596:	8522                	mv	a0,s0
20400598:	638000ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
2040059c:	05415583          	lhu	a1,84(sp)
204005a0:	1d0030ef          	jal	ra,20403770 <crcu16>
204005a4:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
204005a8:	56048d63          	beqz	s1,20400b22 <main+0x782>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204005ac:	0485                	addi	s1,s1,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
204005ae:	4585                	li	a1,1
204005b0:	8522                	mv	a0,s0
204005b2:	2d39                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
204005b4:	05415583          	lhu	a1,84(sp)
204005b8:	1b8030ef          	jal	ra,20403770 <crcu16>
204005bc:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
204005c0:	55fd                	li	a1,-1
204005c2:	8522                	mv	a0,s0
204005c4:	2531                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
204005c6:	05415583          	lhu	a1,84(sp)
204005ca:	1a6030ef          	jal	ra,20403770 <crcu16>
204005ce:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
204005d2:	e099                	bnez	s1,204005d8 <main+0x238>
204005d4:	04a11b23          	sh	a0,86(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204005d8:	0485                	addi	s1,s1,1
204005da:	0c998463          	beq	s3,s1,204006a2 <main+0x302>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
204005de:	4585                	li	a1,1
204005e0:	8522                	mv	a0,s0
204005e2:	23fd                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
204005e4:	05415583          	lhu	a1,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204005e8:	00148913          	addi	s2,s1,1
204005ec:	00190a93          	addi	s5,s2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
204005f0:	180030ef          	jal	ra,20403770 <crcu16>
204005f4:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
204005f8:	55fd                	li	a1,-1
204005fa:	8522                	mv	a0,s0
204005fc:	2bd1                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
204005fe:	05415583          	lhu	a1,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
20400602:	00290a13          	addi	s4,s2,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
20400606:	16a030ef          	jal	ra,20403770 <crcu16>
2040060a:	87aa                	mv	a5,a0
2040060c:	04f11a23          	sh	a5,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20400610:	4585                	li	a1,1
20400612:	8522                	mv	a0,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
20400614:	e099                	bnez	s1,2040061a <main+0x27a>
20400616:	04f11b23          	sh	a5,86(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
2040061a:	2b5d                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
2040061c:	05415583          	lhu	a1,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
20400620:	00390493          	addi	s1,s2,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
20400624:	14c030ef          	jal	ra,20403770 <crcu16>
20400628:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
2040062c:	55fd                	li	a1,-1
2040062e:	8522                	mv	a0,s0
20400630:	2345                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
20400632:	05415583          	lhu	a1,84(sp)
20400636:	13a030ef          	jal	ra,20403770 <crcu16>
2040063a:	87aa                	mv	a5,a0
2040063c:	04f11a23          	sh	a5,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20400640:	4585                	li	a1,1
20400642:	8522                	mv	a0,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
20400644:	00091463          	bnez	s2,2040064c <main+0x2ac>
20400648:	04f11b23          	sh	a5,86(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
2040064c:	2351                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
2040064e:	05415583          	lhu	a1,84(sp)
20400652:	11e030ef          	jal	ra,20403770 <crcu16>
20400656:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
2040065a:	55fd                	li	a1,-1
2040065c:	8522                	mv	a0,s0
2040065e:	2b8d                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
20400660:	05415583          	lhu	a1,84(sp)
20400664:	10c030ef          	jal	ra,20403770 <crcu16>
20400668:	87aa                	mv	a5,a0
2040066a:	04f11a23          	sh	a5,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
2040066e:	4585                	li	a1,1
20400670:	8522                	mv	a0,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
20400672:	000a9463          	bnez	s5,2040067a <main+0x2da>
20400676:	04f11b23          	sh	a5,86(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
2040067a:	2b99                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
2040067c:	05415583          	lhu	a1,84(sp)
20400680:	0f0030ef          	jal	ra,20403770 <crcu16>
20400684:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
20400688:	55fd                	li	a1,-1
2040068a:	8522                	mv	a0,s0
2040068c:	2391                	jal	20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
2040068e:	05415583          	lhu	a1,84(sp)
20400692:	0de030ef          	jal	ra,20403770 <crcu16>
20400696:	04a11a23          	sh	a0,84(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
2040069a:	460a0f63          	beqz	s4,20400b18 <main+0x778>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
2040069e:	f49990e3          	bne	s3,s1,204005de <main+0x23e>
main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:205
			iterate(&results[0]);
			stop_time();
204006a2:	70e030ef          	jal	ra,20403db0 <stop_time>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:206
			secs_passed=time_in_secs(get_time());
204006a6:	72a030ef          	jal	ra,20403dd0 <get_time>
204006aa:	756030ef          	jal	ra,20403e00 <time_in_secs>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:201
		while (secs_passed < (secs_ret)1) {
204006ae:	e6a05be3          	blez	a0,20400524 <main+0x184>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:212
		}
		/* now we know it executes for at least 1 sec, set actual run time at about 10 secs */
		divisor=(ee_u32)secs_passed;
		if (divisor==0) /* some machines cast float to int as 0 since this conversion is not defined by ANSI, but we know at least one second passed */
			divisor=1;
		results[0].iterations*=1+10/divisor;
204006b2:	47a9                	li	a5,10
204006b4:	02a7c7b3          	div	a5,a5,a0
204006b8:	5762                	lw	a4,56(sp)
204006ba:	0785                	addi	a5,a5,1
204006bc:	02e787b3          	mul	a5,a5,a4
204006c0:	dc3e                	sw	a5,56(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:215
	}
	/* perform actual benchmark */
	start_time();
204006c2:	6ce030ef          	jal	ra,20403d90 <start_time>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:229
	}
	for (i=0 ; i<default_num_contexts; i++) {
		core_stop_parallel(&results[i]);
	}
#else
	iterate(&results[0]);
204006c6:	6485                	lui	s1,0x1
204006c8:	0818                	addi	a4,sp,16
204006ca:	747d                	lui	s0,0xfffff
204006cc:	82048793          	addi	a5,s1,-2016 # 820 <__heap_size+0x20>
204006d0:	97ba                	add	a5,a5,a4
204006d2:	7ec40513          	addi	a0,s0,2028 # fffff7ec <metal_segment_heap_target_end+0x7fffbecc>
204006d6:	953e                	add	a0,a0,a5
204006d8:	719000ef          	jal	ra,204015f0 <iterate>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:231
#endif
	stop_time();
204006dc:	6d4030ef          	jal	ra,20403db0 <stop_time>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:232
	total_time=get_time();
204006e0:	6f0030ef          	jal	ra,20403dd0 <get_time>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:234
	/* get a function of the input to report */
	seedcrc=crc16(results[0].seed1,seedcrc);
204006e4:	0818                	addi	a4,sp,16
204006e6:	82048793          	addi	a5,s1,-2016
204006ea:	97ba                	add	a5,a5,a4
204006ec:	97a2                	add	a5,a5,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:232
	total_time=get_time();
204006ee:	8b2a                	mv	s6,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:234
	seedcrc=crc16(results[0].seed1,seedcrc);
204006f0:	7ec79503          	lh	a0,2028(a5)
204006f4:	4581                	li	a1,0
204006f6:	c63e                	sw	a5,12(sp)
204006f8:	4f8030ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:235
	seedcrc=crc16(results[0].seed2,seedcrc);
204006fc:	47b2                	lw	a5,12(sp)
204006fe:	85aa                	mv	a1,a0
20400700:	7ee79503          	lh	a0,2030(a5)
20400704:	4ec030ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:236
	seedcrc=crc16(results[0].seed3,seedcrc);
20400708:	47b2                	lw	a5,12(sp)
2040070a:	85aa                	mv	a1,a0
2040070c:	7f079503          	lh	a0,2032(a5)
20400710:	4e0030ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:237
	seedcrc=crc16(results[0].size,seedcrc);
20400714:	85aa                	mv	a1,a0
20400716:	03411503          	lh	a0,52(sp)
2040071a:	4d6030ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:239
	
	switch (seedcrc) { /* test known output for common seeds */
2040071e:	67a1                	lui	a5,0x8
20400720:	b0578793          	addi	a5,a5,-1275 # 7b05 <__stack_size+0x6b05>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:237
	seedcrc=crc16(results[0].size,seedcrc);
20400724:	89aa                	mv	s3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:239
	switch (seedcrc) { /* test known output for common seeds */
20400726:	46f50963          	beq	a0,a5,20400b98 <main+0x7f8>
2040072a:	18a7f963          	bgeu	a5,a0,204008bc <main+0x51c>
2040072e:	67a5                	lui	a5,0x9
20400730:	a0278793          	addi	a5,a5,-1534 # 8a02 <__stack_size+0x7a02>
20400734:	46f50863          	beq	a0,a5,20400ba4 <main+0x804>
20400738:	67bd                	lui	a5,0xf
2040073a:	9f578793          	addi	a5,a5,-1547 # e9f5 <__stack_size+0xd9f5>
2040073e:	40f51e63          	bne	a0,a5,20400b5a <main+0x7ba>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:254
			known_id=2;
			ee_printf("Profile generation run parameters for coremark.\n");
			break;
		case 0xe9f5: /* seed1=0, seed2=0, seed3=0x66, size 666 per algorithm */
			known_id=3;
			ee_printf("2K performance run parameters for coremark.\n");
20400742:	8ec18513          	addi	a0,gp,-1812 # 80000b64 <list_known_crc+0x94>
20400746:	043030ef          	jal	ra,20403f88 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:253
			known_id=3;
2040074a:	4a0d                	li	s4,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:265 (discriminator 1)
		default:
			total_errors=-1;
			break;
	}
	if (known_id>=0) {
		for (i=0 ; i<default_num_contexts; i++) {
2040074c:	80001937          	lui	s2,0x80001
20400750:	a7892783          	lw	a5,-1416(s2) # 80000a78 <metal_segment_heap_target_end+0xffffd158>
20400754:	4d01                	li	s10,0
20400756:	4481                	li	s1,0
20400758:	4c81                	li	s9,0
2040075a:	1af05163          	blez	a5,204008fc <main+0x55c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:266
			results[i].err=0;
2040075e:	6685                	lui	a3,0x1
20400760:	82068693          	addi	a3,a3,-2016 # 820 <__heap_size+0x20>
20400764:	0810                	addi	a2,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:268
			if ((results[i].execs & ID_LIST) && 
				(results[i].crclist!=list_known_crc[known_id])) {
20400766:	001a1793          	slli	a5,s4,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:266
			results[i].err=0;
2040076a:	777d                	lui	a4,0xfffff
2040076c:	96b2                	add	a3,a3,a2
2040076e:	9736                	add	a4,a4,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:268
				(results[i].crclist!=list_known_crc[known_id])) {
20400770:	85818b93          	addi	s7,gp,-1960 # 80000ad0 <list_known_crc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:273
				ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",i,results[i].crclist,list_known_crc[known_id]);
				results[i].err++;
			}
			if ((results[i].execs & ID_MATRIX) &&
				(results[i].crcmatrix!=matrix_known_crc[known_id])) {
20400774:	fe018a93          	addi	s5,gp,-32 # 80001258 <matrix_known_crc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:278
				ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",i,results[i].crcmatrix,matrix_known_crc[known_id]);
				results[i].err++;
			}
			if ((results[i].execs & ID_STATE) &&
				(results[i].crcstate!=state_known_crc[known_id])) {
20400778:	fec18a13          	addi	s4,gp,-20 # 80001264 <state_known_crc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:266
			results[i].err=0;
2040077c:	c63a                	sw	a4,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:268
				(results[i].crclist!=list_known_crc[known_id])) {
2040077e:	9bbe                	add	s7,s7,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:273
				(results[i].crcmatrix!=matrix_known_crc[known_id])) {
20400780:	9abe                	add	s5,s5,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:278
				(results[i].crcstate!=state_known_crc[known_id])) {
20400782:	9a3e                	add	s4,s4,a5
20400784:	a035                	j	204007b0 <main+0x410>
20400786:	0001                	nop
20400788:	47b2                	lw	a5,12(sp)
2040078a:	9466                	add	s0,s0,s9
2040078c:	040a                	slli	s0,s0,0x2
2040078e:	943e                	add	s0,s0,a5
20400790:	6785                	lui	a5,0x1
20400792:	943e                	add	s0,s0,a5
20400794:	82c41703          	lh	a4,-2004(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:265 (discriminator 2)
		for (i=0 ; i<default_num_contexts; i++) {
20400798:	0485                	addi	s1,s1,1
2040079a:	a7892783          	lw	a5,-1416(s2)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:282 (discriminator 2)
				ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",i,results[i].crcstate,state_known_crc[known_id]);
				results[i].err++;
			}
			total_errors+=results[i].err;
2040079e:	9d3a                	add	s10,s10,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:265 (discriminator 2)
		for (i=0 ; i<default_num_contexts; i++) {
204007a0:	04c2                	slli	s1,s1,0x10
204007a2:	80c1                	srli	s1,s1,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:282 (discriminator 2)
			total_errors+=results[i].err;
204007a4:	0d42                	slli	s10,s10,0x10
204007a6:	410d5d13          	srai	s10,s10,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:265 (discriminator 2)
		for (i=0 ; i<default_num_contexts; i++) {
204007aa:	8ca6                	mv	s9,s1
204007ac:	14f4d863          	bge	s1,a5,204008fc <main+0x55c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:266
			results[i].err=0;
204007b0:	004c9413          	slli	s0,s9,0x4
204007b4:	4732                	lw	a4,12(sp)
204007b6:	019407b3          	add	a5,s0,s9
204007ba:	078a                	slli	a5,a5,0x2
204007bc:	97ba                	add	a5,a5,a4
204007be:	6c05                	lui	s8,0x1
204007c0:	9c3e                	add	s8,s8,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:267
			if ((results[i].execs & ID_LIST) && 
204007c2:	80cc2783          	lw	a5,-2036(s8) # 80c <__heap_size+0xc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:266
			results[i].err=0;
204007c6:	820c1623          	sh	zero,-2004(s8)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:267
			if ((results[i].execs & ID_LIST) && 
204007ca:	8b85                	andi	a5,a5,1
204007cc:	c38d                	beqz	a5,204007ee <main+0x44e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:268 (discriminator 1)
				(results[i].crclist!=list_known_crc[known_id])) {
204007ce:	826c5603          	lhu	a2,-2010(s8)
204007d2:	000bd683          	lhu	a3,0(s7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:267 (discriminator 1)
			if ((results[i].execs & ID_LIST) && 
204007d6:	00d60c63          	beq	a2,a3,204007ee <main+0x44e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:269
				ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",i,results[i].crclist,list_known_crc[known_id]);
204007da:	85e6                	mv	a1,s9
204007dc:	94418513          	addi	a0,gp,-1724 # 80000bbc <list_known_crc+0xec>
204007e0:	69a030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:270
				results[i].err++;
204007e4:	82cc5783          	lhu	a5,-2004(s8)
204007e8:	0785                	addi	a5,a5,1
204007ea:	82fc1623          	sh	a5,-2004(s8)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:272
			if ((results[i].execs & ID_MATRIX) &&
204007ee:	4732                	lw	a4,12(sp)
204007f0:	019407b3          	add	a5,s0,s9
204007f4:	078a                	slli	a5,a5,0x2
204007f6:	97ba                	add	a5,a5,a4
204007f8:	6c05                	lui	s8,0x1
204007fa:	9c3e                	add	s8,s8,a5
204007fc:	80cc2703          	lw	a4,-2036(s8) # 80c <__heap_size+0xc>
20400800:	00277793          	andi	a5,a4,2
20400804:	c39d                	beqz	a5,2040082a <main+0x48a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:273 (discriminator 1)
				(results[i].crcmatrix!=matrix_known_crc[known_id])) {
20400806:	828c5603          	lhu	a2,-2008(s8)
2040080a:	000ad683          	lhu	a3,0(s5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:272 (discriminator 1)
			if ((results[i].execs & ID_MATRIX) &&
2040080e:	00d60e63          	beq	a2,a3,2040082a <main+0x48a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:274
				ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",i,results[i].crcmatrix,matrix_known_crc[known_id]);
20400812:	85e6                	mv	a1,s9
20400814:	97418513          	addi	a0,gp,-1676 # 80000bec <list_known_crc+0x11c>
20400818:	662030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:275
				results[i].err++;
2040081c:	82cc5783          	lhu	a5,-2004(s8)
20400820:	80cc2703          	lw	a4,-2036(s8)
20400824:	0785                	addi	a5,a5,1
20400826:	82fc1623          	sh	a5,-2004(s8)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:277
			if ((results[i].execs & ID_STATE) &&
2040082a:	8b11                	andi	a4,a4,4
2040082c:	df31                	beqz	a4,20400788 <main+0x3e8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:278 (discriminator 1)
				(results[i].crcstate!=state_known_crc[known_id])) {
2040082e:	4732                	lw	a4,12(sp)
20400830:	019407b3          	add	a5,s0,s9
20400834:	078a                	slli	a5,a5,0x2
20400836:	97ba                	add	a5,a5,a4
20400838:	6405                	lui	s0,0x1
2040083a:	943e                	add	s0,s0,a5
2040083c:	82a45603          	lhu	a2,-2006(s0) # 82a <__heap_size+0x2a>
20400840:	000a5683          	lhu	a3,0(s4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:277 (discriminator 1)
			if ((results[i].execs & ID_STATE) &&
20400844:	08d61c63          	bne	a2,a3,204008dc <main+0x53c>
20400848:	82c41703          	lh	a4,-2004(s0)
2040084c:	b7b1                	j	20400798 <main+0x3f8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:122 (discriminator 1)
	if ((results[0].seed1==0) && (results[0].seed2==0) && (results[0].seed3==0)) { /* validation run */
2040084e:	47b2                	lw	a5,12(sp)
20400850:	7f079783          	lh	a5,2032(a5) # 17f0 <__stack_size+0x7f0>
20400854:	be0798e3          	bnez	a5,20400444 <main+0xa4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:125
		results[0].seed3=0x66;
20400858:	4732                	lw	a4,12(sp)
2040085a:	06600793          	li	a5,102
2040085e:	7ef71823          	sh	a5,2032(a4) # fffff7f0 <metal_segment_heap_target_end+0x7fffbed0>
20400862:	b6cd                	j	20400444 <main+0xa4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:186
			results[i].list=core_list_init(results[0].size,results[i].memblock[1],results[i].seed1);
20400864:	6705                	lui	a4,0x1
20400866:	0814                	addi	a3,sp,16
20400868:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
2040086c:	9736                	add	a4,a4,a3
2040086e:	77fd                	lui	a5,0xfffff
20400870:	97ba                	add	a5,a5,a4
20400872:	7ec79603          	lh	a2,2028(a5) # fffff7ec <metal_segment_heap_target_end+0x7fffbecc>
20400876:	7f87a583          	lw	a1,2040(a5)
2040087a:	c63e                	sw	a5,12(sp)
2040087c:	235000ef          	jal	ra,204012b0 <core_list_init>
20400880:	57f2                	lw	a5,60(sp)
20400882:	c0aa                	sw	a0,64(sp)
20400884:	0027f713          	andi	a4,a5,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:188
		if (results[i].execs & ID_MATRIX) {
20400888:	c60700e3          	beqz	a4,204004e8 <main+0x148>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:189
			core_init_matrix(results[0].size, results[i].memblock[2], (ee_s32)results[i].seed1 | (((ee_s32)results[i].seed2) << 16), &(results[i].mat) );
2040088c:	6705                	lui	a4,0x1
2040088e:	0814                	addi	a3,sp,16
20400890:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
20400894:	9736                	add	a4,a4,a3
20400896:	77fd                	lui	a5,0xfffff
20400898:	97ba                	add	a5,a5,a4
2040089a:	c63e                	sw	a5,12(sp)
2040089c:	4732                	lw	a4,12(sp)
2040089e:	7ee79783          	lh	a5,2030(a5) # fffff7ee <metal_segment_heap_target_end+0x7fffbece>
204008a2:	5552                	lw	a0,52(sp)
204008a4:	7ec71603          	lh	a2,2028(a4)
204008a8:	7fc72583          	lw	a1,2044(a4)
204008ac:	07c2                	slli	a5,a5,0x10
204008ae:	8e5d                	or	a2,a2,a5
204008b0:	00d4                	addi	a3,sp,68
204008b2:	1de020ef          	jal	ra,20402a90 <core_init_matrix>
204008b6:	57f2                	lw	a5,60(sp)
204008b8:	b905                	j	204004e8 <main+0x148>
204008ba:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:239
	switch (seedcrc) { /* test known output for common seeds */
204008bc:	6789                	lui	a5,0x2
204008be:	8f278793          	addi	a5,a5,-1806 # 18f2 <__stack_size+0x8f2>
204008c2:	2ef50763          	beq	a0,a5,20400bb0 <main+0x810>
204008c6:	6795                	lui	a5,0x5
204008c8:	eaf78793          	addi	a5,a5,-337 # 4eaf <__stack_size+0x3eaf>
204008cc:	02f51563          	bne	a0,a5,204008f6 <main+0x556>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:250
			ee_printf("Profile generation run parameters for coremark.\n");
204008d0:	8bc18513          	addi	a0,gp,-1860 # 80000b34 <list_known_crc+0x64>
204008d4:	6b4030ef          	jal	ra,20403f88 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:249
			known_id=2;
204008d8:	4a09                	li	s4,2
204008da:	bd8d                	j	2040074c <main+0x3ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:279
				ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",i,results[i].crcstate,state_known_crc[known_id]);
204008dc:	85e6                	mv	a1,s9
204008de:	9a818513          	addi	a0,gp,-1624 # 80000c20 <list_known_crc+0x150>
204008e2:	598030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:280
				results[i].err++;
204008e6:	82c45703          	lhu	a4,-2004(s0)
204008ea:	0705                	addi	a4,a4,1
204008ec:	0742                	slli	a4,a4,0x10
204008ee:	8741                	srai	a4,a4,0x10
204008f0:	82e41623          	sh	a4,-2004(s0)
204008f4:	b555                	j	20400798 <main+0x3f8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:261
			total_errors=-1;
204008f6:	5d7d                	li	s10,-1
204008f8:	80001937          	lui	s2,0x80001
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:285
		}
	}
	total_errors+=check_data_types();
204008fc:	474030ef          	jal	ra,20403d70 <check_data_types>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:287
	/* and report results */
	ee_printf("CoreMark Size    : %lu\n", (long unsigned) results[0].size);
20400900:	55d2                	lw	a1,52(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:285
	total_errors+=check_data_types();
20400902:	00ad04b3          	add	s1,s10,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:287
	ee_printf("CoreMark Size    : %lu\n", (long unsigned) results[0].size);
20400906:	9d818513          	addi	a0,gp,-1576 # 80000c50 <list_known_crc+0x180>
2040090a:	570030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:288
	ee_printf("Total ticks      : %lu\n", (long unsigned) total_time);
2040090e:	85da                	mv	a1,s6
20400910:	9f018513          	addi	a0,gp,-1552 # 80000c68 <list_known_crc+0x198>
20400914:	566030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:294
#if HAS_FLOAT
	ee_printf("Total time (secs): %f\n",time_in_secs(total_time));
	if (time_in_secs(total_time) > 0)
		ee_printf("Iterations/Sec   : %f\n",default_num_contexts*results[0].iterations/time_in_secs(total_time));
#else 
	ee_printf("Total time (secs): %d\n",time_in_secs(total_time));
20400918:	855a                	mv	a0,s6
2040091a:	4e6030ef          	jal	ra,20403e00 <time_in_secs>
2040091e:	85aa                	mv	a1,a0
20400920:	a0818513          	addi	a0,gp,-1528 # 80000c80 <list_known_crc+0x1b0>
20400924:	556030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:285
	total_errors+=check_data_types();
20400928:	04c2                	slli	s1,s1,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:295
	if (time_in_secs(total_time) > 0)
2040092a:	855a                	mv	a0,s6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:285
	total_errors+=check_data_types();
2040092c:	84c1                	srai	s1,s1,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:295
	if (time_in_secs(total_time) > 0)
2040092e:	4d2030ef          	jal	ra,20403e00 <time_in_secs>
20400932:	02a05063          	blez	a0,20400952 <main+0x5b2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:296
		ee_printf("Iterations/Sec   : %d\n",default_num_contexts*results[0].iterations/time_in_secs(total_time));
20400936:	a7892583          	lw	a1,-1416(s2) # 80000a78 <metal_segment_heap_target_end+0xffffd158>
2040093a:	5462                	lw	s0,56(sp)
2040093c:	855a                	mv	a0,s6
2040093e:	02b40433          	mul	s0,s0,a1
20400942:	4be030ef          	jal	ra,20403e00 <time_in_secs>
20400946:	02a445b3          	div	a1,s0,a0
2040094a:	a2018513          	addi	a0,gp,-1504 # 80000c98 <list_known_crc+0x1c8>
2040094e:	52c030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:298
#endif
	if (time_in_secs(total_time) < 10) {
20400952:	855a                	mv	a0,s6
20400954:	4ac030ef          	jal	ra,20403e00 <time_in_secs>
20400958:	47a5                	li	a5,9
2040095a:	20a7d963          	bge	a5,a0,20400b6c <main+0x7cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:303
		ee_printf("ERROR! Must execute for at least 10 secs for a valid result!\n");
		total_errors++;
	}

	ee_printf("Iterations       : %lu\n", (long unsigned) default_num_contexts*results[0].iterations);
2040095e:	a7892783          	lw	a5,-1416(s2)
20400962:	55e2                	lw	a1,56(sp)
20400964:	a7818513          	addi	a0,gp,-1416 # 80000cf0 <list_known_crc+0x220>
20400968:	02f585b3          	mul	a1,a1,a5
2040096c:	50e030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:304
	ee_printf("Compiler version : %s\n",COMPILER_VERSION);
20400970:	a9018593          	addi	a1,gp,-1392 # 80000d08 <list_known_crc+0x238>
20400974:	a9c18513          	addi	a0,gp,-1380 # 80000d14 <list_known_crc+0x244>
20400978:	502030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:305
	ee_printf("Compiler flags   : %s\n",COMPILER_FLAGS);
2040097c:	ab418593          	addi	a1,gp,-1356 # 80000d2c <list_known_crc+0x25c>
20400980:	e6018513          	addi	a0,gp,-416 # 800010d8 <list_known_crc+0x608>
20400984:	4f6030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:309
#if (MULTITHREAD>1)
	ee_printf("Parallel %s : %d\n",PARALLEL_METHOD,default_num_contexts);
#endif
	ee_printf("Memory location  : %s\n",MEM_LOCATION);
20400988:	e7818593          	addi	a1,gp,-392 # 800010f0 <list_known_crc+0x620>
2040098c:	e8018513          	addi	a0,gp,-384 # 800010f8 <list_known_crc+0x628>
20400990:	4ea030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:311
	/* output for verification */
	ee_printf("seedcrc          : 0x%04x\n",seedcrc);
20400994:	85ce                	mv	a1,s3
20400996:	e9818513          	addi	a0,gp,-360 # 80001110 <list_known_crc+0x640>
2040099a:	4e0030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:312
	if (results[0].execs & ID_LIST)
2040099e:	57f2                	lw	a5,60(sp)
204009a0:	0017f713          	andi	a4,a5,1
204009a4:	c731                	beqz	a4,204009f0 <main+0x650>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:313
		for (i=0 ; i<default_num_contexts; i++) 
204009a6:	a7892703          	lw	a4,-1416(s2)
204009aa:	04e05363          	blez	a4,204009f0 <main+0x650>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:314
			ee_printf("[%d]crclist       : 0x%04x\n",i,results[i].crclist);
204009ae:	6705                	lui	a4,0x1
204009b0:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
204009b4:	0814                	addi	a3,sp,16
204009b6:	77fd                	lui	a5,0xfffff
204009b8:	9736                	add	a4,a4,a3
204009ba:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:313
		for (i=0 ; i<default_num_contexts; i++) 
204009bc:	4401                	li	s0,0
204009be:	4581                	li	a1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:314
			ee_printf("[%d]crclist       : 0x%04x\n",i,results[i].crclist);
204009c0:	c63e                	sw	a5,12(sp)
204009c2:	6a05                	lui	s4,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:314 (discriminator 3)
204009c4:	00459793          	slli	a5,a1,0x4
204009c8:	4732                	lw	a4,12(sp)
204009ca:	97ae                	add	a5,a5,a1
204009cc:	078a                	slli	a5,a5,0x2
204009ce:	97ba                	add	a5,a5,a4
204009d0:	97d2                	add	a5,a5,s4
204009d2:	8267d603          	lhu	a2,-2010(a5) # ffffe826 <metal_segment_heap_target_end+0x7fffaf06>
204009d6:	eb418513          	addi	a0,gp,-332 # 8000112c <list_known_crc+0x65c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:313 (discriminator 3)
		for (i=0 ; i<default_num_contexts; i++) 
204009da:	0405                	addi	s0,s0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:314 (discriminator 3)
			ee_printf("[%d]crclist       : 0x%04x\n",i,results[i].crclist);
204009dc:	49e030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:313 (discriminator 3)
		for (i=0 ; i<default_num_contexts; i++) 
204009e0:	a7892783          	lw	a5,-1416(s2)
204009e4:	0442                	slli	s0,s0,0x10
204009e6:	8041                	srli	s0,s0,0x10
204009e8:	85a2                	mv	a1,s0
204009ea:	fcf44de3          	blt	s0,a5,204009c4 <main+0x624>
204009ee:	57f2                	lw	a5,60(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:315
	if (results[0].execs & ID_MATRIX) 
204009f0:	0027f713          	andi	a4,a5,2
204009f4:	a7892683          	lw	a3,-1416(s2)
204009f8:	c721                	beqz	a4,20400a40 <main+0x6a0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:316
		for (i=0 ; i<default_num_contexts; i++) 
204009fa:	04d05363          	blez	a3,20400a40 <main+0x6a0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:317
			ee_printf("[%d]crcmatrix     : 0x%04x\n",i,results[i].crcmatrix);
204009fe:	6705                	lui	a4,0x1
20400a00:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
20400a04:	0814                	addi	a3,sp,16
20400a06:	77fd                	lui	a5,0xfffff
20400a08:	9736                	add	a4,a4,a3
20400a0a:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:316
		for (i=0 ; i<default_num_contexts; i++) 
20400a0c:	4401                	li	s0,0
20400a0e:	4581                	li	a1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:317
			ee_printf("[%d]crcmatrix     : 0x%04x\n",i,results[i].crcmatrix);
20400a10:	c63e                	sw	a5,12(sp)
20400a12:	6a05                	lui	s4,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:317 (discriminator 3)
20400a14:	00459793          	slli	a5,a1,0x4
20400a18:	4732                	lw	a4,12(sp)
20400a1a:	97ae                	add	a5,a5,a1
20400a1c:	078a                	slli	a5,a5,0x2
20400a1e:	97ba                	add	a5,a5,a4
20400a20:	97d2                	add	a5,a5,s4
20400a22:	8287d603          	lhu	a2,-2008(a5) # ffffe828 <metal_segment_heap_target_end+0x7fffaf08>
20400a26:	ed018513          	addi	a0,gp,-304 # 80001148 <list_known_crc+0x678>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:316 (discriminator 3)
		for (i=0 ; i<default_num_contexts; i++) 
20400a2a:	0405                	addi	s0,s0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:317 (discriminator 3)
			ee_printf("[%d]crcmatrix     : 0x%04x\n",i,results[i].crcmatrix);
20400a2c:	44e030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:316 (discriminator 3)
		for (i=0 ; i<default_num_contexts; i++) 
20400a30:	a7892783          	lw	a5,-1416(s2)
20400a34:	0442                	slli	s0,s0,0x10
20400a36:	8041                	srli	s0,s0,0x10
20400a38:	85a2                	mv	a1,s0
20400a3a:	fcf44de3          	blt	s0,a5,20400a14 <main+0x674>
20400a3e:	57f2                	lw	a5,60(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:318
	if (results[0].execs & ID_STATE)
20400a40:	8b91                	andi	a5,a5,4
20400a42:	a7892703          	lw	a4,-1416(s2)
20400a46:	c7a1                	beqz	a5,20400a8e <main+0x6ee>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:319
		for (i=0 ; i<default_num_contexts; i++) 
20400a48:	04e05363          	blez	a4,20400a8e <main+0x6ee>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:320
			ee_printf("[%d]crcstate      : 0x%04x\n",i,results[i].crcstate);
20400a4c:	6705                	lui	a4,0x1
20400a4e:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
20400a52:	0814                	addi	a3,sp,16
20400a54:	77fd                	lui	a5,0xfffff
20400a56:	9736                	add	a4,a4,a3
20400a58:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:319
		for (i=0 ; i<default_num_contexts; i++) 
20400a5a:	4401                	li	s0,0
20400a5c:	4581                	li	a1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:320
			ee_printf("[%d]crcstate      : 0x%04x\n",i,results[i].crcstate);
20400a5e:	c63e                	sw	a5,12(sp)
20400a60:	6a05                	lui	s4,0x1
20400a62:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:320 (discriminator 3)
20400a64:	00459793          	slli	a5,a1,0x4
20400a68:	4732                	lw	a4,12(sp)
20400a6a:	97ae                	add	a5,a5,a1
20400a6c:	078a                	slli	a5,a5,0x2
20400a6e:	97ba                	add	a5,a5,a4
20400a70:	97d2                	add	a5,a5,s4
20400a72:	82a7d603          	lhu	a2,-2006(a5) # ffffe82a <metal_segment_heap_target_end+0x7fffaf0a>
20400a76:	eec18513          	addi	a0,gp,-276 # 80001164 <list_known_crc+0x694>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:319 (discriminator 3)
		for (i=0 ; i<default_num_contexts; i++) 
20400a7a:	0405                	addi	s0,s0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:320 (discriminator 3)
			ee_printf("[%d]crcstate      : 0x%04x\n",i,results[i].crcstate);
20400a7c:	3fe030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:319 (discriminator 3)
		for (i=0 ; i<default_num_contexts; i++) 
20400a80:	a7892783          	lw	a5,-1416(s2)
20400a84:	0442                	slli	s0,s0,0x10
20400a86:	8041                	srli	s0,s0,0x10
20400a88:	85a2                	mv	a1,s0
20400a8a:	fcf44de3          	blt	s0,a5,20400a64 <main+0x6c4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:321
	for (i=0 ; i<default_num_contexts; i++) 
20400a8e:	a7892783          	lw	a5,-1416(s2)
20400a92:	04f05263          	blez	a5,20400ad6 <main+0x736>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:322
		ee_printf("[%d]crcfinal      : 0x%04x\n",i,results[i].crc);
20400a96:	6705                	lui	a4,0x1
20400a98:	82070713          	addi	a4,a4,-2016 # 820 <__heap_size+0x20>
20400a9c:	0814                	addi	a3,sp,16
20400a9e:	77fd                	lui	a5,0xfffff
20400aa0:	9736                	add	a4,a4,a3
20400aa2:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:321
	for (i=0 ; i<default_num_contexts; i++) 
20400aa4:	4401                	li	s0,0
20400aa6:	4581                	li	a1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:322
		ee_printf("[%d]crcfinal      : 0x%04x\n",i,results[i].crc);
20400aa8:	c63e                	sw	a5,12(sp)
20400aaa:	6a05                	lui	s4,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:322 (discriminator 3)
20400aac:	00459793          	slli	a5,a1,0x4
20400ab0:	4732                	lw	a4,12(sp)
20400ab2:	97ae                	add	a5,a5,a1
20400ab4:	078a                	slli	a5,a5,0x2
20400ab6:	97ba                	add	a5,a5,a4
20400ab8:	97d2                	add	a5,a5,s4
20400aba:	8247d603          	lhu	a2,-2012(a5) # ffffe824 <metal_segment_heap_target_end+0x7fffaf04>
20400abe:	f0818513          	addi	a0,gp,-248 # 80001180 <list_known_crc+0x6b0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:321 (discriminator 3)
	for (i=0 ; i<default_num_contexts; i++) 
20400ac2:	0405                	addi	s0,s0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:322 (discriminator 3)
		ee_printf("[%d]crcfinal      : 0x%04x\n",i,results[i].crc);
20400ac4:	3b6030ef          	jal	ra,20403e7a <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:321 (discriminator 3)
	for (i=0 ; i<default_num_contexts; i++) 
20400ac8:	a7892783          	lw	a5,-1416(s2)
20400acc:	0442                	slli	s0,s0,0x10
20400ace:	8041                	srli	s0,s0,0x10
20400ad0:	85a2                	mv	a1,s0
20400ad2:	fcf44de3          	blt	s0,a5,20400aac <main+0x70c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:323
	if (total_errors==0) {
20400ad6:	c4d1                	beqz	s1,20400b62 <main+0x7c2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:341
#endif
			ee_printf("\n");
		}
#endif
	}
	if (total_errors>0)
20400ad8:	04905863          	blez	s1,20400b28 <main+0x788>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:342
		ee_printf("Errors detected\n");
20400adc:	f6c18513          	addi	a0,gp,-148 # 800011e4 <list_known_crc+0x714>
20400ae0:	4a8030ef          	jal	ra,20403f88 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:351
#if (MEM_METHOD==MEM_MALLOC)
	for (i=0 ; i<MULTITHREAD; i++) 
		portable_free(results[i].memblock[0]);
#endif
	/* And last call any target specific code for finalizing */
	portable_fini(&(results[0].port));
20400ae4:	05e10513          	addi	a0,sp,94
20400ae8:	358030ef          	jal	ra,20403e40 <portable_fini>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:354

	return MAIN_RETURN_VAL;	
}
20400aec:	7f010113          	addi	sp,sp,2032
20400af0:	50b6                	lw	ra,108(sp)
20400af2:	4501                	li	a0,0
20400af4:	5426                	lw	s0,104(sp)
20400af6:	5496                	lw	s1,100(sp)
20400af8:	5906                	lw	s2,96(sp)
20400afa:	49f6                	lw	s3,92(sp)
20400afc:	4a66                	lw	s4,88(sp)
20400afe:	4ad6                	lw	s5,84(sp)
20400b00:	4b46                	lw	s6,80(sp)
20400b02:	4bb6                	lw	s7,76(sp)
20400b04:	4c26                	lw	s8,72(sp)
20400b06:	4c96                	lw	s9,68(sp)
20400b08:	4d06                	lw	s10,64(sp)
20400b0a:	6165                	addi	sp,sp,112
20400b0c:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:119
		results[0].execs=ALL_ALGORITHMS_MASK;
20400b0e:	479d                	li	a5,7
20400b10:	de3e                	sw	a5,60(sp)
20400b12:	91bff06f          	j	2040042c <main+0x8c>
20400b16:	0001                	nop
iterate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
20400b18:	04a11b23          	sh	a0,86(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
20400b1c:	ac9991e3          	bne	s3,s1,204005de <main+0x23e>
20400b20:	b649                	j	204006a2 <main+0x302>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
20400b22:	04a11b23          	sh	a0,86(sp)
20400b26:	b459                	j	204005ac <main+0x20c>
main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:343
	if (total_errors<0)
20400b28:	fa04dee3          	bgez	s1,20400ae4 <main+0x744>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:344
		ee_printf("Cannot validate operation for these seed values, please compare with results on a known platform.\n");
20400b2c:	f7c18513          	addi	a0,gp,-132 # 800011f4 <list_known_crc+0x724>
20400b30:	458030ef          	jal	ra,20403f88 <puts>
20400b34:	bf45                	j	20400ae4 <main+0x744>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:127 (discriminator 1)
	if ((results[0].seed1==1) && (results[0].seed2==0) && (results[0].seed3==0)) { /* perfromance run */
20400b36:	47b2                	lw	a5,12(sp)
20400b38:	7f079783          	lh	a5,2032(a5)
20400b3c:	920791e3          	bnez	a5,2040045e <main+0xbe>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:128
		results[0].seed1=0x3415;
20400b40:	4732                	lw	a4,12(sp)
20400b42:	341537b7          	lui	a5,0x34153
20400b46:	41578793          	addi	a5,a5,1045 # 34153415 <metal_segment_data_source_start+0x13d48f55>
20400b4a:	7ef72623          	sw	a5,2028(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:130
		results[0].seed3=0x66;
20400b4e:	06600793          	li	a5,102
20400b52:	7ef71823          	sh	a5,2032(a4)
20400b56:	909ff06f          	j	2040045e <main+0xbe>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:261
			total_errors=-1;
20400b5a:	5d7d                	li	s10,-1
20400b5c:	80001937          	lui	s2,0x80001
20400b60:	bb71                	j	204008fc <main+0x55c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:324
		ee_printf("Correct operation validated. See README.md for run and reporting rules.\n");
20400b62:	f2418513          	addi	a0,gp,-220 # 8000119c <list_known_crc+0x6cc>
20400b66:	422030ef          	jal	ra,20403f88 <puts>
20400b6a:	bfad                	j	20400ae4 <main+0x744>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:300
		total_errors++;
20400b6c:	0485                	addi	s1,s1,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:299
		ee_printf("ERROR! Must execute for at least 10 secs for a valid result!\n");
20400b6e:	a3818513          	addi	a0,gp,-1480 # 80000cb0 <list_known_crc+0x1e0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:300
		total_errors++;
20400b72:	04c2                	slli	s1,s1,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:299
		ee_printf("ERROR! Must execute for at least 10 secs for a valid result!\n");
20400b74:	414030ef          	jal	ra,20403f88 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:300
		total_errors++;
20400b78:	84c1                	srai	s1,s1,0x10
20400b7a:	b3d5                	j	2040095e <main+0x5be>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:179
				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
20400b7c:	7f462f83          	lw	t6,2036(a2)
20400b80:	00281e93          	slli	t4,a6,0x2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:180
			j++;
20400b84:	0305                	addi	t1,t1,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:179
				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
20400b86:	9eae                	add	t4,t4,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:180
			j++;
20400b88:	0342                	slli	t1,t1,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:179
				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
20400b8a:	9f7e                	add	t5,t5,t6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:180
			j++;
20400b8c:	01035313          	srli	t1,t1,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:179
				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
20400b90:	01eea623          	sw	t5,12(t4)
20400b94:	947ff06f          	j	204004da <main+0x13a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:246
			ee_printf("6k validation run parameters for coremark.\n");
20400b98:	89018513          	addi	a0,gp,-1904 # 80000b08 <list_known_crc+0x38>
20400b9c:	3ec030ef          	jal	ra,20403f88 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:245
			known_id=1;
20400ba0:	4a05                	li	s4,1
20400ba2:	b66d                	j	2040074c <main+0x3ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:242
			ee_printf("6k performance run parameters for coremark.\n");
20400ba4:	86418513          	addi	a0,gp,-1948 # 80000adc <list_known_crc+0xc>
20400ba8:	3e0030ef          	jal	ra,20403f88 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:241
			known_id=0;
20400bac:	4a01                	li	s4,0
20400bae:	be79                	j	2040074c <main+0x3ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:258
			ee_printf("2K validation run parameters for coremark.\n");
20400bb0:	91818513          	addi	a0,gp,-1768 # 80000b90 <list_known_crc+0xc0>
20400bb4:	3d4030ef          	jal	ra,20403f88 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:257
			known_id=4;
20400bb8:	4a11                	li	s4,4
20400bba:	be49                	j	2040074c <main+0x3ac>
	...

20400bd0 <core_bench_list>:
core_bench_list():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:135
	ee_s16 find_num=res->seed3;
20400bd0:	00451e03          	lh	t3,4(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:131
ee_u16 core_bench_list(core_results *res, ee_s16 finder_idx) {
20400bd4:	711d                	addi	sp,sp,-96
20400bd6:	d86a                	sw	s10,48(sp)
20400bd8:	d66e                	sw	s11,44(sp)
20400bda:	ce86                	sw	ra,92(sp)
20400bdc:	cca2                	sw	s0,88(sp)
20400bde:	caa6                	sw	s1,84(sp)
20400be0:	c8ca                	sw	s2,80(sp)
20400be2:	c6ce                	sw	s3,76(sp)
20400be4:	c4d2                	sw	s4,72(sp)
20400be6:	c2d6                	sw	s5,68(sp)
20400be8:	c0da                	sw	s6,64(sp)
20400bea:	de5e                	sw	s7,60(sp)
20400bec:	dc62                	sw	s8,56(sp)
20400bee:	da66                	sw	s9,52(sp)
20400bf0:	ca02                	sw	zero,20(sp)
20400bf2:	8daa                	mv	s11,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:134
	list_head *list=res->list;
20400bf4:	02452d03          	lw	s10,36(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:143
	for (i=0; i<find_num; i++) {
20400bf8:	69c05d63          	blez	t3,20401292 <core_bench_list+0x6c2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:141
	info.idx=finder_idx;
20400bfc:	c62e                	sw	a1,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:143
	for (i=0; i<find_num; i++) {
20400bfe:	4601                	li	a2,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:133
	ee_u16 found=0,missed=0;
20400c00:	4301                	li	t1,0
20400c02:	4501                	li	a0,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:132
	ee_u16 retval=0;
20400c04:	4f01                	li	t5,0
20400c06:	0001                	nop
core_list_find():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:370
	if (info->idx>=0) {
20400c08:	47b2                	lw	a5,12(sp)
core_bench_list():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:144
		info.data16= (i & 0xff) ;
20400c0a:	0ff67693          	andi	a3,a2,255
20400c0e:	ca36                	sw	a3,20(sp)
core_list_find():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:370
	if (info->idx>=0) {
20400c10:	2c07c263          	bltz	a5,20400ed4 <core_bench_list+0x304>
20400c14:	010f1893          	slli	a7,t5,0x10
20400c18:	4108d893          	srai	a7,a7,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:371
		while (list && (list->info->idx != info->idx))
20400c1c:	2e0d0463          	beqz	s10,20400f04 <core_bench_list+0x334>
20400c20:	004d2703          	lw	a4,4(s10)
20400c24:	46b2                	lw	a3,12(sp)
20400c26:	87ea                	mv	a5,s10
20400c28:	00271703          	lh	a4,2(a4)
20400c2c:	00d71a63          	bne	a4,a3,20400c40 <core_bench_list+0x70>
20400c30:	a811                	j	20400c44 <core_bench_list+0x74>
20400c32:	0001                	nop
20400c34:	43d8                	lw	a4,4(a5)
20400c36:	46b2                	lw	a3,12(sp)
20400c38:	00271703          	lh	a4,2(a4)
20400c3c:	00d70463          	beq	a4,a3,20400c44 <core_bench_list+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:372
			list=list->next;
20400c40:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:371
		while (list && (list->info->idx != info->idx))
20400c42:	fbed                	bnez	a5,20400c34 <core_bench_list+0x64>
20400c44:	4681                	li	a3,0
20400c46:	a011                	j	20400c4a <core_bench_list+0x7a>
core_list_reverse():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:396
	while (list) {
20400c48:	8d3a                	mv	s10,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:397
		tmp=list->next;
20400c4a:	000d2703          	lw	a4,0(s10)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:398
		list->next=next;
20400c4e:	00dd2023          	sw	a3,0(s10)
20400c52:	86ea                	mv	a3,s10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:396
	while (list) {
20400c54:	fb75                	bnez	a4,20400c48 <core_bench_list+0x78>
core_bench_list():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:147
		if (this_find==NULL) {
20400c56:	2a078763          	beqz	a5,20400f04 <core_bench_list+0x334>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:153
			if (this_find->info->data16 & 0x1) /* use found value */
20400c5a:	43d8                	lw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:152
			found++;
20400c5c:	0505                	addi	a0,a0,1
20400c5e:	0542                	slli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:153
			if (this_find->info->data16 & 0x1) /* use found value */
20400c60:	00071703          	lh	a4,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:152
			found++;
20400c64:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:153
			if (this_find->info->data16 & 0x1) /* use found value */
20400c66:	00177693          	andi	a3,a4,1
20400c6a:	ce81                	beqz	a3,20400c82 <core_bench_list+0xb2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:154
				retval+=(this_find->info->data16 >> 9) & 1;
20400c6c:	8725                	srai	a4,a4,0x9
20400c6e:	8b05                	andi	a4,a4,1
20400c70:	9746                	add	a4,a4,a7
20400c72:	01071893          	slli	a7,a4,0x10
20400c76:	4108d893          	srai	a7,a7,0x10
20400c7a:	01089f13          	slli	t5,a7,0x10
20400c7e:	010f5f13          	srli	t5,t5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:156
			if (this_find->next != NULL) {
20400c82:	4394                	lw	a3,0(a5)
20400c84:	ca81                	beqz	a3,20400c94 <core_bench_list+0xc4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:158
				this_find->next = finder->next;
20400c86:	4298                	lw	a4,0(a3)
20400c88:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:159
				finder->next=list->next;
20400c8a:	000d2783          	lw	a5,0(s10)
20400c8e:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:160
				list->next=finder;
20400c90:	00dd2023          	sw	a3,0(s10)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:163
		if (info.idx>=0)
20400c94:	47b2                	lw	a5,12(sp)
20400c96:	0007c863          	bltz	a5,20400ca6 <core_bench_list+0xd6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:164
			info.idx++;
20400c9a:	00178b13          	addi	s6,a5,1
20400c9e:	010b1793          	slli	a5,s6,0x10
20400ca2:	87c1                	srai	a5,a5,0x10
20400ca4:	c63e                	sw	a5,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:143 (discriminator 2)
	for (i=0; i<find_num; i++) {
20400ca6:	0605                	addi	a2,a2,1
20400ca8:	0642                	slli	a2,a2,0x10
20400caa:	8641                	srai	a2,a2,0x10
20400cac:	f4ce1ee3          	bne	t3,a2,20400c08 <core_bench_list+0x38>
20400cb0:	00251793          	slli	a5,a0,0x2
20400cb4:	406787b3          	sub	a5,a5,t1
20400cb8:	00f88c33          	add	s8,a7,a5
20400cbc:	010c1793          	slli	a5,s8,0x10
20400cc0:	83c1                	srli	a5,a5,0x10
20400cc2:	ce3e                	sw	a5,28(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:171
	if (finder_idx>0)
20400cc4:	2ab04363          	bgtz	a1,20400f6a <core_bench_list+0x39a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:173
	remover=core_list_remove(list->next);
20400cc8:	000d2783          	lw	a5,0(s10)
core_list_find():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:370
	if (info->idx>=0) {
20400ccc:	846a                	mv	s0,s10
core_list_remove():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:317
	list_head *ret=item->next;
20400cce:	4384                	lw	s1,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:319
	tmp=item->info;
20400cd0:	43d8                	lw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:320
	item->info=ret->info;
20400cd2:	40d0                	lw	a2,4(s1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:323
	item->next=item->next->next;
20400cd4:	4094                	lw	a3,0(s1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:320
	item->info=ret->info;
20400cd6:	c3d0                	sw	a2,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:321
	ret->info=tmp;
20400cd8:	c0d8                	sw	a4,4(s1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:323
	item->next=item->next->next;
20400cda:	c394                	sw	a3,0(a5)
core_list_find():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:370
	if (info->idx>=0) {
20400cdc:	47b2                	lw	a5,12(sp)
core_list_remove():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:324
	ret->next=NULL;
20400cde:	0004a023          	sw	zero,0(s1)
core_list_find():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:370
	if (info->idx>=0) {
20400ce2:	1807c163          	bltz	a5,20400e64 <core_bench_list+0x294>
20400ce6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:371
		while (list && (list->info->idx != info->idx))
20400ce8:	405c                	lw	a5,4(s0)
20400cea:	46b2                	lw	a3,12(sp)
20400cec:	00279783          	lh	a5,2(a5)
20400cf0:	00d78863          	beq	a5,a3,20400d00 <core_bench_list+0x130>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:372
			list=list->next;
20400cf4:	4000                	lw	s0,0(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:371
		while (list && (list->info->idx != info->idx))
20400cf6:	f86d                	bnez	s0,20400ce8 <core_bench_list+0x118>
core_bench_list():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:177
		finder=list->next;
20400cf8:	000d2783          	lw	a5,0(s10)
20400cfc:	843e                	mv	s0,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:178
	while (finder) {
20400cfe:	cf91                	beqz	a5,20400d1a <core_bench_list+0x14a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:179
		retval=crc16(list->info->data16,retval);
20400d00:	004d2783          	lw	a5,4(s10)
20400d04:	45f2                	lw	a1,28(sp)
20400d06:	00079503          	lh	a0,0(a5)
20400d0a:	6e7020ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:180
		finder=finder->next;
20400d0e:	4000                	lw	s0,0(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:179
		retval=crc16(list->info->data16,retval);
20400d10:	ce2a                	sw	a0,28(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:178
	while (finder) {
20400d12:	f47d                	bnez	s0,20400d00 <core_bench_list+0x130>
20400d14:	40d8                	lw	a4,4(s1)
20400d16:	000d2783          	lw	a5,0(s10)
core_list_undo_remove():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:348
	item_removed->info=item_modified->info;
20400d1a:	43d0                	lw	a2,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:351
	item_removed->next=item_modified->next;
20400d1c:	4394                	lw	a3,0(a5)
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:429
    insize = 1;
20400d1e:	4505                	li	a0,1
core_list_undo_remove():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:348
	item_removed->info=item_modified->info;
20400d20:	c0d0                	sw	a2,4(s1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:349
	item_modified->info=tmp;
20400d22:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:351
	item_removed->next=item_modified->next;
20400d24:	c094                	sw	a3,0(s1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:352
	item_modified->next=item_removed;
20400d26:	c384                	sw	s1,0(a5)
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:486

        /* If we have done only one merge, we're finished. */
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
20400d28:	4f85                	li	t6,1
20400d2a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:436
        nmerges = 0;  /* count number of merges we do in this pass */
20400d2c:	4f01                	li	t5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:434
        tail = NULL;
20400d2e:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:433
        list = NULL;
20400d30:	4881                	li	a7,0
20400d32:	0001                	nop
20400d34:	fff50693          	addi	a3,a0,-1
20400d38:	8a9d                	andi	a3,a3,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:439
            nmerges++;  /* there exists a merge to be done */
20400d3a:	0f05                	addi	t5,t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
20400d3c:	18a05063          	blez	a0,20400ebc <core_bench_list+0x2ec>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d40:	000d2783          	lw	a5,0(s10)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d44:	4705                	li	a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400d46:	18078163          	beqz	a5,20400ec8 <core_bench_list+0x2f8>
20400d4a:	c6b9                	beqz	a3,20400d98 <core_bench_list+0x1c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d4c:	439c                	lw	a5,0(a5)
20400d4e:	4605                	li	a2,1
20400d50:	458d                	li	a1,3
20400d52:	4e11                	li	t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d54:	4709                	li	a4,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400d56:	c3d9                	beqz	a5,20400ddc <core_bench_list+0x20c>
20400d58:	04c68063          	beq	a3,a2,20400d98 <core_bench_list+0x1c8>
20400d5c:	02e68b63          	beq	a3,a4,20400d92 <core_bench_list+0x1c2>
20400d60:	02b68663          	beq	a3,a1,20400d8c <core_bench_list+0x1bc>
20400d64:	03c68163          	beq	a3,t3,20400d86 <core_bench_list+0x1b6>
20400d68:	4615                	li	a2,5
20400d6a:	00c68b63          	beq	a3,a2,20400d80 <core_bench_list+0x1b0>
20400d6e:	4619                	li	a2,6
20400d70:	00c68563          	beq	a3,a2,20400d7a <core_bench_list+0x1aa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d74:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d76:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400d78:	c3b5                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d7a:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d7c:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400d7e:	cfb9                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d80:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d82:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400d84:	cfa1                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d86:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d88:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400d8a:	cba9                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d8c:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d8e:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400d90:	c7b1                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d92:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d94:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400d96:	c3b9                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
20400d98:	04a70263          	beq	a4,a0,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400d9c:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400d9e:	0705                	addi	a4,a4,1
20400da0:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400da2:	cf8d                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400da4:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400da6:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400da8:	cb95                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400daa:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400dac:	00268713          	addi	a4,a3,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400db0:	c795                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400db2:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400db4:	00368713          	addi	a4,a3,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400db8:	c395                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400dba:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400dbc:	00468713          	addi	a4,a3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400dc0:	cf91                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400dc2:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400dc4:	00568713          	addi	a4,a3,5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400dc8:	cb91                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400dca:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400dcc:	00668713          	addi	a4,a3,6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400dd0:	c791                	beqz	a5,20400ddc <core_bench_list+0x20c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400dd2:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400dd4:	00768713          	addi	a4,a3,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400dd8:	f3e1                	bnez	a5,20400d98 <core_bench_list+0x1c8>
20400dda:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20400ddc:	862a                	mv	a2,a0
20400dde:	859a                	mv	a1,t1
20400de0:	8446                	mv	s0,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
20400de2:	06e05563          	blez	a4,20400e4c <core_bench_list+0x27c>
20400de6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:459
				} else if (qsize == 0 || !q) {
20400de8:	c255                	beqz	a2,20400e8c <core_bench_list+0x2bc>
20400dea:	c3cd                	beqz	a5,20400e8c <core_bench_list+0x2bc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:462
				} else if (cmp(p->info,q->info,res) <= 0) {
20400dec:	004d2e03          	lw	t3,4(s10)
20400df0:	0047a303          	lw	t1,4(a5)
cmp_idx():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:113
		a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16>>8));
20400df4:	000e1683          	lh	a3,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:116
	return a->idx - b->idx;
20400df8:	00231283          	lh	t0,2(t1)
20400dfc:	002e1883          	lh	a7,2(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:113
		a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16>>8));
20400e00:	01069e93          	slli	t4,a3,0x10
20400e04:	010ede93          	srli	t4,t4,0x10
20400e08:	f006f693          	andi	a3,a3,-256
20400e0c:	008ede93          	srli	t4,t4,0x8
20400e10:	01d6e6b3          	or	a3,a3,t4
20400e14:	00de1023          	sh	a3,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:114
		b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16>>8));
20400e18:	00031683          	lh	a3,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:116
	return a->idx - b->idx;
20400e1c:	405888b3          	sub	a7,a7,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:114
		b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16>>8));
20400e20:	01069e13          	slli	t3,a3,0x10
20400e24:	010e5e13          	srli	t3,t3,0x10
20400e28:	f006f693          	andi	a3,a3,-256
20400e2c:	008e5e13          	srli	t3,t3,0x8
20400e30:	01c6e6b3          	or	a3,a3,t3
20400e34:	00d31023          	sh	a3,0(t1)
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:462
				} else if (cmp(p->info,q->info,res) <= 0) {
20400e38:	05105463          	blez	a7,20400e80 <core_bench_list+0x2b0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:467
				    e = q; q = q->next; qsize--;
20400e3c:	86be                	mv	a3,a5
20400e3e:	439c                	lw	a5,0(a5)
20400e40:	167d                	addi	a2,a2,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:471
				if (tail) {
20400e42:	cd89                	beqz	a1,20400e5c <core_bench_list+0x28c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:472
				    tail->next = e;
20400e44:	c194                	sw	a3,0(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20400e46:	85b6                	mv	a1,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
20400e48:	fae040e3          	bgtz	a4,20400de8 <core_bench_list+0x218>
20400e4c:	04c05663          	blez	a2,20400e98 <core_bench_list+0x2c8>
20400e50:	cfa1                	beqz	a5,20400ea8 <core_bench_list+0x2d8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:456
				if (psize == 0) {
20400e52:	ff49                	bnez	a4,20400dec <core_bench_list+0x21c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:458
				    e = q; q = q->next; qsize--;
20400e54:	86be                	mv	a3,a5
20400e56:	167d                	addi	a2,a2,-1
20400e58:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:471
				if (tail) {
20400e5a:	f5ed                	bnez	a1,20400e44 <core_bench_list+0x274>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20400e5c:	8436                	mv	s0,a3
20400e5e:	85b6                	mv	a1,a3
20400e60:	b7e5                	j	20400e48 <core_bench_list+0x278>
20400e62:	0001                	nop
core_list_find():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:375
		while (list && ((list->info->data16 & 0xff) != info->data16))
20400e64:	405c                	lw	a5,4(s0)
20400e66:	46d2                	lw	a3,20(sp)
20400e68:	0007c783          	lbu	a5,0(a5)
20400e6c:	e8d78ae3          	beq	a5,a3,20400d00 <core_bench_list+0x130>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:376
			list=list->next;
20400e70:	4000                	lw	s0,0(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:375
		while (list && ((list->info->data16 & 0xff) != info->data16))
20400e72:	f86d                	bnez	s0,20400e64 <core_bench_list+0x294>
core_bench_list():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:177
		finder=list->next;
20400e74:	000d2783          	lw	a5,0(s10)
20400e78:	843e                	mv	s0,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:178
	while (finder) {
20400e7a:	e80793e3          	bnez	a5,20400d00 <core_bench_list+0x130>
20400e7e:	bd71                	j	20400d1a <core_bench_list+0x14a>
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:464
				    e = p; p = p->next; psize--;
20400e80:	86ea                	mv	a3,s10
20400e82:	177d                	addi	a4,a4,-1
20400e84:	000d2d03          	lw	s10,0(s10)
20400e88:	bf6d                	j	20400e42 <core_bench_list+0x272>
20400e8a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:461
				    e = p; p = p->next; psize--;
20400e8c:	86ea                	mv	a3,s10
20400e8e:	177d                	addi	a4,a4,-1
20400e90:	000d2d03          	lw	s10,0(s10)
20400e94:	b77d                	j	20400e42 <core_bench_list+0x272>
20400e96:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
20400e98:	8d3e                	mv	s10,a5
20400e9a:	88a2                	mv	a7,s0
20400e9c:	832e                	mv	t1,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:438
        while (p) {
20400e9e:	e8079be3          	bnez	a5,20400d34 <core_bench_list+0x164>
20400ea2:	8d22                	mv	s10,s0
20400ea4:	a019                	j	20400eaa <core_bench_list+0x2da>
20400ea6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
20400ea8:	8d22                	mv	s10,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:483
	    tail->next = NULL;
20400eaa:	0005a023          	sw	zero,0(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:486
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
20400eae:	09efd263          	bge	t6,t5,20400f32 <core_bench_list+0x362>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:490
            return list;

        /* Otherwise repeat, merging lists twice the size */
        insize *= 2;
20400eb2:	0506                	slli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:438
        while (p) {
20400eb4:	e6041ce3          	bnez	s0,20400d2c <core_bench_list+0x15c>
20400eb8:	cceff06f          	j	20400386 <core_bench_list.cold.1+0x6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
20400ebc:	87ea                	mv	a5,s10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:442
            psize = 0;
20400ebe:	4701                	li	a4,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20400ec0:	862a                	mv	a2,a0
20400ec2:	859a                	mv	a1,t1
20400ec4:	8446                	mv	s0,a7
20400ec6:	bf31                	j	20400de2 <core_bench_list+0x212>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400ec8:	4705                	li	a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20400eca:	862a                	mv	a2,a0
20400ecc:	859a                	mv	a1,t1
20400ece:	8446                	mv	s0,a7
20400ed0:	bf09                	j	20400de2 <core_bench_list+0x212>
20400ed2:	0001                	nop
20400ed4:	010f1893          	slli	a7,t5,0x10
20400ed8:	4108d893          	srai	a7,a7,0x10
core_list_find():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:375
		while (list && ((list->info->data16 & 0xff) != info->data16))
20400edc:	020d0463          	beqz	s10,20400f04 <core_bench_list+0x334>
20400ee0:	004d2703          	lw	a4,4(s10)
20400ee4:	87ea                	mv	a5,s10
20400ee6:	00074703          	lbu	a4,0(a4)
20400eea:	00e69963          	bne	a3,a4,20400efc <core_bench_list+0x32c>
20400eee:	bb99                	j	20400c44 <core_bench_list+0x74>
20400ef0:	43d8                	lw	a4,4(a5)
20400ef2:	46d2                	lw	a3,20(sp)
20400ef4:	00074703          	lbu	a4,0(a4)
20400ef8:	d4d706e3          	beq	a4,a3,20400c44 <core_bench_list+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:376
			list=list->next;
20400efc:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:375
		while (list && ((list->info->data16 & 0xff) != info->data16))
20400efe:	fbed                	bnez	a5,20400ef0 <core_bench_list+0x320>
20400f00:	b391                	j	20400c44 <core_bench_list+0x74>
20400f02:	0001                	nop
core_bench_list():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:149
			retval+=(list->next->info->data16 >> 8) & 1;
20400f04:	000d2703          	lw	a4,0(s10)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:148
			missed++;
20400f08:	00130793          	addi	a5,t1,1
20400f0c:	01079313          	slli	t1,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:149
			retval+=(list->next->info->data16 >> 8) & 1;
20400f10:	435c                	lw	a5,4(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:148
			missed++;
20400f12:	01035313          	srli	t1,t1,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:149
			retval+=(list->next->info->data16 >> 8) & 1;
20400f16:	00178c03          	lb	s8,1(a5)
20400f1a:	001c7c13          	andi	s8,s8,1
20400f1e:	9c46                	add	s8,s8,a7
20400f20:	010c1893          	slli	a7,s8,0x10
20400f24:	4108d893          	srai	a7,a7,0x10
20400f28:	01089f13          	slli	t5,a7,0x10
20400f2c:	010f5f13          	srli	t5,t5,0x10
20400f30:	b395                	j	20400c94 <core_bench_list+0xc4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:189
	finder=list->next;
20400f32:	4004                	lw	s1,0(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:190
	while (finder) {
20400f34:	c899                	beqz	s1,20400f4a <core_bench_list+0x37a>
20400f36:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:191
		retval=crc16(list->info->data16,retval);
20400f38:	405c                	lw	a5,4(s0)
20400f3a:	45f2                	lw	a1,28(sp)
20400f3c:	00079503          	lh	a0,0(a5)
20400f40:	4b1020ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:192
		finder=finder->next;
20400f44:	4084                	lw	s1,0(s1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:191
		retval=crc16(list->info->data16,retval);
20400f46:	ce2a                	sw	a0,28(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:190
	while (finder) {
20400f48:	f8e5                	bnez	s1,20400f38 <core_bench_list+0x368>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:198
}
20400f4a:	40f6                	lw	ra,92(sp)
20400f4c:	4466                	lw	s0,88(sp)
20400f4e:	4572                	lw	a0,28(sp)
20400f50:	44d6                	lw	s1,84(sp)
20400f52:	4946                	lw	s2,80(sp)
20400f54:	49b6                	lw	s3,76(sp)
20400f56:	4a26                	lw	s4,72(sp)
20400f58:	4a96                	lw	s5,68(sp)
20400f5a:	4b06                	lw	s6,64(sp)
20400f5c:	5bf2                	lw	s7,60(sp)
20400f5e:	5c62                	lw	s8,56(sp)
20400f60:	5cd2                	lw	s9,52(sp)
20400f62:	5d42                	lw	s10,48(sp)
20400f64:	5db2                	lw	s11,44(sp)
20400f66:	6125                	addi	sp,sp,96
20400f68:	8082                	ret
calc_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:81
				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
20400f6a:	028d8793          	addi	a5,s11,40
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:429
    insize = 1;
20400f6e:	4a05                	li	s4,1
calc_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:81
				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
20400f70:	cc3e                	sw	a5,24(sp)
20400f72:	0001                	nop
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:438
        while (p) {
20400f74:	160d0763          	beqz	s10,204010e2 <core_bench_list+0x512>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:434
        tail = NULL;
20400f78:	4681                	li	a3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:433
        list = NULL;
20400f7a:	4701                	li	a4,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:436
        nmerges = 0;  /* count number of merges we do in this pass */
20400f7c:	c802                	sw	zero,16(sp)
20400f7e:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:439
            nmerges++;  /* there exists a merge to be done */
20400f80:	4642                	lw	a2,16(sp)
20400f82:	fffa0793          	addi	a5,s4,-1 # fff <__heap_size+0x7ff>
20400f86:	8b9d                	andi	a5,a5,7
20400f88:	0605                	addi	a2,a2,1
20400f8a:	c832                	sw	a2,16(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
20400f8c:	2f405863          	blez	s4,2040127c <core_bench_list+0x6ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400f90:	000d2c83          	lw	s9,0(s10)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400f94:	4c05                	li	s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400f96:	2e0c8963          	beqz	s9,20401288 <core_bench_list+0x6b8>
20400f9a:	c7ad                	beqz	a5,20401004 <core_bench_list+0x434>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400f9c:	000cac83          	lw	s9,0(s9)
20400fa0:	4605                	li	a2,1
20400fa2:	458d                	li	a1,3
20400fa4:	4511                	li	a0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400fa6:	4c09                	li	s8,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400fa8:	0c0c8063          	beqz	s9,20401068 <core_bench_list+0x498>
20400fac:	04c78c63          	beq	a5,a2,20401004 <core_bench_list+0x434>
20400fb0:	05878563          	beq	a5,s8,20400ffa <core_bench_list+0x42a>
20400fb4:	02b78e63          	beq	a5,a1,20400ff0 <core_bench_list+0x420>
20400fb8:	02a78763          	beq	a5,a0,20400fe6 <core_bench_list+0x416>
20400fbc:	4615                	li	a2,5
20400fbe:	00c78f63          	beq	a5,a2,20400fdc <core_bench_list+0x40c>
20400fc2:	4619                	li	a2,6
20400fc4:	00c78763          	beq	a5,a2,20400fd2 <core_bench_list+0x402>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400fc8:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400fcc:	0c05                	addi	s8,s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400fce:	080c8d63          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400fd2:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400fd6:	0c05                	addi	s8,s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400fd8:	080c8863          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400fdc:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400fe0:	0c05                	addi	s8,s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400fe2:	080c8363          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400fe6:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400fea:	0c05                	addi	s8,s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400fec:	060c8e63          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400ff0:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400ff4:	0c05                	addi	s8,s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20400ff6:	060c8963          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20400ffa:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20400ffe:	0c05                	addi	s8,s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401000:	060c8463          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
20401004:	078a0263          	beq	s4,s8,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401008:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040100c:	0c05                	addi	s8,s8,1
2040100e:	87e2                	mv	a5,s8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401010:	040c8c63          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401014:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401018:	0c05                	addi	s8,s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040101a:	040c8763          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
2040101e:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401022:	00278c13          	addi	s8,a5,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401026:	040c8163          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
2040102a:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040102e:	00378c13          	addi	s8,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401032:	020c8b63          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401036:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040103a:	00478c13          	addi	s8,a5,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040103e:	020c8563          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401042:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401046:	00578c13          	addi	s8,a5,5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040104a:	000c8f63          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
2040104e:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401052:	00678c13          	addi	s8,a5,6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401056:	000c8963          	beqz	s9,20401068 <core_bench_list+0x498>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
2040105a:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040105e:	00778c13          	addi	s8,a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401062:	fa0c91e3          	bnez	s9,20401004 <core_bench_list+0x434>
20401066:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20401068:	8bd2                	mv	s7,s4
2040106a:	84b6                	mv	s1,a3
2040106c:	89ba                	mv	s3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
2040106e:	05805663          	blez	s8,204010ba <core_bench_list+0x4ea>
20401072:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:459
				} else if (qsize == 0 || !q) {
20401074:	060b8263          	beqz	s7,204010d8 <core_bench_list+0x508>
20401078:	060c8063          	beqz	s9,204010d8 <core_bench_list+0x508>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:462
				} else if (cmp(p->info,q->info,res) <= 0) {
2040107c:	004d2a83          	lw	s5,4(s10)
20401080:	004ca903          	lw	s2,4(s9)
calc_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:63
	ee_s16 data=*pdata;
20401084:	000a9403          	lh	s0,0(s5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:66
	if (optype) /* if cached, use cache */
20401088:	08047793          	andi	a5,s0,128
2040108c:	cbc5                	beqz	a5,2040113c <core_bench_list+0x56c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:67
		return (data & 0x007f);
2040108e:	07f47b13          	andi	s6,s0,127
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:63
	ee_s16 data=*pdata;
20401092:	00091a83          	lh	s5,0(s2) # 80001000 <metal_segment_heap_target_end+0xffffd6e0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:66
	if (optype) /* if cached, use cache */
20401096:	080af793          	andi	a5,s5,128
2040109a:	c7b9                	beqz	a5,204010e8 <core_bench_list+0x518>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:67
		return (data & 0x007f);
2040109c:	07faf413          	andi	s0,s5,127
cmp_complex():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:103
	return val1 - val2;
204010a0:	408b0433          	sub	s0,s6,s0
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:462
				} else if (cmp(p->info,q->info,res) <= 0) {
204010a4:	08805763          	blez	s0,20401132 <core_bench_list+0x562>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:467
				    e = q; q = q->next; qsize--;
204010a8:	87e6                	mv	a5,s9
204010aa:	000cac83          	lw	s9,0(s9)
204010ae:	1bfd                	addi	s7,s7,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:471
				if (tail) {
204010b0:	c085                	beqz	s1,204010d0 <core_bench_list+0x500>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:472
				    tail->next = e;
204010b2:	c09c                	sw	a5,0(s1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
204010b4:	84be                	mv	s1,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
204010b6:	fb804fe3          	bgtz	s8,20401074 <core_bench_list+0x4a4>
204010ba:	0d705363          	blez	s7,20401180 <core_bench_list+0x5b0>
204010be:	160c8d63          	beqz	s9,20401238 <core_bench_list+0x668>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:456
				if (psize == 0) {
204010c2:	fa0c1de3          	bnez	s8,2040107c <core_bench_list+0x4ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:458
				    e = q; q = q->next; qsize--;
204010c6:	87e6                	mv	a5,s9
204010c8:	1bfd                	addi	s7,s7,-1
204010ca:	000cac83          	lw	s9,0(s9)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:471
				if (tail) {
204010ce:	f0f5                	bnez	s1,204010b2 <core_bench_list+0x4e2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
204010d0:	89be                	mv	s3,a5
204010d2:	84be                	mv	s1,a5
204010d4:	b7cd                	j	204010b6 <core_bench_list+0x4e6>
204010d6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:461
				    e = p; p = p->next; psize--;
204010d8:	87ea                	mv	a5,s10
204010da:	1c7d                	addi	s8,s8,-1
204010dc:	000d2d03          	lw	s10,0(s10)
204010e0:	bfc1                	j	204010b0 <core_bench_list+0x4e0>
204010e2:	a9eff06f          	j	20400380 <core_bench_list.cold.1>
204010e6:	0001                	nop
calc_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:70
		ee_s16 dtype=((data>>3) & 0xf); /* bits 3-6 is specific data for the operation */
204010e8:	403ad593          	srai	a1,s5,0x3
204010ec:	89bd                	andi	a1,a1,15
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:71
		dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
204010ee:	00459693          	slli	a3,a1,0x4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:69
		ee_s16 flag=data & 0x7; /* bits 0-2 is type of function to perform */
204010f2:	007af713          	andi	a4,s5,7
204010f6:	038dd783          	lhu	a5,56(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:71
		dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
204010fa:	8dd5                	or	a1,a1,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:72
		switch (flag) {
204010fc:	c755                	beqz	a4,204011a8 <core_bench_list+0x5d8>
204010fe:	4685                	li	a3,1
20401100:	08d70863          	beq	a4,a3,20401190 <core_bench_list+0x5c0>
20401104:	010a9513          	slli	a0,s5,0x10
20401108:	8456                	mv	s0,s5
2040110a:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:89
		res->crc=crcu16(retval,res->crc);
2040110c:	85be                	mv	a1,a5
2040110e:	662020ef          	jal	ra,20403770 <crcu16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:90
		retval &= 0x007f; 
20401112:	07f47413          	andi	s0,s0,127
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:91
		*pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
20401116:	f00afe13          	andi	t3,s5,-256
2040111a:	01c46e33          	or	t3,s0,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:89
		res->crc=crcu16(retval,res->crc);
2040111e:	02ad9c23          	sh	a0,56(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:91
		*pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
20401122:	080e6e13          	ori	t3,t3,128
20401126:	01c91023          	sh	t3,0(s2)
cmp_complex():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:103
	return val1 - val2;
2040112a:	408b0433          	sub	s0,s6,s0
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:462
				} else if (cmp(p->info,q->info,res) <= 0) {
2040112e:	f6804de3          	bgtz	s0,204010a8 <core_bench_list+0x4d8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:464
				    e = p; p = p->next; psize--;
20401132:	87ea                	mv	a5,s10
20401134:	1c7d                	addi	s8,s8,-1
20401136:	000d2d03          	lw	s10,0(s10)
2040113a:	bf9d                	j	204010b0 <core_bench_list+0x4e0>
calc_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:70
		ee_s16 dtype=((data>>3) & 0xf); /* bits 3-6 is specific data for the operation */
2040113c:	40345593          	srai	a1,s0,0x3
20401140:	89bd                	andi	a1,a1,15
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:71
		dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
20401142:	00459693          	slli	a3,a1,0x4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:69
		ee_s16 flag=data & 0x7; /* bits 0-2 is type of function to perform */
20401146:	00747713          	andi	a4,s0,7
2040114a:	038dd783          	lhu	a5,56(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:71
		dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
2040114e:	8dd5                	or	a1,a1,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:72
		switch (flag) {
20401150:	c755                	beqz	a4,204011fc <core_bench_list+0x62c>
20401152:	4685                	li	a3,1
20401154:	08d70663          	beq	a4,a3,204011e0 <core_bench_list+0x610>
20401158:	01041513          	slli	a0,s0,0x10
2040115c:	8b22                	mv	s6,s0
2040115e:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:89
		res->crc=crcu16(retval,res->crc);
20401160:	85be                	mv	a1,a5
20401162:	60e020ef          	jal	ra,20403770 <crcu16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:90
		retval &= 0x007f; 
20401166:	07fb7b13          	andi	s6,s6,127
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:91
		*pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
2040116a:	f0047e13          	andi	t3,s0,-256
2040116e:	01cb6e33          	or	t3,s6,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:89
		res->crc=crcu16(retval,res->crc);
20401172:	02ad9c23          	sh	a0,56(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:91
		*pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
20401176:	080e6e13          	ori	t3,t3,128
2040117a:	01ca9023          	sh	t3,0(s5)
2040117e:	bf11                	j	20401092 <core_bench_list+0x4c2>
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
20401180:	8d66                	mv	s10,s9
20401182:	874e                	mv	a4,s3
20401184:	86a6                	mv	a3,s1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:438
        while (p) {
20401186:	de0c9de3          	bnez	s9,20400f80 <core_bench_list+0x3b0>
2040118a:	8d4e                	mv	s10,s3
2040118c:	a07d                	j	2040123a <core_bench_list+0x66a>
2040118e:	0001                	nop
calc_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:81
				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
20401190:	4562                	lw	a0,24(sp)
20401192:	863e                	mv	a2,a5
20401194:	2535                	jal	204017c0 <core_bench_matrix>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:82
				if (res->crcmatrix==0)
20401196:	03cdd783          	lhu	a5,60(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:81
				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
2040119a:	01051413          	slli	s0,a0,0x10
2040119e:	8441                	srai	s0,s0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:82
				if (res->crcmatrix==0)
204011a0:	c7d5                	beqz	a5,2040124c <core_bench_list+0x67c>
204011a2:	038dd783          	lhu	a5,56(s11)
204011a6:	b79d                	j	2040110c <core_bench_list+0x53c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:76
				retval=core_bench_state(res->size,res->memblock[3],res->seed1,res->seed2,dtype,res->crc);
204011a8:	02200693          	li	a3,34
204011ac:	872e                	mv	a4,a1
204011ae:	00d5d463          	bge	a1,a3,204011b6 <core_bench_list+0x5e6>
204011b2:	02200713          	li	a4,34
204011b6:	002d9683          	lh	a3,2(s11)
204011ba:	000d9603          	lh	a2,0(s11)
204011be:	014da583          	lw	a1,20(s11)
204011c2:	018da503          	lw	a0,24(s11)
204011c6:	0ff77713          	andi	a4,a4,255
204011ca:	317010ef          	jal	ra,20402ce0 <core_bench_state>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:77
				if (res->crcstate==0)
204011ce:	03edd783          	lhu	a5,62(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:76
				retval=core_bench_state(res->size,res->memblock[3],res->seed1,res->seed2,dtype,res->crc);
204011d2:	01051413          	slli	s0,a0,0x10
204011d6:	8441                	srai	s0,s0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:77
				if (res->crcstate==0)
204011d8:	c3c1                	beqz	a5,20401258 <core_bench_list+0x688>
204011da:	038dd783          	lhu	a5,56(s11)
204011de:	b73d                	j	2040110c <core_bench_list+0x53c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:81
				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
204011e0:	4562                	lw	a0,24(sp)
204011e2:	863e                	mv	a2,a5
204011e4:	2bf1                	jal	204017c0 <core_bench_matrix>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:82
				if (res->crcmatrix==0)
204011e6:	03cdd783          	lhu	a5,60(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:81
				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
204011ea:	01051b13          	slli	s6,a0,0x10
204011ee:	410b5b13          	srai	s6,s6,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:82
				if (res->crcmatrix==0)
204011f2:	cbad                	beqz	a5,20401264 <core_bench_list+0x694>
204011f4:	038dd783          	lhu	a5,56(s11)
204011f8:	b7a5                	j	20401160 <core_bench_list+0x590>
204011fa:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:76
				retval=core_bench_state(res->size,res->memblock[3],res->seed1,res->seed2,dtype,res->crc);
204011fc:	02200693          	li	a3,34
20401200:	872e                	mv	a4,a1
20401202:	00d5d463          	bge	a1,a3,2040120a <core_bench_list+0x63a>
20401206:	02200713          	li	a4,34
2040120a:	002d9683          	lh	a3,2(s11)
2040120e:	000d9603          	lh	a2,0(s11)
20401212:	014da583          	lw	a1,20(s11)
20401216:	018da503          	lw	a0,24(s11)
2040121a:	0ff77713          	andi	a4,a4,255
2040121e:	2c3010ef          	jal	ra,20402ce0 <core_bench_state>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:77
				if (res->crcstate==0)
20401222:	03edd783          	lhu	a5,62(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:76
				retval=core_bench_state(res->size,res->memblock[3],res->seed1,res->seed2,dtype,res->crc);
20401226:	01051b13          	slli	s6,a0,0x10
2040122a:	410b5b13          	srai	s6,s6,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:77
				if (res->crcstate==0)
2040122e:	c3a9                	beqz	a5,20401270 <core_bench_list+0x6a0>
20401230:	038dd783          	lhu	a5,56(s11)
20401234:	b735                	j	20401160 <core_bench_list+0x590>
20401236:	0001                	nop
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
20401238:	8d4e                	mv	s10,s3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:486
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
2040123a:	4742                	lw	a4,16(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:483
	    tail->next = NULL;
2040123c:	0004a023          	sw	zero,0(s1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:486
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
20401240:	4785                	li	a5,1
20401242:	04e7db63          	bge	a5,a4,20401298 <core_bench_list+0x6c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:490
        insize *= 2;
20401246:	0a06                	slli	s4,s4,0x1
20401248:	b335                	j	20400f74 <core_bench_list+0x3a4>
2040124a:	0001                	nop
2040124c:	038dd783          	lhu	a5,56(s11)
calc_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:83
					res->crcmatrix=retval;
20401250:	02ad9e23          	sh	a0,60(s11)
20401254:	bd65                	j	2040110c <core_bench_list+0x53c>
20401256:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:78
					res->crcstate=retval;
20401258:	02ad9f23          	sh	a0,62(s11)
2040125c:	038dd783          	lhu	a5,56(s11)
20401260:	b575                	j	2040110c <core_bench_list+0x53c>
20401262:	0001                	nop
20401264:	038dd783          	lhu	a5,56(s11)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:83
					res->crcmatrix=retval;
20401268:	02ad9e23          	sh	a0,60(s11)
2040126c:	bdd5                	j	20401160 <core_bench_list+0x590>
2040126e:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:78
					res->crcstate=retval;
20401270:	02ad9f23          	sh	a0,62(s11)
20401274:	038dd783          	lhu	a5,56(s11)
20401278:	b5e5                	j	20401160 <core_bench_list+0x590>
2040127a:	0001                	nop
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
2040127c:	8cea                	mv	s9,s10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:442
            psize = 0;
2040127e:	4c01                	li	s8,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20401280:	8bd2                	mv	s7,s4
20401282:	84b6                	mv	s1,a3
20401284:	89ba                	mv	s3,a4
20401286:	b3e5                	j	2040106e <core_bench_list+0x49e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401288:	4c05                	li	s8,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
2040128a:	8bd2                	mv	s7,s4
2040128c:	84b6                	mv	s1,a3
2040128e:	89ba                	mv	s3,a4
20401290:	bbf9                	j	2040106e <core_bench_list+0x49e>
core_bench_list():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:141
	info.idx=finder_idx;
20401292:	c62e                	sw	a1,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:143
	for (i=0; i<find_num; i++) {
20401294:	ce02                	sw	zero,28(sp)
20401296:	b43d                	j	20400cc4 <core_bench_list+0xf4>
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:486
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
20401298:	8d4e                	mv	s10,s3
2040129a:	b43d                	j	20400cc8 <core_bench_list+0xf8>
	...

204012b0 <core_list_init>:
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:215
	ee_u32 size=(blksize/per_item)-2; /* to accomodate systems with 64b pointers, and make sure same code is executed, set max list elements */
204012b0:	47d1                	li	a5,20
204012b2:	02f54533          	div	a0,a0,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:228
	list->info->data16=(ee_s16)0x8080;
204012b6:	77e1                	lui	a5,0xffff8
204012b8:	08078813          	addi	a6,a5,128 # ffff8080 <metal_segment_heap_target_end+0x7fff4760>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:225
	list->next=NULL;
204012bc:	0005a023          	sw	zero,0(a1)
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
204012c0:	01058693          	addi	a3,a1,16
copy_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:121
	to->idx=from->idx;
204012c4:	fff7c793          	not	a5,a5
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:229
	memblock++;
204012c8:	00858713          	addi	a4,a1,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:215
	ee_u32 size=(blksize/per_item)-2; /* to accomodate systems with 64b pointers, and make sure same code is executed, set max list elements */
204012cc:	1579                	addi	a0,a0,-2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:216
	list_head *memblock_end=memblock+size;
204012ce:	00351313          	slli	t1,a0,0x3
204012d2:	932e                	add	t1,t1,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:226
	list->info=datablock;
204012d4:	0065a223          	sw	t1,4(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:218
	list_data *datablock_end=datablock+size;
204012d8:	00251e93          	slli	t4,a0,0x2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:228
	list->info->data16=(ee_s16)0x8080;
204012dc:	01031023          	sh	a6,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:227
	list->info->idx=0x0000;
204012e0:	00031123          	sh	zero,2(t1)
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
204012e4:	00830813          	addi	a6,t1,8
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:218
	list_data *datablock_end=datablock+size;
204012e8:	9e9a                	add	t4,t4,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:230
	datablock++;
204012ea:	00430893          	addi	a7,t1,4
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
204012ee:	2c66fd63          	bgeu	a3,t1,204015c8 <core_list_init+0x318>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
204012f2:	2dd87f63          	bgeu	a6,t4,204015d0 <core_list_init+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:295
	newitem->info=*datablock;
204012f6:	0115a623          	sw	a7,12(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:292
	newitem->next=insert_point->next;
204012fa:	0005a423          	sw	zero,8(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:293
	insert_point->next=newitem;
204012fe:	c198                	sw	a4,0(a1)
copy_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:120
	to->data16=from->data16;
20401300:	58fd                	li	a7,-1
20401302:	01131223          	sh	a7,4(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:121
	to->idx=from->idx;
20401306:	00f31323          	sh	a5,6(t1)
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:236 (discriminator 1)
	for (i=0; i<size; i++) {
2040130a:	0aa05563          	blez	a0,204013b4 <core_list_init+0x104>
copy_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:121
	to->idx=from->idx;
2040130e:	7f61                	lui	t5,0xffff8
20401310:	00157793          	andi	a5,a0,1
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:236
	for (i=0; i<size; i++) {
20401314:	4881                	li	a7,0
copy_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:121
	to->idx=from->idx;
20401316:	ffff4f13          	not	t5,t5
2040131a:	26079963          	bnez	a5,2040158c <core_list_init+0x2dc>
2040131e:	0001                	nop
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:237 (discriminator 3)
		ee_u16 datpat=((ee_u16)(seed^i) & 0xf);
20401320:	01089e13          	slli	t3,a7,0x10
20401324:	410e5e13          	srai	t3,t3,0x10
20401328:	00ce47b3          	xor	a5,t3,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:238 (discriminator 3)
		ee_u16 dat=(datpat<<3) | (i&0x7); /* alternate between algorithms */
2040132c:	8bbd                	andi	a5,a5,15
2040132e:	007e7e13          	andi	t3,t3,7
20401332:	078e                	slli	a5,a5,0x3
20401334:	01c7e7b3          	or	a5,a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:239 (discriminator 3)
		info.data16=(dat<<8) | dat;		/* fill the data with actual data and upper bits with rebuild value */
20401338:	00879293          	slli	t0,a5,0x8
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285 (discriminator 3)
	if ((*memblock+1) >= memblock_end)
2040133c:	00868e13          	addi	t3,a3,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:287 (discriminator 3)
	if ((*datablock+1) >= datablock_end)
20401340:	00480f93          	addi	t6,a6,4
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:239 (discriminator 3)
		info.data16=(dat<<8) | dat;		/* fill the data with actual data and upper bits with rebuild value */
20401344:	0057e7b3          	or	a5,a5,t0
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285 (discriminator 3)
	if ((*memblock+1) >= memblock_end)
20401348:	006e7f63          	bgeu	t3,t1,20401366 <core_list_init+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
2040134c:	01dffd63          	bgeu	t6,t4,20401366 <core_list_init+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:292
	newitem->next=insert_point->next;
20401350:	c298                	sw	a4,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:293
	insert_point->next=newitem;
20401352:	c194                	sw	a3,0(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:295
	newitem->info=*datablock;
20401354:	0106a223          	sw	a6,4(a3)
copy_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:121
	to->idx=from->idx;
20401358:	8736                	mv	a4,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:120
	to->data16=from->data16;
2040135a:	00f81023          	sh	a5,0(a6)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:121
	to->idx=from->idx;
2040135e:	01e81123          	sh	t5,2(a6)
20401362:	86f2                	mv	a3,t3
20401364:	887e                	mv	a6,t6
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:236
	for (i=0; i<size; i++) {
20401366:	0885                	addi	a7,a7,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:237
		ee_u16 datpat=((ee_u16)(seed^i) & 0xf);
20401368:	01089e13          	slli	t3,a7,0x10
2040136c:	410e5e13          	srai	t3,t3,0x10
20401370:	00ce47b3          	xor	a5,t3,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:238
		ee_u16 dat=(datpat<<3) | (i&0x7); /* alternate between algorithms */
20401374:	8bbd                	andi	a5,a5,15
20401376:	007e7e13          	andi	t3,t3,7
2040137a:	078e                	slli	a5,a5,0x3
2040137c:	01c7e7b3          	or	a5,a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:239
		info.data16=(dat<<8) | dat;		/* fill the data with actual data and upper bits with rebuild value */
20401380:	00879f93          	slli	t6,a5,0x8
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
20401384:	00868e13          	addi	t3,a3,8
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:239
		info.data16=(dat<<8) | dat;		/* fill the data with actual data and upper bits with rebuild value */
20401388:	01f7e7b3          	or	a5,a5,t6
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
2040138c:	026e7163          	bgeu	t3,t1,204013ae <core_list_init+0xfe>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
20401390:	00480f93          	addi	t6,a6,4
20401394:	01dffd63          	bgeu	t6,t4,204013ae <core_list_init+0xfe>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:292
	newitem->next=insert_point->next;
20401398:	c298                	sw	a4,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:293
	insert_point->next=newitem;
2040139a:	c194                	sw	a3,0(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:295
	newitem->info=*datablock;
2040139c:	0106a223          	sw	a6,4(a3)
copy_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:120
	to->data16=from->data16;
204013a0:	00f81023          	sh	a5,0(a6)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:121
	to->idx=from->idx;
204013a4:	01e81123          	sh	t5,2(a6)
204013a8:	8736                	mv	a4,a3
204013aa:	887e                	mv	a6,t6
204013ac:	86f2                	mv	a3,t3
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:236
	for (i=0; i<size; i++) {
204013ae:	0885                	addi	a7,a7,1
204013b0:	f6a898e3          	bne	a7,a0,20401320 <core_list_init+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:245
	while (finder->next!=NULL) {
204013b4:	431c                	lw	a5,0(a4)
204013b6:	c7a1                	beqz	a5,204013fe <core_list_init+0x14e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:246
		if (i<size/5) /* first 20% of the list in order */
204013b8:	4895                	li	a7,5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:250
			finder->info->idx=0x3fff & (((i & 0x07) << 8) | pat); /* make sure the mixed items end up after the ones in sequence */
204013ba:	6311                	lui	t1,0x4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:246
		if (i<size/5) /* first 20% of the list in order */
204013bc:	031548b3          	div	a7,a0,a7
204013c0:	4785                	li	a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:250
			finder->info->idx=0x3fff & (((i & 0x07) << 8) | pat); /* make sure the mixed items end up after the ones in sequence */
204013c2:	137d                	addi	t1,t1,-1
204013c4:	a801                	j	204013d4 <core_list_init+0x124>
204013c6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:252
		finder=finder->next;
204013c8:	4318                	lw	a4,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:247
			finder->info->idx=i++;
204013ca:	00a81123          	sh	a0,2(a6)
204013ce:	0785                	addi	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:245
	while (finder->next!=NULL) {
204013d0:	4314                	lw	a3,0(a4)
204013d2:	c695                	beqz	a3,204013fe <core_list_init+0x14e>
204013d4:	01079513          	slli	a0,a5,0x10
204013d8:	00472803          	lw	a6,4(a4)
204013dc:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:246
		if (i<size/5) /* first 20% of the list in order */
204013de:	ff17c5e3          	blt	a5,a7,204013c8 <core_list_init+0x118>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:250
			finder->info->idx=0x3fff & (((i & 0x07) << 8) | pat); /* make sure the mixed items end up after the ones in sequence */
204013e2:	0785                	addi	a5,a5,1
204013e4:	00879693          	slli	a3,a5,0x8
204013e8:	7006f693          	andi	a3,a3,1792
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:249
			ee_u16 pat=(ee_u16)(i++ ^ seed); /* get a pseudo random number */
204013ec:	8d31                	xor	a0,a0,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:252
		finder=finder->next;
204013ee:	4318                	lw	a4,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:250
			finder->info->idx=0x3fff & (((i & 0x07) << 8) | pat); /* make sure the mixed items end up after the ones in sequence */
204013f0:	8ec9                	or	a3,a3,a0
204013f2:	0066f6b3          	and	a3,a3,t1
204013f6:	00d81123          	sh	a3,2(a6)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:245
	while (finder->next!=NULL) {
204013fa:	4314                	lw	a3,0(a4)
204013fc:	fee1                	bnez	a3,204013d4 <core_list_init+0x124>
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:429
    insize = 1;
204013fe:	4885                	li	a7,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:486
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
20401400:	4285                	li	t0,1
20401402:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:436
        nmerges = 0;  /* count number of merges we do in this pass */
20401404:	4f81                	li	t6,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:434
        tail = NULL;
20401406:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:433
        list = NULL;
20401408:	4601                	li	a2,0
2040140a:	0001                	nop
2040140c:	fff88693          	addi	a3,a7,-1
20401410:	8a9d                	andi	a3,a3,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:439
            nmerges++;  /* there exists a merge to be done */
20401412:	0f85                	addi	t6,t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
20401414:	15105e63          	blez	a7,20401570 <core_list_init+0x2c0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401418:	419c                	lw	a5,0(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040141a:	4705                	li	a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040141c:	16078063          	beqz	a5,2040157c <core_list_init+0x2cc>
20401420:	c6b9                	beqz	a3,2040146e <core_list_init+0x1be>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401422:	439c                	lw	a5,0(a5)
20401424:	4e05                	li	t3,1
20401426:	480d                	li	a6,3
20401428:	4511                	li	a0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040142a:	4709                	li	a4,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040142c:	c3d1                	beqz	a5,204014b0 <core_list_init+0x200>
2040142e:	05c68063          	beq	a3,t3,2040146e <core_list_init+0x1be>
20401432:	02e68b63          	beq	a3,a4,20401468 <core_list_init+0x1b8>
20401436:	03068663          	beq	a3,a6,20401462 <core_list_init+0x1b2>
2040143a:	02a68163          	beq	a3,a0,2040145c <core_list_init+0x1ac>
2040143e:	4515                	li	a0,5
20401440:	00a68b63          	beq	a3,a0,20401456 <core_list_init+0x1a6>
20401444:	4519                	li	a0,6
20401446:	00a68563          	beq	a3,a0,20401450 <core_list_init+0x1a0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
2040144a:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040144c:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040144e:	c3ad                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401450:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401452:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401454:	cfb1                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401456:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401458:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040145a:	cbb9                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
2040145c:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040145e:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401460:	cba1                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401462:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401464:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401466:	c7a9                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401468:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040146a:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040146c:	c3b1                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
2040146e:	05170163          	beq	a4,a7,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401472:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401474:	0705                	addi	a4,a4,1
20401476:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401478:	cf85                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
2040147a:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040147c:	0705                	addi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040147e:	cb8d                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401480:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401482:	00268713          	addi	a4,a3,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401486:	c78d                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401488:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040148a:	00368713          	addi	a4,a3,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040148e:	c38d                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401490:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
20401492:	00468713          	addi	a4,a3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
20401496:	cf89                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
20401498:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040149a:	00568713          	addi	a4,a3,5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
2040149e:	cb89                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
204014a0:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
204014a2:	00668713          	addi	a4,a3,6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
204014a6:	c789                	beqz	a5,204014b0 <core_list_init+0x200>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:445
			    q = q->next;
204014a8:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
204014aa:	00768713          	addi	a4,a3,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:446
                if (!q) break;
204014ae:	f3e1                	bnez	a5,2040146e <core_list_init+0x1be>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
204014b0:	86c6                	mv	a3,a7
204014b2:	881a                	mv	a6,t1
204014b4:	8532                	mv	a0,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
204014b6:	06e05763          	blez	a4,20401524 <core_list_init+0x274>
204014ba:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:459
				} else if (qsize == 0 || !q) {
204014bc:	c6c1                	beqz	a3,20401544 <core_list_init+0x294>
204014be:	c3d9                	beqz	a5,20401544 <core_list_init+0x294>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:462
				} else if (cmp(p->info,q->info,res) <= 0) {
204014c0:	0045ae83          	lw	t4,4(a1)
204014c4:	0047ae03          	lw	t3,4(a5)
cmp_idx():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:113
		a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16>>8));
204014c8:	000e9603          	lh	a2,0(t4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:116
	return a->idx - b->idx;
204014cc:	002e1383          	lh	t2,2(t3)
204014d0:	002e9303          	lh	t1,2(t4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:113
		a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16>>8));
204014d4:	01061f13          	slli	t5,a2,0x10
204014d8:	010f5f13          	srli	t5,t5,0x10
204014dc:	f0067613          	andi	a2,a2,-256
204014e0:	008f5f13          	srli	t5,t5,0x8
204014e4:	01e66633          	or	a2,a2,t5
204014e8:	00ce9023          	sh	a2,0(t4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:114
		b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16>>8));
204014ec:	000e1603          	lh	a2,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:116
	return a->idx - b->idx;
204014f0:	40730333          	sub	t1,t1,t2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:114
		b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16>>8));
204014f4:	01061e93          	slli	t4,a2,0x10
204014f8:	010ede93          	srli	t4,t4,0x10
204014fc:	f0067613          	andi	a2,a2,-256
20401500:	008ede93          	srli	t4,t4,0x8
20401504:	01d66633          	or	a2,a2,t4
20401508:	00ce1023          	sh	a2,0(t3)
core_list_mergesort():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:462
				} else if (cmp(p->info,q->info,res) <= 0) {
2040150c:	02605863          	blez	t1,2040153c <core_list_init+0x28c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:467
				    e = q; q = q->next; qsize--;
20401510:	863e                	mv	a2,a5
20401512:	439c                	lw	a5,0(a5)
20401514:	16fd                	addi	a3,a3,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:471
				if (tail) {
20401516:	02080063          	beqz	a6,20401536 <core_list_init+0x286>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:472
				    tail->next = e;
2040151a:	00c82023          	sw	a2,0(a6)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
2040151e:	8832                	mv	a6,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
20401520:	f8e04ee3          	bgtz	a4,204014bc <core_list_init+0x20c>
20401524:	02d05463          	blez	a3,2040154c <core_list_init+0x29c>
20401528:	cb95                	beqz	a5,2040155c <core_list_init+0x2ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:456
				if (psize == 0) {
2040152a:	fb59                	bnez	a4,204014c0 <core_list_init+0x210>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:458
				    e = q; q = q->next; qsize--;
2040152c:	863e                	mv	a2,a5
2040152e:	16fd                	addi	a3,a3,-1
20401530:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:471
				if (tail) {
20401532:	fe0814e3          	bnez	a6,2040151a <core_list_init+0x26a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20401536:	8532                	mv	a0,a2
20401538:	8832                	mv	a6,a2
2040153a:	b7dd                	j	20401520 <core_list_init+0x270>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:464
				    e = p; p = p->next; psize--;
2040153c:	862e                	mv	a2,a1
2040153e:	177d                	addi	a4,a4,-1
20401540:	418c                	lw	a1,0(a1)
20401542:	bfd1                	j	20401516 <core_list_init+0x266>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:461
				    e = p; p = p->next; psize--;
20401544:	862e                	mv	a2,a1
20401546:	177d                	addi	a4,a4,-1
20401548:	418c                	lw	a1,0(a1)
2040154a:	b7f1                	j	20401516 <core_list_init+0x266>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
2040154c:	85be                	mv	a1,a5
2040154e:	862a                	mv	a2,a0
20401550:	8342                	mv	t1,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:438
        while (p) {
20401552:	ea079de3          	bnez	a5,2040140c <core_list_init+0x15c>
20401556:	85aa                	mv	a1,a0
20401558:	a019                	j	2040155e <core_list_init+0x2ae>
2040155a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:453
            while (psize > 0 || (qsize > 0 && q)) {
2040155c:	85aa                	mv	a1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:483
	    tail->next = NULL;
2040155e:	00082023          	sw	zero,0(a6)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:486
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
20401562:	03f2d363          	bge	t0,t6,20401588 <core_list_init+0x2d8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:490
        insize *= 2;
20401566:	0886                	slli	a7,a7,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:438
        while (p) {
20401568:	e8051ee3          	bnez	a0,20401404 <core_list_init+0x154>
2040156c:	e21fe06f          	j	2040038c <core_list_init.cold.2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
20401570:	87ae                	mv	a5,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:442
            psize = 0;
20401572:	4701                	li	a4,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
20401574:	86c6                	mv	a3,a7
20401576:	881a                	mv	a6,t1
20401578:	8532                	mv	a0,a2
2040157a:	bf35                	j	204014b6 <core_list_init+0x206>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:444
                psize++;
2040157c:	4705                	li	a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:474
				    list = e;
2040157e:	86c6                	mv	a3,a7
20401580:	881a                	mv	a6,t1
20401582:	8532                	mv	a0,a2
20401584:	bf0d                	j	204014b6 <core_list_init+0x206>
20401586:	0001                	nop
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:265
}
20401588:	8082                	ret
2040158a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:238
		ee_u16 dat=(datpat<<3) | (i&0x7); /* alternate between algorithms */
2040158c:	00f67793          	andi	a5,a2,15
20401590:	078e                	slli	a5,a5,0x3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:239
		info.data16=(dat<<8) | dat;		/* fill the data with actual data and upper bits with rebuild value */
20401592:	00879f93          	slli	t6,a5,0x8
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
20401596:	00868893          	addi	a7,a3,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
2040159a:	00480e13          	addi	t3,a6,4
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:239
		info.data16=(dat<<8) | dat;		/* fill the data with actual data and upper bits with rebuild value */
2040159e:	01f7e7b3          	or	a5,a5,t6
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
204015a2:	0068ff63          	bgeu	a7,t1,204015c0 <core_list_init+0x310>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
204015a6:	01de7d63          	bgeu	t3,t4,204015c0 <core_list_init+0x310>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:292
	newitem->next=insert_point->next;
204015aa:	c298                	sw	a4,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:293
	insert_point->next=newitem;
204015ac:	c194                	sw	a3,0(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:295
	newitem->info=*datablock;
204015ae:	0106a223          	sw	a6,4(a3)
copy_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:120
	to->data16=from->data16;
204015b2:	00f81023          	sh	a5,0(a6)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:121
	to->idx=from->idx;
204015b6:	01e81123          	sh	t5,2(a6)
204015ba:	8736                	mv	a4,a3
204015bc:	8872                	mv	a6,t3
204015be:	86c6                	mv	a3,a7
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:236
	for (i=0; i<size; i++) {
204015c0:	4885                	li	a7,1
204015c2:	d4a89fe3          	bne	a7,a0,20401320 <core_list_init+0x70>
204015c6:	b3fd                	j	204013b4 <core_list_init+0x104>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:229
	memblock++;
204015c8:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:230
	datablock++;
204015ca:	8846                	mv	a6,a7
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
204015cc:	4701                	li	a4,0
204015ce:	bb35                	j	2040130a <core_list_init+0x5a>
core_list_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:229
	memblock++;
204015d0:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:230
	datablock++;
204015d2:	8846                	mv	a6,a7
core_list_insert_new():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
204015d4:	4701                	li	a4,0
204015d6:	bb15                	j	2040130a <core_list_init+0x5a>
	...

204015f0 <iterate>:
iterate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:38
void *iterate(void *pres) {
204015f0:	1101                	addi	sp,sp,-32
204015f2:	c64e                	sw	s3,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:42
	ee_u32 iterations=res->iterations;
204015f4:	01c52983          	lw	s3,28(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:38
void *iterate(void *pres) {
204015f8:	ce06                	sw	ra,28(sp)
204015fa:	cc22                	sw	s0,24(sp)
204015fc:	ca26                	sw	s1,20(sp)
204015fe:	c84a                	sw	s2,16(sp)
20401600:	c452                	sw	s4,8(sp)
20401602:	c256                	sw	s5,4(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:43
	res->crc=0;
20401604:	02052c23          	sw	zero,56(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:45
	res->crcmatrix=0;
20401608:	02052e23          	sw	zero,60(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
2040160c:	17305e63          	blez	s3,20401788 <iterate+0x198>
20401610:	0039f793          	andi	a5,s3,3
20401614:	842a                	mv	s0,a0
20401616:	4481                	li	s1,0
20401618:	cfd1                	beqz	a5,204016b4 <iterate+0xc4>
2040161a:	4705                	li	a4,1
2040161c:	06e78263          	beq	a5,a4,20401680 <iterate+0x90>
20401620:	4709                	li	a4,2
20401622:	02e78863          	beq	a5,a4,20401652 <iterate+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20401626:	4585                	li	a1,1
20401628:	da8ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
2040162c:	03845583          	lhu	a1,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
20401630:	4485                	li	s1,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
20401632:	13e020ef          	jal	ra,20403770 <crcu16>
20401636:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
2040163a:	55fd                	li	a1,-1
2040163c:	8522                	mv	a0,s0
2040163e:	d92ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
20401642:	03845583          	lhu	a1,56(s0)
20401646:	12a020ef          	jal	ra,20403770 <crcu16>
2040164a:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
2040164e:	02a41d23          	sh	a0,58(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20401652:	4585                	li	a1,1
20401654:	8522                	mv	a0,s0
20401656:	d7aff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
2040165a:	03845583          	lhu	a1,56(s0)
2040165e:	112020ef          	jal	ra,20403770 <crcu16>
20401662:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
20401666:	55fd                	li	a1,-1
20401668:	8522                	mv	a0,s0
2040166a:	d66ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
2040166e:	03845583          	lhu	a1,56(s0)
20401672:	0fe020ef          	jal	ra,20403770 <crcu16>
20401676:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
2040167a:	12048d63          	beqz	s1,204017b4 <iterate+0x1c4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
2040167e:	0485                	addi	s1,s1,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20401680:	4585                	li	a1,1
20401682:	8522                	mv	a0,s0
20401684:	d4cff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
20401688:	03845583          	lhu	a1,56(s0)
2040168c:	0e4020ef          	jal	ra,20403770 <crcu16>
20401690:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
20401694:	55fd                	li	a1,-1
20401696:	8522                	mv	a0,s0
20401698:	d38ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
2040169c:	03845583          	lhu	a1,56(s0)
204016a0:	0d0020ef          	jal	ra,20403770 <crcu16>
204016a4:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
204016a8:	10048063          	beqz	s1,204017a8 <iterate+0x1b8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204016ac:	0485                	addi	s1,s1,1
204016ae:	0c998d63          	beq	s3,s1,20401788 <iterate+0x198>
204016b2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
204016b4:	4585                	li	a1,1
204016b6:	8522                	mv	a0,s0
204016b8:	d18ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
204016bc:	03845583          	lhu	a1,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204016c0:	00148913          	addi	s2,s1,1
204016c4:	00190a93          	addi	s5,s2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
204016c8:	0a8020ef          	jal	ra,20403770 <crcu16>
204016cc:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
204016d0:	55fd                	li	a1,-1
204016d2:	8522                	mv	a0,s0
204016d4:	cfcff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
204016d8:	03845583          	lhu	a1,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204016dc:	00290a13          	addi	s4,s2,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
204016e0:	090020ef          	jal	ra,20403770 <crcu16>
204016e4:	87aa                	mv	a5,a0
204016e6:	02f41c23          	sh	a5,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
204016ea:	4585                	li	a1,1
204016ec:	8522                	mv	a0,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
204016ee:	e099                	bnez	s1,204016f4 <iterate+0x104>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53 (discriminator 1)
204016f0:	02f41d23          	sh	a5,58(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49 (discriminator 2)
		crc=core_bench_list(res,1);
204016f4:	cdcff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50 (discriminator 2)
		res->crc=crcu16(crc,res->crc);
204016f8:	03845583          	lhu	a1,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48 (discriminator 2)
	for (i=0; i<iterations; i++) {
204016fc:	00390493          	addi	s1,s2,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50 (discriminator 2)
		res->crc=crcu16(crc,res->crc);
20401700:	070020ef          	jal	ra,20403770 <crcu16>
20401704:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51 (discriminator 2)
		crc=core_bench_list(res,-1);
20401708:	55fd                	li	a1,-1
2040170a:	8522                	mv	a0,s0
2040170c:	cc4ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52 (discriminator 2)
		res->crc=crcu16(crc,res->crc);
20401710:	03845583          	lhu	a1,56(s0)
20401714:	05c020ef          	jal	ra,20403770 <crcu16>
20401718:	87aa                	mv	a5,a0
2040171a:	02f41c23          	sh	a5,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49 (discriminator 2)
		crc=core_bench_list(res,1);
2040171e:	4585                	li	a1,1
20401720:	8522                	mv	a0,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53 (discriminator 2)
		if (i==0) res->crclist=res->crc;
20401722:	00091463          	bnez	s2,2040172a <iterate+0x13a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
20401726:	02f41d23          	sh	a5,58(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
2040172a:	ca6ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
2040172e:	03845583          	lhu	a1,56(s0)
20401732:	03e020ef          	jal	ra,20403770 <crcu16>
20401736:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
2040173a:	55fd                	li	a1,-1
2040173c:	8522                	mv	a0,s0
2040173e:	c92ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
20401742:	03845583          	lhu	a1,56(s0)
20401746:	02a020ef          	jal	ra,20403770 <crcu16>
2040174a:	87aa                	mv	a5,a0
2040174c:	02f41c23          	sh	a5,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
20401750:	4585                	li	a1,1
20401752:	8522                	mv	a0,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
20401754:	000a9463          	bnez	s5,2040175c <iterate+0x16c>
20401758:	02f41d23          	sh	a5,58(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:49
		crc=core_bench_list(res,1);
2040175c:	c74ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
20401760:	03845583          	lhu	a1,56(s0)
20401764:	00c020ef          	jal	ra,20403770 <crcu16>
20401768:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:51
		crc=core_bench_list(res,-1);
2040176c:	55fd                	li	a1,-1
2040176e:	8522                	mv	a0,s0
20401770:	c60ff0ef          	jal	ra,20400bd0 <core_bench_list>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
20401774:	03845583          	lhu	a1,56(s0)
20401778:	7f9010ef          	jal	ra,20403770 <crcu16>
2040177c:	02a41c23          	sh	a0,56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
20401780:	000a0e63          	beqz	s4,2040179c <iterate+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
20401784:	f29998e3          	bne	s3,s1,204016b4 <iterate+0xc4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:56
}
20401788:	40f2                	lw	ra,28(sp)
2040178a:	4462                	lw	s0,24(sp)
2040178c:	44d2                	lw	s1,20(sp)
2040178e:	4942                	lw	s2,16(sp)
20401790:	49b2                	lw	s3,12(sp)
20401792:	4a22                	lw	s4,8(sp)
20401794:	4a92                	lw	s5,4(sp)
20401796:	4501                	li	a0,0
20401798:	6105                	addi	sp,sp,32
2040179a:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
2040179c:	02a41d23          	sh	a0,58(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204017a0:	f0999ae3          	bne	s3,s1,204016b4 <iterate+0xc4>
204017a4:	b7d5                	j	20401788 <iterate+0x198>
204017a6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
204017a8:	02a41d23          	sh	a0,58(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204017ac:	0485                	addi	s1,s1,1
204017ae:	f09993e3          	bne	s3,s1,204016b4 <iterate+0xc4>
204017b2:	bfd9                	j	20401788 <iterate+0x198>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
204017b4:	02a41d23          	sh	a0,58(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
204017b8:	0485                	addi	s1,s1,1
204017ba:	b5d9                	j	20401680 <iterate+0x90>
204017bc:	0000                	unimp
	...

204017c0 <core_bench_matrix>:
core_bench_matrix():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:81
	Benchmark function

	Iterate <matrix_test> N times, 
	changing the matrix values slightly by a constant amount each time.
*/
ee_u16 core_bench_matrix(mat_params *p, ee_s16 seed, ee_u16 crc) {
204017c0:	711d                	addi	sp,sp,-96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:84
	ee_u32 N=p->N;
	MATRES *C=p->C;
	MATDAT *A=p->A;
204017c2:	415c                	lw	a5,4(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:81
ee_u16 core_bench_matrix(mat_params *p, ee_s16 seed, ee_u16 crc) {
204017c4:	c4d2                	sw	s4,72(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:82
	ee_u32 N=p->N;
204017c6:	00052a03          	lw	s4,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:81
ee_u16 core_bench_matrix(mat_params *p, ee_s16 seed, ee_u16 crc) {
204017ca:	cca2                	sw	s0,88(sp)
204017cc:	c2d6                	sw	s5,68(sp)
204017ce:	c0da                	sw	s6,64(sp)
matrix_test():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:119

	After the last step, matrix A is back to original contents.
*/
ee_s16 matrix_test(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B, MATDAT val) {
	ee_u16 crc=0;
	MATDAT clipval=matrix_big(val);
204017d0:	747d                	lui	s0,0xfffff
core_bench_matrix():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:81
ee_u16 core_bench_matrix(mat_params *p, ee_s16 seed, ee_u16 crc) {
204017d2:	ce86                	sw	ra,92(sp)
204017d4:	caa6                	sw	s1,84(sp)
204017d6:	c8ca                	sw	s2,80(sp)
204017d8:	c6ce                	sw	s3,76(sp)
204017da:	de5e                	sw	s7,60(sp)
204017dc:	dc62                	sw	s8,56(sp)
204017de:	da66                	sw	s9,52(sp)
204017e0:	d86a                	sw	s10,48(sp)
204017e2:	d66e                	sw	s11,44(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:84
	MATDAT *A=p->A;
204017e4:	c23e                	sw	a5,4(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:81
ee_u16 core_bench_matrix(mat_params *p, ee_s16 seed, ee_u16 crc) {
204017e6:	c432                	sw	a2,8(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:83
	MATRES *C=p->C;
204017e8:	00c52b03          	lw	s6,12(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:85
	MATDAT *B=p->B;
204017ec:	00852a83          	lw	s5,8(a0)
matrix_test():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:119
	MATDAT clipval=matrix_big(val);
204017f0:	8c4d                	or	s0,s0,a1
matrix_add_const():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:254
/* Function: matrix_add_const
	Add a constant value to all elements of a matrix.
*/
void matrix_add_const(ee_u32 N, MATDAT *A, MATDAT val) {
	ee_u32 i,j;
	for (i=0; i<N; i++) {
204017f2:	01404463          	bgtz	s4,204017fa <core_bench_matrix+0x3a>
204017f6:	26a0106f          	j	20402a60 <core_bench_matrix+0x12a0>
204017fa:	84ae                	mv	s1,a1
204017fc:	4681                	li	a3,0
204017fe:	001a1913          	slli	s2,s4,0x1
20401802:	0001                	nop
20401804:	ffe90713          	addi	a4,s2,-2
20401808:	8305                	srli	a4,a4,0x1
2040180a:	0705                	addi	a4,a4,1
2040180c:	8b1d                	andi	a4,a4,7
2040180e:	012785b3          	add	a1,a5,s2
20401812:	cf3d                	beqz	a4,20401890 <core_bench_matrix+0xd0>
20401814:	4605                	li	a2,1
20401816:	06c70563          	beq	a4,a2,20401880 <core_bench_matrix+0xc0>
2040181a:	4609                	li	a2,2
2040181c:	04c70c63          	beq	a4,a2,20401874 <core_bench_matrix+0xb4>
20401820:	460d                	li	a2,3
20401822:	04c70363          	beq	a4,a2,20401868 <core_bench_matrix+0xa8>
20401826:	4611                	li	a2,4
20401828:	02c70a63          	beq	a4,a2,2040185c <core_bench_matrix+0x9c>
2040182c:	4615                	li	a2,5
2040182e:	02c70163          	beq	a4,a2,20401850 <core_bench_matrix+0x90>
20401832:	4619                	li	a2,6
20401834:	00c70863          	beq	a4,a2,20401844 <core_bench_matrix+0x84>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:256
		for (j=0; j<N; j++) {
			A[i*N+j] += val;
20401838:	0007d703          	lhu	a4,0(a5)
2040183c:	0789                	addi	a5,a5,2
2040183e:	9726                	add	a4,a4,s1
20401840:	fee79f23          	sh	a4,-2(a5)
20401844:	0007d703          	lhu	a4,0(a5)
20401848:	0789                	addi	a5,a5,2
2040184a:	9726                	add	a4,a4,s1
2040184c:	fee79f23          	sh	a4,-2(a5)
20401850:	0007d703          	lhu	a4,0(a5)
20401854:	0789                	addi	a5,a5,2
20401856:	9726                	add	a4,a4,s1
20401858:	fee79f23          	sh	a4,-2(a5)
2040185c:	0007d703          	lhu	a4,0(a5)
20401860:	0789                	addi	a5,a5,2
20401862:	9726                	add	a4,a4,s1
20401864:	fee79f23          	sh	a4,-2(a5)
20401868:	0007d703          	lhu	a4,0(a5)
2040186c:	0789                	addi	a5,a5,2
2040186e:	9726                	add	a4,a4,s1
20401870:	fee79f23          	sh	a4,-2(a5)
20401874:	0007d703          	lhu	a4,0(a5)
20401878:	0789                	addi	a5,a5,2
2040187a:	9726                	add	a4,a4,s1
2040187c:	fee79f23          	sh	a4,-2(a5)
20401880:	0007d703          	lhu	a4,0(a5)
20401884:	0789                	addi	a5,a5,2
20401886:	9726                	add	a4,a4,s1
20401888:	fee79f23          	sh	a4,-2(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:255
		for (j=0; j<N; j++) {
2040188c:	04b78d63          	beq	a5,a1,204018e6 <core_bench_matrix+0x126>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:256
			A[i*N+j] += val;
20401890:	0007de83          	lhu	t4,0(a5)
20401894:	0027de03          	lhu	t3,2(a5)
20401898:	0047d303          	lhu	t1,4(a5)
2040189c:	0067d883          	lhu	a7,6(a5)
204018a0:	0087d803          	lhu	a6,8(a5)
204018a4:	00a7d503          	lhu	a0,10(a5)
204018a8:	00c7d603          	lhu	a2,12(a5)
204018ac:	00e7d703          	lhu	a4,14(a5)
204018b0:	9ea6                	add	t4,t4,s1
204018b2:	9e26                	add	t3,t3,s1
204018b4:	9326                	add	t1,t1,s1
204018b6:	98a6                	add	a7,a7,s1
204018b8:	9826                	add	a6,a6,s1
204018ba:	9526                	add	a0,a0,s1
204018bc:	9626                	add	a2,a2,s1
204018be:	9726                	add	a4,a4,s1
204018c0:	01d79023          	sh	t4,0(a5)
204018c4:	01c79123          	sh	t3,2(a5)
204018c8:	00679223          	sh	t1,4(a5)
204018cc:	01179323          	sh	a7,6(a5)
204018d0:	01079423          	sh	a6,8(a5)
204018d4:	00a79523          	sh	a0,10(a5)
204018d8:	00c79623          	sh	a2,12(a5)
204018dc:	00e79723          	sh	a4,14(a5)
204018e0:	07c1                	addi	a5,a5,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:255
		for (j=0; j<N; j++) {
204018e2:	fab797e3          	bne	a5,a1,20401890 <core_bench_matrix+0xd0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
204018e6:	0685                	addi	a3,a3,1
204018e8:	f0da1ee3          	bne	s4,a3,20401804 <core_bench_matrix+0x44>
204018ec:	4792                	lw	a5,4(sp)
matrix_mul_const():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:242
	for (i=0; i<N; i++) {
204018ee:	4581                	li	a1,0
204018f0:	002a1993          	slli	s3,s4,0x2
204018f4:	865a                	mv	a2,s6
204018f6:	0001                	nop
204018f8:	ffe90693          	addi	a3,s2,-2
204018fc:	8285                	srli	a3,a3,0x1
204018fe:	0685                	addi	a3,a3,1
20401900:	8a9d                	andi	a3,a3,7
matrix_add_const():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
20401902:	8732                	mv	a4,a2
20401904:	01278533          	add	a0,a5,s2
20401908:	cec9                	beqz	a3,204019a2 <core_bench_matrix+0x1e2>
2040190a:	4805                	li	a6,1
2040190c:	09068163          	beq	a3,a6,2040198e <core_bench_matrix+0x1ce>
20401910:	4809                	li	a6,2
20401912:	07068663          	beq	a3,a6,2040197e <core_bench_matrix+0x1be>
20401916:	480d                	li	a6,3
20401918:	05068b63          	beq	a3,a6,2040196e <core_bench_matrix+0x1ae>
2040191c:	4811                	li	a6,4
2040191e:	05068063          	beq	a3,a6,2040195e <core_bench_matrix+0x19e>
20401922:	4815                	li	a6,5
20401924:	03068563          	beq	a3,a6,2040194e <core_bench_matrix+0x18e>
20401928:	4819                	li	a6,6
2040192a:	01068a63          	beq	a3,a6,2040193e <core_bench_matrix+0x17e>
matrix_mul_const():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:244
			C[i*N+j]=(MATRES)A[i*N+j] * (MATRES)val;
2040192e:	00079683          	lh	a3,0(a5)
20401932:	00460713          	addi	a4,a2,4
20401936:	0789                	addi	a5,a5,2
20401938:	029686b3          	mul	a3,a3,s1
2040193c:	c214                	sw	a3,0(a2)
2040193e:	00079683          	lh	a3,0(a5)
20401942:	0711                	addi	a4,a4,4
20401944:	0789                	addi	a5,a5,2
20401946:	029686b3          	mul	a3,a3,s1
2040194a:	fed72e23          	sw	a3,-4(a4)
2040194e:	00079683          	lh	a3,0(a5)
20401952:	0711                	addi	a4,a4,4
20401954:	0789                	addi	a5,a5,2
20401956:	029686b3          	mul	a3,a3,s1
2040195a:	fed72e23          	sw	a3,-4(a4)
2040195e:	00079683          	lh	a3,0(a5)
20401962:	0711                	addi	a4,a4,4
20401964:	0789                	addi	a5,a5,2
20401966:	029686b3          	mul	a3,a3,s1
2040196a:	fed72e23          	sw	a3,-4(a4)
2040196e:	00079683          	lh	a3,0(a5)
20401972:	0711                	addi	a4,a4,4
20401974:	0789                	addi	a5,a5,2
20401976:	029686b3          	mul	a3,a3,s1
2040197a:	fed72e23          	sw	a3,-4(a4)
2040197e:	00079683          	lh	a3,0(a5)
20401982:	0711                	addi	a4,a4,4
20401984:	0789                	addi	a5,a5,2
20401986:	029686b3          	mul	a3,a3,s1
2040198a:	fed72e23          	sw	a3,-4(a4)
2040198e:	00079683          	lh	a3,0(a5)
20401992:	0789                	addi	a5,a5,2
20401994:	0711                	addi	a4,a4,4
20401996:	029686b3          	mul	a3,a3,s1
2040199a:	fed72e23          	sw	a3,-4(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:243
		for (j=0; j<N; j++) {
2040199e:	06a78763          	beq	a5,a0,20401a0c <core_bench_matrix+0x24c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:244
			C[i*N+j]=(MATRES)A[i*N+j] * (MATRES)val;
204019a2:	00079f83          	lh	t6,0(a5)
204019a6:	00279f03          	lh	t5,2(a5)
204019aa:	00479e83          	lh	t4,4(a5)
204019ae:	00679e03          	lh	t3,6(a5)
204019b2:	00879303          	lh	t1,8(a5)
204019b6:	00a79883          	lh	a7,10(a5)
204019ba:	00c79803          	lh	a6,12(a5)
204019be:	00e79683          	lh	a3,14(a5)
204019c2:	029f8fb3          	mul	t6,t6,s1
204019c6:	07c1                	addi	a5,a5,16
204019c8:	02070713          	addi	a4,a4,32
204019cc:	029f0f33          	mul	t5,t5,s1
204019d0:	fff72023          	sw	t6,-32(a4)
204019d4:	029e8eb3          	mul	t4,t4,s1
204019d8:	ffe72223          	sw	t5,-28(a4)
204019dc:	029e0e33          	mul	t3,t3,s1
204019e0:	ffd72423          	sw	t4,-24(a4)
204019e4:	02930333          	mul	t1,t1,s1
204019e8:	ffc72623          	sw	t3,-20(a4)
204019ec:	029888b3          	mul	a7,a7,s1
204019f0:	fe672823          	sw	t1,-16(a4)
204019f4:	02980833          	mul	a6,a6,s1
204019f8:	ff172a23          	sw	a7,-12(a4)
204019fc:	029686b3          	mul	a3,a3,s1
20401a00:	ff072c23          	sw	a6,-8(a4)
20401a04:	fed72e23          	sw	a3,-4(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:243
		for (j=0; j<N; j++) {
20401a08:	f8a79de3          	bne	a5,a0,204019a2 <core_bench_matrix+0x1e2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:242
	for (i=0; i<N; i++) {
20401a0c:	0585                	addi	a1,a1,1
20401a0e:	964e                	add	a2,a2,s3
20401a10:	eeba14e3          	bne	s4,a1,204018f8 <core_bench_matrix+0x138>
20401a14:	41400cb3          	neg	s9,s4
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:218
	ee_s16 ret=0;
20401a18:	4e81                	li	t4,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:217
	MATRES tmp=0,prev=0,cur=0;
20401a1a:	4781                	li	a5,0
20401a1c:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20401a1e:	4601                	li	a2,0
20401a20:	003c9813          	slli	a6,s9,0x3
20401a24:	013b06b3          	add	a3,s6,s3
20401a28:	002c9593          	slli	a1,s9,0x2
20401a2c:	00b68733          	add	a4,a3,a1
20401a30:	40e68e33          	sub	t3,a3,a4
20401a34:	1e71                	addi	t3,t3,-4
20401a36:	002e5e13          	srli	t3,t3,0x2
20401a3a:	0e05                	addi	t3,t3,1
20401a3c:	007e7e13          	andi	t3,t3,7
matrix_mul_const():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:242
	for (i=0; i<N; i++) {
20401a40:	88ba                	mv	a7,a4
20401a42:	8576                	mv	a0,t4
20401a44:	160e0d63          	beqz	t3,20401bbe <core_bench_matrix+0x3fe>
20401a48:	4e85                	li	t4,1
20401a4a:	0dde0463          	beq	t3,t4,20401b12 <core_bench_matrix+0x352>
20401a4e:	4e89                	li	t4,2
20401a50:	0bde0363          	beq	t3,t4,20401af6 <core_bench_matrix+0x336>
20401a54:	4e8d                	li	t4,3
20401a56:	09de0263          	beq	t3,t4,20401ada <core_bench_matrix+0x31a>
20401a5a:	4e91                	li	t4,4
20401a5c:	07de0263          	beq	t3,t4,20401ac0 <core_bench_matrix+0x300>
20401a60:	4e95                	li	t4,5
20401a62:	05de0263          	beq	t3,t4,20401aa6 <core_bench_matrix+0x2e6>
20401a66:	4e99                	li	t4,6
20401a68:	03de0263          	beq	t3,t4,20401a8c <core_bench_matrix+0x2cc>
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401a6c:	00072e03          	lw	t3,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401a70:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401a72:	00645463          	bge	s0,t1,20401a7a <core_bench_matrix+0x2ba>
20401a76:	7db0006f          	j	20402a50 <core_bench_matrix+0x1290>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401a7a:	01c7a7b3          	slt	a5,a5,t3
20401a7e:	97aa                	add	a5,a5,a0
20401a80:	01079513          	slli	a0,a5,0x10
20401a84:	8541                	srai	a0,a0,0x10
20401a86:	00470893          	addi	a7,a4,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401a8a:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401a8c:	0008ae03          	lw	t3,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401a90:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401a92:	64644de3          	blt	s0,t1,204028ec <core_bench_matrix+0x112c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401a96:	01c7a7b3          	slt	a5,a5,t3
20401a9a:	97aa                	add	a5,a5,a0
20401a9c:	01079513          	slli	a0,a5,0x10
20401aa0:	8541                	srai	a0,a0,0x10
20401aa2:	0891                	addi	a7,a7,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401aa4:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401aa6:	0008ae03          	lw	t3,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401aaa:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401aac:	626448e3          	blt	s0,t1,204028dc <core_bench_matrix+0x111c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401ab0:	01c7a7b3          	slt	a5,a5,t3
20401ab4:	97aa                	add	a5,a5,a0
20401ab6:	01079513          	slli	a0,a5,0x10
20401aba:	8541                	srai	a0,a0,0x10
20401abc:	0891                	addi	a7,a7,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401abe:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401ac0:	0008ae03          	lw	t3,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401ac4:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401ac6:	62644be3          	blt	s0,t1,204028fc <core_bench_matrix+0x113c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401aca:	01c7a7b3          	slt	a5,a5,t3
20401ace:	97aa                	add	a5,a5,a0
20401ad0:	01079513          	slli	a0,a5,0x10
20401ad4:	8541                	srai	a0,a0,0x10
20401ad6:	0891                	addi	a7,a7,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401ad8:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401ada:	0008ae03          	lw	t3,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401ade:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401ae0:	62644ee3          	blt	s0,t1,2040291c <core_bench_matrix+0x115c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401ae4:	01c7aeb3          	slt	t4,a5,t3
20401ae8:	01d507b3          	add	a5,a0,t4
20401aec:	01079513          	slli	a0,a5,0x10
20401af0:	8541                	srai	a0,a0,0x10
20401af2:	0891                	addi	a7,a7,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401af4:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401af6:	0008ae03          	lw	t3,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401afa:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401afc:	606448e3          	blt	s0,t1,2040290c <core_bench_matrix+0x114c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b00:	01c7aeb3          	slt	t4,a5,t3
20401b04:	01d507b3          	add	a5,a0,t4
20401b08:	01079513          	slli	a0,a5,0x10
20401b0c:	8541                	srai	a0,a0,0x10
20401b0e:	0891                	addi	a7,a7,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401b10:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401b12:	0008ae03          	lw	t3,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401b16:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401b18:	646444e3          	blt	s0,t1,20402960 <core_bench_matrix+0x11a0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b1c:	01c7aeb3          	slt	t4,a5,t3
20401b20:	01d507b3          	add	a5,a0,t4
20401b24:	01079513          	slli	a0,a5,0x10
20401b28:	8541                	srai	a0,a0,0x10
20401b2a:	0891                	addi	a7,a7,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401b2c:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20401b2e:	08d89863          	bne	a7,a3,20401bbe <core_bench_matrix+0x3fe>
20401b32:	a235                	j	20401c5e <core_bench_matrix+0x49e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401b34:	0048a503          	lw	a0,4(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401b38:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401b3a:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401b3c:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401b3e:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401b40:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401b42:	0a644863          	blt	s0,t1,20401bf2 <core_bench_matrix+0x432>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b46:	00ae2e33          	slt	t3,t3,a0
20401b4a:	97f2                	add	a5,a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401b4c:	0088ae03          	lw	t3,8(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b50:	07c2                	slli	a5,a5,0x10
20401b52:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401b54:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401b56:	0a644763          	blt	s0,t1,20401c04 <core_bench_matrix+0x444>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b5a:	01c52533          	slt	a0,a0,t3
20401b5e:	97aa                	add	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401b60:	00c8a503          	lw	a0,12(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b64:	07c2                	slli	a5,a5,0x10
20401b66:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401b68:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401b6a:	0a644663          	blt	s0,t1,20401c16 <core_bench_matrix+0x456>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b6e:	00ae2e33          	slt	t3,t3,a0
20401b72:	97f2                	add	a5,a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401b74:	0108ae03          	lw	t3,16(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b78:	07c2                	slli	a5,a5,0x10
20401b7a:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401b7c:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401b7e:	0a644563          	blt	s0,t1,20401c28 <core_bench_matrix+0x468>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b82:	01c52533          	slt	a0,a0,t3
20401b86:	97aa                	add	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401b88:	0148a503          	lw	a0,20(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b8c:	07c2                	slli	a5,a5,0x10
20401b8e:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401b90:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401b92:	0a644463          	blt	s0,t1,20401c3a <core_bench_matrix+0x47a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401b96:	00ae2e33          	slt	t3,t3,a0
20401b9a:	97f2                	add	a5,a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401b9c:	0188ae03          	lw	t3,24(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401ba0:	07c2                	slli	a5,a5,0x10
20401ba2:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401ba4:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401ba6:	0a644363          	blt	s0,t1,20401c4c <core_bench_matrix+0x48c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401baa:	01c52533          	slt	a0,a0,t3
20401bae:	97aa                	add	a5,a5,a0
20401bb0:	01079513          	slli	a0,a5,0x10
20401bb4:	08f1                	addi	a7,a7,28
20401bb6:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401bb8:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20401bba:	0ad88263          	beq	a7,a3,20401c5e <core_bench_matrix+0x49e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401bbe:	0008ae83          	lw	t4,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401bc2:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401bc4:	506454e3          	bge	s0,t1,204028cc <core_bench_matrix+0x110c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401bc8:	00a50793          	addi	a5,a0,10
20401bcc:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401bce:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401bd0:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401bd2:	0048ae03          	lw	t3,4(a7)
20401bd6:	0891                	addi	a7,a7,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401bd8:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401bda:	f4644de3          	blt	s0,t1,20401b34 <core_bench_matrix+0x374>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401bde:	0048a503          	lw	a0,4(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401be2:	01ceaeb3          	slt	t4,t4,t3
20401be6:	97f6                	add	a5,a5,t4
20401be8:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401bea:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401bec:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401bee:	f4645ce3          	bge	s0,t1,20401b46 <core_bench_matrix+0x386>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401bf2:	0088ae03          	lw	t3,8(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401bf6:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401bf8:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401bfa:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401bfc:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401bfe:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401c00:	f4645de3          	bge	s0,t1,20401b5a <core_bench_matrix+0x39a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401c04:	00c8a503          	lw	a0,12(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c08:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401c0a:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c0c:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401c0e:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c10:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401c12:	f4645ee3          	bge	s0,t1,20401b6e <core_bench_matrix+0x3ae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401c16:	0108ae03          	lw	t3,16(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c1a:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401c1c:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c1e:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401c20:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c22:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401c24:	f4645fe3          	bge	s0,t1,20401b82 <core_bench_matrix+0x3c2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401c28:	0148a503          	lw	a0,20(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c2c:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401c2e:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c30:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401c32:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c34:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401c36:	f66450e3          	bge	s0,t1,20401b96 <core_bench_matrix+0x3d6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401c3a:	0188ae03          	lw	t3,24(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c3e:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401c40:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c42:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401c44:	9372                	add	t1,t1,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c46:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401c48:	f66451e3          	bge	s0,t1,20401baa <core_bench_matrix+0x3ea>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401c4c:	07a9                	addi	a5,a5,10
20401c4e:	01079513          	slli	a0,a5,0x10
20401c52:	08f1                	addi	a7,a7,28
20401c54:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401c56:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401c58:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20401c5a:	f6d892e3          	bne	a7,a3,20401bbe <core_bench_matrix+0x3fe>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20401c5e:	0605                	addi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401c60:	87f2                	mv	a5,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20401c62:	8eaa                	mv	t4,a0
20401c64:	410706b3          	sub	a3,a4,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20401c68:	dcca12e3          	bne	s4,a2,20401a2c <core_bench_matrix+0x26c>
matrix_test():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:126
	crc=crc16(matrix_sum(N,C,clipval),crc);
20401c6c:	4581                	li	a1,0
20401c6e:	783010ef          	jal	ra,20403bf0 <crc16>
20401c72:	4592                	lw	a1,4(sp)
20401c74:	013b07b3          	add	a5,s6,s3
20401c78:	c82a                	sw	a0,16(sp)
20401c7a:	c63e                	sw	a5,12(sp)
20401c7c:	855a                	mv	a0,s6
20401c7e:	012a82b3          	add	t0,s5,s2
20401c82:	0001                	nop
20401c84:	41528733          	sub	a4,t0,s5
20401c88:	1779                	addi	a4,a4,-2
20401c8a:	8305                	srli	a4,a4,0x1
20401c8c:	0705                	addi	a4,a4,1
matrix_mul_vect():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:268
	This is common in many simple filters (e.g. fir where a vector of coefficients is applied to the matrix.)
*/
void matrix_mul_vect(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
	ee_u32 i,j;
	for (i=0; i<N; i++) {
		C[i]=0;
20401c8e:	00052023          	sw	zero,0(a0)
20401c92:	8b1d                	andi	a4,a4,7
20401c94:	862e                	mv	a2,a1
20401c96:	4781                	li	a5,0
20401c98:	86d6                	mv	a3,s5
20401c9a:	c74d                	beqz	a4,20401d44 <core_bench_matrix+0x584>
20401c9c:	4805                	li	a6,1
20401c9e:	09070863          	beq	a4,a6,20401d2e <core_bench_matrix+0x56e>
20401ca2:	4809                	li	a6,2
20401ca4:	07070c63          	beq	a4,a6,20401d1c <core_bench_matrix+0x55c>
20401ca8:	480d                	li	a6,3
20401caa:	07070063          	beq	a4,a6,20401d0a <core_bench_matrix+0x54a>
20401cae:	4811                	li	a6,4
20401cb0:	05070463          	beq	a4,a6,20401cf8 <core_bench_matrix+0x538>
20401cb4:	4815                	li	a6,5
20401cb6:	03070863          	beq	a4,a6,20401ce6 <core_bench_matrix+0x526>
20401cba:	4819                	li	a6,6
20401cbc:	01070c63          	beq	a4,a6,20401cd4 <core_bench_matrix+0x514>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:270
		for (j=0; j<N; j++) {
			C[i]+=(MATRES)A[i*N+j] * (MATRES)B[j];
20401cc0:	00059703          	lh	a4,0(a1)
20401cc4:	000a9783          	lh	a5,0(s5)
20401cc8:	00258613          	addi	a2,a1,2
20401ccc:	002a8693          	addi	a3,s5,2
20401cd0:	02f707b3          	mul	a5,a4,a5
20401cd4:	00061703          	lh	a4,0(a2)
20401cd8:	00069803          	lh	a6,0(a3)
20401cdc:	0609                	addi	a2,a2,2
20401cde:	0689                	addi	a3,a3,2
20401ce0:	03070733          	mul	a4,a4,a6
20401ce4:	97ba                	add	a5,a5,a4
20401ce6:	00061703          	lh	a4,0(a2)
20401cea:	00069803          	lh	a6,0(a3)
20401cee:	0609                	addi	a2,a2,2
20401cf0:	0689                	addi	a3,a3,2
20401cf2:	03070733          	mul	a4,a4,a6
20401cf6:	97ba                	add	a5,a5,a4
20401cf8:	00061703          	lh	a4,0(a2)
20401cfc:	00069803          	lh	a6,0(a3)
20401d00:	0609                	addi	a2,a2,2
20401d02:	0689                	addi	a3,a3,2
20401d04:	03070733          	mul	a4,a4,a6
20401d08:	97ba                	add	a5,a5,a4
20401d0a:	00061703          	lh	a4,0(a2)
20401d0e:	00069803          	lh	a6,0(a3)
20401d12:	0609                	addi	a2,a2,2
20401d14:	0689                	addi	a3,a3,2
20401d16:	03070733          	mul	a4,a4,a6
20401d1a:	97ba                	add	a5,a5,a4
20401d1c:	00061703          	lh	a4,0(a2)
20401d20:	00069803          	lh	a6,0(a3)
20401d24:	0609                	addi	a2,a2,2
20401d26:	0689                	addi	a3,a3,2
20401d28:	03070733          	mul	a4,a4,a6
20401d2c:	97ba                	add	a5,a5,a4
20401d2e:	00061703          	lh	a4,0(a2)
20401d32:	00069803          	lh	a6,0(a3)
20401d36:	0689                	addi	a3,a3,2
20401d38:	0609                	addi	a2,a2,2
20401d3a:	03070733          	mul	a4,a4,a6
20401d3e:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:269
		for (j=0; j<N; j++) {
20401d40:	06d28e63          	beq	t0,a3,20401dbc <core_bench_matrix+0x5fc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:270
			C[i]+=(MATRES)A[i*N+j] * (MATRES)B[j];
20401d44:	00061803          	lh	a6,0(a2)
20401d48:	00069703          	lh	a4,0(a3)
20401d4c:	00269e83          	lh	t4,2(a3)
20401d50:	00261d03          	lh	s10,2(a2)
20401d54:	02e80733          	mul	a4,a6,a4
20401d58:	00461083          	lh	ra,4(a2)
20401d5c:	00469d83          	lh	s11,4(a3)
20401d60:	00661f83          	lh	t6,6(a2)
20401d64:	00669c03          	lh	s8,6(a3)
20401d68:	00861e03          	lh	t3,8(a2)
20401d6c:	00869b83          	lh	s7,8(a3)
20401d70:	00a61303          	lh	t1,10(a2)
20401d74:	00a69383          	lh	t2,10(a3)
20401d78:	00c61883          	lh	a7,12(a2)
20401d7c:	03dd0d33          	mul	s10,s10,t4
20401d80:	973e                	add	a4,a4,a5
20401d82:	00c69f03          	lh	t5,12(a3)
20401d86:	00e61803          	lh	a6,14(a2)
20401d8a:	00e69e83          	lh	t4,14(a3)
20401d8e:	06c1                	addi	a3,a3,16
20401d90:	0641                	addi	a2,a2,16
20401d92:	03b080b3          	mul	ra,ra,s11
20401d96:	976a                	add	a4,a4,s10
20401d98:	038f87b3          	mul	a5,t6,s8
20401d9c:	9706                	add	a4,a4,ra
20401d9e:	037e0e33          	mul	t3,t3,s7
20401da2:	97ba                	add	a5,a5,a4
20401da4:	02730333          	mul	t1,t1,t2
20401da8:	97f2                	add	a5,a5,t3
20401daa:	03e888b3          	mul	a7,a7,t5
20401dae:	979a                	add	a5,a5,t1
20401db0:	03d80733          	mul	a4,a6,t4
20401db4:	97c6                	add	a5,a5,a7
20401db6:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:269
		for (j=0; j<N; j++) {
20401db8:	f8d296e3          	bne	t0,a3,20401d44 <core_bench_matrix+0x584>
20401dbc:	c11c                	sw	a5,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:267
	for (i=0; i<N; i++) {
20401dbe:	47b2                	lw	a5,12(sp)
20401dc0:	0511                	addi	a0,a0,4
20401dc2:	95ca                	add	a1,a1,s2
20401dc4:	eca790e3          	bne	a5,a0,20401c84 <core_bench_matrix+0x4c4>
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:218
	ee_s16 ret=0;
20401dc8:	4e81                	li	t4,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:217
	MATRES tmp=0,prev=0,cur=0;
20401dca:	4881                	li	a7,0
20401dcc:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20401dce:	4601                	li	a2,0
20401dd0:	003c9813          	slli	a6,s9,0x3
20401dd4:	013b06b3          	add	a3,s6,s3
20401dd8:	002c9593          	slli	a1,s9,0x2
20401ddc:	00d58733          	add	a4,a1,a3
20401de0:	40e68f33          	sub	t5,a3,a4
20401de4:	1f71                	addi	t5,t5,-4
20401de6:	002f5f13          	srli	t5,t5,0x2
20401dea:	0f05                	addi	t5,t5,1
20401dec:	007f7f13          	andi	t5,t5,7
matrix_mul_vect():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:268
		C[i]=0;
20401df0:	8e3a                	mv	t3,a4
20401df2:	87f6                	mv	a5,t4
20401df4:	160f0063          	beqz	t5,20401f54 <core_bench_matrix+0x794>
20401df8:	4505                	li	a0,1
20401dfa:	0aaf0a63          	beq	t5,a0,20401eae <core_bench_matrix+0x6ee>
20401dfe:	4509                	li	a0,2
20401e00:	08af0b63          	beq	t5,a0,20401e96 <core_bench_matrix+0x6d6>
20401e04:	450d                	li	a0,3
20401e06:	06af0c63          	beq	t5,a0,20401e7e <core_bench_matrix+0x6be>
20401e0a:	4511                	li	a0,4
20401e0c:	04af0d63          	beq	t5,a0,20401e66 <core_bench_matrix+0x6a6>
20401e10:	4515                	li	a0,5
20401e12:	02af0e63          	beq	t5,a0,20401e4e <core_bench_matrix+0x68e>
20401e16:	4519                	li	a0,6
20401e18:	00af0f63          	beq	t5,a0,20401e36 <core_bench_matrix+0x676>
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401e1c:	4308                	lw	a0,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401e1e:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401e20:	426440e3          	blt	s0,t1,20402a40 <core_bench_matrix+0x1280>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401e24:	00a8a8b3          	slt	a7,a7,a0
20401e28:	011e87b3          	add	a5,t4,a7
20401e2c:	07c2                	slli	a5,a5,0x10
20401e2e:	87c1                	srai	a5,a5,0x10
20401e30:	00470e13          	addi	t3,a4,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401e34:	88aa                	mv	a7,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401e36:	000e2503          	lw	a0,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401e3a:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401e3c:	3c644ee3          	blt	s0,t1,20402a18 <core_bench_matrix+0x1258>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401e40:	00a8a8b3          	slt	a7,a7,a0
20401e44:	97c6                	add	a5,a5,a7
20401e46:	07c2                	slli	a5,a5,0x10
20401e48:	87c1                	srai	a5,a5,0x10
20401e4a:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401e4c:	88aa                	mv	a7,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401e4e:	000e2503          	lw	a0,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401e52:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401e54:	306440e3          	blt	s0,t1,20402954 <core_bench_matrix+0x1194>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401e58:	00a8a8b3          	slt	a7,a7,a0
20401e5c:	97c6                	add	a5,a5,a7
20401e5e:	07c2                	slli	a5,a5,0x10
20401e60:	87c1                	srai	a5,a5,0x10
20401e62:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401e64:	88aa                	mv	a7,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401e66:	000e2503          	lw	a0,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401e6a:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401e6c:	2c644ee3          	blt	s0,t1,20402948 <core_bench_matrix+0x1188>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401e70:	00a8a8b3          	slt	a7,a7,a0
20401e74:	97c6                	add	a5,a5,a7
20401e76:	07c2                	slli	a5,a5,0x10
20401e78:	87c1                	srai	a5,a5,0x10
20401e7a:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401e7c:	88aa                	mv	a7,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401e7e:	000e2e83          	lw	t4,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401e82:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401e84:	386444e3          	blt	s0,t1,20402a0c <core_bench_matrix+0x124c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401e88:	01d8a8b3          	slt	a7,a7,t4
20401e8c:	97c6                	add	a5,a5,a7
20401e8e:	07c2                	slli	a5,a5,0x10
20401e90:	87c1                	srai	a5,a5,0x10
20401e92:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401e94:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401e96:	000e2e83          	lw	t4,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401e9a:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401e9c:	2a6440e3          	blt	s0,t1,2040293c <core_bench_matrix+0x117c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401ea0:	01d8a8b3          	slt	a7,a7,t4
20401ea4:	97c6                	add	a5,a5,a7
20401ea6:	07c2                	slli	a5,a5,0x10
20401ea8:	87c1                	srai	a5,a5,0x10
20401eaa:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401eac:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401eae:	000e2e83          	lw	t4,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401eb2:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401eb4:	2e644ce3          	blt	s0,t1,204029ac <core_bench_matrix+0x11ec>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401eb8:	01d8a8b3          	slt	a7,a7,t4
20401ebc:	97c6                	add	a5,a5,a7
20401ebe:	07c2                	slli	a5,a5,0x10
20401ec0:	87c1                	srai	a5,a5,0x10
20401ec2:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401ec4:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20401ec6:	08de1763          	bne	t3,a3,20401f54 <core_bench_matrix+0x794>
20401eca:	a21d                	j	20401ff0 <core_bench_matrix+0x830>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401ecc:	004e2503          	lw	a0,4(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401ed0:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401ed2:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401ed4:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401ed6:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401ed8:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401eda:	0a644663          	blt	s0,t1,20401f86 <core_bench_matrix+0x7c6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401ede:	00a8a8b3          	slt	a7,a7,a0
20401ee2:	97c6                	add	a5,a5,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401ee4:	008e2883          	lw	a7,8(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401ee8:	07c2                	slli	a5,a5,0x10
20401eea:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401eec:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401eee:	0a644563          	blt	s0,t1,20401f98 <core_bench_matrix+0x7d8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401ef2:	01152533          	slt	a0,a0,a7
20401ef6:	97aa                	add	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401ef8:	00ce2503          	lw	a0,12(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401efc:	07c2                	slli	a5,a5,0x10
20401efe:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401f00:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401f02:	0a644463          	blt	s0,t1,20401faa <core_bench_matrix+0x7ea>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f06:	00a8a8b3          	slt	a7,a7,a0
20401f0a:	97c6                	add	a5,a5,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401f0c:	010e2883          	lw	a7,16(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f10:	07c2                	slli	a5,a5,0x10
20401f12:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401f14:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401f16:	0a644363          	blt	s0,t1,20401fbc <core_bench_matrix+0x7fc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f1a:	01152533          	slt	a0,a0,a7
20401f1e:	97aa                	add	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401f20:	014e2503          	lw	a0,20(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f24:	07c2                	slli	a5,a5,0x10
20401f26:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401f28:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401f2a:	0a644263          	blt	s0,t1,20401fce <core_bench_matrix+0x80e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401f2e:	018e2e83          	lw	t4,24(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f32:	00a8a8b3          	slt	a7,a7,a0
20401f36:	97c6                	add	a5,a5,a7
20401f38:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401f3a:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f3c:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401f3e:	0a644163          	blt	s0,t1,20401fe0 <core_bench_matrix+0x820>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f42:	01d52533          	slt	a0,a0,t4
20401f46:	97aa                	add	a5,a5,a0
20401f48:	07c2                	slli	a5,a5,0x10
20401f4a:	0e71                	addi	t3,t3,28
20401f4c:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401f4e:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20401f50:	0ade0063          	beq	t3,a3,20401ff0 <core_bench_matrix+0x830>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401f54:	000e2e83          	lw	t4,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401f58:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401f5a:	1c6459e3          	bge	s0,t1,2040292c <core_bench_matrix+0x116c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401f5e:	07a9                	addi	a5,a5,10
20401f60:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401f62:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401f64:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401f66:	004e2883          	lw	a7,4(t3)
20401f6a:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401f6c:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401f6e:	f4644fe3          	blt	s0,t1,20401ecc <core_bench_matrix+0x70c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401f72:	004e2503          	lw	a0,4(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f76:	011eaeb3          	slt	t4,t4,a7
20401f7a:	97f6                	add	a5,a5,t4
20401f7c:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401f7e:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20401f80:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401f82:	f4645ee3          	bge	s0,t1,20401ede <core_bench_matrix+0x71e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401f86:	008e2883          	lw	a7,8(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401f8a:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401f8c:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401f8e:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401f90:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401f92:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401f94:	f4645fe3          	bge	s0,t1,20401ef2 <core_bench_matrix+0x732>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401f98:	00ce2503          	lw	a0,12(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401f9c:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401f9e:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fa0:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401fa2:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fa4:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401fa6:	f66450e3          	bge	s0,t1,20401f06 <core_bench_matrix+0x746>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401faa:	010e2883          	lw	a7,16(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fae:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401fb0:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fb2:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401fb4:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fb6:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401fb8:	f66451e3          	bge	s0,t1,20401f1a <core_bench_matrix+0x75a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401fbc:	014e2503          	lw	a0,20(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fc0:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401fc2:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fc4:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401fc6:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fc8:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401fca:	f66452e3          	bge	s0,t1,20401f2e <core_bench_matrix+0x76e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20401fce:	018e2e83          	lw	t4,24(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fd2:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401fd4:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fd6:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20401fd8:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fda:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20401fdc:	f66453e3          	bge	s0,t1,20401f42 <core_bench_matrix+0x782>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20401fe0:	07a9                	addi	a5,a5,10
20401fe2:	07c2                	slli	a5,a5,0x10
20401fe4:	0e71                	addi	t3,t3,28
20401fe6:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20401fe8:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401fea:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20401fec:	f6de14e3          	bne	t3,a3,20401f54 <core_bench_matrix+0x794>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20401ff0:	0605                	addi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20401ff2:	88f6                	mv	a7,t4
20401ff4:	410706b3          	sub	a3,a4,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20401ff8:	8ebe                	mv	t4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20401ffa:	deca11e3          	bne	s4,a2,20401ddc <core_bench_matrix+0x61c>
matrix_test():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:131
	crc=crc16(matrix_sum(N,C,clipval),crc);
20401ffe:	45c2                	lw	a1,16(sp)
20402000:	853e                	mv	a0,a5
20402002:	3ef010ef          	jal	ra,20403bf0 <crc16>
20402006:	012a87b3          	add	a5,s5,s2
2040200a:	4592                	lw	a1,4(sp)
2040200c:	cc3e                	sw	a5,24(sp)
2040200e:	87a6                	mv	a5,s1
20402010:	83da                	mv	t2,s6
20402012:	84a2                	mv	s1,s0
20402014:	ce2a                	sw	a0,28(sp)
20402016:	845a                	mv	s0,s6
matrix_mul_matrix():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:281
	Multiply a matrix by a matrix.
	Basic code is used in many algorithms, mostly with minor changes such as scaling.
*/
void matrix_mul_matrix(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
	ee_u32 i,j,k;
	for (i=0; i<N; i++) {
20402018:	4081                	li	ra,0
2040201a:	8b3e                	mv	s6,a5
2040201c:	87a2                	mv	a5,s0
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
2040201e:	881e                	mv	a6,t2
20402020:	8452                	mv	s0,s4
20402022:	8656                	mv	a2,s5
20402024:	00b90533          	add	a0,s2,a1
20402028:	8a3e                	mv	s4,a5
2040202a:	0001                	nop
2040202c:	40b508b3          	sub	a7,a0,a1
20402030:	18f9                	addi	a7,a7,-2
20402032:	0018d893          	srli	a7,a7,0x1
20402036:	0885                	addi	a7,a7,1
matrix_mul_matrix():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:283
		for (j=0; j<N; j++) {
			C[i*N+j]=0;
20402038:	00082023          	sw	zero,0(a6)
2040203c:	0078f893          	andi	a7,a7,7
20402040:	87b2                	mv	a5,a2
20402042:	86ae                	mv	a3,a1
20402044:	4701                	li	a4,0
20402046:	0a088663          	beqz	a7,204020f2 <core_bench_matrix+0x932>
2040204a:	4305                	li	t1,1
2040204c:	08688863          	beq	a7,t1,204020dc <core_bench_matrix+0x91c>
20402050:	4309                	li	t1,2
20402052:	06688c63          	beq	a7,t1,204020ca <core_bench_matrix+0x90a>
20402056:	430d                	li	t1,3
20402058:	06688063          	beq	a7,t1,204020b8 <core_bench_matrix+0x8f8>
2040205c:	4311                	li	t1,4
2040205e:	04688463          	beq	a7,t1,204020a6 <core_bench_matrix+0x8e6>
20402062:	4315                	li	t1,5
20402064:	02688863          	beq	a7,t1,20402094 <core_bench_matrix+0x8d4>
20402068:	4319                	li	t1,6
2040206a:	00688c63          	beq	a7,t1,20402082 <core_bench_matrix+0x8c2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:286
			for(k=0;k<N;k++)
			{
				C[i*N+j]+=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
2040206e:	00059883          	lh	a7,0(a1)
20402072:	00061703          	lh	a4,0(a2)
20402076:	00258693          	addi	a3,a1,2
2040207a:	012607b3          	add	a5,a2,s2
2040207e:	02e88733          	mul	a4,a7,a4
20402082:	00069883          	lh	a7,0(a3)
20402086:	00079303          	lh	t1,0(a5)
2040208a:	0689                	addi	a3,a3,2
2040208c:	97ca                	add	a5,a5,s2
2040208e:	026888b3          	mul	a7,a7,t1
20402092:	9746                	add	a4,a4,a7
20402094:	00069883          	lh	a7,0(a3)
20402098:	00079303          	lh	t1,0(a5)
2040209c:	0689                	addi	a3,a3,2
2040209e:	97ca                	add	a5,a5,s2
204020a0:	026888b3          	mul	a7,a7,t1
204020a4:	9746                	add	a4,a4,a7
204020a6:	00069883          	lh	a7,0(a3)
204020aa:	00079303          	lh	t1,0(a5)
204020ae:	0689                	addi	a3,a3,2
204020b0:	97ca                	add	a5,a5,s2
204020b2:	026888b3          	mul	a7,a7,t1
204020b6:	9746                	add	a4,a4,a7
204020b8:	00069883          	lh	a7,0(a3)
204020bc:	00079303          	lh	t1,0(a5)
204020c0:	0689                	addi	a3,a3,2
204020c2:	97ca                	add	a5,a5,s2
204020c4:	026888b3          	mul	a7,a7,t1
204020c8:	9746                	add	a4,a4,a7
204020ca:	00069883          	lh	a7,0(a3)
204020ce:	00079303          	lh	t1,0(a5)
204020d2:	0689                	addi	a3,a3,2
204020d4:	97ca                	add	a5,a5,s2
204020d6:	026888b3          	mul	a7,a7,t1
204020da:	9746                	add	a4,a4,a7
204020dc:	00069883          	lh	a7,0(a3)
204020e0:	00079303          	lh	t1,0(a5)
204020e4:	0689                	addi	a3,a3,2
204020e6:	97ca                	add	a5,a5,s2
204020e8:	026888b3          	mul	a7,a7,t1
204020ec:	9746                	add	a4,a4,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:284
			for(k=0;k<N;k++)
204020ee:	08d50d63          	beq	a0,a3,20402188 <core_bench_matrix+0x9c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:286
				C[i*N+j]+=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
204020f2:	00079303          	lh	t1,0(a5)
204020f6:	00069d83          	lh	s11,0(a3)
204020fa:	97ca                	add	a5,a5,s2
204020fc:	00079883          	lh	a7,0(a5)
20402100:	00269f03          	lh	t5,2(a3)
20402104:	026d8db3          	mul	s11,s11,t1
20402108:	97ca                	add	a5,a5,s2
2040210a:	00669303          	lh	t1,6(a3)
2040210e:	00469e83          	lh	t4,4(a3)
20402112:	00079d03          	lh	s10,0(a5)
20402116:	c61a                	sw	t1,12(sp)
20402118:	97ca                	add	a5,a5,s2
2040211a:	00079e03          	lh	t3,0(a5)
2040211e:	00869f83          	lh	t6,8(a3)
20402122:	00a69283          	lh	t0,10(a3)
20402126:	031f0f33          	mul	t5,t5,a7
2040212a:	976e                	add	a4,a4,s11
2040212c:	97ca                	add	a5,a5,s2
2040212e:	c87e                	sw	t6,16(sp)
20402130:	00079c03          	lh	s8,0(a5)
20402134:	ca16                	sw	t0,20(sp)
20402136:	97ca                	add	a5,a5,s2
20402138:	00079b83          	lh	s7,0(a5)
2040213c:	97ca                	add	a5,a5,s2
2040213e:	00c69303          	lh	t1,12(a3)
20402142:	977a                	add	a4,a4,t5
20402144:	03ae8eb3          	mul	t4,t4,s10
20402148:	4f32                	lw	t5,12(sp)
2040214a:	00079283          	lh	t0,0(a5)
2040214e:	97ca                	add	a5,a5,s2
20402150:	00e69883          	lh	a7,14(a3)
20402154:	00079f83          	lh	t6,0(a5)
20402158:	06c1                	addi	a3,a3,16
2040215a:	97ca                	add	a5,a5,s2
2040215c:	03cf0e33          	mul	t3,t5,t3
20402160:	9eba                	add	t4,t4,a4
20402162:	4742                	lw	a4,16(sp)
20402164:	03870c33          	mul	s8,a4,s8
20402168:	01ce8733          	add	a4,t4,t3
2040216c:	4e52                	lw	t3,20(sp)
2040216e:	037e0bb3          	mul	s7,t3,s7
20402172:	9762                	add	a4,a4,s8
20402174:	02530333          	mul	t1,t1,t0
20402178:	975e                	add	a4,a4,s7
2040217a:	03f888b3          	mul	a7,a7,t6
2040217e:	971a                	add	a4,a4,t1
20402180:	9746                	add	a4,a4,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:284
			for(k=0;k<N;k++)
20402182:	f6d518e3          	bne	a0,a3,204020f2 <core_bench_matrix+0x932>
20402186:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:282
		for (j=0; j<N; j++) {
20402188:	47e2                	lw	a5,24(sp)
2040218a:	00e82023          	sw	a4,0(a6)
2040218e:	0609                	addi	a2,a2,2
20402190:	0811                	addi	a6,a6,4
20402192:	e8c79de3          	bne	a5,a2,2040202c <core_bench_matrix+0x86c>
20402196:	87d2                	mv	a5,s4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:281
	for (i=0; i<N; i++) {
20402198:	0085                	addi	ra,ra,1
2040219a:	8a22                	mv	s4,s0
2040219c:	85aa                	mv	a1,a0
2040219e:	843e                	mv	s0,a5
204021a0:	93ce                	add	t2,t2,s3
204021a2:	e61a1de3          	bne	s4,ra,2040201c <core_bench_matrix+0x85c>
204021a6:	87da                	mv	a5,s6
204021a8:	8b22                	mv	s6,s0
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:218
	ee_s16 ret=0;
204021aa:	4e81                	li	t4,0
204021ac:	8426                	mv	s0,s1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:217
	MATRES tmp=0,prev=0,cur=0;
204021ae:	4881                	li	a7,0
204021b0:	84be                	mv	s1,a5
204021b2:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
204021b4:	4601                	li	a2,0
204021b6:	003c9813          	slli	a6,s9,0x3
204021ba:	013b06b3          	add	a3,s6,s3
204021be:	002c9593          	slli	a1,s9,0x2
204021c2:	0001                	nop
204021c4:	00d58733          	add	a4,a1,a3
204021c8:	40e68f33          	sub	t5,a3,a4
204021cc:	1f71                	addi	t5,t5,-4
204021ce:	002f5f13          	srli	t5,t5,0x2
204021d2:	0f05                	addi	t5,t5,1
204021d4:	007f7f13          	andi	t5,t5,7
matrix_mul_matrix():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:281
	for (i=0; i<N; i++) {
204021d8:	8e3a                	mv	t3,a4
204021da:	87f6                	mv	a5,t4
204021dc:	160f0a63          	beqz	t5,20402350 <core_bench_matrix+0xb90>
204021e0:	4505                	li	a0,1
204021e2:	0aaf0a63          	beq	t5,a0,20402296 <core_bench_matrix+0xad6>
204021e6:	4509                	li	a0,2
204021e8:	08af0b63          	beq	t5,a0,2040227e <core_bench_matrix+0xabe>
204021ec:	450d                	li	a0,3
204021ee:	06af0c63          	beq	t5,a0,20402266 <core_bench_matrix+0xaa6>
204021f2:	4511                	li	a0,4
204021f4:	04af0d63          	beq	t5,a0,2040224e <core_bench_matrix+0xa8e>
204021f8:	4515                	li	a0,5
204021fa:	02af0e63          	beq	t5,a0,20402236 <core_bench_matrix+0xa76>
204021fe:	4519                	li	a0,6
20402200:	00af0f63          	beq	t5,a0,2040221e <core_bench_matrix+0xa5e>
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402204:	4308                	lw	a0,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402206:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402208:	026444e3          	blt	s0,t1,20402a30 <core_bench_matrix+0x1270>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040220c:	00a8a8b3          	slt	a7,a7,a0
20402210:	011e87b3          	add	a5,t4,a7
20402214:	07c2                	slli	a5,a5,0x10
20402216:	87c1                	srai	a5,a5,0x10
20402218:	00470e13          	addi	t3,a4,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
2040221c:	88aa                	mv	a7,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
2040221e:	000e2503          	lw	a0,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402222:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402224:	76644863          	blt	s0,t1,20402994 <core_bench_matrix+0x11d4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402228:	00a8a8b3          	slt	a7,a7,a0
2040222c:	97c6                	add	a5,a5,a7
2040222e:	07c2                	slli	a5,a5,0x10
20402230:	87c1                	srai	a5,a5,0x10
20402232:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20402234:	88aa                	mv	a7,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402236:	000e2503          	lw	a0,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040223a:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
2040223c:	76644263          	blt	s0,t1,204029a0 <core_bench_matrix+0x11e0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402240:	00a8a8b3          	slt	a7,a7,a0
20402244:	97c6                	add	a5,a5,a7
20402246:	07c2                	slli	a5,a5,0x10
20402248:	87c1                	srai	a5,a5,0x10
2040224a:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
2040224c:	88aa                	mv	a7,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
2040224e:	000e2503          	lw	a0,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402252:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402254:	72644a63          	blt	s0,t1,20402988 <core_bench_matrix+0x11c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402258:	00a8a8b3          	slt	a7,a7,a0
2040225c:	97c6                	add	a5,a5,a7
2040225e:	07c2                	slli	a5,a5,0x10
20402260:	87c1                	srai	a5,a5,0x10
20402262:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20402264:	88aa                	mv	a7,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402266:	000e2e83          	lw	t4,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040226a:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
2040226c:	70644863          	blt	s0,t1,2040297c <core_bench_matrix+0x11bc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402270:	01d8a8b3          	slt	a7,a7,t4
20402274:	97c6                	add	a5,a5,a7
20402276:	07c2                	slli	a5,a5,0x10
20402278:	87c1                	srai	a5,a5,0x10
2040227a:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
2040227c:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
2040227e:	000e2e83          	lw	t4,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402282:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402284:	6e644663          	blt	s0,t1,20402970 <core_bench_matrix+0x11b0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402288:	01d8a8b3          	slt	a7,a7,t4
2040228c:	97c6                	add	a5,a5,a7
2040228e:	07c2                	slli	a5,a5,0x10
20402290:	87c1                	srai	a5,a5,0x10
20402292:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20402294:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402296:	000e2e83          	lw	t4,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040229a:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
2040229c:	76644263          	blt	s0,t1,20402a00 <core_bench_matrix+0x1240>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204022a0:	01d8a8b3          	slt	a7,a7,t4
204022a4:	97c6                	add	a5,a5,a7
204022a6:	07c2                	slli	a5,a5,0x10
204022a8:	87c1                	srai	a5,a5,0x10
204022aa:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
204022ac:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
204022ae:	0bc69163          	bne	a3,t3,20402350 <core_bench_matrix+0xb90>
204022b2:	aa35                	j	204023ee <core_bench_matrix+0xc2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204022b4:	004e2883          	lw	a7,4(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204022b8:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204022ba:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204022bc:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204022be:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204022c0:	87c1                	srai	a5,a5,0x10
204022c2:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204022c4:	0a645663          	bge	s0,t1,20402370 <core_bench_matrix+0xbb0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204022c8:	004e2503          	lw	a0,4(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204022cc:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204022ce:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204022d0:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204022d2:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204022d4:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204022d6:	0a644763          	blt	s0,t1,20402384 <core_bench_matrix+0xbc4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204022da:	00a8a8b3          	slt	a7,a7,a0
204022de:	97c6                	add	a5,a5,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204022e0:	008e2883          	lw	a7,8(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204022e4:	07c2                	slli	a5,a5,0x10
204022e6:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204022e8:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204022ea:	0a644663          	blt	s0,t1,20402396 <core_bench_matrix+0xbd6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204022ee:	01152533          	slt	a0,a0,a7
204022f2:	97aa                	add	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204022f4:	00ce2503          	lw	a0,12(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204022f8:	07c2                	slli	a5,a5,0x10
204022fa:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204022fc:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204022fe:	0a644563          	blt	s0,t1,204023a8 <core_bench_matrix+0xbe8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402302:	00a8a8b3          	slt	a7,a7,a0
20402306:	97c6                	add	a5,a5,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402308:	010e2883          	lw	a7,16(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040230c:	07c2                	slli	a5,a5,0x10
2040230e:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402310:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402312:	0a644463          	blt	s0,t1,204023ba <core_bench_matrix+0xbfa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402316:	01152533          	slt	a0,a0,a7
2040231a:	97aa                	add	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
2040231c:	014e2503          	lw	a0,20(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402320:	07c2                	slli	a5,a5,0x10
20402322:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402324:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402326:	0a644363          	blt	s0,t1,204023cc <core_bench_matrix+0xc0c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
2040232a:	018e2e83          	lw	t4,24(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040232e:	00a8a8b3          	slt	a7,a7,a0
20402332:	97c6                	add	a5,a5,a7
20402334:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402336:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402338:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
2040233a:	0a644263          	blt	s0,t1,204023de <core_bench_matrix+0xc1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040233e:	01d52533          	slt	a0,a0,t4
20402342:	97aa                	add	a5,a5,a0
20402344:	07c2                	slli	a5,a5,0x10
20402346:	0e71                	addi	t3,t3,28
20402348:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
2040234a:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
2040234c:	0bc68163          	beq	a3,t3,204023ee <core_bench_matrix+0xc2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402350:	000e2e83          	lw	t4,0(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402354:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402356:	f4644fe3          	blt	s0,t1,204022b4 <core_bench_matrix+0xaf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040235a:	01d8a8b3          	slt	a7,a7,t4
2040235e:	97c6                	add	a5,a5,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402360:	004e2883          	lw	a7,4(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402364:	07c2                	slli	a5,a5,0x10
20402366:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402368:	9346                	add	t1,t1,a7
2040236a:	0e11                	addi	t3,t3,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
2040236c:	f4644ee3          	blt	s0,t1,204022c8 <core_bench_matrix+0xb08>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402370:	004e2503          	lw	a0,4(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402374:	011eaeb3          	slt	t4,t4,a7
20402378:	97f6                	add	a5,a5,t4
2040237a:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040237c:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040237e:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402380:	f4645de3          	bge	s0,t1,204022da <core_bench_matrix+0xb1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402384:	008e2883          	lw	a7,8(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402388:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040238a:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040238c:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040238e:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402390:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402392:	f4645ee3          	bge	s0,t1,204022ee <core_bench_matrix+0xb2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402396:	00ce2503          	lw	a0,12(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040239a:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040239c:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040239e:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204023a0:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023a2:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204023a4:	f4645fe3          	bge	s0,t1,20402302 <core_bench_matrix+0xb42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204023a8:	010e2883          	lw	a7,16(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023ac:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204023ae:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023b0:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204023b2:	9346                	add	t1,t1,a7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023b4:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204023b6:	f66450e3          	bge	s0,t1,20402316 <core_bench_matrix+0xb56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204023ba:	014e2503          	lw	a0,20(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023be:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204023c0:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023c2:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204023c4:	932a                	add	t1,t1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023c6:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204023c8:	f66451e3          	bge	s0,t1,2040232a <core_bench_matrix+0xb6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204023cc:	018e2e83          	lw	t4,24(t3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023d0:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204023d2:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023d4:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204023d6:	9376                	add	t1,t1,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023d8:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204023da:	f66452e3          	bge	s0,t1,2040233e <core_bench_matrix+0xb7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204023de:	07a9                	addi	a5,a5,10
204023e0:	07c2                	slli	a5,a5,0x10
204023e2:	0e71                	addi	t3,t3,28
204023e4:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204023e6:	4301                	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
204023e8:	88f6                	mv	a7,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
204023ea:	f7c693e3          	bne	a3,t3,20402350 <core_bench_matrix+0xb90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
204023ee:	0605                	addi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
204023f0:	88f6                	mv	a7,t4
204023f2:	410706b3          	sub	a3,a4,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
204023f6:	8ebe                	mv	t4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
204023f8:	dcca16e3          	bne	s4,a2,204021c4 <core_bench_matrix+0xa04>
matrix_test():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:136
	crc=crc16(matrix_sum(N,C,clipval),crc);
204023fc:	45f2                	lw	a1,28(sp)
204023fe:	853e                	mv	a0,a5
20402400:	7f0010ef          	jal	ra,20403bf0 <crc16>
20402404:	4892                	lw	a7,4(sp)
20402406:	85aa                	mv	a1,a0
matrix_mul_matrix_bitextract():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:298
	Multiply a matrix by a matrix, and extract some bits from the result.
	Basic code is used in many algorithms, mostly with minor changes such as scaling.
*/
void matrix_mul_matrix_bitextract(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
	ee_u32 i,j,k;
	for (i=0; i<N; i++) {
20402408:	4f01                	li	t5,0
2040240a:	8eda                	mv	t4,s6
2040240c:	012a8fb3          	add	t6,s5,s2
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20402410:	8376                	mv	t1,t4
20402412:	8556                	mv	a0,s5
20402414:	01190833          	add	a6,s2,a7
20402418:	41180633          	sub	a2,a6,a7
2040241c:	1679                	addi	a2,a2,-2
2040241e:	8205                	srli	a2,a2,0x1
20402420:	0605                	addi	a2,a2,1
matrix_mul_matrix_bitextract():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:300
		for (j=0; j<N; j++) {
			C[i*N+j]=0;
20402422:	00032023          	sw	zero,0(t1) # 4000 <__stack_size+0x3000>
20402426:	8a0d                	andi	a2,a2,3
20402428:	87aa                	mv	a5,a0
2040242a:	8746                	mv	a4,a7
2040242c:	4681                	li	a3,0
2040242e:	ce3d                	beqz	a2,204024ac <core_bench_matrix+0xcec>
20402430:	4e05                	li	t3,1
20402432:	05c60963          	beq	a2,t3,20402484 <core_bench_matrix+0xcc4>
20402436:	4e09                	li	t3,2
20402438:	03c60463          	beq	a2,t3,20402460 <core_bench_matrix+0xca0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:303
			for(k=0;k<N;k++)
			{
				MATRES tmp=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
2040243c:	00051683          	lh	a3,0(a0)
20402440:	00089603          	lh	a2,0(a7)
20402444:	00288713          	addi	a4,a7,2
20402448:	012507b3          	add	a5,a0,s2
2040244c:	02d60633          	mul	a2,a2,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:304
				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
20402450:	40265693          	srai	a3,a2,0x2
20402454:	8615                	srai	a2,a2,0x5
20402456:	8abd                	andi	a3,a3,15
20402458:	07f67613          	andi	a2,a2,127
2040245c:	02c686b3          	mul	a3,a3,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:303
				MATRES tmp=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
20402460:	00079e03          	lh	t3,0(a5)
20402464:	00071603          	lh	a2,0(a4)
20402468:	97ca                	add	a5,a5,s2
2040246a:	0709                	addi	a4,a4,2
2040246c:	03c60633          	mul	a2,a2,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:304
				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
20402470:	40265e13          	srai	t3,a2,0x2
20402474:	8615                	srai	a2,a2,0x5
20402476:	00fe7e13          	andi	t3,t3,15
2040247a:	07f67613          	andi	a2,a2,127
2040247e:	02ce0633          	mul	a2,t3,a2
20402482:	96b2                	add	a3,a3,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:303
				MATRES tmp=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
20402484:	00079e03          	lh	t3,0(a5)
20402488:	00071603          	lh	a2,0(a4)
2040248c:	0709                	addi	a4,a4,2
2040248e:	97ca                	add	a5,a5,s2
20402490:	03c60633          	mul	a2,a2,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:304
				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
20402494:	40265e13          	srai	t3,a2,0x2
20402498:	8615                	srai	a2,a2,0x5
2040249a:	00fe7e13          	andi	t3,t3,15
2040249e:	07f67613          	andi	a2,a2,127
204024a2:	02ce0633          	mul	a2,t3,a2
204024a6:	96b2                	add	a3,a3,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:301
			for(k=0;k<N;k++)
204024a8:	08e80e63          	beq	a6,a4,20402544 <core_bench_matrix+0xd84>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:303
				MATRES tmp=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
204024ac:	00079603          	lh	a2,0(a5)
204024b0:	00071d03          	lh	s10,0(a4)
204024b4:	97ca                	add	a5,a5,s2
204024b6:	00271c03          	lh	s8,2(a4)
204024ba:	00079383          	lh	t2,0(a5)
204024be:	97ca                	add	a5,a5,s2
204024c0:	00471b83          	lh	s7,4(a4)
204024c4:	00079283          	lh	t0,0(a5)
204024c8:	97ca                	add	a5,a5,s2
204024ca:	00671083          	lh	ra,6(a4)
204024ce:	02cd0d33          	mul	s10,s10,a2
204024d2:	00079e03          	lh	t3,0(a5)
204024d6:	0721                	addi	a4,a4,8
204024d8:	97ca                	add	a5,a5,s2
204024da:	027c03b3          	mul	t2,s8,t2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:304
				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
204024de:	405d5613          	srai	a2,s10,0x5
204024e2:	402d5c13          	srai	s8,s10,0x2
204024e6:	00fc7c13          	andi	s8,s8,15
204024ea:	07f67613          	andi	a2,a2,127
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:303
				MATRES tmp=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
204024ee:	025b82b3          	mul	t0,s7,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:304
				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
204024f2:	4023db93          	srai	s7,t2,0x2
204024f6:	4053d393          	srai	t2,t2,0x5
204024fa:	00fbfb93          	andi	s7,s7,15
204024fe:	07f3f393          	andi	t2,t2,127
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:303
				MATRES tmp=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
20402502:	03c08e33          	mul	t3,ra,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:304
				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
20402506:	4022d093          	srai	ra,t0,0x2
2040250a:	4052d293          	srai	t0,t0,0x5
2040250e:	00f0f093          	andi	ra,ra,15
20402512:	07f2f293          	andi	t0,t0,127
20402516:	02cc0633          	mul	a2,s8,a2
2040251a:	402e5c13          	srai	s8,t3,0x2
2040251e:	405e5e13          	srai	t3,t3,0x5
20402522:	00fc7c13          	andi	s8,s8,15
20402526:	07fe7e13          	andi	t3,t3,127
2040252a:	027b83b3          	mul	t2,s7,t2
2040252e:	96b2                	add	a3,a3,a2
20402530:	025082b3          	mul	t0,ra,t0
20402534:	969e                	add	a3,a3,t2
20402536:	03cc0e33          	mul	t3,s8,t3
2040253a:	9696                	add	a3,a3,t0
2040253c:	96f2                	add	a3,a3,t3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:301
			for(k=0;k<N;k++)
2040253e:	f6e817e3          	bne	a6,a4,204024ac <core_bench_matrix+0xcec>
20402542:	0001                	nop
20402544:	00d32023          	sw	a3,0(t1)
20402548:	0509                	addi	a0,a0,2
2040254a:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:299
		for (j=0; j<N; j++) {
2040254c:	ecaf96e3          	bne	t6,a0,20402418 <core_bench_matrix+0xc58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:298
	for (i=0; i<N; i++) {
20402550:	0f05                	addi	t5,t5,1
20402552:	88c2                	mv	a7,a6
20402554:	9ece                	add	t4,t4,s3
20402556:	ebea1de3          	bne	s4,t5,20402410 <core_bench_matrix+0xc50>
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:218
	ee_s16 ret=0;
2040255a:	4e81                	li	t4,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:217
	MATRES tmp=0,prev=0,cur=0;
2040255c:	4701                	li	a4,0
2040255e:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20402560:	4681                	li	a3,0
20402562:	003c9613          	slli	a2,s9,0x3
20402566:	99da                	add	s3,s3,s6
20402568:	002c9893          	slli	a7,s9,0x2
2040256c:	01388833          	add	a6,a7,s3
20402570:	41098f33          	sub	t5,s3,a6
20402574:	1f71                	addi	t5,t5,-4
20402576:	002f5f13          	srli	t5,t5,0x2
2040257a:	0f05                	addi	t5,t5,1
2040257c:	007f7f13          	andi	t5,t5,7
matrix_mul_matrix_bitextract():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:298
	for (i=0; i<N; i++) {
20402580:	8342                	mv	t1,a6
20402582:	87f6                	mv	a5,t4
20402584:	160f0c63          	beqz	t5,204026fc <core_bench_matrix+0xf3c>
20402588:	4505                	li	a0,1
2040258a:	0aaf0b63          	beq	t5,a0,20402640 <core_bench_matrix+0xe80>
2040258e:	4509                	li	a0,2
20402590:	08af0c63          	beq	t5,a0,20402628 <core_bench_matrix+0xe68>
20402594:	450d                	li	a0,3
20402596:	06af0d63          	beq	t5,a0,20402610 <core_bench_matrix+0xe50>
2040259a:	4511                	li	a0,4
2040259c:	04af0e63          	beq	t5,a0,204025f8 <core_bench_matrix+0xe38>
204025a0:	4515                	li	a0,5
204025a2:	02af0f63          	beq	t5,a0,204025e0 <core_bench_matrix+0xe20>
204025a6:	4519                	li	a0,6
204025a8:	02af0063          	beq	t5,a0,204025c8 <core_bench_matrix+0xe08>
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204025ac:	00082503          	lw	a0,0(a6)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204025b0:	9e2a                	add	t3,t3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204025b2:	47c44963          	blt	s0,t3,20402a24 <core_bench_matrix+0x1264>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204025b6:	00a72733          	slt	a4,a4,a0
204025ba:	00ee87b3          	add	a5,t4,a4
204025be:	07c2                	slli	a5,a5,0x10
204025c0:	87c1                	srai	a5,a5,0x10
204025c2:	00480313          	addi	t1,a6,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
204025c6:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204025c8:	00032503          	lw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204025cc:	9e2a                	add	t3,t3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204025ce:	3fc44b63          	blt	s0,t3,204029c4 <core_bench_matrix+0x1204>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204025d2:	00a72733          	slt	a4,a4,a0
204025d6:	97ba                	add	a5,a5,a4
204025d8:	07c2                	slli	a5,a5,0x10
204025da:	87c1                	srai	a5,a5,0x10
204025dc:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
204025de:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204025e0:	00032e83          	lw	t4,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204025e4:	9e76                	add	t3,t3,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204025e6:	3dc44963          	blt	s0,t3,204029b8 <core_bench_matrix+0x11f8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204025ea:	01d72733          	slt	a4,a4,t4
204025ee:	97ba                	add	a5,a5,a4
204025f0:	07c2                	slli	a5,a5,0x10
204025f2:	87c1                	srai	a5,a5,0x10
204025f4:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
204025f6:	8776                	mv	a4,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204025f8:	00032e83          	lw	t4,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204025fc:	9e76                	add	t3,t3,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204025fe:	3dc44963          	blt	s0,t3,204029d0 <core_bench_matrix+0x1210>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402602:	01d72733          	slt	a4,a4,t4
20402606:	97ba                	add	a5,a5,a4
20402608:	07c2                	slli	a5,a5,0x10
2040260a:	87c1                	srai	a5,a5,0x10
2040260c:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
2040260e:	8776                	mv	a4,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402610:	00032e83          	lw	t4,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402614:	9e76                	add	t3,t3,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402616:	3dc44963          	blt	s0,t3,204029e8 <core_bench_matrix+0x1228>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040261a:	01d72733          	slt	a4,a4,t4
2040261e:	97ba                	add	a5,a5,a4
20402620:	07c2                	slli	a5,a5,0x10
20402622:	87c1                	srai	a5,a5,0x10
20402624:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20402626:	8776                	mv	a4,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402628:	00032e83          	lw	t4,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040262c:	9e76                	add	t3,t3,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
2040262e:	3bc44763          	blt	s0,t3,204029dc <core_bench_matrix+0x121c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402632:	01d72733          	slt	a4,a4,t4
20402636:	97ba                	add	a5,a5,a4
20402638:	07c2                	slli	a5,a5,0x10
2040263a:	87c1                	srai	a5,a5,0x10
2040263c:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
2040263e:	8776                	mv	a4,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402640:	00032e83          	lw	t4,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402644:	9e76                	add	t3,t3,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402646:	3bc44763          	blt	s0,t3,204029f4 <core_bench_matrix+0x1234>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040264a:	01d72733          	slt	a4,a4,t4
2040264e:	97ba                	add	a5,a5,a4
20402650:	07c2                	slli	a5,a5,0x10
20402652:	87c1                	srai	a5,a5,0x10
20402654:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20402656:	8776                	mv	a4,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20402658:	0a699263          	bne	s3,t1,204026fc <core_bench_matrix+0xf3c>
2040265c:	aa3d                	j	2040279a <core_bench_matrix+0xfda>
2040265e:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402660:	00432503          	lw	a0,4(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402664:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402666:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402668:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040266a:	9e2a                	add	t3,t3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040266c:	87c1                	srai	a5,a5,0x10
2040266e:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402670:	0bc45663          	bge	s0,t3,2040271c <core_bench_matrix+0xf5c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402674:	00432703          	lw	a4,4(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402678:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040267a:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040267c:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040267e:	9e3a                	add	t3,t3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402680:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402682:	0bc44763          	blt	s0,t3,20402730 <core_bench_matrix+0xf70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402686:	00e52533          	slt	a0,a0,a4
2040268a:	97aa                	add	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
2040268c:	00832503          	lw	a0,8(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402690:	07c2                	slli	a5,a5,0x10
20402692:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402694:	9e2a                	add	t3,t3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402696:	0bc44663          	blt	s0,t3,20402742 <core_bench_matrix+0xf82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040269a:	00a72733          	slt	a4,a4,a0
2040269e:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204026a0:	00c32703          	lw	a4,12(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204026a4:	07c2                	slli	a5,a5,0x10
204026a6:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204026a8:	9e3a                	add	t3,t3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204026aa:	0bc44563          	blt	s0,t3,20402754 <core_bench_matrix+0xf94>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204026ae:	00e52533          	slt	a0,a0,a4
204026b2:	97aa                	add	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204026b4:	01032503          	lw	a0,16(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204026b8:	07c2                	slli	a5,a5,0x10
204026ba:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204026bc:	9e2a                	add	t3,t3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204026be:	0bc44463          	blt	s0,t3,20402766 <core_bench_matrix+0xfa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204026c2:	00a72733          	slt	a4,a4,a0
204026c6:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204026c8:	01432703          	lw	a4,20(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204026cc:	07c2                	slli	a5,a5,0x10
204026ce:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204026d0:	9e3a                	add	t3,t3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204026d2:	0bc44363          	blt	s0,t3,20402778 <core_bench_matrix+0xfb8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204026d6:	01832e83          	lw	t4,24(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204026da:	00e52533          	slt	a0,a0,a4
204026de:	97aa                	add	a5,a5,a0
204026e0:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
204026e2:	9e76                	add	t3,t3,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204026e4:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
204026e6:	0bc44263          	blt	s0,t3,2040278a <core_bench_matrix+0xfca>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204026ea:	01d72733          	slt	a4,a4,t4
204026ee:	97ba                	add	a5,a5,a4
204026f0:	07c2                	slli	a5,a5,0x10
204026f2:	0371                	addi	t1,t1,28
204026f4:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
204026f6:	8776                	mv	a4,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
204026f8:	0a698163          	beq	s3,t1,2040279a <core_bench_matrix+0xfda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
204026fc:	00032e83          	lw	t4,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402700:	9e76                	add	t3,t3,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402702:	f5c44fe3          	blt	s0,t3,20402660 <core_bench_matrix+0xea0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402706:	00432503          	lw	a0,4(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040270a:	01d72733          	slt	a4,a4,t4
2040270e:	97ba                	add	a5,a5,a4
20402710:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402712:	9e2a                	add	t3,t3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402714:	87c1                	srai	a5,a5,0x10
20402716:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402718:	f5c44ee3          	blt	s0,t3,20402674 <core_bench_matrix+0xeb4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
2040271c:	00432703          	lw	a4,4(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
20402720:	00aeaeb3          	slt	t4,t4,a0
20402724:	97f6                	add	a5,a5,t4
20402726:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402728:	9e3a                	add	t3,t3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040272a:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
2040272c:	f5c45de3          	bge	s0,t3,20402686 <core_bench_matrix+0xec6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402730:	00832503          	lw	a0,8(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402734:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402736:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402738:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040273a:	9e2a                	add	t3,t3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040273c:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
2040273e:	f5c45ee3          	bge	s0,t3,2040269a <core_bench_matrix+0xeda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402742:	00c32703          	lw	a4,12(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402746:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402748:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040274a:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040274c:	9e3a                	add	t3,t3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040274e:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402750:	f5c45fe3          	bge	s0,t3,204026ae <core_bench_matrix+0xeee>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402754:	01032503          	lw	a0,16(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402758:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040275a:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040275c:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
2040275e:	9e2a                	add	t3,t3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402760:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402762:	f7c450e3          	bge	s0,t3,204026c2 <core_bench_matrix+0xf02>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402766:	01432703          	lw	a4,20(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040276a:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040276c:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040276e:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402770:	9e3a                	add	t3,t3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402772:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402774:	f7c451e3          	bge	s0,t3,204026d6 <core_bench_matrix+0xf16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:222
			cur=C[i*N+j];
20402778:	01832e83          	lw	t4,24(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040277c:	07a9                	addi	a5,a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040277e:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402780:	07c2                	slli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:223
			tmp+=cur;
20402782:	9e76                	add	t3,t3,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402784:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:224
			if (tmp>clipval) {
20402786:	f7c452e3          	bge	s0,t3,204026ea <core_bench_matrix+0xf2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040278a:	07a9                	addi	a5,a5,10
2040278c:	07c2                	slli	a5,a5,0x10
2040278e:	0371                	addi	t1,t1,28
20402790:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402792:	4e01                	li	t3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
20402794:	8776                	mv	a4,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
20402796:	f66993e3          	bne	s3,t1,204026fc <core_bench_matrix+0xf3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
2040279a:	0685                	addi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:230
			prev=cur;
2040279c:	8776                	mv	a4,t4
2040279e:	40c809b3          	sub	s3,a6,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
204027a2:	8ebe                	mv	t4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
204027a4:	dcda14e3          	bne	s4,a3,2040256c <core_bench_matrix+0xdac>
204027a8:	853e                	mv	a0,a5
matrix_test():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:141
	crc=crc16(matrix_sum(N,C,clipval),crc);
204027aa:	446010ef          	jal	ra,20403bf0 <crc16>
204027ae:	4792                	lw	a5,4(sp)
matrix_add_const():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
204027b0:	4681                	li	a3,0
204027b2:	0001                	nop
204027b4:	ffe90713          	addi	a4,s2,-2
204027b8:	8305                	srli	a4,a4,0x1
204027ba:	0705                	addi	a4,a4,1
204027bc:	8b1d                	andi	a4,a4,7
204027be:	00f90833          	add	a6,s2,a5
204027c2:	cf3d                	beqz	a4,20402840 <core_bench_matrix+0x1080>
204027c4:	4605                	li	a2,1
204027c6:	06c70563          	beq	a4,a2,20402830 <core_bench_matrix+0x1070>
204027ca:	4609                	li	a2,2
204027cc:	04c70c63          	beq	a4,a2,20402824 <core_bench_matrix+0x1064>
204027d0:	460d                	li	a2,3
204027d2:	04c70363          	beq	a4,a2,20402818 <core_bench_matrix+0x1058>
204027d6:	4611                	li	a2,4
204027d8:	02c70a63          	beq	a4,a2,2040280c <core_bench_matrix+0x104c>
204027dc:	4615                	li	a2,5
204027de:	02c70163          	beq	a4,a2,20402800 <core_bench_matrix+0x1040>
204027e2:	4619                	li	a2,6
204027e4:	00c70863          	beq	a4,a2,204027f4 <core_bench_matrix+0x1034>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:256
			A[i*N+j] += val;
204027e8:	0007d703          	lhu	a4,0(a5)
204027ec:	0789                	addi	a5,a5,2
204027ee:	8f05                	sub	a4,a4,s1
204027f0:	fee79f23          	sh	a4,-2(a5)
204027f4:	0007d703          	lhu	a4,0(a5)
204027f8:	0789                	addi	a5,a5,2
204027fa:	8f05                	sub	a4,a4,s1
204027fc:	fee79f23          	sh	a4,-2(a5)
20402800:	0007d703          	lhu	a4,0(a5)
20402804:	0789                	addi	a5,a5,2
20402806:	8f05                	sub	a4,a4,s1
20402808:	fee79f23          	sh	a4,-2(a5)
2040280c:	0007d703          	lhu	a4,0(a5)
20402810:	0789                	addi	a5,a5,2
20402812:	8f05                	sub	a4,a4,s1
20402814:	fee79f23          	sh	a4,-2(a5)
20402818:	0007d703          	lhu	a4,0(a5)
2040281c:	0789                	addi	a5,a5,2
2040281e:	8f05                	sub	a4,a4,s1
20402820:	fee79f23          	sh	a4,-2(a5)
20402824:	0007d703          	lhu	a4,0(a5)
20402828:	0789                	addi	a5,a5,2
2040282a:	8f05                	sub	a4,a4,s1
2040282c:	fee79f23          	sh	a4,-2(a5)
20402830:	0007d703          	lhu	a4,0(a5)
20402834:	0789                	addi	a5,a5,2
20402836:	8f05                	sub	a4,a4,s1
20402838:	fee79f23          	sh	a4,-2(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:255
		for (j=0; j<N; j++) {
2040283c:	07078263          	beq	a5,a6,204028a0 <core_bench_matrix+0x10e0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:256
			A[i*N+j] += val;
20402840:	0007df03          	lhu	t5,0(a5)
20402844:	0027de83          	lhu	t4,2(a5)
20402848:	0047de03          	lhu	t3,4(a5)
2040284c:	0067d303          	lhu	t1,6(a5)
20402850:	0087d883          	lhu	a7,8(a5)
20402854:	00a7d583          	lhu	a1,10(a5)
20402858:	00c7d603          	lhu	a2,12(a5)
2040285c:	00e7d703          	lhu	a4,14(a5)
20402860:	409f0f33          	sub	t5,t5,s1
20402864:	409e8eb3          	sub	t4,t4,s1
20402868:	409e0e33          	sub	t3,t3,s1
2040286c:	40930333          	sub	t1,t1,s1
20402870:	409888b3          	sub	a7,a7,s1
20402874:	8d85                	sub	a1,a1,s1
20402876:	8e05                	sub	a2,a2,s1
20402878:	8f05                	sub	a4,a4,s1
2040287a:	01e79023          	sh	t5,0(a5)
2040287e:	01d79123          	sh	t4,2(a5)
20402882:	01c79223          	sh	t3,4(a5)
20402886:	00679323          	sh	t1,6(a5)
2040288a:	01179423          	sh	a7,8(a5)
2040288e:	00b79523          	sh	a1,10(a5)
20402892:	00c79623          	sh	a2,12(a5)
20402896:	00e79723          	sh	a4,14(a5)
2040289a:	07c1                	addi	a5,a5,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:255
		for (j=0; j<N; j++) {
2040289c:	fb0792e3          	bne	a5,a6,20402840 <core_bench_matrix+0x1080>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
204028a0:	0685                	addi	a3,a3,1
204028a2:	f0da19e3          	bne	s4,a3,204027b4 <core_bench_matrix+0xff4>
core_bench_matrix():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:91
}
204028a6:	4466                	lw	s0,88(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:88
	crc=crc16(matrix_test(N,C,A,B,val),crc);
204028a8:	45a2                	lw	a1,8(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:91
}
204028aa:	40f6                	lw	ra,92(sp)
204028ac:	44d6                	lw	s1,84(sp)
204028ae:	4946                	lw	s2,80(sp)
204028b0:	49b6                	lw	s3,76(sp)
204028b2:	4a26                	lw	s4,72(sp)
204028b4:	4a96                	lw	s5,68(sp)
204028b6:	4b06                	lw	s6,64(sp)
204028b8:	5bf2                	lw	s7,60(sp)
204028ba:	5c62                	lw	s8,56(sp)
204028bc:	5cd2                	lw	s9,52(sp)
204028be:	5d42                	lw	s10,48(sp)
204028c0:	5db2                	lw	s11,44(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:88
	crc=crc16(matrix_test(N,C,A,B,val),crc);
204028c2:	0542                	slli	a0,a0,0x10
204028c4:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:91
}
204028c6:	6125                	addi	sp,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:88
	crc=crc16(matrix_test(N,C,A,B,val),crc);
204028c8:	3280106f          	j	20403bf0 <crc16>
matrix_sum():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
204028cc:	01d7a7b3          	slt	a5,a5,t4
204028d0:	97aa                	add	a5,a5,a0
204028d2:	07c2                	slli	a5,a5,0x10
204028d4:	87c1                	srai	a5,a5,0x10
204028d6:	afcff06f          	j	20401bd2 <core_bench_matrix+0x412>
204028da:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204028dc:	00a50793          	addi	a5,a0,10
204028e0:	01079513          	slli	a0,a5,0x10
204028e4:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204028e6:	4301                	li	t1,0
204028e8:	9d4ff06f          	j	20401abc <core_bench_matrix+0x2fc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204028ec:	00a50793          	addi	a5,a0,10
204028f0:	01079513          	slli	a0,a5,0x10
204028f4:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204028f6:	4301                	li	t1,0
204028f8:	9aaff06f          	j	20401aa2 <core_bench_matrix+0x2e2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204028fc:	00a50793          	addi	a5,a0,10
20402900:	01079513          	slli	a0,a5,0x10
20402904:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402906:	4301                	li	t1,0
20402908:	9ceff06f          	j	20401ad6 <core_bench_matrix+0x316>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040290c:	00a50793          	addi	a5,a0,10
20402910:	01079513          	slli	a0,a5,0x10
20402914:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402916:	4301                	li	t1,0
20402918:	9f6ff06f          	j	20401b0e <core_bench_matrix+0x34e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040291c:	00a50793          	addi	a5,a0,10
20402920:	01079513          	slli	a0,a5,0x10
20402924:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402926:	4301                	li	t1,0
20402928:	9caff06f          	j	20401af2 <core_bench_matrix+0x332>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:228
				ret += (cur>prev) ? 1 : 0;
2040292c:	01d8a8b3          	slt	a7,a7,t4
20402930:	97c6                	add	a5,a5,a7
20402932:	07c2                	slli	a5,a5,0x10
20402934:	87c1                	srai	a5,a5,0x10
20402936:	e30ff06f          	j	20401f66 <core_bench_matrix+0x7a6>
2040293a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040293c:	07a9                	addi	a5,a5,10
2040293e:	07c2                	slli	a5,a5,0x10
20402940:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402942:	4301                	li	t1,0
20402944:	d66ff06f          	j	20401eaa <core_bench_matrix+0x6ea>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402948:	07a9                	addi	a5,a5,10
2040294a:	07c2                	slli	a5,a5,0x10
2040294c:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040294e:	4301                	li	t1,0
20402950:	d2aff06f          	j	20401e7a <core_bench_matrix+0x6ba>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402954:	07a9                	addi	a5,a5,10
20402956:	07c2                	slli	a5,a5,0x10
20402958:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040295a:	4301                	li	t1,0
2040295c:	d06ff06f          	j	20401e62 <core_bench_matrix+0x6a2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402960:	00a50793          	addi	a5,a0,10
20402964:	01079513          	slli	a0,a5,0x10
20402968:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040296a:	4301                	li	t1,0
2040296c:	9beff06f          	j	20401b2a <core_bench_matrix+0x36a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402970:	07a9                	addi	a5,a5,10
20402972:	07c2                	slli	a5,a5,0x10
20402974:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402976:	4301                	li	t1,0
20402978:	ba29                	j	20402292 <core_bench_matrix+0xad2>
2040297a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
2040297c:	07a9                	addi	a5,a5,10
2040297e:	07c2                	slli	a5,a5,0x10
20402980:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402982:	4301                	li	t1,0
20402984:	b8dd                	j	2040227a <core_bench_matrix+0xaba>
20402986:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402988:	07a9                	addi	a5,a5,10
2040298a:	07c2                	slli	a5,a5,0x10
2040298c:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040298e:	4301                	li	t1,0
20402990:	b8c9                	j	20402262 <core_bench_matrix+0xaa2>
20402992:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402994:	07a9                	addi	a5,a5,10
20402996:	07c2                	slli	a5,a5,0x10
20402998:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
2040299a:	4301                	li	t1,0
2040299c:	b859                	j	20402232 <core_bench_matrix+0xa72>
2040299e:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204029a0:	07a9                	addi	a5,a5,10
204029a2:	07c2                	slli	a5,a5,0x10
204029a4:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204029a6:	4301                	li	t1,0
204029a8:	b04d                	j	2040224a <core_bench_matrix+0xa8a>
204029aa:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204029ac:	07a9                	addi	a5,a5,10
204029ae:	07c2                	slli	a5,a5,0x10
204029b0:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204029b2:	4301                	li	t1,0
204029b4:	d0eff06f          	j	20401ec2 <core_bench_matrix+0x702>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204029b8:	07a9                	addi	a5,a5,10
204029ba:	07c2                	slli	a5,a5,0x10
204029bc:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204029be:	4e01                	li	t3,0
204029c0:	b915                	j	204025f4 <core_bench_matrix+0xe34>
204029c2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204029c4:	07a9                	addi	a5,a5,10
204029c6:	07c2                	slli	a5,a5,0x10
204029c8:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204029ca:	4e01                	li	t3,0
204029cc:	b901                	j	204025dc <core_bench_matrix+0xe1c>
204029ce:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204029d0:	07a9                	addi	a5,a5,10
204029d2:	07c2                	slli	a5,a5,0x10
204029d4:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204029d6:	4e01                	li	t3,0
204029d8:	b915                	j	2040260c <core_bench_matrix+0xe4c>
204029da:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204029dc:	07a9                	addi	a5,a5,10
204029de:	07c2                	slli	a5,a5,0x10
204029e0:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204029e2:	4e01                	li	t3,0
204029e4:	b9a1                	j	2040263c <core_bench_matrix+0xe7c>
204029e6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204029e8:	07a9                	addi	a5,a5,10
204029ea:	07c2                	slli	a5,a5,0x10
204029ec:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204029ee:	4e01                	li	t3,0
204029f0:	b915                	j	20402624 <core_bench_matrix+0xe64>
204029f2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
204029f4:	07a9                	addi	a5,a5,10
204029f6:	07c2                	slli	a5,a5,0x10
204029f8:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
204029fa:	4e01                	li	t3,0
204029fc:	b9a1                	j	20402654 <core_bench_matrix+0xe94>
204029fe:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402a00:	07a9                	addi	a5,a5,10
20402a02:	07c2                	slli	a5,a5,0x10
20402a04:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402a06:	4301                	li	t1,0
20402a08:	b04d                	j	204022aa <core_bench_matrix+0xaea>
20402a0a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402a0c:	07a9                	addi	a5,a5,10
20402a0e:	07c2                	slli	a5,a5,0x10
20402a10:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402a12:	4301                	li	t1,0
20402a14:	c7eff06f          	j	20401e92 <core_bench_matrix+0x6d2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402a18:	07a9                	addi	a5,a5,10
20402a1a:	07c2                	slli	a5,a5,0x10
20402a1c:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402a1e:	4301                	li	t1,0
20402a20:	c2aff06f          	j	20401e4a <core_bench_matrix+0x68a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402a24:	00ae8793          	addi	a5,t4,10
20402a28:	07c2                	slli	a5,a5,0x10
20402a2a:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402a2c:	4e01                	li	t3,0
20402a2e:	be51                	j	204025c2 <core_bench_matrix+0xe02>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402a30:	00ae8793          	addi	a5,t4,10
20402a34:	07c2                	slli	a5,a5,0x10
20402a36:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402a38:	4301                	li	t1,0
20402a3a:	fdeff06f          	j	20402218 <core_bench_matrix+0xa58>
20402a3e:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402a40:	00ae8793          	addi	a5,t4,10
20402a44:	07c2                	slli	a5,a5,0x10
20402a46:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402a48:	4301                	li	t1,0
20402a4a:	be6ff06f          	j	20401e30 <core_bench_matrix+0x670>
20402a4e:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:225
				ret+=10;
20402a50:	00a50793          	addi	a5,a0,10
20402a54:	01079513          	slli	a0,a5,0x10
20402a58:	8541                	srai	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:226
				tmp=0;
20402a5a:	4301                	li	t1,0
20402a5c:	82aff06f          	j	20401a86 <core_bench_matrix+0x2c6>
matrix_test():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:126
	crc=crc16(matrix_sum(N,C,clipval),crc);
20402a60:	4581                	li	a1,0
20402a62:	4501                	li	a0,0
20402a64:	18c010ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:131
	crc=crc16(matrix_sum(N,C,clipval),crc);
20402a68:	85aa                	mv	a1,a0
20402a6a:	4501                	li	a0,0
20402a6c:	184010ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:136
	crc=crc16(matrix_sum(N,C,clipval),crc);
20402a70:	85aa                	mv	a1,a0
20402a72:	4501                	li	a0,0
20402a74:	17c010ef          	jal	ra,20403bf0 <crc16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:141
	crc=crc16(matrix_sum(N,C,clipval),crc);
20402a78:	85aa                	mv	a1,a0
20402a7a:	4501                	li	a0,0
20402a7c:	174010ef          	jal	ra,20403bf0 <crc16>
20402a80:	b51d                	j	204028a6 <core_bench_matrix+0x10e6>
	...

20402a90 <core_init_matrix>:
core_init_matrix():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:165
ee_u32 core_init_matrix(ee_u32 blksize, void *memblk, ee_s32 seed, mat_params *p) {
20402a90:	7179                	addi	sp,sp,-48
20402a92:	d622                	sw	s0,44(sp)
20402a94:	d426                	sw	s1,40(sp)
20402a96:	d24a                	sw	s2,36(sp)
20402a98:	d04e                	sw	s3,32(sp)
20402a9a:	ce52                	sw	s4,28(sp)
20402a9c:	cc56                	sw	s5,24(sp)
20402a9e:	ca5a                	sw	s6,20(sp)
20402aa0:	c85e                	sw	s7,16(sp)
20402aa2:	c662                	sw	s8,12(sp)
20402aa4:	c466                	sw	s9,8(sp)
20402aa6:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:172
	if (seed==0)
20402aa8:	e211                	bnez	a2,20402aac <core_init_matrix+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:173
		seed=1;
20402aaa:	4605                	li	a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:174
	while (j<blksize) {
20402aac:	4501                	li	a0,0
20402aae:	00e04463          	bgtz	a4,20402ab6 <core_init_matrix+0x26>
20402ab2:	ac09                	j	20402cc4 <core_init_matrix+0x234>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:175
		i++;
20402ab4:	8572                	mv	a0,t3
20402ab6:	00150e13          	addi	t3,a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:176
		j=i*i*2*4;		
20402aba:	03ce07b3          	mul	a5,t3,t3
20402abe:	078e                	slli	a5,a5,0x3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:174
	while (j<blksize) {
20402ac0:	fee7cae3          	blt	a5,a4,20402ab4 <core_init_matrix+0x24>
20402ac4:	02a504b3          	mul	s1,a0,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:179
	A=(MATDAT *)align_mem(memblk);
20402ac8:	fff58a13          	addi	s4,a1,-1
20402acc:	ffca7a13          	andi	s4,s4,-4
20402ad0:	0a11                	addi	s4,s4,4
20402ad2:	0486                	slli	s1,s1,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:180
	B=A+N*N;
20402ad4:	009a0933          	add	s2,s4,s1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:182
	for (i=0; i<N; i++) {
20402ad8:	1aa05f63          	blez	a0,20402c96 <core_init_matrix+0x206>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20402adc:	6ec1                	lui	t4,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:182
	for (i=0; i<N; i++) {
20402ade:	4401                	li	s0,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:169
	ee_s32 order=1;
20402ae0:	4f85                	li	t6,1
20402ae2:	00151993          	slli	s3,a0,0x1
20402ae6:	82ca                	mv	t0,s2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20402ae8:	1efd                	addi	t4,t4,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190
			A[i*N+j] = val;
20402aea:	412a0f33          	sub	t5,s4,s2
20402aee:	0001                	nop
20402af0:	41fe07b3          	sub	a5,t3,t6
20402af4:	8b8d                	andi	a5,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:173
		seed=1;
20402af6:	8596                	mv	a1,t0
20402af8:	887e                	mv	a6,t6
20402afa:	cfc5                	beqz	a5,20402bb2 <core_init_matrix+0x122>
20402afc:	4705                	li	a4,1
20402afe:	06e78d63          	beq	a5,a4,20402b78 <core_init_matrix+0xe8>
20402b02:	4709                	li	a4,2
20402b04:	02e78f63          	beq	a5,a4,20402b42 <core_init_matrix+0xb2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20402b08:	03f60633          	mul	a2,a2,t6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185
			val = (seed + order);
20402b0c:	010f9793          	slli	a5,t6,0x10
20402b10:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190
			A[i*N+j] = val;
20402b12:	005f08b3          	add	a7,t5,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:191
			order++;
20402b16:	001f8813          	addi	a6,t6,1
20402b1a:	00228593          	addi	a1,t0,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20402b1e:	41f65713          	srai	a4,a2,0x1f
20402b22:	8341                	srli	a4,a4,0x10
20402b24:	963a                	add	a2,a2,a4
20402b26:	01d67633          	and	a2,a2,t4
20402b2a:	8e19                	sub	a2,a2,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185
			val = (seed + order);
20402b2c:	00c78733          	add	a4,a5,a2
20402b30:	0742                	slli	a4,a4,0x10
20402b32:	8741                	srai	a4,a4,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:188
			val =  (val + order);
20402b34:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:187
			B[i*N+j] = val;
20402b36:	00e29023          	sh	a4,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:189
			val=matrix_clip(val,1);
20402b3a:	0ff7f793          	andi	a5,a5,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190
			A[i*N+j] = val;
20402b3e:	00f89023          	sh	a5,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20402b42:	03060633          	mul	a2,a2,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185
			val = (seed + order);
20402b46:	01081793          	slli	a5,a6,0x10
20402b4a:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190
			A[i*N+j] = val;
20402b4c:	00bf08b3          	add	a7,t5,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185
			val = (seed + order);
20402b50:	0805                	addi	a6,a6,1
20402b52:	0589                	addi	a1,a1,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20402b54:	41f65713          	srai	a4,a2,0x1f
20402b58:	8341                	srli	a4,a4,0x10
20402b5a:	963a                	add	a2,a2,a4
20402b5c:	01d67633          	and	a2,a2,t4
20402b60:	8e19                	sub	a2,a2,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185
			val = (seed + order);
20402b62:	00c78733          	add	a4,a5,a2
20402b66:	0742                	slli	a4,a4,0x10
20402b68:	8741                	srai	a4,a4,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:188
			val =  (val + order);
20402b6a:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:187
			B[i*N+j] = val;
20402b6c:	fee59f23          	sh	a4,-2(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:189
			val=matrix_clip(val,1);
20402b70:	0ff7f793          	andi	a5,a5,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190
			A[i*N+j] = val;
20402b74:	00f89023          	sh	a5,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20402b78:	03060633          	mul	a2,a2,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185
			val = (seed + order);
20402b7c:	01081793          	slli	a5,a6,0x10
20402b80:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190
			A[i*N+j] = val;
20402b82:	00bf08b3          	add	a7,t5,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:191
			order++;
20402b86:	0805                	addi	a6,a6,1
20402b88:	0589                	addi	a1,a1,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20402b8a:	41f65713          	srai	a4,a2,0x1f
20402b8e:	8341                	srli	a4,a4,0x10
20402b90:	963a                	add	a2,a2,a4
20402b92:	01d67633          	and	a2,a2,t4
20402b96:	8e19                	sub	a2,a2,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185
			val = (seed + order);
20402b98:	00c78733          	add	a4,a5,a2
20402b9c:	0742                	slli	a4,a4,0x10
20402b9e:	8741                	srai	a4,a4,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:188
			val =  (val + order);
20402ba0:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:187
			B[i*N+j] = val;
20402ba2:	fee59f23          	sh	a4,-2(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:189
			val=matrix_clip(val,1);
20402ba6:	0ff7f793          	andi	a5,a5,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190
			A[i*N+j] = val;
20402baa:	00f89023          	sh	a5,0(a7)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:183
		for (j=0; j<N; j++) {
20402bae:	0dc80e63          	beq	a6,t3,20402c8a <core_init_matrix+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184 (discriminator 3)
			seed = ( ( order * seed ) % 65536 );
20402bb2:	03060633          	mul	a2,a2,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:191 (discriminator 3)
			order++;
20402bb6:	00180713          	addi	a4,a6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185 (discriminator 3)
			val = (seed + order);
20402bba:	01071b93          	slli	s7,a4,0x10
20402bbe:	01081893          	slli	a7,a6,0x10
20402bc2:	4108d893          	srai	a7,a7,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:191 (discriminator 3)
			order++;
20402bc6:	00280793          	addi	a5,a6,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185 (discriminator 3)
			val = (seed + order);
20402bca:	01079313          	slli	t1,a5,0x10
20402bce:	410bdb93          	srai	s7,s7,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190 (discriminator 3)
			A[i*N+j] = val;
20402bd2:	00bf03b3          	add	t2,t5,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:191 (discriminator 3)
			order++;
20402bd6:	00380b13          	addi	s6,a6,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184 (discriminator 3)
			seed = ( ( order * seed ) % 65536 );
20402bda:	41f65c93          	srai	s9,a2,0x1f
20402bde:	010cdc93          	srli	s9,s9,0x10
20402be2:	9666                	add	a2,a2,s9
20402be4:	01d67633          	and	a2,a2,t4
20402be8:	41960633          	sub	a2,a2,s9
20402bec:	02e60733          	mul	a4,a2,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185 (discriminator 3)
			val = (seed + order);
20402bf0:	9646                	add	a2,a2,a7
20402bf2:	0642                	slli	a2,a2,0x10
20402bf4:	8641                	srai	a2,a2,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:187 (discriminator 3)
			B[i*N+j] = val;
20402bf6:	00c59023          	sh	a2,0(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:188 (discriminator 3)
			val =  (val + order);
20402bfa:	98b2                	add	a7,a7,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:189 (discriminator 3)
			val=matrix_clip(val,1);
20402bfc:	0ff8f893          	andi	a7,a7,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190 (discriminator 3)
			A[i*N+j] = val;
20402c00:	01139023          	sh	a7,0(t2)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185 (discriminator 3)
			val = (seed + order);
20402c04:	010b1893          	slli	a7,s6,0x10
20402c08:	41035313          	srai	t1,t1,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184 (discriminator 3)
			seed = ( ( order * seed ) % 65536 );
20402c0c:	41f75613          	srai	a2,a4,0x1f
20402c10:	8241                	srli	a2,a2,0x10
20402c12:	9732                	add	a4,a4,a2
20402c14:	01d77733          	and	a4,a4,t4
20402c18:	8f11                	sub	a4,a4,a2
20402c1a:	02f707b3          	mul	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185 (discriminator 3)
			val = (seed + order);
20402c1e:	975e                	add	a4,a4,s7
20402c20:	0742                	slli	a4,a4,0x10
20402c22:	8741                	srai	a4,a4,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:187 (discriminator 3)
			B[i*N+j] = val;
20402c24:	00e59123          	sh	a4,2(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:188 (discriminator 3)
			val =  (val + order);
20402c28:	9bba                	add	s7,s7,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:189 (discriminator 3)
			val=matrix_clip(val,1);
20402c2a:	0ffbfb93          	andi	s7,s7,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185 (discriminator 3)
			val = (seed + order);
20402c2e:	4108d893          	srai	a7,a7,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190 (discriminator 3)
			A[i*N+j] = val;
20402c32:	01739123          	sh	s7,2(t2)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:191 (discriminator 3)
			order++;
20402c36:	0811                	addi	a6,a6,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184 (discriminator 3)
			seed = ( ( order * seed ) % 65536 );
20402c38:	41f7d713          	srai	a4,a5,0x1f
20402c3c:	8341                	srli	a4,a4,0x10
20402c3e:	97ba                	add	a5,a5,a4
20402c40:	01d7f7b3          	and	a5,a5,t4
20402c44:	8f99                	sub	a5,a5,a4
20402c46:	03678b33          	mul	s6,a5,s6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185 (discriminator 3)
			val = (seed + order);
20402c4a:	979a                	add	a5,a5,t1
20402c4c:	07c2                	slli	a5,a5,0x10
20402c4e:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:187 (discriminator 3)
			B[i*N+j] = val;
20402c50:	00f59223          	sh	a5,4(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:188 (discriminator 3)
			val =  (val + order);
20402c54:	933e                	add	t1,t1,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:189 (discriminator 3)
			val=matrix_clip(val,1);
20402c56:	0ff37313          	andi	t1,t1,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190 (discriminator 3)
			A[i*N+j] = val;
20402c5a:	00639223          	sh	t1,4(t2)
20402c5e:	05a1                	addi	a1,a1,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:184 (discriminator 3)
			seed = ( ( order * seed ) % 65536 );
20402c60:	41fb5613          	srai	a2,s6,0x1f
20402c64:	8241                	srli	a2,a2,0x10
20402c66:	9b32                	add	s6,s6,a2
20402c68:	01db7b33          	and	s6,s6,t4
20402c6c:	40cb0633          	sub	a2,s6,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:185 (discriminator 3)
			val = (seed + order);
20402c70:	00c887b3          	add	a5,a7,a2
20402c74:	07c2                	slli	a5,a5,0x10
20402c76:	87c1                	srai	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:188 (discriminator 3)
			val =  (val + order);
20402c78:	98be                	add	a7,a7,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:187 (discriminator 3)
			B[i*N+j] = val;
20402c7a:	fef59f23          	sh	a5,-2(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:189 (discriminator 3)
			val=matrix_clip(val,1);
20402c7e:	0ff8f893          	andi	a7,a7,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:190 (discriminator 3)
			A[i*N+j] = val;
20402c82:	01139323          	sh	a7,6(t2)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:183 (discriminator 3)
		for (j=0; j<N; j++) {
20402c86:	f3c816e3          	bne	a6,t3,20402bb2 <core_init_matrix+0x122>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:182
	for (i=0; i<N; i++) {
20402c8a:	0405                	addi	s0,s0,1
20402c8c:	9faa                	add	t6,t6,a0
20402c8e:	9e2a                	add	t3,t3,a0
20402c90:	92ce                	add	t0,t0,s3
20402c92:	e4a41fe3          	bne	s0,a0,20402af0 <core_init_matrix+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:197
	p->C=(MATRES *)align_mem(B+N*N);
20402c96:	009907b3          	add	a5,s2,s1
20402c9a:	17fd                	addi	a5,a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:204
}
20402c9c:	5432                	lw	s0,44(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:197
	p->C=(MATRES *)align_mem(B+N*N);
20402c9e:	9bf1                	andi	a5,a5,-4
20402ca0:	0791                	addi	a5,a5,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:195
	p->A=A;
20402ca2:	0146a223          	sw	s4,4(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:196
	p->B=B;
20402ca6:	0126a423          	sw	s2,8(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:197
	p->C=(MATRES *)align_mem(B+N*N);
20402caa:	c6dc                	sw	a5,12(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:198
	p->N=N;
20402cac:	c288                	sw	a0,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:204
}
20402cae:	54a2                	lw	s1,40(sp)
20402cb0:	5912                	lw	s2,36(sp)
20402cb2:	5982                	lw	s3,32(sp)
20402cb4:	4a72                	lw	s4,28(sp)
20402cb6:	4ae2                	lw	s5,24(sp)
20402cb8:	4b52                	lw	s6,20(sp)
20402cba:	4bc2                	lw	s7,16(sp)
20402cbc:	4c32                	lw	s8,12(sp)
20402cbe:	4ca2                	lw	s9,8(sp)
20402cc0:	6145                	addi	sp,sp,48
20402cc2:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:179
	A=(MATDAT *)align_mem(memblk);
20402cc4:	fff58913          	addi	s2,a1,-1
20402cc8:	ffc97913          	andi	s2,s2,-4
20402ccc:	00490a13          	addi	s4,s2,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_matrix.c:180
	B=A+N*N;
20402cd0:	557d                	li	a0,-1
20402cd2:	4489                	li	s1,2
20402cd4:	0919                	addi	s2,s2,6
20402cd6:	b7c1                	j	20402c96 <core_init_matrix+0x206>
	...

20402ce0 <core_bench_state>:
core_bench_state():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:45

	Go over the input twice, once direct, and once after introducing some corruption. 
*/
ee_u16 core_bench_state(ee_u32 blksize, ee_u8 *memblock, 
		ee_s16 seed1, ee_s16 seed2, ee_s16 step, ee_u16 crc) 
{
20402ce0:	7175                	addi	sp,sp,-144
20402ce2:	c522                	sw	s0,136(sp)
20402ce4:	c706                	sw	ra,140(sp)
20402ce6:	c326                	sw	s1,132(sp)
20402ce8:	c14a                	sw	s2,128(sp)
20402cea:	dece                	sw	s3,124(sp)
20402cec:	dcd2                	sw	s4,120(sp)
20402cee:	dad6                	sw	s5,116(sp)
20402cf0:	d8da                	sw	s6,112(sp)
20402cf2:	d6de                	sw	s7,108(sp)
20402cf4:	d4e2                	sw	s8,104(sp)
20402cf6:	d2e6                	sw	s9,100(sp)
20402cf8:	d0ea                	sw	s10,96(sp)
20402cfa:	ceee                	sw	s11,92(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:59
#endif
	for (i=0; i<NUM_CORE_STATES; i++) {
		final_counts[i]=track_counts[i]=0;
	}
	/* run the state machine over the input */
	while (*p!=0) {
20402cfc:	0005c883          	lbu	a7,0(a1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:56
		final_counts[i]=track_counts[i]=0;
20402d00:	d802                	sw	zero,48(sp)
20402d02:	c802                	sw	zero,16(sp)
20402d04:	da02                	sw	zero,52(sp)
20402d06:	ca02                	sw	zero,20(sp)
20402d08:	dc02                	sw	zero,56(sp)
20402d0a:	cc02                	sw	zero,24(sp)
20402d0c:	de02                	sw	zero,60(sp)
20402d0e:	ce02                	sw	zero,28(sp)
20402d10:	c082                	sw	zero,64(sp)
20402d12:	d002                	sw	zero,32(sp)
20402d14:	c282                	sw	zero,68(sp)
20402d16:	d202                	sw	zero,36(sp)
20402d18:	c482                	sw	zero,72(sp)
20402d1a:	d402                	sw	zero,40(sp)
20402d1c:	c682                	sw	zero,76(sp)
20402d1e:	d602                	sw	zero,44(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:45
{
20402d20:	c42a                	sw	a0,8(sp)
20402d22:	c636                	sw	a3,12(sp)
20402d24:	8eae                	mv	t4,a1
20402d26:	4401                	li	s0,0
20402d28:	85be                	mv	a1,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:59
	while (*p!=0) {
20402d2a:	0a088e63          	beqz	a7,20402de6 <core_bench_state+0x106>
20402d2e:	87c6                	mv	a5,a7
20402d30:	8576                	mv	a0,t4
20402d32:	4d01                	li	s10,0
20402d34:	4b81                	li	s7,0
20402d36:	4901                	li	s2,0
20402d38:	4281                	li	t0,0
20402d3a:	4d81                	li	s11,0
20402d3c:	4c01                	li	s8,0
20402d3e:	4f01                	li	t5,0
20402d40:	4b01                	li	s6,0
20402d42:	4381                	li	t2,0
20402d44:	4a81                	li	s5,0
20402d46:	4a01                	li	s4,0
20402d48:	4081                	li	ra,0
20402d4a:	4481                	li	s1,0
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
#endif
}

static ee_u8 ee_isdigit(ee_u8 c) {
	ee_u8 retval;
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402d4c:	4e25                	li	t3,9
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:216
		case CORE_S1:
			if(ee_isdigit(NEXT_SYMBOL)) {
				state = CORE_INT;
				transition_count[CORE_S1]++;
			}
			else if( NEXT_SYMBOL == '.' ) {
20402d4e:	02e00993          	li	s3,46
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:236
				state = CORE_INVALID;
				transition_count[CORE_INT]++;
			}
			break;
		case CORE_FLOAT:
			if( NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e' ) {
20402d52:	04500c93          	li	s9,69
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402d56:	02c00313          	li	t1,44
20402d5a:	0001                	nop
20402d5c:	54678263          	beq	a5,t1,204032a0 <core_bench_state+0x5c0>
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402d60:	fd078f13          	addi	t5,a5,-48
20402d64:	0fff7f13          	andi	t5,t5,255
20402d68:	00154683          	lbu	a3,1(a0)
20402d6c:	00150813          	addi	a6,a0,1
20402d70:	0405                	addi	s0,s0,1
20402d72:	09ee6f63          	bltu	t3,t5,20402e10 <core_bench_state+0x130>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402d76:	5a068d63          	beqz	a3,20403330 <core_bench_state+0x650>
20402d7a:	00250f93          	addi	t6,a0,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402d7e:	66668f63          	beq	a3,t1,204033fc <core_bench_state+0x71c>
20402d82:	87b6                	mv	a5,a3
20402d84:	00254683          	lbu	a3,2(a0)
20402d88:	8542                	mv	a0,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:226
			if( NEXT_SYMBOL == '.' ) {
20402d8a:	0b378563          	beq	a5,s3,20402e34 <core_bench_state+0x154>
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402d8e:	fd078793          	addi	a5,a5,-48
20402d92:	0ff7f793          	andi	a5,a5,255
20402d96:	16fe7963          	bgeu	t3,a5,20402f08 <core_bench_state+0x228>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:232
				transition_count[CORE_INT]++;
20402d9a:	87b6                	mv	a5,a3
20402d9c:	857e                	mv	a0,t6
20402d9e:	0a85                	addi	s5,s5,1
20402da0:	4d85                	li	s11,1
20402da2:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:231
				state = CORE_INVALID;
20402da4:	4685                	li	a3,1
20402da6:	0001                	nop
core_bench_state():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:61
		final_counts[fstate]++;
20402da8:	05010813          	addi	a6,sp,80
20402dac:	068a                	slli	a3,a3,0x2
20402dae:	96c2                	add	a3,a3,a6
20402db0:	fc06a803          	lw	a6,-64(a3)
20402db4:	0805                	addi	a6,a6,1
20402db6:	fd06a023          	sw	a6,-64(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:59
	while (*p!=0) {
20402dba:	f3cd                	bnez	a5,20402d5c <core_bench_state+0x7c>
20402dbc:	4c0f0e63          	beqz	t5,20403298 <core_bench_state+0x5b8>
20402dc0:	d822                	sw	s0,48(sp)
20402dc2:	000c0363          	beqz	s8,20402dc8 <core_bench_state+0xe8>
20402dc6:	dc1e                	sw	t2,56(sp)
20402dc8:	000d8363          	beqz	s11,20402dce <core_bench_state+0xee>
20402dcc:	c0d6                	sw	s5,64(sp)
20402dce:	00028363          	beqz	t0,20402dd4 <core_bench_state+0xf4>
20402dd2:	c2d2                	sw	s4,68(sp)
20402dd4:	00090363          	beqz	s2,20402dda <core_bench_state+0xfa>
20402dd8:	de06                	sw	ra,60(sp)
20402dda:	000b8363          	beqz	s7,20402de0 <core_bench_state+0x100>
20402dde:	c4a6                	sw	s1,72(sp)
20402de0:	000d0363          	beqz	s10,20402de6 <core_bench_state+0x106>
20402de4:	da5a                	sw	s6,52(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:70
	while (p < (memblock+blksize)) { /* insert some corruption */
20402de6:	47a2                	lw	a5,8(sp)
20402de8:	00fe8533          	add	a0,t4,a5
20402dec:	1aaef063          	bgeu	t4,a0,20402f8c <core_bench_state+0x2ac>
20402df0:	87f6                	mv	a5,t4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:71
		if (*p!=',')
20402df2:	02c00693          	li	a3,44
20402df6:	0001                	nop
20402df8:	00d88663          	beq	a7,a3,20402e04 <core_bench_state+0x124>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:72
			*p^=(ee_u8)seed1;
20402dfc:	00c8c8b3          	xor	a7,a7,a2
20402e00:	01178023          	sb	a7,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:73
		p+=step;
20402e04:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:70
	while (p < (memblock+blksize)) { /* insert some corruption */
20402e06:	18a7f163          	bgeu	a5,a0,20402f88 <core_bench_state+0x2a8>
20402e0a:	0007c883          	lbu	a7,0(a5)
20402e0e:	b7ed                	j	20402df8 <core_bench_state+0x118>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:199
			else if( NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-' ) {
20402e10:	02b00f13          	li	t5,43
20402e14:	11e78e63          	beq	a5,t5,20402f30 <core_bench_state+0x250>
20402e18:	02d00f13          	li	t5,45
20402e1c:	43e78463          	beq	a5,t5,20403244 <core_bench_state+0x564>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:202
			else if( NEXT_SYMBOL == '.' ) {
20402e20:	43378c63          	beq	a5,s3,20403258 <core_bench_state+0x578>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:207
				transition_count[CORE_INVALID]++;
20402e24:	87b6                	mv	a5,a3
20402e26:	8542                	mv	a0,a6
20402e28:	0b05                	addi	s6,s6,1
20402e2a:	4d05                	li	s10,1
20402e2c:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:206
				state = CORE_INVALID;
20402e2e:	4685                	li	a3,1
20402e30:	bfa5                	j	20402da8 <core_bench_state+0xc8>
20402e32:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:228
				transition_count[CORE_INT]++;
20402e34:	0a85                	addi	s5,s5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402e36:	5c068963          	beqz	a3,20403408 <core_bench_state+0x728>
20402e3a:	001f8f13          	addi	t5,t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402e3e:	5e668d63          	beq	a3,t1,20403438 <core_bench_state+0x758>
20402e42:	00254803          	lbu	a6,2(a0)
20402e46:	4d85                	li	s11,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:236
			if( NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e' ) {
20402e48:	0df6f793          	andi	a5,a3,223
20402e4c:	03978063          	beq	a5,s9,20402e6c <core_bench_state+0x18c>
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402e50:	fd068693          	addi	a3,a3,-48
20402e54:	0ff6f693          	andi	a3,a3,255
20402e58:	0cde7263          	bgeu	t3,a3,20402f1c <core_bench_state+0x23c>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:242
				state = CORE_S2;
				transition_count[CORE_FLOAT]++;
			}
			else if(!ee_isdigit(NEXT_SYMBOL)) {
				state = CORE_INVALID;
				transition_count[CORE_FLOAT]++;
20402e5c:	857a                	mv	a0,t5
20402e5e:	87c2                	mv	a5,a6
20402e60:	0a05                	addi	s4,s4,1
20402e62:	4285                	li	t0,1
20402e64:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:241
				state = CORE_INVALID;
20402e66:	4685                	li	a3,1
20402e68:	b781                	j	20402da8 <core_bench_state+0xc8>
20402e6a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:238
				transition_count[CORE_FLOAT]++;
20402e6c:	0a05                	addi	s4,s4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402e6e:	46080363          	beqz	a6,204032d4 <core_bench_state+0x5f4>
20402e72:	001f0513          	addi	a0,t5,1 # ffff8001 <metal_segment_heap_target_end+0x7fff46e1>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402e76:	4a680163          	beq	a6,t1,20403318 <core_bench_state+0x638>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:246
			}
			break;
		case CORE_S2:
			if( NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-' ) {
20402e7a:	fd580813          	addi	a6,a6,-43
20402e7e:	0fd87813          	andi	a6,a6,253
20402e82:	002fc783          	lbu	a5,2(t6)
20402e86:	0085                	addi	ra,ra,1
20402e88:	00080863          	beqz	a6,20402e98 <core_bench_state+0x1b8>
20402e8c:	4905                	li	s2,1
20402e8e:	4285                	li	t0,1
20402e90:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:251
				state = CORE_EXPONENT;
				transition_count[CORE_S2]++;
			}
			else {
				state = CORE_INVALID;
20402e92:	4685                	li	a3,1
20402e94:	bf11                	j	20402da8 <core_bench_state+0xc8>
20402e96:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402e98:	42078863          	beqz	a5,204032c8 <core_bench_state+0x5e8>
20402e9c:	002f0813          	addi	a6,t5,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402ea0:	46678263          	beq	a5,t1,20403304 <core_bench_state+0x624>
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402ea4:	fd078793          	addi	a5,a5,-48
20402ea8:	0ff7f793          	andi	a5,a5,255
20402eac:	002f4683          	lbu	a3,2(t5)
20402eb0:	0485                	addi	s1,s1,1
20402eb2:	02fe6963          	bltu	t3,a5,20402ee4 <core_bench_state+0x204>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402eb6:	4a068763          	beqz	a3,20403364 <core_bench_state+0x684>
20402eba:	003f0513          	addi	a0,t5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402ebe:	4c668b63          	beq	a3,t1,20403394 <core_bench_state+0x6b4>
20402ec2:	003f4783          	lbu	a5,3(t5)
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402ec6:	fd068693          	addi	a3,a3,-48
20402eca:	0ff6f693          	andi	a3,a3,255
20402ece:	02de7363          	bgeu	t3,a3,20402ef4 <core_bench_state+0x214>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:268
			}
			break;
		case CORE_SCIENTIFIC:
			if(!ee_isdigit(NEXT_SYMBOL)) {
				state = CORE_INVALID;
				transition_count[CORE_INVALID]++;
20402ed2:	0b05                	addi	s6,s6,1
20402ed4:	4d05                	li	s10,1
20402ed6:	4b85                	li	s7,1
20402ed8:	4905                	li	s2,1
20402eda:	4285                	li	t0,1
20402edc:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:267
				state = CORE_INVALID;
20402ede:	4685                	li	a3,1
20402ee0:	b5e1                	j	20402da8 <core_bench_state+0xc8>
20402ee2:	0001                	nop
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402ee4:	87b6                	mv	a5,a3
20402ee6:	8542                	mv	a0,a6
20402ee8:	4b85                	li	s7,1
20402eea:	4905                	li	s2,1
20402eec:	4285                	li	t0,1
20402eee:	4f05                	li	t5,1
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:261
				state = CORE_INVALID;
20402ef0:	4685                	li	a3,1
20402ef2:	bd5d                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402ef4:	48078463          	beqz	a5,2040337c <core_bench_state+0x69c>
20402ef8:	86be                	mv	a3,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402efa:	4a678d63          	beq	a5,t1,204033b4 <core_bench_state+0x6d4>
20402efe:	00154783          	lbu	a5,1(a0)
20402f02:	0505                	addi	a0,a0,1
20402f04:	b7c9                	j	20402ec6 <core_bench_state+0x1e6>
20402f06:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402f08:	52068263          	beqz	a3,2040342c <core_bench_state+0x74c>
20402f0c:	857e                	mv	a0,t6
20402f0e:	87b6                	mv	a5,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402f10:	54668a63          	beq	a3,t1,20403464 <core_bench_state+0x784>
20402f14:	001fc683          	lbu	a3,1(t6)
20402f18:	0f85                	addi	t6,t6,1
20402f1a:	bd85                	j	20402d8a <core_bench_state+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402f1c:	54080f63          	beqz	a6,2040347a <core_bench_state+0x79a>
20402f20:	8ffa                	mv	t6,t5
20402f22:	86c2                	mv	a3,a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402f24:	56680663          	beq	a6,t1,20403490 <core_bench_state+0x7b0>
20402f28:	001f4803          	lbu	a6,1(t5)
20402f2c:	0f05                	addi	t5,t5,1
20402f2e:	bf29                	j	20402e48 <core_bench_state+0x168>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402f30:	58068363          	beqz	a3,204034b6 <core_bench_state+0x7d6>
20402f34:	00250f13          	addi	t5,a0,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402f38:	5a668a63          	beq	a3,t1,204034ec <core_bench_state+0x80c>
20402f3c:	00254783          	lbu	a5,2(a0)
20402f40:	857a                	mv	a0,t5
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402f42:	fd068f13          	addi	t5,a3,-48
20402f46:	0fff7f13          	andi	t5,t5,255
20402f4a:	0385                	addi	t2,t2,1
20402f4c:	01ee7863          	bgeu	t3,t5,20402f5c <core_bench_state+0x27c>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:216
			else if( NEXT_SYMBOL == '.' ) {
20402f50:	03368063          	beq	a3,s3,20402f70 <core_bench_state+0x290>
20402f54:	4c05                	li	s8,1
20402f56:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:221
				state = CORE_INVALID;
20402f58:	4685                	li	a3,1
20402f5a:	b5b9                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402f5c:	40078c63          	beqz	a5,20403374 <core_bench_state+0x694>
20402f60:	00150f93          	addi	t6,a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402f64:	44678063          	beq	a5,t1,204033a4 <core_bench_state+0x6c4>
20402f68:	00284683          	lbu	a3,2(a6)
20402f6c:	4c05                	li	s8,1
20402f6e:	bd31                	j	20402d8a <core_bench_state+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20402f70:	52078f63          	beqz	a5,204034ae <core_bench_state+0x7ce>
20402f74:	00150f13          	addi	t5,a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402f78:	56678263          	beq	a5,t1,204034dc <core_bench_state+0x7fc>
20402f7c:	8faa                	mv	t6,a0
20402f7e:	86be                	mv	a3,a5
20402f80:	00284803          	lbu	a6,2(a6)
20402f84:	4c05                	li	s8,1
20402f86:	b5c9                	j	20402e48 <core_bench_state+0x168>
20402f88:	000ec883          	lbu	a7,0(t4) # 10000 <__stack_size+0xf000>
core_bench_state():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:77
	while (*p!=0) {
20402f8c:	0a088a63          	beqz	a7,20403040 <core_bench_state+0x360>
20402f90:	5bd2                	lw	s7,52(sp)
20402f92:	54e2                	lw	s1,56(sp)
20402f94:	4b06                	lw	s6,64(sp)
20402f96:	4a96                	lw	s5,68(sp)
20402f98:	5972                	lw	s2,60(sp)
20402f9a:	49a6                	lw	s3,72(sp)
20402f9c:	4601                	li	a2,0
20402f9e:	c43a                	sw	a4,8(sp)
20402fa0:	86c6                	mv	a3,a7
20402fa2:	83a2                	mv	t2,s0
20402fa4:	8876                	mv	a6,t4
20402fa6:	4c01                	li	s8,0
20402fa8:	4781                	li	a5,0
20402faa:	4081                	li	ra,0
20402fac:	4d81                	li	s11,0
20402fae:	4c81                	li	s9,0
20402fb0:	4f81                	li	t6,0
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402fb2:	4f25                	li	t5,9
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:226
			if( NEXT_SYMBOL == '.' ) {
20402fb4:	02e00a13          	li	s4,46
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:236
			if( NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e' ) {
20402fb8:	04500d13          	li	s10,69
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20402fbc:	02c00e13          	li	t3,44
20402fc0:	8732                	mv	a4,a2
20402fc2:	0001                	nop
20402fc4:	2dc68263          	beq	a3,t3,20403288 <core_bench_state+0x5a8>
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20402fc8:	fd068f93          	addi	t6,a3,-48
20402fcc:	0fffff93          	andi	t6,t6,255
20402fd0:	00184603          	lbu	a2,1(a6)
20402fd4:	00180313          	addi	t1,a6,1
20402fd8:	0385                	addi	t2,t2,1
20402fda:	09ff7563          	bgeu	t5,t6,20403064 <core_bench_state+0x384>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:199
			else if( NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-' ) {
20402fde:	02b00f93          	li	t6,43
20402fe2:	1bf68963          	beq	a3,t6,20403194 <core_bench_state+0x4b4>
20402fe6:	02d00f93          	li	t6,45
20402fea:	25f68363          	beq	a3,t6,20403230 <core_bench_state+0x550>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:202
			else if( NEXT_SYMBOL == '.' ) {
20402fee:	27468f63          	beq	a3,s4,2040326c <core_bench_state+0x58c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:207
				transition_count[CORE_INVALID]++;
20402ff2:	86b2                	mv	a3,a2
20402ff4:	881a                	mv	a6,t1
20402ff6:	0b85                	addi	s7,s7,1
20402ff8:	4705                	li	a4,1
20402ffa:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:206
				state = CORE_INVALID;
20402ffc:	4605                	li	a2,1
20402ffe:	0001                	nop
core_bench_state():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:79
		final_counts[fstate]++;
20403000:	05010313          	addi	t1,sp,80
20403004:	060a                	slli	a2,a2,0x2
20403006:	961a                	add	a2,a2,t1
20403008:	fc062303          	lw	t1,-64(a2)
2040300c:	0305                	addi	t1,t1,1
2040300e:	fc662023          	sw	t1,-64(a2)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:77
	while (*p!=0) {
20403012:	facd                	bnez	a3,20402fc4 <core_bench_state+0x2e4>
20403014:	86ba                	mv	a3,a4
20403016:	4722                	lw	a4,8(sp)
20403018:	260f8463          	beqz	t6,20403280 <core_bench_state+0x5a0>
2040301c:	d81e                	sw	t2,48(sp)
2040301e:	000c8363          	beqz	s9,20403024 <core_bench_state+0x344>
20403022:	dc26                	sw	s1,56(sp)
20403024:	000d8363          	beqz	s11,2040302a <core_bench_state+0x34a>
20403028:	c0da                	sw	s6,64(sp)
2040302a:	00008363          	beqz	ra,20403030 <core_bench_state+0x350>
2040302e:	c2d6                	sw	s5,68(sp)
20403030:	c391                	beqz	a5,20403034 <core_bench_state+0x354>
20403032:	de4a                	sw	s2,60(sp)
20403034:	000c0363          	beqz	s8,2040303a <core_bench_state+0x35a>
20403038:	c4ce                	sw	s3,72(sp)
2040303a:	841e                	mv	s0,t2
2040303c:	c291                	beqz	a3,20403040 <core_bench_state+0x360>
2040303e:	da5e                	sw	s7,52(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:88
	while (p < (memblock+blksize)) { /* undo corruption is seed1 and seed2 are equal */
20403040:	1aaef663          	bgeu	t4,a0,204031ec <core_bench_state+0x50c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:89
		if (*p!=',')
20403044:	46b2                	lw	a3,12(sp)
20403046:	02c00793          	li	a5,44
2040304a:	0001                	nop
2040304c:	00f88663          	beq	a7,a5,20403058 <core_bench_state+0x378>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:90
			*p^=(ee_u8)seed2;
20403050:	00d8c8b3          	xor	a7,a7,a3
20403054:	011e8023          	sb	a7,0(t4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:91
		p+=step;
20403058:	9eba                	add	t4,t4,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:88
	while (p < (memblock+blksize)) { /* undo corruption is seed1 and seed2 are equal */
2040305a:	18aef963          	bgeu	t4,a0,204031ec <core_bench_state+0x50c>
2040305e:	000ec883          	lbu	a7,0(t4)
20403062:	b7ed                	j	2040304c <core_bench_state+0x36c>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403064:	2e060a63          	beqz	a2,20403358 <core_bench_state+0x678>
20403068:	00280293          	addi	t0,a6,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
2040306c:	31c60e63          	beq	a2,t3,20403388 <core_bench_state+0x6a8>
20403070:	86b2                	mv	a3,a2
20403072:	00284603          	lbu	a2,2(a6)
20403076:	881a                	mv	a6,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:226
			if( NEXT_SYMBOL == '.' ) {
20403078:	03468063          	beq	a3,s4,20403098 <core_bench_state+0x3b8>
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
2040307c:	fd068693          	addi	a3,a3,-48
20403080:	0ff6f693          	andi	a3,a3,255
20403084:	0edf7463          	bgeu	t5,a3,2040316c <core_bench_state+0x48c>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:232
				transition_count[CORE_INT]++;
20403088:	86b2                	mv	a3,a2
2040308a:	8816                	mv	a6,t0
2040308c:	0b05                	addi	s6,s6,1
2040308e:	4d85                	li	s11,1
20403090:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:231
				state = CORE_INVALID;
20403092:	4605                	li	a2,1
20403094:	b7b5                	j	20403000 <core_bench_state+0x320>
20403096:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:228
				transition_count[CORE_INT]++;
20403098:	0b05                	addi	s6,s6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040309a:	36060d63          	beqz	a2,20403414 <core_bench_state+0x734>
2040309e:	00128f93          	addi	t6,t0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204030a2:	3bc60363          	beq	a2,t3,20403448 <core_bench_state+0x768>
204030a6:	00284303          	lbu	t1,2(a6)
204030aa:	4d85                	li	s11,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:236
			if( NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e' ) {
204030ac:	0df67693          	andi	a3,a2,223
204030b0:	03a68063          	beq	a3,s10,204030d0 <core_bench_state+0x3f0>
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
204030b4:	fd060613          	addi	a2,a2,-48
204030b8:	0ff67613          	andi	a2,a2,255
204030bc:	0ccf7263          	bgeu	t5,a2,20403180 <core_bench_state+0x4a0>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:242
				transition_count[CORE_FLOAT]++;
204030c0:	887e                	mv	a6,t6
204030c2:	869a                	mv	a3,t1
204030c4:	0a85                	addi	s5,s5,1
204030c6:	4085                	li	ra,1
204030c8:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:241
				state = CORE_INVALID;
204030ca:	4605                	li	a2,1
204030cc:	bf15                	j	20403000 <core_bench_state+0x320>
204030ce:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:238
				transition_count[CORE_FLOAT]++;
204030d0:	0a85                	addi	s5,s5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204030d2:	1c030f63          	beqz	t1,204032b0 <core_bench_state+0x5d0>
204030d6:	001f8813          	addi	a6,t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204030da:	21c30363          	beq	t1,t3,204032e0 <core_bench_state+0x600>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:246
			if( NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-' ) {
204030de:	fd530313          	addi	t1,t1,-43
204030e2:	0fd37313          	andi	t1,t1,253
204030e6:	0022c683          	lbu	a3,2(t0)
204030ea:	0905                	addi	s2,s2,1
204030ec:	00030863          	beqz	t1,204030fc <core_bench_state+0x41c>
204030f0:	4785                	li	a5,1
204030f2:	4085                	li	ra,1
204030f4:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:251
				state = CORE_INVALID;
204030f6:	4605                	li	a2,1
204030f8:	b721                	j	20403000 <core_bench_state+0x320>
204030fa:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204030fc:	1c068063          	beqz	a3,204032bc <core_bench_state+0x5dc>
20403100:	002f8313          	addi	t1,t6,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403104:	1fc68663          	beq	a3,t3,204032f0 <core_bench_state+0x610>
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20403108:	fd068693          	addi	a3,a3,-48
2040310c:	0ff6f693          	andi	a3,a3,255
20403110:	002fc783          	lbu	a5,2(t6)
20403114:	0985                	addi	s3,s3,1
20403116:	02df6963          	bltu	t5,a3,20403148 <core_bench_state+0x468>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040311a:	22078163          	beqz	a5,2040333c <core_bench_state+0x65c>
2040311e:	003f8813          	addi	a6,t6,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403122:	2bc78363          	beq	a5,t3,204033c8 <core_bench_state+0x6e8>
20403126:	003fc683          	lbu	a3,3(t6)
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
2040312a:	fd078793          	addi	a5,a5,-48
2040312e:	0ff7f793          	andi	a5,a5,255
20403132:	02ff7363          	bgeu	t5,a5,20403158 <core_bench_state+0x478>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:268
				transition_count[CORE_INVALID]++;
20403136:	0b85                	addi	s7,s7,1
20403138:	4705                	li	a4,1
2040313a:	4c05                	li	s8,1
2040313c:	4785                	li	a5,1
2040313e:	4085                	li	ra,1
20403140:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:267
				state = CORE_INVALID;
20403142:	4605                	li	a2,1
20403144:	bd75                	j	20403000 <core_bench_state+0x320>
20403146:	0001                	nop
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20403148:	86be                	mv	a3,a5
2040314a:	881a                	mv	a6,t1
2040314c:	4c05                	li	s8,1
2040314e:	4785                	li	a5,1
20403150:	4085                	li	ra,1
20403152:	4f85                	li	t6,1
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:261
				state = CORE_INVALID;
20403154:	4605                	li	a2,1
20403156:	b56d                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403158:	1e068a63          	beqz	a3,2040334c <core_bench_state+0x66c>
2040315c:	87b6                	mv	a5,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
2040315e:	27c68d63          	beq	a3,t3,204033d8 <core_bench_state+0x6f8>
20403162:	00184683          	lbu	a3,1(a6)
20403166:	0805                	addi	a6,a6,1
20403168:	b7c9                	j	2040312a <core_bench_state+0x44a>
2040316a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040316c:	2a060a63          	beqz	a2,20403420 <core_bench_state+0x740>
20403170:	8816                	mv	a6,t0
20403172:	86b2                	mv	a3,a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403174:	2fc60263          	beq	a2,t3,20403458 <core_bench_state+0x778>
20403178:	0012c603          	lbu	a2,1(t0)
2040317c:	0285                	addi	t0,t0,1
2040317e:	bded                	j	20403078 <core_bench_state+0x398>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403180:	2e030863          	beqz	t1,20403470 <core_bench_state+0x790>
20403184:	82fe                	mv	t0,t6
20403186:	861a                	mv	a2,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403188:	2fc30e63          	beq	t1,t3,20403484 <core_bench_state+0x7a4>
2040318c:	001fc303          	lbu	t1,1(t6)
20403190:	0f85                	addi	t6,t6,1
20403192:	bf29                	j	204030ac <core_bench_state+0x3cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403194:	30060463          	beqz	a2,2040349c <core_bench_state+0x7bc>
20403198:	00280f93          	addi	t6,a6,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
2040319c:	33c60263          	beq	a2,t3,204034c0 <core_bench_state+0x7e0>
204031a0:	00284683          	lbu	a3,2(a6)
204031a4:	887e                	mv	a6,t6
ee_isdigit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
204031a6:	fd060f93          	addi	t6,a2,-48
204031aa:	0fffff93          	andi	t6,t6,255
204031ae:	0485                	addi	s1,s1,1
204031b0:	01ff7863          	bgeu	t5,t6,204031c0 <core_bench_state+0x4e0>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:216
			else if( NEXT_SYMBOL == '.' ) {
204031b4:	03460063          	beq	a2,s4,204031d4 <core_bench_state+0x4f4>
204031b8:	4c85                	li	s9,1
204031ba:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:221
				state = CORE_INVALID;
204031bc:	4605                	li	a2,1
204031be:	b589                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204031c0:	16068463          	beqz	a3,20403328 <core_bench_state+0x648>
204031c4:	00180293          	addi	t0,a6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204031c8:	23c68263          	beq	a3,t3,204033ec <core_bench_state+0x70c>
204031cc:	00234603          	lbu	a2,2(t1)
204031d0:	4c85                	li	s9,1
204031d2:	b55d                	j	20403078 <core_bench_state+0x398>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204031d4:	2c068963          	beqz	a3,204034a6 <core_bench_state+0x7c6>
204031d8:	00180f93          	addi	t6,a6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204031dc:	2fc68863          	beq	a3,t3,204034cc <core_bench_state+0x7ec>
204031e0:	00234303          	lbu	t1,2(t1)
204031e4:	82c2                	mv	t0,a6
204031e6:	8636                	mv	a2,a3
204031e8:	4c85                	li	s9,1
204031ea:	b5c9                	j	204030ac <core_bench_state+0x3cc>
204031ec:	03010913          	addi	s2,sp,48
204031f0:	0804                	addi	s1,sp,16
204031f2:	89ca                	mv	s3,s2
204031f4:	a021                	j	204031fc <core_bench_state+0x51c>
204031f6:	0001                	nop
204031f8:	00092403          	lw	s0,0(s2)
core_bench_state():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:95 (discriminator 3)
		crc=crcu32(final_counts[i],crc);
204031fc:	4088                	lw	a0,0(s1)
204031fe:	0491                	addi	s1,s1,4
20403200:	0911                	addi	s2,s2,4
20403202:	25fd                	jal	204038f0 <crcu32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:96 (discriminator 3)
		crc=crcu32(track_counts[i],crc);
20403204:	85aa                	mv	a1,a0
20403206:	8522                	mv	a0,s0
20403208:	25e5                	jal	204038f0 <crcu32>
2040320a:	85aa                	mv	a1,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:94 (discriminator 3)
	for (i=0; i<NUM_CORE_STATES; i++) {
2040320c:	ff3496e3          	bne	s1,s3,204031f8 <core_bench_state+0x518>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:99
}
20403210:	40ba                	lw	ra,140(sp)
20403212:	442a                	lw	s0,136(sp)
20403214:	449a                	lw	s1,132(sp)
20403216:	490a                	lw	s2,128(sp)
20403218:	59f6                	lw	s3,124(sp)
2040321a:	5a66                	lw	s4,120(sp)
2040321c:	5ad6                	lw	s5,116(sp)
2040321e:	5b46                	lw	s6,112(sp)
20403220:	5bb6                	lw	s7,108(sp)
20403222:	5c26                	lw	s8,104(sp)
20403224:	5c96                	lw	s9,100(sp)
20403226:	5d06                	lw	s10,96(sp)
20403228:	4df6                	lw	s11,92(sp)
2040322a:	6149                	addi	sp,sp,144
2040322c:	8082                	ret
2040322e:	0001                	nop
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403230:	2c060963          	beqz	a2,20403502 <core_bench_state+0x822>
20403234:	00280f93          	addi	t6,a6,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403238:	2fc60063          	beq	a2,t3,20403518 <core_bench_state+0x838>
2040323c:	00284683          	lbu	a3,2(a6)
20403240:	887e                	mv	a6,t6
20403242:	b795                	j	204031a6 <core_bench_state+0x4c6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403244:	2a068a63          	beqz	a3,204034f8 <core_bench_state+0x818>
20403248:	00250f13          	addi	t5,a0,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
2040324c:	2c668063          	beq	a3,t1,2040350c <core_bench_state+0x82c>
20403250:	00254783          	lbu	a5,2(a0)
20403254:	857a                	mv	a0,t5
20403256:	b1f5                	j	20402f42 <core_bench_state+0x262>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403258:	2c068c63          	beqz	a3,20403530 <core_bench_state+0x850>
2040325c:	00250f13          	addi	t5,a0,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403260:	2e668263          	beq	a3,t1,20403544 <core_bench_state+0x864>
20403264:	8fc2                	mv	t6,a6
20403266:	00254803          	lbu	a6,2(a0)
2040326a:	bef9                	j	20402e48 <core_bench_state+0x168>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040326c:	2c060763          	beqz	a2,2040353a <core_bench_state+0x85a>
20403270:	00280f93          	addi	t6,a6,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403274:	2bc60863          	beq	a2,t3,20403524 <core_bench_state+0x844>
20403278:	829a                	mv	t0,t1
2040327a:	00284303          	lbu	t1,2(a6)
2040327e:	b53d                	j	204030ac <core_bench_state+0x3cc>
core_bench_state():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:77
	while (*p!=0) {
20403280:	83a2                	mv	t2,s0
20403282:	da0c90e3          	bnez	s9,20403022 <core_bench_state+0x342>
20403286:	bb79                	j	20403024 <core_bench_state+0x344>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403288:	8342                	mv	t1,a6
2040328a:	4601                	li	a2,0
2040328c:	00130813          	addi	a6,t1,1
20403290:	00134683          	lbu	a3,1(t1)
20403294:	b3b5                	j	20403000 <core_bench_state+0x320>
20403296:	0001                	nop
core_bench_state():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:59
	while (*p!=0) {
20403298:	4401                	li	s0,0
2040329a:	b20c16e3          	bnez	s8,20402dc6 <core_bench_state+0xe6>
2040329e:	b62d                	j	20402dc8 <core_bench_state+0xe8>
core_state_transition():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204032a0:	882a                	mv	a6,a0
204032a2:	4681                	li	a3,0
204032a4:	00180513          	addi	a0,a6,1
204032a8:	00184783          	lbu	a5,1(a6)
204032ac:	bcf5                	j	20402da8 <core_bench_state+0xc8>
204032ae:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204032b0:	887e                	mv	a6,t6
204032b2:	4681                	li	a3,0
204032b4:	4085                	li	ra,1
204032b6:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:237
				state = CORE_S2;
204032b8:	460d                	li	a2,3
204032ba:	b399                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204032bc:	4785                	li	a5,1
204032be:	4085                	li	ra,1
204032c0:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:247
				state = CORE_EXPONENT;
204032c2:	4619                	li	a2,6
204032c4:	bb35                	j	20403000 <core_bench_state+0x320>
204032c6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204032c8:	4905                	li	s2,1
204032ca:	4285                	li	t0,1
204032cc:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:247
				state = CORE_EXPONENT;
204032ce:	4699                	li	a3,6
204032d0:	bce1                	j	20402da8 <core_bench_state+0xc8>
204032d2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204032d4:	857a                	mv	a0,t5
204032d6:	4781                	li	a5,0
204032d8:	4285                	li	t0,1
204032da:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:237
				state = CORE_S2;
204032dc:	468d                	li	a3,3
204032de:	b4e9                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204032e0:	837e                	mv	t1,t6
204032e2:	4085                	li	ra,1
204032e4:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:237
				state = CORE_S2;
204032e6:	460d                	li	a2,3
204032e8:	00134683          	lbu	a3,1(t1)
204032ec:	bb11                	j	20403000 <core_bench_state+0x320>
204032ee:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204032f0:	879a                	mv	a5,t1
204032f2:	8342                	mv	t1,a6
204032f4:	4085                	li	ra,1
204032f6:	883e                	mv	a6,a5
204032f8:	4f85                	li	t6,1
204032fa:	4785                	li	a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:247
				state = CORE_EXPONENT;
204032fc:	4619                	li	a2,6
204032fe:	00134683          	lbu	a3,1(t1)
20403302:	b9fd                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403304:	87c2                	mv	a5,a6
20403306:	882a                	mv	a6,a0
20403308:	4905                	li	s2,1
2040330a:	853e                	mv	a0,a5
2040330c:	4285                	li	t0,1
2040330e:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:247
				state = CORE_EXPONENT;
20403310:	4699                	li	a3,6
20403312:	00184783          	lbu	a5,1(a6)
20403316:	bc49                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403318:	887a                	mv	a6,t5
2040331a:	4285                	li	t0,1
2040331c:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:237
				state = CORE_S2;
2040331e:	468d                	li	a3,3
20403320:	00184783          	lbu	a5,1(a6)
20403324:	b451                	j	20402da8 <core_bench_state+0xc8>
20403326:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403328:	4c85                	li	s9,1
2040332a:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:213
				state = CORE_INT;
2040332c:	4611                	li	a2,4
2040332e:	b9c9                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403330:	8542                	mv	a0,a6
20403332:	4781                	li	a5,0
20403334:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:197
				state = CORE_INT;
20403336:	4691                	li	a3,4
20403338:	bc85                	j	20402da8 <core_bench_state+0xc8>
2040333a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040333c:	881a                	mv	a6,t1
2040333e:	4681                	li	a3,0
20403340:	4c05                	li	s8,1
20403342:	4785                	li	a5,1
20403344:	4085                	li	ra,1
20403346:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:257
				state = CORE_SCIENTIFIC;
20403348:	461d                	li	a2,7
2040334a:	b95d                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040334c:	4c05                	li	s8,1
2040334e:	4785                	li	a5,1
20403350:	4085                	li	ra,1
20403352:	4f85                	li	t6,1
20403354:	461d                	li	a2,7
20403356:	b16d                	j	20403000 <core_bench_state+0x320>
20403358:	881a                	mv	a6,t1
2040335a:	4681                	li	a3,0
2040335c:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:197
				state = CORE_INT;
2040335e:	4611                	li	a2,4
20403360:	b145                	j	20403000 <core_bench_state+0x320>
20403362:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403364:	8542                	mv	a0,a6
20403366:	4781                	li	a5,0
20403368:	4b85                	li	s7,1
2040336a:	4905                	li	s2,1
2040336c:	4285                	li	t0,1
2040336e:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:257
				state = CORE_SCIENTIFIC;
20403370:	469d                	li	a3,7
20403372:	bc1d                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403374:	4c05                	li	s8,1
20403376:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:213
				state = CORE_INT;
20403378:	4691                	li	a3,4
2040337a:	b43d                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040337c:	4b85                	li	s7,1
2040337e:	4905                	li	s2,1
20403380:	4285                	li	t0,1
20403382:	4f05                	li	t5,1
20403384:	469d                	li	a3,7
20403386:	b40d                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403388:	8816                	mv	a6,t0
2040338a:	4f85                	li	t6,1
2040338c:	4611                	li	a2,4
2040338e:	00134683          	lbu	a3,1(t1)
20403392:	b1bd                	j	20403000 <core_bench_state+0x320>
20403394:	4b85                	li	s7,1
20403396:	4905                	li	s2,1
20403398:	4285                	li	t0,1
2040339a:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:257
				state = CORE_SCIENTIFIC;
2040339c:	469d                	li	a3,7
2040339e:	00184783          	lbu	a5,1(a6)
204033a2:	b419                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204033a4:	882a                	mv	a6,a0
204033a6:	4c05                	li	s8,1
204033a8:	857e                	mv	a0,t6
204033aa:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:213
				state = CORE_INT;
204033ac:	4691                	li	a3,4
204033ae:	00184783          	lbu	a5,1(a6)
204033b2:	badd                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204033b4:	882a                	mv	a6,a0
204033b6:	4b85                	li	s7,1
204033b8:	4905                	li	s2,1
204033ba:	4f05                	li	t5,1
204033bc:	4285                	li	t0,1
204033be:	469d                	li	a3,7
204033c0:	00180513          	addi	a0,a6,1
204033c4:	b5d5                	j	204032a8 <core_bench_state+0x5c8>
204033c6:	0001                	nop
204033c8:	4c05                	li	s8,1
204033ca:	4785                	li	a5,1
204033cc:	4085                	li	ra,1
204033ce:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:257
				state = CORE_SCIENTIFIC;
204033d0:	461d                	li	a2,7
204033d2:	00134683          	lbu	a3,1(t1)
204033d6:	b12d                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204033d8:	8342                	mv	t1,a6
204033da:	461d                	li	a2,7
204033dc:	4c05                	li	s8,1
204033de:	4085                	li	ra,1
204033e0:	4785                	li	a5,1
204033e2:	4f85                	li	t6,1
204033e4:	00130813          	addi	a6,t1,1
204033e8:	b565                	j	20403290 <core_bench_state+0x5b0>
204033ea:	0001                	nop
204033ec:	8342                	mv	t1,a6
204033ee:	4c85                	li	s9,1
204033f0:	8816                	mv	a6,t0
204033f2:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:213
				state = CORE_INT;
204033f4:	4611                	li	a2,4
204033f6:	00134683          	lbu	a3,1(t1)
204033fa:	b119                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204033fc:	857e                	mv	a0,t6
204033fe:	4f05                	li	t5,1
20403400:	4691                	li	a3,4
20403402:	00184783          	lbu	a5,1(a6)
20403406:	b24d                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403408:	857e                	mv	a0,t6
2040340a:	4781                	li	a5,0
2040340c:	4d85                	li	s11,1
2040340e:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:227
				state = CORE_FLOAT;
20403410:	4695                	li	a3,5
20403412:	ba59                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403414:	8816                	mv	a6,t0
20403416:	4681                	li	a3,0
20403418:	4d85                	li	s11,1
2040341a:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:227
				state = CORE_FLOAT;
2040341c:	4615                	li	a2,5
2040341e:	b6cd                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403420:	8816                	mv	a6,t0
20403422:	4681                	li	a3,0
20403424:	4f85                	li	t6,1
20403426:	4611                	li	a2,4
20403428:	bee1                	j	20403000 <core_bench_state+0x320>
2040342a:	0001                	nop
2040342c:	857e                	mv	a0,t6
2040342e:	4781                	li	a5,0
20403430:	4f05                	li	t5,1
20403432:	4691                	li	a3,4
20403434:	ba95                	j	20402da8 <core_bench_state+0xc8>
20403436:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403438:	887e                	mv	a6,t6
2040343a:	857a                	mv	a0,t5
2040343c:	4d85                	li	s11,1
2040343e:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:227
				state = CORE_FLOAT;
20403440:	4695                	li	a3,5
20403442:	00184783          	lbu	a5,1(a6)
20403446:	b28d                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403448:	8316                	mv	t1,t0
2040344a:	887e                	mv	a6,t6
2040344c:	4d85                	li	s11,1
2040344e:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:227
				state = CORE_FLOAT;
20403450:	4615                	li	a2,5
20403452:	00134683          	lbu	a3,1(t1)
20403456:	b66d                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403458:	8316                	mv	t1,t0
2040345a:	4611                	li	a2,4
2040345c:	4f85                	li	t6,1
2040345e:	00130813          	addi	a6,t1,1
20403462:	b53d                	j	20403290 <core_bench_state+0x5b0>
20403464:	887e                	mv	a6,t6
20403466:	4f05                	li	t5,1
20403468:	4691                	li	a3,4
2040346a:	00180513          	addi	a0,a6,1
2040346e:	bd2d                	j	204032a8 <core_bench_state+0x5c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403470:	887e                	mv	a6,t6
20403472:	4681                	li	a3,0
20403474:	4f85                	li	t6,1
20403476:	4615                	li	a2,5
20403478:	b661                	j	20403000 <core_bench_state+0x320>
2040347a:	857a                	mv	a0,t5
2040347c:	4781                	li	a5,0
2040347e:	4f05                	li	t5,1
20403480:	4695                	li	a3,5
20403482:	b21d                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403484:	837e                	mv	t1,t6
20403486:	4615                	li	a2,5
20403488:	4f85                	li	t6,1
2040348a:	00130813          	addi	a6,t1,1
2040348e:	b509                	j	20403290 <core_bench_state+0x5b0>
20403490:	887a                	mv	a6,t5
20403492:	4695                	li	a3,5
20403494:	4f05                	li	t5,1
20403496:	00180513          	addi	a0,a6,1
2040349a:	b539                	j	204032a8 <core_bench_state+0x5c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040349c:	881a                	mv	a6,t1
2040349e:	4681                	li	a3,0
204034a0:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:200
				state = CORE_S1;
204034a2:	4609                	li	a2,2
204034a4:	beb1                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204034a6:	4c85                	li	s9,1
204034a8:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:217
				state = CORE_FLOAT;
204034aa:	4615                	li	a2,5
204034ac:	be91                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204034ae:	4c05                	li	s8,1
204034b0:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:217
				state = CORE_FLOAT;
204034b2:	4695                	li	a3,5
204034b4:	b8d5                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204034b6:	8542                	mv	a0,a6
204034b8:	4781                	li	a5,0
204034ba:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:200
				state = CORE_S1;
204034bc:	4689                	li	a3,2
204034be:	b0ed                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204034c0:	887e                	mv	a6,t6
204034c2:	4609                	li	a2,2
204034c4:	4f85                	li	t6,1
204034c6:	00134683          	lbu	a3,1(t1)
204034ca:	be1d                	j	20403000 <core_bench_state+0x320>
204034cc:	8342                	mv	t1,a6
204034ce:	4c85                	li	s9,1
204034d0:	887e                	mv	a6,t6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:217
				state = CORE_FLOAT;
204034d2:	4615                	li	a2,5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204034d4:	4f85                	li	t6,1
204034d6:	00134683          	lbu	a3,1(t1)
204034da:	b61d                	j	20403000 <core_bench_state+0x320>
204034dc:	882a                	mv	a6,a0
204034de:	4c05                	li	s8,1
204034e0:	857a                	mv	a0,t5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:217
				state = CORE_FLOAT;
204034e2:	4695                	li	a3,5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
204034e4:	4f05                	li	t5,1
204034e6:	00184783          	lbu	a5,1(a6)
204034ea:	b87d                	j	20402da8 <core_bench_state+0xc8>
204034ec:	857a                	mv	a0,t5
204034ee:	4689                	li	a3,2
204034f0:	4f05                	li	t5,1
204034f2:	00184783          	lbu	a5,1(a6)
204034f6:	b84d                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
204034f8:	8542                	mv	a0,a6
204034fa:	4781                	li	a5,0
204034fc:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:200
				state = CORE_S1;
204034fe:	4689                	li	a3,2
20403500:	b065                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403502:	881a                	mv	a6,t1
20403504:	4681                	li	a3,0
20403506:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:200
				state = CORE_S1;
20403508:	4609                	li	a2,2
2040350a:	bcdd                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
2040350c:	857a                	mv	a0,t5
2040350e:	4689                	li	a3,2
20403510:	4f05                	li	t5,1
20403512:	00184783          	lbu	a5,1(a6)
20403516:	b849                	j	20402da8 <core_bench_state+0xc8>
20403518:	887e                	mv	a6,t6
2040351a:	4609                	li	a2,2
2040351c:	4f85                	li	t6,1
2040351e:	00134683          	lbu	a3,1(t1)
20403522:	bcf9                	j	20403000 <core_bench_state+0x320>
20403524:	887e                	mv	a6,t6
20403526:	4615                	li	a2,5
20403528:	4f85                	li	t6,1
2040352a:	00134683          	lbu	a3,1(t1)
2040352e:	bcc9                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20403530:	8542                	mv	a0,a6
20403532:	4781                	li	a5,0
20403534:	4f05                	li	t5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:203
				state = CORE_FLOAT;
20403536:	4695                	li	a3,5
20403538:	b885                	j	20402da8 <core_bench_state+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
2040353a:	881a                	mv	a6,t1
2040353c:	4681                	li	a3,0
2040353e:	4f85                	li	t6,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:203
				state = CORE_FLOAT;
20403540:	4615                	li	a2,5
20403542:	bc7d                	j	20403000 <core_bench_state+0x320>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:190
		if (NEXT_SYMBOL==',') /* end of this input */ {
20403544:	857a                	mv	a0,t5
20403546:	4695                	li	a3,5
20403548:	4f05                	li	t5,1
2040354a:	00184783          	lbu	a5,1(a6)
2040354e:	85bff06f          	j	20402da8 <core_bench_state+0xc8>
	...

20403560 <core_init_state>:
core_init_state():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:116
void core_init_state(ee_u32 size, ee_s16 seed, ee_u8 *p) {
20403560:	1101                	addi	sp,sp,-32
20403562:	ce22                	sw	s0,28(sp)
20403564:	cc26                	sw	s1,24(sp)
20403566:	c652                	sw	s4,12(sp)
20403568:	ca4a                	sw	s2,20(sp)
2040356a:	c84e                	sw	s3,16(sp)
2040356c:	c456                	sw	s5,8(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:118
	ee_u8 *buf=0;
2040356e:	4a01                	li	s4,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:124
	next=0;
20403570:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:117
	ee_u32 total=0,next=0,i;
20403572:	4701                	li	a4,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:123
	size--;
20403574:	fff50693          	addi	a3,a0,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:127
			for(i=0;i<next;i++)
20403578:	4411                	li	s0,4
2040357a:	44a1                	li	s1,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:129
			*(p+total+i)=',';
2040357c:	02c00393          	li	t2,44
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:133
		switch (seed & 0x7) {
20403580:	4e19                	li	t3,6
20403582:	4315                	li	t1,5
20403584:	488d                	li	a7,3
20403586:	481d                	li	a6,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:137
				buf=intpat[(seed>>3) & 0x3];
20403588:	01818293          	addi	t0,gp,24 # 80001290 <intpat>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:142
				buf=floatpat[(seed>>3) & 0x3];
2040358c:	00818f93          	addi	t6,gp,8 # 80001280 <floatpat>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:147
				buf=scipat[(seed>>3) & 0x3];
20403590:	02818f13          	addi	t5,gp,40 # 800012a0 <scipat>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:151
				buf=errpat[(seed>>3) & 0x3];
20403594:	ff818e93          	addi	t4,gp,-8 # 80001270 <errpat>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:125
	while ((total+next+1)<size) {
20403598:	00f70933          	add	s2,a4,a5
2040359c:	00190993          	addi	s3,s2,1
204035a0:	02d9dc63          	bge	s3,a3,204035d8 <core_init_state+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:126
		if (next>0) {
204035a4:	efe1                	bnez	a5,2040367c <core_init_state+0x11c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:132
		seed++;
204035a6:	0585                	addi	a1,a1,1
204035a8:	05c2                	slli	a1,a1,0x10
204035aa:	85c1                	srai	a1,a1,0x10
204035ac:	4035d793          	srai	a5,a1,0x3
204035b0:	0075f913          	andi	s2,a1,7
204035b4:	8b8d                	andi	a5,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:133
		switch (seed & 0x7) {
204035b6:	0b2e6b63          	bltu	t3,s2,2040366c <core_init_state+0x10c>
204035ba:	12697363          	bgeu	s2,t1,204036e0 <core_init_state+0x180>
204035be:	11196b63          	bltu	s2,a7,204036d4 <core_init_state+0x174>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:142
				buf=floatpat[(seed>>3) & 0x3];
204035c2:	078a                	slli	a5,a5,0x2
204035c4:	97fe                	add	a5,a5,t6
204035c6:	0007aa03          	lw	s4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:143
				next=8;
204035ca:	47a1                	li	a5,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:125
	while ((total+next+1)<size) {
204035cc:	00f70933          	add	s2,a4,a5
204035d0:	00190993          	addi	s3,s2,1
204035d4:	fcd9c8e3          	blt	s3,a3,204035a4 <core_init_state+0x44>
204035d8:	00e607b3          	add	a5,a2,a4
204035dc:	962a                	add	a2,a2,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:159
	while (total<size) { /* fill the rest with 0 */
204035de:	06a75f63          	bge	a4,a0,2040365c <core_init_state+0xfc>
204035e2:	40f60733          	sub	a4,a2,a5
204035e6:	8b1d                	andi	a4,a4,7
204035e8:	c739                	beqz	a4,20403636 <core_init_state+0xd6>
204035ea:	4685                	li	a3,1
204035ec:	04d70063          	beq	a4,a3,2040362c <core_init_state+0xcc>
204035f0:	4689                	li	a3,2
204035f2:	02d70a63          	beq	a4,a3,20403626 <core_init_state+0xc6>
204035f6:	468d                	li	a3,3
204035f8:	02d70463          	beq	a4,a3,20403620 <core_init_state+0xc0>
204035fc:	4691                	li	a3,4
204035fe:	00d70e63          	beq	a4,a3,2040361a <core_init_state+0xba>
20403602:	4695                	li	a3,5
20403604:	00d70863          	beq	a4,a3,20403614 <core_init_state+0xb4>
20403608:	4699                	li	a3,6
2040360a:	0ed71163          	bne	a4,a3,204036ec <core_init_state+0x18c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:160
		*(p+total)=0;
2040360e:	00078023          	sb	zero,0(a5)
20403612:	0785                	addi	a5,a5,1
20403614:	00078023          	sb	zero,0(a5)
20403618:	0785                	addi	a5,a5,1
2040361a:	00078023          	sb	zero,0(a5)
2040361e:	0785                	addi	a5,a5,1
20403620:	00078023          	sb	zero,0(a5)
20403624:	0785                	addi	a5,a5,1
20403626:	00078023          	sb	zero,0(a5)
2040362a:	0785                	addi	a5,a5,1
2040362c:	00078023          	sb	zero,0(a5)
20403630:	0785                	addi	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:159
	while (total<size) { /* fill the rest with 0 */
20403632:	02c78563          	beq	a5,a2,2040365c <core_init_state+0xfc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:160
		*(p+total)=0;
20403636:	00078023          	sb	zero,0(a5)
2040363a:	000780a3          	sb	zero,1(a5)
2040363e:	00078123          	sb	zero,2(a5)
20403642:	000781a3          	sb	zero,3(a5)
20403646:	00078223          	sb	zero,4(a5)
2040364a:	000782a3          	sb	zero,5(a5)
2040364e:	00078323          	sb	zero,6(a5)
20403652:	000783a3          	sb	zero,7(a5)
20403656:	07a1                	addi	a5,a5,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:159
	while (total<size) { /* fill the rest with 0 */
20403658:	fcc79fe3          	bne	a5,a2,20403636 <core_init_state+0xd6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:166
}
2040365c:	4472                	lw	s0,28(sp)
2040365e:	44e2                	lw	s1,24(sp)
20403660:	4952                	lw	s2,20(sp)
20403662:	49c2                	lw	s3,16(sp)
20403664:	4a32                	lw	s4,12(sp)
20403666:	4aa2                	lw	s5,8(sp)
20403668:	6105                	addi	sp,sp,32
2040366a:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:133
		switch (seed & 0x7) {
2040366c:	07091463          	bne	s2,a6,204036d4 <core_init_state+0x174>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:151
				buf=errpat[(seed>>3) & 0x3];
20403670:	078a                	slli	a5,a5,0x2
20403672:	97f6                	add	a5,a5,t4
20403674:	0007aa03          	lw	s4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:152
				next=8;
20403678:	47a1                	li	a5,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:153
			break;
2040367a:	bf39                	j	20403598 <core_init_state+0x38>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:128
				*(p+total+i)=buf[i];
2040367c:	000a4a83          	lbu	s5,0(s4)
20403680:	00e60933          	add	s2,a2,a4
20403684:	01590023          	sb	s5,0(s2)
20403688:	001a4a83          	lbu	s5,1(s4)
2040368c:	015900a3          	sb	s5,1(s2)
20403690:	002a4a83          	lbu	s5,2(s4)
20403694:	01590123          	sb	s5,2(s2)
20403698:	003a4a83          	lbu	s5,3(s4)
2040369c:	015901a3          	sb	s5,3(s2)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:127
			for(i=0;i<next;i++)
204036a0:	02878463          	beq	a5,s0,204036c8 <core_init_state+0x168>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:128
				*(p+total+i)=buf[i];
204036a4:	004a4a83          	lbu	s5,4(s4)
204036a8:	01590223          	sb	s5,4(s2)
204036ac:	005a4a83          	lbu	s5,5(s4)
204036b0:	015902a3          	sb	s5,5(s2)
204036b4:	006a4a83          	lbu	s5,6(s4)
204036b8:	01590323          	sb	s5,6(s2)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:127
			for(i=0;i<next;i++)
204036bc:	00979663          	bne	a5,s1,204036c8 <core_init_state+0x168>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:128 (discriminator 3)
				*(p+total+i)=buf[i];
204036c0:	007a4a03          	lbu	s4,7(s4)
204036c4:	014903a3          	sb	s4,7(s2)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:129
			*(p+total+i)=',';
204036c8:	97b2                	add	a5,a5,a2
204036ca:	97ba                	add	a5,a5,a4
204036cc:	00778023          	sb	t2,0(a5)
204036d0:	874e                	mv	a4,s3
204036d2:	bdd1                	j	204035a6 <core_init_state+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:137
				buf=intpat[(seed>>3) & 0x3];
204036d4:	078a                	slli	a5,a5,0x2
204036d6:	9796                	add	a5,a5,t0
204036d8:	0007aa03          	lw	s4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:138
				next=4;
204036dc:	4791                	li	a5,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:139
			break;
204036de:	bd6d                	j	20403598 <core_init_state+0x38>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:147
				buf=scipat[(seed>>3) & 0x3];
204036e0:	078a                	slli	a5,a5,0x2
204036e2:	97fa                	add	a5,a5,t5
204036e4:	0007aa03          	lw	s4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:148
				next=8;
204036e8:	47a1                	li	a5,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:149
			break;
204036ea:	b57d                	j	20403598 <core_init_state+0x38>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_state.c:160
		*(p+total)=0;
204036ec:	00078023          	sb	zero,0(a5)
204036f0:	0785                	addi	a5,a5,1
204036f2:	bf31                	j	2040360e <core_init_state+0xae>
	...

20403700 <get_seed_32>:
get_seed_32():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:41
	extern volatile ee_s32 seed3_volatile;
	extern volatile ee_s32 seed4_volatile;
	extern volatile ee_s32 seed5_volatile;
	ee_s32 get_seed_32(int i) {
		ee_s32 retval;
		switch (i) {
20403700:	478d                	li	a5,3
20403702:	04f50563          	beq	a0,a5,2040374c <get_seed_32+0x4c>
20403706:	00a7dd63          	bge	a5,a0,20403720 <get_seed_32+0x20>
2040370a:	4791                	li	a5,4
2040370c:	04f50663          	beq	a0,a5,20403758 <get_seed_32+0x58>
20403710:	4795                	li	a5,5
20403712:	02f51363          	bne	a0,a5,20403738 <get_seed_32+0x38>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:55
				break;
			case 4:
				retval=seed4_volatile;
				break;
			case 5:
				retval=seed5_volatile;
20403716:	800027b7          	lui	a5,0x80002
2040371a:	0687a503          	lw	a0,104(a5) # 80002068 <metal_segment_heap_target_end+0xffffe748>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:62
			default:
				retval=0;
				break;
		}
		return retval;
	}
2040371e:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:41
		switch (i) {
20403720:	4785                	li	a5,1
20403722:	00f50f63          	beq	a0,a5,20403740 <get_seed_32+0x40>
20403726:	4789                	li	a5,2
20403728:	00f51a63          	bne	a0,a5,2040373c <get_seed_32+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:46
				retval=seed2_volatile;
2040372c:	800027b7          	lui	a5,0x80002
20403730:	0647a503          	lw	a0,100(a5) # 80002064 <metal_segment_heap_target_end+0xffffe744>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:47
				break;
20403734:	8082                	ret
20403736:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:58
				retval=0;
20403738:	4501                	li	a0,0
2040373a:	8082                	ret
2040373c:	4501                	li	a0,0
2040373e:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:43
				retval=seed1_volatile;
20403740:	800027b7          	lui	a5,0x80002
20403744:	0607a503          	lw	a0,96(a5) # 80002060 <metal_segment_heap_target_end+0xffffe740>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:44
				break;
20403748:	8082                	ret
2040374a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:49
				retval=seed3_volatile;
2040374c:	800017b7          	lui	a5,0x80001
20403750:	a7c7a503          	lw	a0,-1412(a5) # 80000a7c <metal_segment_heap_target_end+0xffffd15c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:50
				break;
20403754:	8082                	ret
20403756:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:52
				retval=seed4_volatile;
20403758:	800017b7          	lui	a5,0x80001
2040375c:	a807a503          	lw	a0,-1408(a5) # 80000a80 <metal_segment_heap_target_end+0xffffd160>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:53
				break;
20403760:	8082                	ret
	...

20403770 <crcu16>:
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
{
	ee_u8 i=0,x16=0,carry=0;

	for (i = 0; i < 8; i++)
    {
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403770:	00a5c633          	xor	a2,a1,a0
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:167
		   crc &= 0x7fff;
    }
	return crc;
} 
ee_u16 crcu16(ee_u16 newval, ee_u16 crc) {
	crc=crcu8( (ee_u8) (newval)				,crc);
20403774:	0ff57693          	andi	a3,a0,255
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403778:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
2040377a:	0016d713          	srli	a4,a3,0x1
2040377e:	0015d793          	srli	a5,a1,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403782:	c611                	beqz	a2,2040378e <crcu16+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403784:	7669                	lui	a2,0xffffa
20403786:	0605                	addi	a2,a2,1
20403788:	8fb1                	xor	a5,a5,a2
2040378a:	07c2                	slli	a5,a5,0x10
2040378c:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
2040378e:	8f3d                	xor	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403790:	00177613          	andi	a2,a4,1
20403794:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403796:	0026d713          	srli	a4,a3,0x2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040379a:	c611                	beqz	a2,204037a6 <crcu16+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
2040379c:	7669                	lui	a2,0xffffa
2040379e:	0605                	addi	a2,a2,1
204037a0:	8fb1                	xor	a5,a5,a2
204037a2:	07c2                	slli	a5,a5,0x10
204037a4:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204037a6:	8f3d                	xor	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204037a8:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204037aa:	0036d613          	srli	a2,a3,0x3
204037ae:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204037b0:	c711                	beqz	a4,204037bc <crcu16+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204037b2:	7769                	lui	a4,0xffffa
204037b4:	0705                	addi	a4,a4,1
204037b6:	8fb9                	xor	a5,a5,a4
204037b8:	07c2                	slli	a5,a5,0x10
204037ba:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204037bc:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204037be:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204037c0:	0046d713          	srli	a4,a3,0x4
204037c4:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204037c6:	c611                	beqz	a2,204037d2 <crcu16+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204037c8:	7669                	lui	a2,0xffffa
204037ca:	0605                	addi	a2,a2,1
204037cc:	8fb1                	xor	a5,a5,a2
204037ce:	07c2                	slli	a5,a5,0x10
204037d0:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204037d2:	8f3d                	xor	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204037d4:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204037d6:	0056d613          	srli	a2,a3,0x5
204037da:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204037dc:	c711                	beqz	a4,204037e8 <crcu16+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204037de:	7769                	lui	a4,0xffffa
204037e0:	0705                	addi	a4,a4,1
204037e2:	8fb9                	xor	a5,a5,a4
204037e4:	07c2                	slli	a5,a5,0x10
204037e6:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204037e8:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204037ea:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204037ec:	0066d713          	srli	a4,a3,0x6
204037f0:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204037f2:	c611                	beqz	a2,204037fe <crcu16+0x8e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204037f4:	7669                	lui	a2,0xffffa
204037f6:	0605                	addi	a2,a2,1
204037f8:	8fb1                	xor	a5,a5,a2
204037fa:	07c2                	slli	a5,a5,0x10
204037fc:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204037fe:	8f3d                	xor	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403800:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403802:	829d                	srli	a3,a3,0x7
20403804:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403806:	c711                	beqz	a4,20403812 <crcu16+0xa2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403808:	7769                	lui	a4,0xffffa
2040380a:	0705                	addi	a4,a4,1
2040380c:	8fb9                	xor	a5,a5,a4
2040380e:	07c2                	slli	a5,a5,0x10
20403810:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403812:	0017f713          	andi	a4,a5,1
20403816:	8385                	srli	a5,a5,0x1
20403818:	00d70763          	beq	a4,a3,20403826 <crcu16+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
2040381c:	7769                	lui	a4,0xffffa
2040381e:	0705                	addi	a4,a4,1
20403820:	8fb9                	xor	a5,a5,a4
20403822:	07c2                	slli	a5,a5,0x10
20403824:	83c1                	srli	a5,a5,0x10
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:168
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
20403826:	8121                	srli	a0,a0,0x8
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403828:	00f54633          	xor	a2,a0,a5
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:168
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
2040382c:	0ff57713          	andi	a4,a0,255
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403830:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403832:	00175693          	srli	a3,a4,0x1
20403836:	0017d513          	srli	a0,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040383a:	c611                	beqz	a2,20403846 <crcu16+0xd6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
2040383c:	77e9                	lui	a5,0xffffa
2040383e:	0785                	addi	a5,a5,1
20403840:	8d3d                	xor	a0,a0,a5
20403842:	0542                	slli	a0,a0,0x10
20403844:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403846:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403848:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
2040384a:	00275793          	srli	a5,a4,0x2
2040384e:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403850:	c691                	beqz	a3,2040385c <crcu16+0xec>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403852:	76e9                	lui	a3,0xffffa
20403854:	0685                	addi	a3,a3,1
20403856:	8d35                	xor	a0,a0,a3
20403858:	0542                	slli	a0,a0,0x10
2040385a:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
2040385c:	8fa9                	xor	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040385e:	8b85                	andi	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403860:	00375693          	srli	a3,a4,0x3
20403864:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403866:	c791                	beqz	a5,20403872 <crcu16+0x102>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403868:	77e9                	lui	a5,0xffffa
2040386a:	0785                	addi	a5,a5,1
2040386c:	8d3d                	xor	a0,a0,a5
2040386e:	0542                	slli	a0,a0,0x10
20403870:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403872:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403874:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403876:	00475793          	srli	a5,a4,0x4
2040387a:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040387c:	c691                	beqz	a3,20403888 <crcu16+0x118>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
2040387e:	76e9                	lui	a3,0xffffa
20403880:	0685                	addi	a3,a3,1
20403882:	8d35                	xor	a0,a0,a3
20403884:	0542                	slli	a0,a0,0x10
20403886:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403888:	8fa9                	xor	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040388a:	8b85                	andi	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
2040388c:	00575693          	srli	a3,a4,0x5
20403890:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403892:	c791                	beqz	a5,2040389e <crcu16+0x12e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403894:	77e9                	lui	a5,0xffffa
20403896:	0785                	addi	a5,a5,1
20403898:	8d3d                	xor	a0,a0,a5
2040389a:	0542                	slli	a0,a0,0x10
2040389c:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
2040389e:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204038a0:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204038a2:	00675793          	srli	a5,a4,0x6
204038a6:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204038a8:	c691                	beqz	a3,204038b4 <crcu16+0x144>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204038aa:	76e9                	lui	a3,0xffffa
204038ac:	0685                	addi	a3,a3,1
204038ae:	8d35                	xor	a0,a0,a3
204038b0:	0542                	slli	a0,a0,0x10
204038b2:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204038b4:	8fa9                	xor	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204038b6:	8b85                	andi	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204038b8:	831d                	srli	a4,a4,0x7
204038ba:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204038bc:	c791                	beqz	a5,204038c8 <crcu16+0x158>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204038be:	77e9                	lui	a5,0xffffa
204038c0:	0785                	addi	a5,a5,1
204038c2:	8d3d                	xor	a0,a0,a5
204038c4:	0542                	slli	a0,a0,0x10
204038c6:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204038c8:	00157793          	andi	a5,a0,1
204038cc:	8105                	srli	a0,a0,0x1
204038ce:	00e78763          	beq	a5,a4,204038dc <crcu16+0x16c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204038d2:	77e9                	lui	a5,0xffffa
204038d4:	0785                	addi	a5,a5,1
204038d6:	8d3d                	xor	a0,a0,a5
204038d8:	0542                	slli	a0,a0,0x10
204038da:	8141                	srli	a0,a0,0x10
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:170
	return crc;
}
204038dc:	8082                	ret
	...

204038f0 <crcu32>:
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204038f0:	00a5c833          	xor	a6,a1,a0
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:167
	crc=crcu8( (ee_u8) (newval)				,crc);
204038f4:	0ff57693          	andi	a3,a0,255
crc16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:177
	crc=crc16((ee_s16) newval		,crc);
	crc=crc16((ee_s16) (newval>>16)	,crc);
	return crc;
}
ee_u16 crc16(ee_s16 newval, ee_u16 crc) {
	return crcu16((ee_u16)newval, crc);
204038f8:	01051713          	slli	a4,a0,0x10
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204038fc:	00187813          	andi	a6,a6,1
crc16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:177
	return crcu16((ee_u16)newval, crc);
20403900:	8341                	srli	a4,a4,0x10
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403902:	0016d613          	srli	a2,a3,0x1
20403906:	0015d793          	srli	a5,a1,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040390a:	00080763          	beqz	a6,20403918 <crcu32+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
2040390e:	75e9                	lui	a1,0xffffa
20403910:	0585                	addi	a1,a1,1
20403912:	8fad                	xor	a5,a5,a1
20403914:	07c2                	slli	a5,a5,0x10
20403916:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403918:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040391a:	00167593          	andi	a1,a2,1
2040391e:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403920:	0026d613          	srli	a2,a3,0x2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403924:	c591                	beqz	a1,20403930 <crcu32+0x40>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403926:	75e9                	lui	a1,0xffffa
20403928:	0585                	addi	a1,a1,1
2040392a:	8fad                	xor	a5,a5,a1
2040392c:	07c2                	slli	a5,a5,0x10
2040392e:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403930:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403932:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403934:	0036d593          	srli	a1,a3,0x3
20403938:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040393a:	c611                	beqz	a2,20403946 <crcu32+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
2040393c:	7669                	lui	a2,0xffffa
2040393e:	0605                	addi	a2,a2,1
20403940:	8fb1                	xor	a5,a5,a2
20403942:	07c2                	slli	a5,a5,0x10
20403944:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403946:	8dbd                	xor	a1,a1,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403948:	8985                	andi	a1,a1,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
2040394a:	0046d613          	srli	a2,a3,0x4
2040394e:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403950:	c591                	beqz	a1,2040395c <crcu32+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403952:	75e9                	lui	a1,0xffffa
20403954:	0585                	addi	a1,a1,1
20403956:	8fad                	xor	a5,a5,a1
20403958:	07c2                	slli	a5,a5,0x10
2040395a:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
2040395c:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040395e:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403960:	0056d593          	srli	a1,a3,0x5
20403964:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403966:	c611                	beqz	a2,20403972 <crcu32+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403968:	7669                	lui	a2,0xffffa
2040396a:	0605                	addi	a2,a2,1
2040396c:	8fb1                	xor	a5,a5,a2
2040396e:	07c2                	slli	a5,a5,0x10
20403970:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403972:	8dbd                	xor	a1,a1,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403974:	8985                	andi	a1,a1,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403976:	0066d613          	srli	a2,a3,0x6
2040397a:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040397c:	c591                	beqz	a1,20403988 <crcu32+0x98>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
2040397e:	75e9                	lui	a1,0xffffa
20403980:	0585                	addi	a1,a1,1
20403982:	8fad                	xor	a5,a5,a1
20403984:	07c2                	slli	a5,a5,0x10
20403986:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403988:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040398a:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
2040398c:	829d                	srli	a3,a3,0x7
2040398e:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403990:	c611                	beqz	a2,2040399c <crcu32+0xac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403992:	7669                	lui	a2,0xffffa
20403994:	0605                	addi	a2,a2,1
20403996:	8fb1                	xor	a5,a5,a2
20403998:	07c2                	slli	a5,a5,0x10
2040399a:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
2040399c:	0017f613          	andi	a2,a5,1
204039a0:	8385                	srli	a5,a5,0x1
204039a2:	00d60763          	beq	a2,a3,204039b0 <crcu32+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204039a6:	76e9                	lui	a3,0xffffa
204039a8:	0685                	addi	a3,a3,1
204039aa:	8fb5                	xor	a5,a5,a3
204039ac:	07c2                	slli	a5,a5,0x10
204039ae:	83c1                	srli	a5,a5,0x10
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:168
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
204039b0:	8321                	srli	a4,a4,0x8
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204039b2:	00e7c6b3          	xor	a3,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204039b6:	8a85                	andi	a3,a3,1
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:168
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
204039b8:	0ff77713          	andi	a4,a4,255
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204039bc:	00175613          	srli	a2,a4,0x1
204039c0:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204039c2:	c691                	beqz	a3,204039ce <crcu32+0xde>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204039c4:	76e9                	lui	a3,0xffffa
204039c6:	0685                	addi	a3,a3,1
204039c8:	8fb5                	xor	a5,a5,a3
204039ca:	07c2                	slli	a5,a5,0x10
204039cc:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204039ce:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204039d0:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204039d2:	00275693          	srli	a3,a4,0x2
204039d6:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204039d8:	c611                	beqz	a2,204039e4 <crcu32+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204039da:	7669                	lui	a2,0xffffa
204039dc:	0605                	addi	a2,a2,1
204039de:	8fb1                	xor	a5,a5,a2
204039e0:	07c2                	slli	a5,a5,0x10
204039e2:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204039e4:	8ebd                	xor	a3,a3,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204039e6:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204039e8:	00375613          	srli	a2,a4,0x3
204039ec:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204039ee:	c691                	beqz	a3,204039fa <crcu32+0x10a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
204039f0:	76e9                	lui	a3,0xffffa
204039f2:	0685                	addi	a3,a3,1
204039f4:	8fb5                	xor	a5,a5,a3
204039f6:	07c2                	slli	a5,a5,0x10
204039f8:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
204039fa:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
204039fc:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
204039fe:	00475693          	srli	a3,a4,0x4
20403a02:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a04:	c611                	beqz	a2,20403a10 <crcu32+0x120>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403a06:	7669                	lui	a2,0xffffa
20403a08:	0605                	addi	a2,a2,1
20403a0a:	8fb1                	xor	a5,a5,a2
20403a0c:	07c2                	slli	a5,a5,0x10
20403a0e:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403a10:	8ebd                	xor	a3,a3,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a12:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403a14:	00575613          	srli	a2,a4,0x5
20403a18:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a1a:	c691                	beqz	a3,20403a26 <crcu32+0x136>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403a1c:	76e9                	lui	a3,0xffffa
20403a1e:	0685                	addi	a3,a3,1
20403a20:	8fb5                	xor	a5,a5,a3
20403a22:	07c2                	slli	a5,a5,0x10
20403a24:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403a26:	8e3d                	xor	a2,a2,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a28:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403a2a:	00675693          	srli	a3,a4,0x6
20403a2e:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a30:	c611                	beqz	a2,20403a3c <crcu32+0x14c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403a32:	7669                	lui	a2,0xffffa
20403a34:	0605                	addi	a2,a2,1
20403a36:	8fb1                	xor	a5,a5,a2
20403a38:	07c2                	slli	a5,a5,0x10
20403a3a:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403a3c:	8ebd                	xor	a3,a3,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a3e:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403a40:	831d                	srli	a4,a4,0x7
20403a42:	8385                	srli	a5,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a44:	c691                	beqz	a3,20403a50 <crcu32+0x160>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403a46:	76e9                	lui	a3,0xffffa
20403a48:	0685                	addi	a3,a3,1
20403a4a:	8fb5                	xor	a5,a5,a3
20403a4c:	07c2                	slli	a5,a5,0x10
20403a4e:	83c1                	srli	a5,a5,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a50:	0017f693          	andi	a3,a5,1
20403a54:	8385                	srli	a5,a5,0x1
20403a56:	00e68763          	beq	a3,a4,20403a64 <crcu32+0x174>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403a5a:	7769                	lui	a4,0xffffa
20403a5c:	0705                	addi	a4,a4,1
20403a5e:	8fb9                	xor	a5,a5,a4
20403a60:	07c2                	slli	a5,a5,0x10
20403a62:	83c1                	srli	a5,a5,0x10
crcu32():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:173
	crc=crc16((ee_s16) (newval>>16)	,crc);
20403a64:	8541                	srai	a0,a0,0x10
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403a66:	00a7c5b3          	xor	a1,a5,a0
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:167
	crc=crcu8( (ee_u8) (newval)				,crc);
20403a6a:	0ff57713          	andi	a4,a0,255
crc16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:177
	return crcu16((ee_u16)newval, crc);
20403a6e:	01051693          	slli	a3,a0,0x10
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a72:	8985                	andi	a1,a1,1
crc16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:177
	return crcu16((ee_u16)newval, crc);
20403a74:	82c1                	srli	a3,a3,0x10
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403a76:	00175613          	srli	a2,a4,0x1
20403a7a:	0017d513          	srli	a0,a5,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a7e:	c591                	beqz	a1,20403a8a <crcu32+0x19a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403a80:	77e9                	lui	a5,0xffffa
20403a82:	0785                	addi	a5,a5,1
20403a84:	8d3d                	xor	a0,a0,a5
20403a86:	0542                	slli	a0,a0,0x10
20403a88:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403a8a:	8e29                	xor	a2,a2,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a8c:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403a8e:	00275793          	srli	a5,a4,0x2
20403a92:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403a94:	c611                	beqz	a2,20403aa0 <crcu32+0x1b0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403a96:	7669                	lui	a2,0xffffa
20403a98:	0605                	addi	a2,a2,1
20403a9a:	8d31                	xor	a0,a0,a2
20403a9c:	0542                	slli	a0,a0,0x10
20403a9e:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403aa0:	8fa9                	xor	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403aa2:	8b85                	andi	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403aa4:	00375613          	srli	a2,a4,0x3
20403aa8:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403aaa:	c791                	beqz	a5,20403ab6 <crcu32+0x1c6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403aac:	77e9                	lui	a5,0xffffa
20403aae:	0785                	addi	a5,a5,1
20403ab0:	8d3d                	xor	a0,a0,a5
20403ab2:	0542                	slli	a0,a0,0x10
20403ab4:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403ab6:	8e29                	xor	a2,a2,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403ab8:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403aba:	00475793          	srli	a5,a4,0x4
20403abe:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403ac0:	c611                	beqz	a2,20403acc <crcu32+0x1dc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403ac2:	7669                	lui	a2,0xffffa
20403ac4:	0605                	addi	a2,a2,1
20403ac6:	8d31                	xor	a0,a0,a2
20403ac8:	0542                	slli	a0,a0,0x10
20403aca:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403acc:	8fa9                	xor	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403ace:	8b85                	andi	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403ad0:	00575613          	srli	a2,a4,0x5
20403ad4:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403ad6:	c791                	beqz	a5,20403ae2 <crcu32+0x1f2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403ad8:	77e9                	lui	a5,0xffffa
20403ada:	0785                	addi	a5,a5,1
20403adc:	8d3d                	xor	a0,a0,a5
20403ade:	0542                	slli	a0,a0,0x10
20403ae0:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403ae2:	8e29                	xor	a2,a2,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403ae4:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403ae6:	00675793          	srli	a5,a4,0x6
20403aea:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403aec:	c611                	beqz	a2,20403af8 <crcu32+0x208>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403aee:	7669                	lui	a2,0xffffa
20403af0:	0605                	addi	a2,a2,1
20403af2:	8d31                	xor	a0,a0,a2
20403af4:	0542                	slli	a0,a0,0x10
20403af6:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403af8:	8fa9                	xor	a5,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403afa:	8b85                	andi	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403afc:	831d                	srli	a4,a4,0x7
20403afe:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b00:	c791                	beqz	a5,20403b0c <crcu32+0x21c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403b02:	77e9                	lui	a5,0xffffa
20403b04:	0785                	addi	a5,a5,1
20403b06:	8d3d                	xor	a0,a0,a5
20403b08:	0542                	slli	a0,a0,0x10
20403b0a:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b0c:	00157793          	andi	a5,a0,1
20403b10:	8105                	srli	a0,a0,0x1
20403b12:	00e78763          	beq	a5,a4,20403b20 <crcu32+0x230>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403b16:	77e9                	lui	a5,0xffffa
20403b18:	0785                	addi	a5,a5,1
20403b1a:	8d3d                	xor	a0,a0,a5
20403b1c:	0542                	slli	a0,a0,0x10
20403b1e:	8141                	srli	a0,a0,0x10
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:168
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
20403b20:	0086d793          	srli	a5,a3,0x8
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403b24:	00a7c733          	xor	a4,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b28:	8b05                	andi	a4,a4,1
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:168
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
20403b2a:	0ff7f793          	andi	a5,a5,255
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403b2e:	0017d693          	srli	a3,a5,0x1
20403b32:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b34:	c711                	beqz	a4,20403b40 <crcu32+0x250>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403b36:	7769                	lui	a4,0xffffa
20403b38:	0705                	addi	a4,a4,1
20403b3a:	8d39                	xor	a0,a0,a4
20403b3c:	0542                	slli	a0,a0,0x10
20403b3e:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403b40:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b42:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403b44:	0027d713          	srli	a4,a5,0x2
20403b48:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b4a:	c691                	beqz	a3,20403b56 <crcu32+0x266>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403b4c:	76e9                	lui	a3,0xffffa
20403b4e:	0685                	addi	a3,a3,1
20403b50:	8d35                	xor	a0,a0,a3
20403b52:	0542                	slli	a0,a0,0x10
20403b54:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403b56:	8f29                	xor	a4,a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b58:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403b5a:	0037d693          	srli	a3,a5,0x3
20403b5e:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b60:	c711                	beqz	a4,20403b6c <crcu32+0x27c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403b62:	7769                	lui	a4,0xffffa
20403b64:	0705                	addi	a4,a4,1
20403b66:	8d39                	xor	a0,a0,a4
20403b68:	0542                	slli	a0,a0,0x10
20403b6a:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403b6c:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b6e:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403b70:	0047d713          	srli	a4,a5,0x4
20403b74:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b76:	c691                	beqz	a3,20403b82 <crcu32+0x292>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403b78:	76e9                	lui	a3,0xffffa
20403b7a:	0685                	addi	a3,a3,1
20403b7c:	8d35                	xor	a0,a0,a3
20403b7e:	0542                	slli	a0,a0,0x10
20403b80:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403b82:	8f29                	xor	a4,a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b84:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403b86:	0057d693          	srli	a3,a5,0x5
20403b8a:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b8c:	c711                	beqz	a4,20403b98 <crcu32+0x2a8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403b8e:	7769                	lui	a4,0xffffa
20403b90:	0705                	addi	a4,a4,1
20403b92:	8d39                	xor	a0,a0,a4
20403b94:	0542                	slli	a0,a0,0x10
20403b96:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403b98:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403b9a:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403b9c:	0067d713          	srli	a4,a5,0x6
20403ba0:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403ba2:	c691                	beqz	a3,20403bae <crcu32+0x2be>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403ba4:	76e9                	lui	a3,0xffffa
20403ba6:	0685                	addi	a3,a3,1
20403ba8:	8d35                	xor	a0,a0,a3
20403baa:	0542                	slli	a0,a0,0x10
20403bac:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403bae:	8f29                	xor	a4,a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403bb0:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403bb2:	839d                	srli	a5,a5,0x7
20403bb4:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403bb6:	c711                	beqz	a4,20403bc2 <crcu32+0x2d2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403bb8:	7769                	lui	a4,0xffffa
20403bba:	0705                	addi	a4,a4,1
20403bbc:	8d39                	xor	a0,a0,a4
20403bbe:	0542                	slli	a0,a0,0x10
20403bc0:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403bc2:	00157713          	andi	a4,a0,1
20403bc6:	8105                	srli	a0,a0,0x1
20403bc8:	00f70763          	beq	a4,a5,20403bd6 <crcu32+0x2e6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403bcc:	77e9                	lui	a5,0xffffa
20403bce:	0785                	addi	a5,a5,1
20403bd0:	8d3d                	xor	a0,a0,a5
20403bd2:	0542                	slli	a0,a0,0x10
20403bd4:	8141                	srli	a0,a0,0x10
crcu32():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:175
}
20403bd6:	8082                	ret
	...

20403bf0 <crc16>:
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403bf0:	00a5c633          	xor	a2,a1,a0
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:167
	crc=crcu8( (ee_u8) (newval)				,crc);
20403bf4:	0ff57713          	andi	a4,a0,255
crc16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:177
	return crcu16((ee_u16)newval, crc);
20403bf8:	01051793          	slli	a5,a0,0x10
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403bfc:	8a05                	andi	a2,a2,1
crc16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:177
	return crcu16((ee_u16)newval, crc);
20403bfe:	83c1                	srli	a5,a5,0x10
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403c00:	00175693          	srli	a3,a4,0x1
20403c04:	0015d513          	srli	a0,a1,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c08:	c611                	beqz	a2,20403c14 <crc16+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403c0a:	75e9                	lui	a1,0xffffa
20403c0c:	0585                	addi	a1,a1,1
20403c0e:	8d2d                	xor	a0,a0,a1
20403c10:	0542                	slli	a0,a0,0x10
20403c12:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403c14:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c16:	0016f613          	andi	a2,a3,1
20403c1a:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403c1c:	00275693          	srli	a3,a4,0x2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c20:	c611                	beqz	a2,20403c2c <crc16+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403c22:	75e9                	lui	a1,0xffffa
20403c24:	0585                	addi	a1,a1,1
20403c26:	8d2d                	xor	a0,a0,a1
20403c28:	0542                	slli	a0,a0,0x10
20403c2a:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403c2c:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c2e:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403c30:	00375613          	srli	a2,a4,0x3
20403c34:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c36:	c691                	beqz	a3,20403c42 <crc16+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403c38:	76e9                	lui	a3,0xffffa
20403c3a:	0685                	addi	a3,a3,1
20403c3c:	8d35                	xor	a0,a0,a3
20403c3e:	0542                	slli	a0,a0,0x10
20403c40:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403c42:	8e29                	xor	a2,a2,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c44:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403c46:	00475693          	srli	a3,a4,0x4
20403c4a:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c4c:	c611                	beqz	a2,20403c58 <crc16+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403c4e:	7669                	lui	a2,0xffffa
20403c50:	0605                	addi	a2,a2,1
20403c52:	8d31                	xor	a0,a0,a2
20403c54:	0542                	slli	a0,a0,0x10
20403c56:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403c58:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c5a:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403c5c:	00575613          	srli	a2,a4,0x5
20403c60:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c62:	c691                	beqz	a3,20403c6e <crc16+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403c64:	76e9                	lui	a3,0xffffa
20403c66:	0685                	addi	a3,a3,1
20403c68:	8d35                	xor	a0,a0,a3
20403c6a:	0542                	slli	a0,a0,0x10
20403c6c:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403c6e:	8e29                	xor	a2,a2,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c70:	8a05                	andi	a2,a2,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403c72:	00675693          	srli	a3,a4,0x6
20403c76:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c78:	c611                	beqz	a2,20403c84 <crc16+0x94>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403c7a:	7669                	lui	a2,0xffffa
20403c7c:	0605                	addi	a2,a2,1
20403c7e:	8d31                	xor	a0,a0,a2
20403c80:	0542                	slli	a0,a0,0x10
20403c82:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403c84:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c86:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403c88:	831d                	srli	a4,a4,0x7
20403c8a:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c8c:	c691                	beqz	a3,20403c98 <crc16+0xa8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403c8e:	76e9                	lui	a3,0xffffa
20403c90:	0685                	addi	a3,a3,1
20403c92:	8d35                	xor	a0,a0,a3
20403c94:	0542                	slli	a0,a0,0x10
20403c96:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403c98:	00157693          	andi	a3,a0,1
20403c9c:	8105                	srli	a0,a0,0x1
20403c9e:	00e68763          	beq	a3,a4,20403cac <crc16+0xbc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403ca2:	7769                	lui	a4,0xffffa
20403ca4:	0705                	addi	a4,a4,1
20403ca6:	8d39                	xor	a0,a0,a4
20403ca8:	0542                	slli	a0,a0,0x10
20403caa:	8141                	srli	a0,a0,0x10
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:168
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
20403cac:	83a1                	srli	a5,a5,0x8
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403cae:	00a7c733          	xor	a4,a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403cb2:	8b05                	andi	a4,a4,1
crcu16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:168
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
20403cb4:	0ff7f793          	andi	a5,a5,255
crcu8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403cb8:	0017d693          	srli	a3,a5,0x1
20403cbc:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403cbe:	c711                	beqz	a4,20403cca <crc16+0xda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403cc0:	7769                	lui	a4,0xffffa
20403cc2:	0705                	addi	a4,a4,1
20403cc4:	8d39                	xor	a0,a0,a4
20403cc6:	0542                	slli	a0,a0,0x10
20403cc8:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403cca:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403ccc:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403cce:	0027d713          	srli	a4,a5,0x2
20403cd2:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403cd4:	c691                	beqz	a3,20403ce0 <crc16+0xf0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403cd6:	76e9                	lui	a3,0xffffa
20403cd8:	0685                	addi	a3,a3,1
20403cda:	8d35                	xor	a0,a0,a3
20403cdc:	0542                	slli	a0,a0,0x10
20403cde:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403ce0:	8f29                	xor	a4,a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403ce2:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403ce4:	0037d693          	srli	a3,a5,0x3
20403ce8:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403cea:	c711                	beqz	a4,20403cf6 <crc16+0x106>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403cec:	7769                	lui	a4,0xffffa
20403cee:	0705                	addi	a4,a4,1
20403cf0:	8d39                	xor	a0,a0,a4
20403cf2:	0542                	slli	a0,a0,0x10
20403cf4:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403cf6:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403cf8:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403cfa:	0047d713          	srli	a4,a5,0x4
20403cfe:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403d00:	c691                	beqz	a3,20403d0c <crc16+0x11c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403d02:	76e9                	lui	a3,0xffffa
20403d04:	0685                	addi	a3,a3,1
20403d06:	8d35                	xor	a0,a0,a3
20403d08:	0542                	slli	a0,a0,0x10
20403d0a:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403d0c:	8f29                	xor	a4,a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403d0e:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403d10:	0057d693          	srli	a3,a5,0x5
20403d14:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403d16:	c711                	beqz	a4,20403d22 <crc16+0x132>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403d18:	7769                	lui	a4,0xffffa
20403d1a:	0705                	addi	a4,a4,1
20403d1c:	8d39                	xor	a0,a0,a4
20403d1e:	0542                	slli	a0,a0,0x10
20403d20:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403d22:	8ea9                	xor	a3,a3,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403d24:	8a85                	andi	a3,a3,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403d26:	0067d713          	srli	a4,a5,0x6
20403d2a:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403d2c:	c691                	beqz	a3,20403d38 <crc16+0x148>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403d2e:	76e9                	lui	a3,0xffffa
20403d30:	0685                	addi	a3,a3,1
20403d32:	8d35                	xor	a0,a0,a3
20403d34:	0542                	slli	a0,a0,0x10
20403d36:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20403d38:	8f29                	xor	a4,a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403d3a:	8b05                	andi	a4,a4,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:149
		data >>= 1;
20403d3c:	839d                	srli	a5,a5,0x7
20403d3e:	8105                	srli	a0,a0,0x1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403d40:	c711                	beqz	a4,20403d4c <crc16+0x15c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403d42:	7769                	lui	a4,0xffffa
20403d44:	0705                	addi	a4,a4,1
20403d46:	8d39                	xor	a0,a0,a4
20403d48:	0542                	slli	a0,a0,0x10
20403d4a:	8141                	srli	a0,a0,0x10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:151
		if (x16 == 1)
20403d4c:	00157713          	andi	a4,a0,1
20403d50:	8105                	srli	a0,a0,0x1
20403d52:	00f70763          	beq	a4,a5,20403d60 <crc16+0x170>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:160
		   crc |= 0x8000;
20403d56:	77e9                	lui	a5,0xffffa
20403d58:	0785                	addi	a5,a5,1
20403d5a:	8d3d                	xor	a0,a0,a5
20403d5c:	0542                	slli	a0,a0,0x10
20403d5e:	8141                	srli	a0,a0,0x10
crc16():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:178
}
20403d60:	8082                	ret
	...

20403d70 <check_data_types>:
check_data_types():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/core_util.c:210
	}
	if (retval>0) {
		ee_printf("ERROR: Please modify the datatypes in core_portme.h!\n");
	}
	return retval;
}
20403d70:	4501                	li	a0,0
20403d72:	8082                	ret
	...

20403d90 <start_time>:
start_time():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:69
	This function will be called right before starting the timed portion of the benchmark.

	Implementation may be capturing a system timer (as implemented in the example code)
	or zeroing some system parameters - e.g. setting the cpu clocks cycles to 0.
*/
void start_time(void) {
20403d90:	1141                	addi	sp,sp,-16
20403d92:	c606                	sw	ra,12(sp)
barebones_clock():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:46
  return clock();
20403d94:	287d                	jal	20403e52 <clock>
start_time():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:71
	GETMYTIME(&start_time_val );
}
20403d96:	40b2                	lw	ra,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:70
	GETMYTIME(&start_time_val );
20403d98:	800027b7          	lui	a5,0x80002
20403d9c:	06a7a623          	sw	a0,108(a5) # 8000206c <metal_segment_heap_target_end+0xffffe74c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:71
}
20403da0:	0141                	addi	sp,sp,16
20403da2:	8082                	ret
	...

20403db0 <stop_time>:
stop_time():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:78
	This function will be called right after ending the timed portion of the benchmark.

	Implementation may be capturing a system timer (as implemented in the example code)
	or other system parameters - e.g. reading the current value of cpu cycles counter.
*/
void stop_time(void) {
20403db0:	1141                	addi	sp,sp,-16
20403db2:	c606                	sw	ra,12(sp)
barebones_clock():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:46
  return clock();
20403db4:	2879                	jal	20403e52 <clock>
stop_time():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:80
	GETMYTIME(&stop_time_val );
}
20403db6:	40b2                	lw	ra,12(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:79
	GETMYTIME(&stop_time_val );
20403db8:	800027b7          	lui	a5,0x80002
20403dbc:	06a7a823          	sw	a0,112(a5) # 80002070 <metal_segment_heap_target_end+0xffffe750>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:80
}
20403dc0:	0141                	addi	sp,sp,16
20403dc2:	8082                	ret
	...

20403dd0 <get_time>:
get_time():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:91
	This methodology is taken to accomodate any hardware or simulated platform.
	The sample implementation returns millisecs by default,
	and the resolution is controlled by <TIMER_RES_DIVIDER>
*/
CORE_TICKS get_time(void) {
	CORE_TICKS elapsed=(CORE_TICKS)(MYTIMEDIFF(stop_time_val, start_time_val));
20403dd0:	800027b7          	lui	a5,0x80002
20403dd4:	0707a503          	lw	a0,112(a5) # 80002070 <metal_segment_heap_target_end+0xffffe750>
20403dd8:	800027b7          	lui	a5,0x80002
20403ddc:	06c7a783          	lw	a5,108(a5) # 8000206c <metal_segment_heap_target_end+0xffffe74c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:93
	return elapsed;
}
20403de0:	8d1d                	sub	a0,a0,a5
20403de2:	8082                	ret
	...

20403e00 <time_in_secs>:
time_in_secs():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:101

	The <secs_ret> type is used to accomodate systems with no support for floating point.
	Default implementation implemented by the EE_TICKS_PER_SEC macro above.
*/
secs_ret time_in_secs(CORE_TICKS ticks) {
	secs_ret retval=((secs_ret)ticks) / (secs_ret)EE_TICKS_PER_SEC;
20403e00:	000f47b7          	lui	a5,0xf4
20403e04:	24078793          	addi	a5,a5,576 # f4240 <__stack_size+0xf3240>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:103
	return retval;
}
20403e08:	02f54533          	div	a0,a0,a5
20403e0c:	8082                	ret
	...

20403e20 <portable_init>:
portable_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:120
	}
	if (sizeof(ee_u32) != 4) {
		ee_printf("ERROR! Please define ee_u32 to a 32b unsigned type!\n");
	}

	p->portable_id=1;
20403e20:	4785                	li	a5,1
20403e22:	00f50023          	sb	a5,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:121
}
20403e26:	8082                	ret
	...

20403e40 <portable_fini>:
portable_fini():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:127
/* Function : portable_fini
	Target specific final code
*/
void portable_fini(core_portable *p)
{
	p->portable_id=0;
20403e40:	00050023          	sb	zero,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/coremark/freedom-metal/core_portme.c:128
}
20403e44:	8082                	ret
	...

20403e52 <clock>:
clock():
20403e52:	80c18793          	addi	a5,gp,-2036 # 80000a84 <_impure_ptr>
20403e56:	4388                	lw	a0,0(a5)
20403e58:	1101                	addi	sp,sp,-32
20403e5a:	858a                	mv	a1,sp
20403e5c:	ce06                	sw	ra,28(sp)
20403e5e:	2a15                	jal	20403f92 <_times_r>
20403e60:	57fd                	li	a5,-1
20403e62:	00f50963          	beq	a0,a5,20403e74 <clock+0x22>
20403e66:	4792                	lw	a5,4(sp)
20403e68:	4502                	lw	a0,0(sp)
20403e6a:	953e                	add	a0,a0,a5
20403e6c:	47a2                	lw	a5,8(sp)
20403e6e:	953e                	add	a0,a0,a5
20403e70:	47b2                	lw	a5,12(sp)
20403e72:	953e                	add	a0,a0,a5
20403e74:	40f2                	lw	ra,28(sp)
20403e76:	6105                	addi	sp,sp,32
20403e78:	8082                	ret

20403e7a <iprintf>:
printf():
20403e7a:	7139                	addi	sp,sp,-64
20403e7c:	da3e                	sw	a5,52(sp)
20403e7e:	d22e                	sw	a1,36(sp)
20403e80:	d432                	sw	a2,40(sp)
20403e82:	d636                	sw	a3,44(sp)
20403e84:	d83a                	sw	a4,48(sp)
20403e86:	dc42                	sw	a6,56(sp)
20403e88:	de46                	sw	a7,60(sp)
20403e8a:	80c18793          	addi	a5,gp,-2036 # 80000a84 <_impure_ptr>
20403e8e:	cc22                	sw	s0,24(sp)
20403e90:	4380                	lw	s0,0(a5)
20403e92:	ca26                	sw	s1,20(sp)
20403e94:	ce06                	sw	ra,28(sp)
20403e96:	84aa                	mv	s1,a0
20403e98:	c409                	beqz	s0,20403ea2 <iprintf+0x28>
20403e9a:	4c1c                	lw	a5,24(s0)
20403e9c:	e399                	bnez	a5,20403ea2 <iprintf+0x28>
20403e9e:	8522                	mv	a0,s0
20403ea0:	2311                	jal	204043a4 <__sinit>
20403ea2:	440c                	lw	a1,8(s0)
20403ea4:	1054                	addi	a3,sp,36
20403ea6:	8626                	mv	a2,s1
20403ea8:	8522                	mv	a0,s0
20403eaa:	c636                	sw	a3,12(sp)
20403eac:	15f000ef          	jal	ra,2040480a <_vfiprintf_r>
20403eb0:	40f2                	lw	ra,28(sp)
20403eb2:	4462                	lw	s0,24(sp)
20403eb4:	44d2                	lw	s1,20(sp)
20403eb6:	6121                	addi	sp,sp,64
20403eb8:	8082                	ret

20403eba <_puts_r>:
_puts_r():
20403eba:	1101                	addi	sp,sp,-32
20403ebc:	ca26                	sw	s1,20(sp)
20403ebe:	c84a                	sw	s2,16(sp)
20403ec0:	ce06                	sw	ra,28(sp)
20403ec2:	cc22                	sw	s0,24(sp)
20403ec4:	c64e                	sw	s3,12(sp)
20403ec6:	c452                	sw	s4,8(sp)
20403ec8:	84aa                	mv	s1,a0
20403eca:	892e                	mv	s2,a1
20403ecc:	c501                	beqz	a0,20403ed4 <_puts_r+0x1a>
20403ece:	4d1c                	lw	a5,24(a0)
20403ed0:	e391                	bnez	a5,20403ed4 <_puts_r+0x1a>
20403ed2:	29c9                	jal	204043a4 <__sinit>
20403ed4:	4c9c                	lw	a5,24(s1)
20403ed6:	4480                	lw	s0,8(s1)
20403ed8:	e399                	bnez	a5,20403ede <_puts_r+0x24>
20403eda:	8526                	mv	a0,s1
20403edc:	21e1                	jal	204043a4 <__sinit>
20403ede:	10818793          	addi	a5,gp,264 # 80001380 <__sf_fake_stdin>
20403ee2:	02f41c63          	bne	s0,a5,20403f1a <_puts_r+0x60>
20403ee6:	40c0                	lw	s0,4(s1)
20403ee8:	00c45783          	lhu	a5,12(s0) # fffff00c <metal_segment_heap_target_end+0x7fffb6ec>
20403eec:	8ba1                	andi	a5,a5,8
20403eee:	c3b1                	beqz	a5,20403f32 <_puts_r+0x78>
20403ef0:	481c                	lw	a5,16(s0)
20403ef2:	c3a1                	beqz	a5,20403f32 <_puts_r+0x78>
20403ef4:	59fd                	li	s3,-1
20403ef6:	4a29                	li	s4,10
20403ef8:	441c                	lw	a5,8(s0)
20403efa:	00094583          	lbu	a1,0(s2)
20403efe:	17fd                	addi	a5,a5,-1
20403f00:	e5b1                	bnez	a1,20403f4c <_puts_r+0x92>
20403f02:	c41c                	sw	a5,8(s0)
20403f04:	0607da63          	bgez	a5,20403f78 <_puts_r+0xbe>
20403f08:	8622                	mv	a2,s0
20403f0a:	45a9                	li	a1,10
20403f0c:	8526                	mv	a0,s1
20403f0e:	2069                	jal	20403f98 <__swbuf_r>
20403f10:	57fd                	li	a5,-1
20403f12:	02f50463          	beq	a0,a5,20403f3a <_puts_r+0x80>
20403f16:	4529                	li	a0,10
20403f18:	a015                	j	20403f3c <_puts_r+0x82>
20403f1a:	12818793          	addi	a5,gp,296 # 800013a0 <__sf_fake_stdout>
20403f1e:	00f41463          	bne	s0,a5,20403f26 <_puts_r+0x6c>
20403f22:	4480                	lw	s0,8(s1)
20403f24:	b7d1                	j	20403ee8 <_puts_r+0x2e>
20403f26:	0e818793          	addi	a5,gp,232 # 80001360 <__sf_fake_stderr>
20403f2a:	faf41fe3          	bne	s0,a5,20403ee8 <_puts_r+0x2e>
20403f2e:	44c0                	lw	s0,12(s1)
20403f30:	bf65                	j	20403ee8 <_puts_r+0x2e>
20403f32:	85a2                	mv	a1,s0
20403f34:	8526                	mv	a0,s1
20403f36:	2a19                	jal	2040404c <__swsetup_r>
20403f38:	dd55                	beqz	a0,20403ef4 <_puts_r+0x3a>
20403f3a:	557d                	li	a0,-1
20403f3c:	40f2                	lw	ra,28(sp)
20403f3e:	4462                	lw	s0,24(sp)
20403f40:	44d2                	lw	s1,20(sp)
20403f42:	4942                	lw	s2,16(sp)
20403f44:	49b2                	lw	s3,12(sp)
20403f46:	4a22                	lw	s4,8(sp)
20403f48:	6105                	addi	sp,sp,32
20403f4a:	8082                	ret
20403f4c:	c41c                	sw	a5,8(s0)
20403f4e:	0905                	addi	s2,s2,1
20403f50:	0007d763          	bgez	a5,20403f5e <_puts_r+0xa4>
20403f54:	4c18                	lw	a4,24(s0)
20403f56:	00e7cb63          	blt	a5,a4,20403f6c <_puts_r+0xb2>
20403f5a:	01458963          	beq	a1,s4,20403f6c <_puts_r+0xb2>
20403f5e:	401c                	lw	a5,0(s0)
20403f60:	00178713          	addi	a4,a5,1
20403f64:	c018                	sw	a4,0(s0)
20403f66:	00b78023          	sb	a1,0(a5)
20403f6a:	b779                	j	20403ef8 <_puts_r+0x3e>
20403f6c:	8622                	mv	a2,s0
20403f6e:	8526                	mv	a0,s1
20403f70:	2025                	jal	20403f98 <__swbuf_r>
20403f72:	f93513e3          	bne	a0,s3,20403ef8 <_puts_r+0x3e>
20403f76:	b7d1                	j	20403f3a <_puts_r+0x80>
20403f78:	401c                	lw	a5,0(s0)
20403f7a:	00178713          	addi	a4,a5,1
20403f7e:	c018                	sw	a4,0(s0)
20403f80:	4729                	li	a4,10
20403f82:	00e78023          	sb	a4,0(a5)
20403f86:	bf41                	j	20403f16 <_puts_r+0x5c>

20403f88 <puts>:
puts():
20403f88:	80c18793          	addi	a5,gp,-2036 # 80000a84 <_impure_ptr>
20403f8c:	85aa                	mv	a1,a0
20403f8e:	4388                	lw	a0,0(a5)
20403f90:	b72d                	j	20403eba <_puts_r>

20403f92 <_times_r>:
_times_r():
20403f92:	852e                	mv	a0,a1
20403f94:	3000106f          	j	20405294 <_times>

20403f98 <__swbuf_r>:
__swbuf_r():
20403f98:	1101                	addi	sp,sp,-32
20403f9a:	cc22                	sw	s0,24(sp)
20403f9c:	ca26                	sw	s1,20(sp)
20403f9e:	c84a                	sw	s2,16(sp)
20403fa0:	ce06                	sw	ra,28(sp)
20403fa2:	c64e                	sw	s3,12(sp)
20403fa4:	84aa                	mv	s1,a0
20403fa6:	892e                	mv	s2,a1
20403fa8:	8432                	mv	s0,a2
20403faa:	c501                	beqz	a0,20403fb2 <__swbuf_r+0x1a>
20403fac:	4d1c                	lw	a5,24(a0)
20403fae:	e391                	bnez	a5,20403fb2 <__swbuf_r+0x1a>
20403fb0:	2ed5                	jal	204043a4 <__sinit>
20403fb2:	10818793          	addi	a5,gp,264 # 80001380 <__sf_fake_stdin>
20403fb6:	06f41963          	bne	s0,a5,20404028 <__swbuf_r+0x90>
20403fba:	40c0                	lw	s0,4(s1)
20403fbc:	4c1c                	lw	a5,24(s0)
20403fbe:	c41c                	sw	a5,8(s0)
20403fc0:	00c45783          	lhu	a5,12(s0)
20403fc4:	8ba1                	andi	a5,a5,8
20403fc6:	cfad                	beqz	a5,20404040 <__swbuf_r+0xa8>
20403fc8:	481c                	lw	a5,16(s0)
20403fca:	cbbd                	beqz	a5,20404040 <__swbuf_r+0xa8>
20403fcc:	481c                	lw	a5,16(s0)
20403fce:	4008                	lw	a0,0(s0)
20403fd0:	0ff97993          	andi	s3,s2,255
20403fd4:	0ff97913          	andi	s2,s2,255
20403fd8:	8d1d                	sub	a0,a0,a5
20403fda:	485c                	lw	a5,20(s0)
20403fdc:	00f54663          	blt	a0,a5,20403fe8 <__swbuf_r+0x50>
20403fe0:	85a2                	mv	a1,s0
20403fe2:	8526                	mv	a0,s1
20403fe4:	2c4d                	jal	20404296 <_fflush_r>
20403fe6:	e12d                	bnez	a0,20404048 <__swbuf_r+0xb0>
20403fe8:	441c                	lw	a5,8(s0)
20403fea:	0505                	addi	a0,a0,1
20403fec:	17fd                	addi	a5,a5,-1
20403fee:	c41c                	sw	a5,8(s0)
20403ff0:	401c                	lw	a5,0(s0)
20403ff2:	00178713          	addi	a4,a5,1
20403ff6:	c018                	sw	a4,0(s0)
20403ff8:	01378023          	sb	s3,0(a5)
20403ffc:	485c                	lw	a5,20(s0)
20403ffe:	00a78963          	beq	a5,a0,20404010 <__swbuf_r+0x78>
20404002:	00c45783          	lhu	a5,12(s0)
20404006:	8b85                	andi	a5,a5,1
20404008:	cb81                	beqz	a5,20404018 <__swbuf_r+0x80>
2040400a:	47a9                	li	a5,10
2040400c:	00f91663          	bne	s2,a5,20404018 <__swbuf_r+0x80>
20404010:	85a2                	mv	a1,s0
20404012:	8526                	mv	a0,s1
20404014:	2449                	jal	20404296 <_fflush_r>
20404016:	e90d                	bnez	a0,20404048 <__swbuf_r+0xb0>
20404018:	40f2                	lw	ra,28(sp)
2040401a:	4462                	lw	s0,24(sp)
2040401c:	854a                	mv	a0,s2
2040401e:	44d2                	lw	s1,20(sp)
20404020:	4942                	lw	s2,16(sp)
20404022:	49b2                	lw	s3,12(sp)
20404024:	6105                	addi	sp,sp,32
20404026:	8082                	ret
20404028:	12818793          	addi	a5,gp,296 # 800013a0 <__sf_fake_stdout>
2040402c:	00f41463          	bne	s0,a5,20404034 <__swbuf_r+0x9c>
20404030:	4480                	lw	s0,8(s1)
20404032:	b769                	j	20403fbc <__swbuf_r+0x24>
20404034:	0e818793          	addi	a5,gp,232 # 80001360 <__sf_fake_stderr>
20404038:	f8f412e3          	bne	s0,a5,20403fbc <__swbuf_r+0x24>
2040403c:	44c0                	lw	s0,12(s1)
2040403e:	bfbd                	j	20403fbc <__swbuf_r+0x24>
20404040:	85a2                	mv	a1,s0
20404042:	8526                	mv	a0,s1
20404044:	2021                	jal	2040404c <__swsetup_r>
20404046:	d159                	beqz	a0,20403fcc <__swbuf_r+0x34>
20404048:	597d                	li	s2,-1
2040404a:	b7f9                	j	20404018 <__swbuf_r+0x80>

2040404c <__swsetup_r>:
__swsetup_r():
2040404c:	1141                	addi	sp,sp,-16
2040404e:	80c18793          	addi	a5,gp,-2036 # 80000a84 <_impure_ptr>
20404052:	c226                	sw	s1,4(sp)
20404054:	4384                	lw	s1,0(a5)
20404056:	c422                	sw	s0,8(sp)
20404058:	c04a                	sw	s2,0(sp)
2040405a:	c606                	sw	ra,12(sp)
2040405c:	892a                	mv	s2,a0
2040405e:	842e                	mv	s0,a1
20404060:	c489                	beqz	s1,2040406a <__swsetup_r+0x1e>
20404062:	4c9c                	lw	a5,24(s1)
20404064:	e399                	bnez	a5,2040406a <__swsetup_r+0x1e>
20404066:	8526                	mv	a0,s1
20404068:	2e35                	jal	204043a4 <__sinit>
2040406a:	10818793          	addi	a5,gp,264 # 80001380 <__sf_fake_stdin>
2040406e:	02f41c63          	bne	s0,a5,204040a6 <__swsetup_r+0x5a>
20404072:	40c0                	lw	s0,4(s1)
20404074:	00c41703          	lh	a4,12(s0)
20404078:	01071793          	slli	a5,a4,0x10
2040407c:	83c1                	srli	a5,a5,0x10
2040407e:	0087f693          	andi	a3,a5,8
20404082:	eab5                	bnez	a3,204040f6 <__swsetup_r+0xaa>
20404084:	0107f693          	andi	a3,a5,16
20404088:	ea9d                	bnez	a3,204040be <__swsetup_r+0x72>
2040408a:	47a5                	li	a5,9
2040408c:	00f92023          	sw	a5,0(s2)
20404090:	04076713          	ori	a4,a4,64
20404094:	00e41623          	sh	a4,12(s0)
20404098:	557d                	li	a0,-1
2040409a:	40b2                	lw	ra,12(sp)
2040409c:	4422                	lw	s0,8(sp)
2040409e:	4492                	lw	s1,4(sp)
204040a0:	4902                	lw	s2,0(sp)
204040a2:	0141                	addi	sp,sp,16
204040a4:	8082                	ret
204040a6:	12818793          	addi	a5,gp,296 # 800013a0 <__sf_fake_stdout>
204040aa:	00f41463          	bne	s0,a5,204040b2 <__swsetup_r+0x66>
204040ae:	4480                	lw	s0,8(s1)
204040b0:	b7d1                	j	20404074 <__swsetup_r+0x28>
204040b2:	0e818793          	addi	a5,gp,232 # 80001360 <__sf_fake_stderr>
204040b6:	faf41fe3          	bne	s0,a5,20404074 <__swsetup_r+0x28>
204040ba:	44c0                	lw	s0,12(s1)
204040bc:	bf65                	j	20404074 <__swsetup_r+0x28>
204040be:	8b91                	andi	a5,a5,4
204040c0:	c78d                	beqz	a5,204040ea <__swsetup_r+0x9e>
204040c2:	584c                	lw	a1,52(s0)
204040c4:	c989                	beqz	a1,204040d6 <__swsetup_r+0x8a>
204040c6:	04440793          	addi	a5,s0,68
204040ca:	00f58463          	beq	a1,a5,204040d2 <__swsetup_r+0x86>
204040ce:	854a                	mv	a0,s2
204040d0:	2391                	jal	20404614 <_free_r>
204040d2:	02042a23          	sw	zero,52(s0)
204040d6:	00c45783          	lhu	a5,12(s0)
204040da:	00042223          	sw	zero,4(s0)
204040de:	fdb7f793          	andi	a5,a5,-37
204040e2:	00f41623          	sh	a5,12(s0)
204040e6:	481c                	lw	a5,16(s0)
204040e8:	c01c                	sw	a5,0(s0)
204040ea:	00c45783          	lhu	a5,12(s0)
204040ee:	0087e793          	ori	a5,a5,8
204040f2:	00f41623          	sh	a5,12(s0)
204040f6:	481c                	lw	a5,16(s0)
204040f8:	ef81                	bnez	a5,20404110 <__swsetup_r+0xc4>
204040fa:	00c45783          	lhu	a5,12(s0)
204040fe:	20000713          	li	a4,512
20404102:	2807f793          	andi	a5,a5,640
20404106:	00e78563          	beq	a5,a4,20404110 <__swsetup_r+0xc4>
2040410a:	85a2                	mv	a1,s0
2040410c:	854a                	mv	a0,s2
2040410e:	29a9                	jal	20404568 <__smakebuf_r>
20404110:	00c45783          	lhu	a5,12(s0)
20404114:	0017f713          	andi	a4,a5,1
20404118:	c705                	beqz	a4,20404140 <__swsetup_r+0xf4>
2040411a:	485c                	lw	a5,20(s0)
2040411c:	00042423          	sw	zero,8(s0)
20404120:	40f007b3          	neg	a5,a5
20404124:	cc1c                	sw	a5,24(s0)
20404126:	481c                	lw	a5,16(s0)
20404128:	4501                	li	a0,0
2040412a:	fba5                	bnez	a5,2040409a <__swsetup_r+0x4e>
2040412c:	00c41783          	lh	a5,12(s0)
20404130:	0807f713          	andi	a4,a5,128
20404134:	d33d                	beqz	a4,2040409a <__swsetup_r+0x4e>
20404136:	0407e793          	ori	a5,a5,64
2040413a:	00f41623          	sh	a5,12(s0)
2040413e:	bfa9                	j	20404098 <__swsetup_r+0x4c>
20404140:	8b89                	andi	a5,a5,2
20404142:	4701                	li	a4,0
20404144:	e391                	bnez	a5,20404148 <__swsetup_r+0xfc>
20404146:	4858                	lw	a4,20(s0)
20404148:	c418                	sw	a4,8(s0)
2040414a:	bff1                	j	20404126 <__swsetup_r+0xda>

2040414c <__sflush_r>:
__sflush_r():
2040414c:	00c5d783          	lhu	a5,12(a1) # ffffa00c <metal_segment_heap_target_end+0x7fff66ec>
20404150:	1101                	addi	sp,sp,-32
20404152:	cc22                	sw	s0,24(sp)
20404154:	ca26                	sw	s1,20(sp)
20404156:	ce06                	sw	ra,28(sp)
20404158:	c84a                	sw	s2,16(sp)
2040415a:	c64e                	sw	s3,12(sp)
2040415c:	0087f713          	andi	a4,a5,8
20404160:	84aa                	mv	s1,a0
20404162:	842e                	mv	s0,a1
20404164:	e765                	bnez	a4,2040424c <__sflush_r+0x100>
20404166:	41d8                	lw	a4,4(a1)
20404168:	00e04763          	bgtz	a4,20404176 <__sflush_r+0x2a>
2040416c:	41b8                	lw	a4,64(a1)
2040416e:	00e04463          	bgtz	a4,20404176 <__sflush_r+0x2a>
20404172:	4501                	li	a0,0
20404174:	a0c1                	j	20404234 <__sflush_r+0xe8>
20404176:	5458                	lw	a4,44(s0)
20404178:	df6d                	beqz	a4,20404172 <__sflush_r+0x26>
2040417a:	0004a903          	lw	s2,0(s1)
2040417e:	01379693          	slli	a3,a5,0x13
20404182:	0004a023          	sw	zero,0(s1)
20404186:	0606de63          	bgez	a3,20404202 <__sflush_r+0xb6>
2040418a:	4868                	lw	a0,84(s0)
2040418c:	00c45783          	lhu	a5,12(s0)
20404190:	8b91                	andi	a5,a5,4
20404192:	c799                	beqz	a5,204041a0 <__sflush_r+0x54>
20404194:	405c                	lw	a5,4(s0)
20404196:	8d1d                	sub	a0,a0,a5
20404198:	585c                	lw	a5,52(s0)
2040419a:	c399                	beqz	a5,204041a0 <__sflush_r+0x54>
2040419c:	403c                	lw	a5,64(s0)
2040419e:	8d1d                	sub	a0,a0,a5
204041a0:	545c                	lw	a5,44(s0)
204041a2:	500c                	lw	a1,32(s0)
204041a4:	862a                	mv	a2,a0
204041a6:	4681                	li	a3,0
204041a8:	8526                	mv	a0,s1
204041aa:	9782                	jalr	a5
204041ac:	57fd                	li	a5,-1
204041ae:	00c45703          	lhu	a4,12(s0)
204041b2:	00f51d63          	bne	a0,a5,204041cc <__sflush_r+0x80>
204041b6:	4094                	lw	a3,0(s1)
204041b8:	47f5                	li	a5,29
204041ba:	08d7e463          	bltu	a5,a3,20404242 <__sflush_r+0xf6>
204041be:	204007b7          	lui	a5,0x20400
204041c2:	0785                	addi	a5,a5,1
204041c4:	00d7d7b3          	srl	a5,a5,a3
204041c8:	8b85                	andi	a5,a5,1
204041ca:	cfa5                	beqz	a5,20404242 <__sflush_r+0xf6>
204041cc:	481c                	lw	a5,16(s0)
204041ce:	00042223          	sw	zero,4(s0)
204041d2:	c01c                	sw	a5,0(s0)
204041d4:	01371793          	slli	a5,a4,0x13
204041d8:	0007d863          	bgez	a5,204041e8 <__sflush_r+0x9c>
204041dc:	57fd                	li	a5,-1
204041de:	00f51463          	bne	a0,a5,204041e6 <__sflush_r+0x9a>
204041e2:	409c                	lw	a5,0(s1)
204041e4:	e391                	bnez	a5,204041e8 <__sflush_r+0x9c>
204041e6:	c868                	sw	a0,84(s0)
204041e8:	584c                	lw	a1,52(s0)
204041ea:	0124a023          	sw	s2,0(s1)
204041ee:	d1d1                	beqz	a1,20404172 <__sflush_r+0x26>
204041f0:	04440793          	addi	a5,s0,68
204041f4:	00f58463          	beq	a1,a5,204041fc <__sflush_r+0xb0>
204041f8:	8526                	mv	a0,s1
204041fa:	2929                	jal	20404614 <_free_r>
204041fc:	02042a23          	sw	zero,52(s0)
20404200:	bf8d                	j	20404172 <__sflush_r+0x26>
20404202:	500c                	lw	a1,32(s0)
20404204:	4685                	li	a3,1
20404206:	4601                	li	a2,0
20404208:	8526                	mv	a0,s1
2040420a:	9702                	jalr	a4
2040420c:	57fd                	li	a5,-1
2040420e:	f6f51fe3          	bne	a0,a5,2040418c <__sflush_r+0x40>
20404212:	409c                	lw	a5,0(s1)
20404214:	dfa5                	beqz	a5,2040418c <__sflush_r+0x40>
20404216:	4775                	li	a4,29
20404218:	00e78563          	beq	a5,a4,20404222 <__sflush_r+0xd6>
2040421c:	4759                	li	a4,22
2040421e:	00e79563          	bne	a5,a4,20404228 <__sflush_r+0xdc>
20404222:	0124a023          	sw	s2,0(s1)
20404226:	b7b1                	j	20404172 <__sflush_r+0x26>
20404228:	00c45783          	lhu	a5,12(s0)
2040422c:	0407e793          	ori	a5,a5,64
20404230:	00f41623          	sh	a5,12(s0)
20404234:	40f2                	lw	ra,28(sp)
20404236:	4462                	lw	s0,24(sp)
20404238:	44d2                	lw	s1,20(sp)
2040423a:	4942                	lw	s2,16(sp)
2040423c:	49b2                	lw	s3,12(sp)
2040423e:	6105                	addi	sp,sp,32
20404240:	8082                	ret
20404242:	04076713          	ori	a4,a4,64
20404246:	00e41623          	sh	a4,12(s0)
2040424a:	b7ed                	j	20404234 <__sflush_r+0xe8>
2040424c:	0105a983          	lw	s3,16(a1)
20404250:	f20981e3          	beqz	s3,20404172 <__sflush_r+0x26>
20404254:	0005a903          	lw	s2,0(a1)
20404258:	8b8d                	andi	a5,a5,3
2040425a:	0135a023          	sw	s3,0(a1)
2040425e:	41390933          	sub	s2,s2,s3
20404262:	4701                	li	a4,0
20404264:	e391                	bnez	a5,20404268 <__sflush_r+0x11c>
20404266:	49d8                	lw	a4,20(a1)
20404268:	c418                	sw	a4,8(s0)
2040426a:	f12054e3          	blez	s2,20404172 <__sflush_r+0x26>
2040426e:	541c                	lw	a5,40(s0)
20404270:	500c                	lw	a1,32(s0)
20404272:	86ca                	mv	a3,s2
20404274:	864e                	mv	a2,s3
20404276:	8526                	mv	a0,s1
20404278:	9782                	jalr	a5
2040427a:	00a04a63          	bgtz	a0,2040428e <__sflush_r+0x142>
2040427e:	00c45783          	lhu	a5,12(s0)
20404282:	557d                	li	a0,-1
20404284:	0407e793          	ori	a5,a5,64
20404288:	00f41623          	sh	a5,12(s0)
2040428c:	b765                	j	20404234 <__sflush_r+0xe8>
2040428e:	99aa                	add	s3,s3,a0
20404290:	40a90933          	sub	s2,s2,a0
20404294:	bfd9                	j	2040426a <__sflush_r+0x11e>

20404296 <_fflush_r>:
_fflush_r():
20404296:	499c                	lw	a5,16(a1)
20404298:	cba9                	beqz	a5,204042ea <_fflush_r+0x54>
2040429a:	1101                	addi	sp,sp,-32
2040429c:	cc22                	sw	s0,24(sp)
2040429e:	ce06                	sw	ra,28(sp)
204042a0:	842a                	mv	s0,a0
204042a2:	c511                	beqz	a0,204042ae <_fflush_r+0x18>
204042a4:	4d1c                	lw	a5,24(a0)
204042a6:	e781                	bnez	a5,204042ae <_fflush_r+0x18>
204042a8:	c62e                	sw	a1,12(sp)
204042aa:	28ed                	jal	204043a4 <__sinit>
204042ac:	45b2                	lw	a1,12(sp)
204042ae:	10818793          	addi	a5,gp,264 # 80001380 <__sf_fake_stdin>
204042b2:	00f59b63          	bne	a1,a5,204042c8 <_fflush_r+0x32>
204042b6:	404c                	lw	a1,4(s0)
204042b8:	00c59783          	lh	a5,12(a1)
204042bc:	c395                	beqz	a5,204042e0 <_fflush_r+0x4a>
204042be:	8522                	mv	a0,s0
204042c0:	4462                	lw	s0,24(sp)
204042c2:	40f2                	lw	ra,28(sp)
204042c4:	6105                	addi	sp,sp,32
204042c6:	b559                	j	2040414c <__sflush_r>
204042c8:	12818793          	addi	a5,gp,296 # 800013a0 <__sf_fake_stdout>
204042cc:	00f59463          	bne	a1,a5,204042d4 <_fflush_r+0x3e>
204042d0:	440c                	lw	a1,8(s0)
204042d2:	b7dd                	j	204042b8 <_fflush_r+0x22>
204042d4:	0e818793          	addi	a5,gp,232 # 80001360 <__sf_fake_stderr>
204042d8:	fef590e3          	bne	a1,a5,204042b8 <_fflush_r+0x22>
204042dc:	444c                	lw	a1,12(s0)
204042de:	bfe9                	j	204042b8 <_fflush_r+0x22>
204042e0:	40f2                	lw	ra,28(sp)
204042e2:	4462                	lw	s0,24(sp)
204042e4:	4501                	li	a0,0
204042e6:	6105                	addi	sp,sp,32
204042e8:	8082                	ret
204042ea:	4501                	li	a0,0
204042ec:	8082                	ret

204042ee <std>:
std():
204042ee:	1141                	addi	sp,sp,-16
204042f0:	c422                	sw	s0,8(sp)
204042f2:	c606                	sw	ra,12(sp)
204042f4:	842a                	mv	s0,a0
204042f6:	00b51623          	sh	a1,12(a0)
204042fa:	00c51723          	sh	a2,14(a0)
204042fe:	00052023          	sw	zero,0(a0)
20404302:	00052223          	sw	zero,4(a0)
20404306:	00052423          	sw	zero,8(a0)
2040430a:	06052223          	sw	zero,100(a0)
2040430e:	00052823          	sw	zero,16(a0)
20404312:	00052a23          	sw	zero,20(a0)
20404316:	00052c23          	sw	zero,24(a0)
2040431a:	4621                	li	a2,8
2040431c:	4581                	li	a1,0
2040431e:	05c50513          	addi	a0,a0,92
20404322:	24cd                	jal	20404604 <memset>
20404324:	00000797          	auipc	a5,0x0
20404328:	7a478793          	addi	a5,a5,1956 # 20404ac8 <__sread>
2040432c:	d05c                	sw	a5,36(s0)
2040432e:	00000797          	auipc	a5,0x0
20404332:	7ca78793          	addi	a5,a5,1994 # 20404af8 <__swrite>
20404336:	d41c                	sw	a5,40(s0)
20404338:	00001797          	auipc	a5,0x1
2040433c:	80e78793          	addi	a5,a5,-2034 # 20404b46 <__sseek>
20404340:	d45c                	sw	a5,44(s0)
20404342:	00001797          	auipc	a5,0x1
20404346:	83a78793          	addi	a5,a5,-1990 # 20404b7c <__sclose>
2040434a:	d000                	sw	s0,32(s0)
2040434c:	d81c                	sw	a5,48(s0)
2040434e:	40b2                	lw	ra,12(sp)
20404350:	4422                	lw	s0,8(sp)
20404352:	0141                	addi	sp,sp,16
20404354:	8082                	ret

20404356 <_cleanup_r>:
_cleanup_r():
20404356:	00000597          	auipc	a1,0x0
2040435a:	f4058593          	addi	a1,a1,-192 # 20404296 <_fflush_r>
2040435e:	a299                	j	204044a4 <_fwalk_reent>

20404360 <__sfmoreglue>:
__sfmoreglue():
20404360:	1141                	addi	sp,sp,-16
20404362:	c226                	sw	s1,4(sp)
20404364:	06800613          	li	a2,104
20404368:	fff58493          	addi	s1,a1,-1
2040436c:	02c484b3          	mul	s1,s1,a2
20404370:	c04a                	sw	s2,0(sp)
20404372:	892e                	mv	s2,a1
20404374:	c422                	sw	s0,8(sp)
20404376:	c606                	sw	ra,12(sp)
20404378:	07448593          	addi	a1,s1,116
2040437c:	2691                	jal	204046c0 <_malloc_r>
2040437e:	842a                	mv	s0,a0
20404380:	c919                	beqz	a0,20404396 <__sfmoreglue+0x36>
20404382:	00052023          	sw	zero,0(a0)
20404386:	01252223          	sw	s2,4(a0)
2040438a:	0531                	addi	a0,a0,12
2040438c:	c408                	sw	a0,8(s0)
2040438e:	06848613          	addi	a2,s1,104
20404392:	4581                	li	a1,0
20404394:	2c85                	jal	20404604 <memset>
20404396:	8522                	mv	a0,s0
20404398:	40b2                	lw	ra,12(sp)
2040439a:	4422                	lw	s0,8(sp)
2040439c:	4492                	lw	s1,4(sp)
2040439e:	4902                	lw	s2,0(sp)
204043a0:	0141                	addi	sp,sp,16
204043a2:	8082                	ret

204043a4 <__sinit>:
__sinit():
204043a4:	4d1c                	lw	a5,24(a0)
204043a6:	e3ad                	bnez	a5,20404408 <__sinit+0x64>
204043a8:	1141                	addi	sp,sp,-16
204043aa:	c606                	sw	ra,12(sp)
204043ac:	c422                	sw	s0,8(sp)
204043ae:	00000797          	auipc	a5,0x0
204043b2:	fa878793          	addi	a5,a5,-88 # 20404356 <_cleanup_r>
204043b6:	d51c                	sw	a5,40(a0)
204043b8:	81018793          	addi	a5,gp,-2032 # 80000a88 <_global_impure_ptr>
204043bc:	439c                	lw	a5,0(a5)
204043be:	04052423          	sw	zero,72(a0)
204043c2:	04052623          	sw	zero,76(a0)
204043c6:	04052823          	sw	zero,80(a0)
204043ca:	00f51463          	bne	a0,a5,204043d2 <__sinit+0x2e>
204043ce:	4785                	li	a5,1
204043d0:	cd1c                	sw	a5,24(a0)
204043d2:	842a                	mv	s0,a0
204043d4:	281d                	jal	2040440a <__sfp>
204043d6:	c048                	sw	a0,4(s0)
204043d8:	8522                	mv	a0,s0
204043da:	2805                	jal	2040440a <__sfp>
204043dc:	c408                	sw	a0,8(s0)
204043de:	8522                	mv	a0,s0
204043e0:	202d                	jal	2040440a <__sfp>
204043e2:	c448                	sw	a0,12(s0)
204043e4:	4048                	lw	a0,4(s0)
204043e6:	4601                	li	a2,0
204043e8:	4591                	li	a1,4
204043ea:	3711                	jal	204042ee <std>
204043ec:	4408                	lw	a0,8(s0)
204043ee:	4605                	li	a2,1
204043f0:	45a5                	li	a1,9
204043f2:	3df5                	jal	204042ee <std>
204043f4:	4448                	lw	a0,12(s0)
204043f6:	4609                	li	a2,2
204043f8:	45c9                	li	a1,18
204043fa:	3dd5                	jal	204042ee <std>
204043fc:	4785                	li	a5,1
204043fe:	cc1c                	sw	a5,24(s0)
20404400:	40b2                	lw	ra,12(sp)
20404402:	4422                	lw	s0,8(sp)
20404404:	0141                	addi	sp,sp,16
20404406:	8082                	ret
20404408:	8082                	ret

2040440a <__sfp>:
__sfp():
2040440a:	1141                	addi	sp,sp,-16
2040440c:	81018793          	addi	a5,gp,-2032 # 80000a88 <_global_impure_ptr>
20404410:	c226                	sw	s1,4(sp)
20404412:	4384                	lw	s1,0(a5)
20404414:	c04a                	sw	s2,0(sp)
20404416:	c606                	sw	ra,12(sp)
20404418:	4c9c                	lw	a5,24(s1)
2040441a:	c422                	sw	s0,8(sp)
2040441c:	892a                	mv	s2,a0
2040441e:	e399                	bnez	a5,20404424 <__sfp+0x1a>
20404420:	8526                	mv	a0,s1
20404422:	3749                	jal	204043a4 <__sinit>
20404424:	04848493          	addi	s1,s1,72
20404428:	4480                	lw	s0,8(s1)
2040442a:	40dc                	lw	a5,4(s1)
2040442c:	17fd                	addi	a5,a5,-1
2040442e:	0007d663          	bgez	a5,2040443a <__sfp+0x30>
20404432:	409c                	lw	a5,0(s1)
20404434:	cfb1                	beqz	a5,20404490 <__sfp+0x86>
20404436:	4084                	lw	s1,0(s1)
20404438:	bfc5                	j	20404428 <__sfp+0x1e>
2040443a:	00c41703          	lh	a4,12(s0)
2040443e:	e731                	bnez	a4,2040448a <__sfp+0x80>
20404440:	77c1                	lui	a5,0xffff0
20404442:	0785                	addi	a5,a5,1
20404444:	06042223          	sw	zero,100(s0)
20404448:	00042023          	sw	zero,0(s0)
2040444c:	00042223          	sw	zero,4(s0)
20404450:	00042423          	sw	zero,8(s0)
20404454:	c45c                	sw	a5,12(s0)
20404456:	00042823          	sw	zero,16(s0)
2040445a:	00042a23          	sw	zero,20(s0)
2040445e:	00042c23          	sw	zero,24(s0)
20404462:	4621                	li	a2,8
20404464:	4581                	li	a1,0
20404466:	05c40513          	addi	a0,s0,92
2040446a:	2a69                	jal	20404604 <memset>
2040446c:	02042a23          	sw	zero,52(s0)
20404470:	02042c23          	sw	zero,56(s0)
20404474:	04042423          	sw	zero,72(s0)
20404478:	04042623          	sw	zero,76(s0)
2040447c:	8522                	mv	a0,s0
2040447e:	40b2                	lw	ra,12(sp)
20404480:	4422                	lw	s0,8(sp)
20404482:	4492                	lw	s1,4(sp)
20404484:	4902                	lw	s2,0(sp)
20404486:	0141                	addi	sp,sp,16
20404488:	8082                	ret
2040448a:	06840413          	addi	s0,s0,104
2040448e:	bf79                	j	2040442c <__sfp+0x22>
20404490:	4591                	li	a1,4
20404492:	854a                	mv	a0,s2
20404494:	35f1                	jal	20404360 <__sfmoreglue>
20404496:	c088                	sw	a0,0(s1)
20404498:	842a                	mv	s0,a0
2040449a:	fd51                	bnez	a0,20404436 <__sfp+0x2c>
2040449c:	47b1                	li	a5,12
2040449e:	00f92023          	sw	a5,0(s2)
204044a2:	bfe9                	j	2040447c <__sfp+0x72>

204044a4 <_fwalk_reent>:
_fwalk_reent():
204044a4:	7179                	addi	sp,sp,-48
204044a6:	d422                	sw	s0,40(sp)
204044a8:	d04a                	sw	s2,32(sp)
204044aa:	cc52                	sw	s4,24(sp)
204044ac:	ca56                	sw	s5,20(sp)
204044ae:	c85a                	sw	s6,16(sp)
204044b0:	c65e                	sw	s7,12(sp)
204044b2:	d606                	sw	ra,44(sp)
204044b4:	d226                	sw	s1,36(sp)
204044b6:	ce4e                	sw	s3,28(sp)
204044b8:	8a2a                	mv	s4,a0
204044ba:	8aae                	mv	s5,a1
204044bc:	04850413          	addi	s0,a0,72
204044c0:	4901                	li	s2,0
204044c2:	4b05                	li	s6,1
204044c4:	5bfd                	li	s7,-1
204044c6:	ec09                	bnez	s0,204044e0 <_fwalk_reent+0x3c>
204044c8:	50b2                	lw	ra,44(sp)
204044ca:	5422                	lw	s0,40(sp)
204044cc:	854a                	mv	a0,s2
204044ce:	5492                	lw	s1,36(sp)
204044d0:	5902                	lw	s2,32(sp)
204044d2:	49f2                	lw	s3,28(sp)
204044d4:	4a62                	lw	s4,24(sp)
204044d6:	4ad2                	lw	s5,20(sp)
204044d8:	4b42                	lw	s6,16(sp)
204044da:	4bb2                	lw	s7,12(sp)
204044dc:	6145                	addi	sp,sp,48
204044de:	8082                	ret
204044e0:	4404                	lw	s1,8(s0)
204044e2:	00442983          	lw	s3,4(s0)
204044e6:	19fd                	addi	s3,s3,-1
204044e8:	0009d463          	bgez	s3,204044f0 <_fwalk_reent+0x4c>
204044ec:	4000                	lw	s0,0(s0)
204044ee:	bfe1                	j	204044c6 <_fwalk_reent+0x22>
204044f0:	00c4d783          	lhu	a5,12(s1)
204044f4:	00fb7b63          	bgeu	s6,a5,2040450a <_fwalk_reent+0x66>
204044f8:	00e49783          	lh	a5,14(s1)
204044fc:	01778763          	beq	a5,s7,2040450a <_fwalk_reent+0x66>
20404500:	85a6                	mv	a1,s1
20404502:	8552                	mv	a0,s4
20404504:	9a82                	jalr	s5
20404506:	00a96933          	or	s2,s2,a0
2040450a:	06848493          	addi	s1,s1,104
2040450e:	bfe1                	j	204044e6 <_fwalk_reent+0x42>

20404510 <__swhatbuf_r>:
__swhatbuf_r():
20404510:	7119                	addi	sp,sp,-128
20404512:	daa6                	sw	s1,116(sp)
20404514:	84ae                	mv	s1,a1
20404516:	00e59583          	lh	a1,14(a1)
2040451a:	dca2                	sw	s0,120(sp)
2040451c:	de86                	sw	ra,124(sp)
2040451e:	8432                	mv	s0,a2
20404520:	0005dc63          	bgez	a1,20404538 <__swhatbuf_r+0x28>
20404524:	00c4d783          	lhu	a5,12(s1)
20404528:	0006a023          	sw	zero,0(a3) # ffffa000 <metal_segment_heap_target_end+0x7fff66e0>
2040452c:	0807f793          	andi	a5,a5,128
20404530:	e39d                	bnez	a5,20404556 <__swhatbuf_r+0x46>
20404532:	40000793          	li	a5,1024
20404536:	a015                	j	2040455a <__swhatbuf_r+0x4a>
20404538:	0830                	addi	a2,sp,24
2040453a:	c636                	sw	a3,12(sp)
2040453c:	2575                	jal	20404be8 <_fstat_r>
2040453e:	46b2                	lw	a3,12(sp)
20404540:	fe0542e3          	bltz	a0,20404524 <__swhatbuf_r+0x14>
20404544:	4772                	lw	a4,28(sp)
20404546:	67bd                	lui	a5,0xf
20404548:	8ff9                	and	a5,a5,a4
2040454a:	7779                	lui	a4,0xffffe
2040454c:	97ba                	add	a5,a5,a4
2040454e:	0017b793          	seqz	a5,a5
20404552:	c29c                	sw	a5,0(a3)
20404554:	bff9                	j	20404532 <__swhatbuf_r+0x22>
20404556:	04000793          	li	a5,64
2040455a:	c01c                	sw	a5,0(s0)
2040455c:	50f6                	lw	ra,124(sp)
2040455e:	5466                	lw	s0,120(sp)
20404560:	54d6                	lw	s1,116(sp)
20404562:	4501                	li	a0,0
20404564:	6109                	addi	sp,sp,128
20404566:	8082                	ret

20404568 <__smakebuf_r>:
__smakebuf_r():
20404568:	00c5d783          	lhu	a5,12(a1)
2040456c:	1101                	addi	sp,sp,-32
2040456e:	cc22                	sw	s0,24(sp)
20404570:	ce06                	sw	ra,28(sp)
20404572:	ca26                	sw	s1,20(sp)
20404574:	c84a                	sw	s2,16(sp)
20404576:	8b89                	andi	a5,a5,2
20404578:	842e                	mv	s0,a1
2040457a:	cf89                	beqz	a5,20404594 <__smakebuf_r+0x2c>
2040457c:	04740793          	addi	a5,s0,71
20404580:	c01c                	sw	a5,0(s0)
20404582:	c81c                	sw	a5,16(s0)
20404584:	4785                	li	a5,1
20404586:	c85c                	sw	a5,20(s0)
20404588:	40f2                	lw	ra,28(sp)
2040458a:	4462                	lw	s0,24(sp)
2040458c:	44d2                	lw	s1,20(sp)
2040458e:	4942                	lw	s2,16(sp)
20404590:	6105                	addi	sp,sp,32
20404592:	8082                	ret
20404594:	0074                	addi	a3,sp,12
20404596:	0030                	addi	a2,sp,8
20404598:	84aa                	mv	s1,a0
2040459a:	3f9d                	jal	20404510 <__swhatbuf_r>
2040459c:	45a2                	lw	a1,8(sp)
2040459e:	892a                	mv	s2,a0
204045a0:	8526                	mv	a0,s1
204045a2:	2a39                	jal	204046c0 <_malloc_r>
204045a4:	ed01                	bnez	a0,204045bc <__smakebuf_r+0x54>
204045a6:	00c41783          	lh	a5,12(s0)
204045aa:	2007f713          	andi	a4,a5,512
204045ae:	ff69                	bnez	a4,20404588 <__smakebuf_r+0x20>
204045b0:	9bf1                	andi	a5,a5,-4
204045b2:	0027e793          	ori	a5,a5,2
204045b6:	00f41623          	sh	a5,12(s0)
204045ba:	b7c9                	j	2040457c <__smakebuf_r+0x14>
204045bc:	00000797          	auipc	a5,0x0
204045c0:	d9a78793          	addi	a5,a5,-614 # 20404356 <_cleanup_r>
204045c4:	d49c                	sw	a5,40(s1)
204045c6:	00c45783          	lhu	a5,12(s0)
204045ca:	c008                	sw	a0,0(s0)
204045cc:	c808                	sw	a0,16(s0)
204045ce:	0807e793          	ori	a5,a5,128
204045d2:	00f41623          	sh	a5,12(s0)
204045d6:	47a2                	lw	a5,8(sp)
204045d8:	c85c                	sw	a5,20(s0)
204045da:	47b2                	lw	a5,12(sp)
204045dc:	cf89                	beqz	a5,204045f6 <__smakebuf_r+0x8e>
204045de:	00e41583          	lh	a1,14(s0)
204045e2:	8526                	mv	a0,s1
204045e4:	2d1d                	jal	20404c1a <_isatty_r>
204045e6:	c901                	beqz	a0,204045f6 <__smakebuf_r+0x8e>
204045e8:	00c45783          	lhu	a5,12(s0)
204045ec:	9bf1                	andi	a5,a5,-4
204045ee:	0017e793          	ori	a5,a5,1
204045f2:	00f41623          	sh	a5,12(s0)
204045f6:	00c45783          	lhu	a5,12(s0)
204045fa:	00f96933          	or	s2,s2,a5
204045fe:	01241623          	sh	s2,12(s0)
20404602:	b759                	j	20404588 <__smakebuf_r+0x20>

20404604 <memset>:
memset():
20404604:	832a                	mv	t1,a0
20404606:	c611                	beqz	a2,20404612 <memset+0xe>
20404608:	00b30023          	sb	a1,0(t1)
2040460c:	167d                	addi	a2,a2,-1
2040460e:	0305                	addi	t1,t1,1
20404610:	fe65                	bnez	a2,20404608 <memset+0x4>
20404612:	8082                	ret

20404614 <_free_r>:
_free_r():
20404614:	c5cd                	beqz	a1,204046be <_free_r+0xaa>
20404616:	ffc5a783          	lw	a5,-4(a1)
2040461a:	1141                	addi	sp,sp,-16
2040461c:	c422                	sw	s0,8(sp)
2040461e:	c606                	sw	ra,12(sp)
20404620:	c226                	sw	s1,4(sp)
20404622:	ffc58413          	addi	s0,a1,-4
20404626:	0007d363          	bgez	a5,2040462c <_free_r+0x18>
2040462a:	943e                	add	s0,s0,a5
2040462c:	84aa                	mv	s1,a0
2040462e:	25ad                	jal	20404c98 <__malloc_lock>
20404630:	5fbfe797          	auipc	a5,0x5fbfe
20404634:	a4478793          	addi	a5,a5,-1468 # 80002074 <__malloc_free_list>
20404638:	439c                	lw	a5,0(a5)
2040463a:	ef89                	bnez	a5,20404654 <_free_r+0x40>
2040463c:	00042223          	sw	zero,4(s0)
20404640:	5fbfe797          	auipc	a5,0x5fbfe
20404644:	a287aa23          	sw	s0,-1484(a5) # 80002074 <__malloc_free_list>
20404648:	4422                	lw	s0,8(sp)
2040464a:	40b2                	lw	ra,12(sp)
2040464c:	8526                	mv	a0,s1
2040464e:	4492                	lw	s1,4(sp)
20404650:	0141                	addi	sp,sp,16
20404652:	a5a1                	j	20404c9a <__malloc_unlock>
20404654:	00f47e63          	bgeu	s0,a5,20404670 <_free_r+0x5c>
20404658:	4014                	lw	a3,0(s0)
2040465a:	00d40733          	add	a4,s0,a3
2040465e:	00e79663          	bne	a5,a4,2040466a <_free_r+0x56>
20404662:	4398                	lw	a4,0(a5)
20404664:	43dc                	lw	a5,4(a5)
20404666:	9736                	add	a4,a4,a3
20404668:	c018                	sw	a4,0(s0)
2040466a:	c05c                	sw	a5,4(s0)
2040466c:	bfd1                	j	20404640 <_free_r+0x2c>
2040466e:	87ba                	mv	a5,a4
20404670:	43d8                	lw	a4,4(a5)
20404672:	c319                	beqz	a4,20404678 <_free_r+0x64>
20404674:	fee47de3          	bgeu	s0,a4,2040466e <_free_r+0x5a>
20404678:	4394                	lw	a3,0(a5)
2040467a:	00d78633          	add	a2,a5,a3
2040467e:	00861f63          	bne	a2,s0,2040469c <_free_r+0x88>
20404682:	4010                	lw	a2,0(s0)
20404684:	96b2                	add	a3,a3,a2
20404686:	c394                	sw	a3,0(a5)
20404688:	00d78633          	add	a2,a5,a3
2040468c:	fac71ee3          	bne	a4,a2,20404648 <_free_r+0x34>
20404690:	4310                	lw	a2,0(a4)
20404692:	4358                	lw	a4,4(a4)
20404694:	96b2                	add	a3,a3,a2
20404696:	c394                	sw	a3,0(a5)
20404698:	c3d8                	sw	a4,4(a5)
2040469a:	b77d                	j	20404648 <_free_r+0x34>
2040469c:	00c47563          	bgeu	s0,a2,204046a6 <_free_r+0x92>
204046a0:	47b1                	li	a5,12
204046a2:	c09c                	sw	a5,0(s1)
204046a4:	b755                	j	20404648 <_free_r+0x34>
204046a6:	4010                	lw	a2,0(s0)
204046a8:	00c406b3          	add	a3,s0,a2
204046ac:	00d71663          	bne	a4,a3,204046b8 <_free_r+0xa4>
204046b0:	4314                	lw	a3,0(a4)
204046b2:	4358                	lw	a4,4(a4)
204046b4:	96b2                	add	a3,a3,a2
204046b6:	c014                	sw	a3,0(s0)
204046b8:	c058                	sw	a4,4(s0)
204046ba:	c3c0                	sw	s0,4(a5)
204046bc:	b771                	j	20404648 <_free_r+0x34>
204046be:	8082                	ret

204046c0 <_malloc_r>:
_malloc_r():
204046c0:	1101                	addi	sp,sp,-32
204046c2:	ca26                	sw	s1,20(sp)
204046c4:	00358493          	addi	s1,a1,3
204046c8:	98f1                	andi	s1,s1,-4
204046ca:	ce06                	sw	ra,28(sp)
204046cc:	cc22                	sw	s0,24(sp)
204046ce:	c84a                	sw	s2,16(sp)
204046d0:	c64e                	sw	s3,12(sp)
204046d2:	04a1                	addi	s1,s1,8
204046d4:	47b1                	li	a5,12
204046d6:	04f4f763          	bgeu	s1,a5,20404724 <_malloc_r+0x64>
204046da:	44b1                	li	s1,12
204046dc:	04b4e663          	bltu	s1,a1,20404728 <_malloc_r+0x68>
204046e0:	892a                	mv	s2,a0
204046e2:	2b5d                	jal	20404c98 <__malloc_lock>
204046e4:	5fbfe797          	auipc	a5,0x5fbfe
204046e8:	99078793          	addi	a5,a5,-1648 # 80002074 <__malloc_free_list>
204046ec:	4398                	lw	a4,0(a5)
204046ee:	843a                	mv	s0,a4
204046f0:	e431                	bnez	s0,2040473c <_malloc_r+0x7c>
204046f2:	5fbfe797          	auipc	a5,0x5fbfe
204046f6:	98678793          	addi	a5,a5,-1658 # 80002078 <__malloc_sbrk_start>
204046fa:	439c                	lw	a5,0(a5)
204046fc:	eb81                	bnez	a5,2040470c <_malloc_r+0x4c>
204046fe:	4581                	li	a1,0
20404700:	854a                	mv	a0,s2
20404702:	2e59                	jal	20404a98 <_sbrk_r>
20404704:	5fbfe797          	auipc	a5,0x5fbfe
20404708:	96a7aa23          	sw	a0,-1676(a5) # 80002078 <__malloc_sbrk_start>
2040470c:	85a6                	mv	a1,s1
2040470e:	854a                	mv	a0,s2
20404710:	2661                	jal	20404a98 <_sbrk_r>
20404712:	59fd                	li	s3,-1
20404714:	07351963          	bne	a0,s3,20404786 <_malloc_r+0xc6>
20404718:	47b1                	li	a5,12
2040471a:	00f92023          	sw	a5,0(s2)
2040471e:	854a                	mv	a0,s2
20404720:	2bad                	jal	20404c9a <__malloc_unlock>
20404722:	a029                	j	2040472c <_malloc_r+0x6c>
20404724:	fa04dce3          	bgez	s1,204046dc <_malloc_r+0x1c>
20404728:	47b1                	li	a5,12
2040472a:	c11c                	sw	a5,0(a0)
2040472c:	4501                	li	a0,0
2040472e:	40f2                	lw	ra,28(sp)
20404730:	4462                	lw	s0,24(sp)
20404732:	44d2                	lw	s1,20(sp)
20404734:	4942                	lw	s2,16(sp)
20404736:	49b2                	lw	s3,12(sp)
20404738:	6105                	addi	sp,sp,32
2040473a:	8082                	ret
2040473c:	401c                	lw	a5,0(s0)
2040473e:	8f85                	sub	a5,a5,s1
20404740:	0407c063          	bltz	a5,20404780 <_malloc_r+0xc0>
20404744:	46ad                	li	a3,11
20404746:	00f6f663          	bgeu	a3,a5,20404752 <_malloc_r+0x92>
2040474a:	c01c                	sw	a5,0(s0)
2040474c:	943e                	add	s0,s0,a5
2040474e:	c004                	sw	s1,0(s0)
20404750:	a801                	j	20404760 <_malloc_r+0xa0>
20404752:	405c                	lw	a5,4(s0)
20404754:	02871463          	bne	a4,s0,2040477c <_malloc_r+0xbc>
20404758:	5fbfe717          	auipc	a4,0x5fbfe
2040475c:	90f72e23          	sw	a5,-1764(a4) # 80002074 <__malloc_free_list>
20404760:	854a                	mv	a0,s2
20404762:	2b25                	jal	20404c9a <__malloc_unlock>
20404764:	00b40513          	addi	a0,s0,11
20404768:	00440793          	addi	a5,s0,4
2040476c:	9961                	andi	a0,a0,-8
2040476e:	40f50733          	sub	a4,a0,a5
20404772:	df55                	beqz	a4,2040472e <_malloc_r+0x6e>
20404774:	943a                	add	s0,s0,a4
20404776:	8f89                	sub	a5,a5,a0
20404778:	c01c                	sw	a5,0(s0)
2040477a:	bf55                	j	2040472e <_malloc_r+0x6e>
2040477c:	c35c                	sw	a5,4(a4)
2040477e:	b7cd                	j	20404760 <_malloc_r+0xa0>
20404780:	8722                	mv	a4,s0
20404782:	4040                	lw	s0,4(s0)
20404784:	b7b5                	j	204046f0 <_malloc_r+0x30>
20404786:	00350413          	addi	s0,a0,3
2040478a:	9871                	andi	s0,s0,-4
2040478c:	fc8501e3          	beq	a0,s0,2040474e <_malloc_r+0x8e>
20404790:	40a405b3          	sub	a1,s0,a0
20404794:	854a                	mv	a0,s2
20404796:	2609                	jal	20404a98 <_sbrk_r>
20404798:	fb351be3          	bne	a0,s3,2040474e <_malloc_r+0x8e>
2040479c:	bfb5                	j	20404718 <_malloc_r+0x58>

2040479e <__sfputc_r>:
__sfputc_r():
2040479e:	461c                	lw	a5,8(a2)
204047a0:	17fd                	addi	a5,a5,-1
204047a2:	c61c                	sw	a5,8(a2)
204047a4:	0007da63          	bgez	a5,204047b8 <__sfputc_r+0x1a>
204047a8:	4e18                	lw	a4,24(a2)
204047aa:	00e7c563          	blt	a5,a4,204047b4 <__sfputc_r+0x16>
204047ae:	47a9                	li	a5,10
204047b0:	00f59463          	bne	a1,a5,204047b8 <__sfputc_r+0x1a>
204047b4:	fe4ff06f          	j	20403f98 <__swbuf_r>
204047b8:	421c                	lw	a5,0(a2)
204047ba:	852e                	mv	a0,a1
204047bc:	00178713          	addi	a4,a5,1
204047c0:	c218                	sw	a4,0(a2)
204047c2:	00b78023          	sb	a1,0(a5)
204047c6:	8082                	ret

204047c8 <__sfputs_r>:
__sfputs_r():
204047c8:	1101                	addi	sp,sp,-32
204047ca:	cc22                	sw	s0,24(sp)
204047cc:	ca26                	sw	s1,20(sp)
204047ce:	c84a                	sw	s2,16(sp)
204047d0:	c64e                	sw	s3,12(sp)
204047d2:	c452                	sw	s4,8(sp)
204047d4:	ce06                	sw	ra,28(sp)
204047d6:	892a                	mv	s2,a0
204047d8:	89ae                	mv	s3,a1
204047da:	8432                	mv	s0,a2
204047dc:	00d604b3          	add	s1,a2,a3
204047e0:	5a7d                	li	s4,-1
204047e2:	00941463          	bne	s0,s1,204047ea <__sfputs_r+0x22>
204047e6:	4501                	li	a0,0
204047e8:	a809                	j	204047fa <__sfputs_r+0x32>
204047ea:	00044583          	lbu	a1,0(s0)
204047ee:	864e                	mv	a2,s3
204047f0:	854a                	mv	a0,s2
204047f2:	3775                	jal	2040479e <__sfputc_r>
204047f4:	0405                	addi	s0,s0,1
204047f6:	ff4516e3          	bne	a0,s4,204047e2 <__sfputs_r+0x1a>
204047fa:	40f2                	lw	ra,28(sp)
204047fc:	4462                	lw	s0,24(sp)
204047fe:	44d2                	lw	s1,20(sp)
20404800:	4942                	lw	s2,16(sp)
20404802:	49b2                	lw	s3,12(sp)
20404804:	4a22                	lw	s4,8(sp)
20404806:	6105                	addi	sp,sp,32
20404808:	8082                	ret

2040480a <_vfiprintf_r>:
_vfiprintf_r():
2040480a:	7135                	addi	sp,sp,-160
2040480c:	cd22                	sw	s0,152(sp)
2040480e:	cb26                	sw	s1,148(sp)
20404810:	c94a                	sw	s2,144(sp)
20404812:	c74e                	sw	s3,140(sp)
20404814:	cf06                	sw	ra,156(sp)
20404816:	c552                	sw	s4,136(sp)
20404818:	c356                	sw	s5,132(sp)
2040481a:	c15a                	sw	s6,128(sp)
2040481c:	dede                	sw	s7,124(sp)
2040481e:	dce2                	sw	s8,120(sp)
20404820:	dae6                	sw	s9,116(sp)
20404822:	89aa                	mv	s3,a0
20404824:	84ae                	mv	s1,a1
20404826:	8932                	mv	s2,a2
20404828:	8436                	mv	s0,a3
2040482a:	c509                	beqz	a0,20404834 <_vfiprintf_r+0x2a>
2040482c:	4d1c                	lw	a5,24(a0)
2040482e:	e399                	bnez	a5,20404834 <_vfiprintf_r+0x2a>
20404830:	b75ff0ef          	jal	ra,204043a4 <__sinit>
20404834:	10818793          	addi	a5,gp,264 # 80001380 <__sf_fake_stdin>
20404838:	0cf49b63          	bne	s1,a5,2040490e <_vfiprintf_r+0x104>
2040483c:	0049a483          	lw	s1,4(s3)
20404840:	00c4d783          	lhu	a5,12(s1)
20404844:	8ba1                	andi	a5,a5,8
20404846:	c3f5                	beqz	a5,2040492a <_vfiprintf_r+0x120>
20404848:	489c                	lw	a5,16(s1)
2040484a:	c3e5                	beqz	a5,2040492a <_vfiprintf_r+0x120>
2040484c:	02000793          	li	a5,32
20404850:	02f104a3          	sb	a5,41(sp)
20404854:	03000793          	li	a5,48
20404858:	d202                	sw	zero,36(sp)
2040485a:	02f10523          	sb	a5,42(sp)
2040485e:	c622                	sw	s0,12(sp)
20404860:	02500b93          	li	s7,37
20404864:	5fbfda97          	auipc	s5,0x5fbfd
20404868:	b5ca8a93          	addi	s5,s5,-1188 # 800013c0 <__sf_fake_stdout+0x20>
2040486c:	4c05                	li	s8,1
2040486e:	4b29                	li	s6,10
20404870:	844a                	mv	s0,s2
20404872:	00044783          	lbu	a5,0(s0)
20404876:	c399                	beqz	a5,2040487c <_vfiprintf_r+0x72>
20404878:	0d779c63          	bne	a5,s7,20404950 <_vfiprintf_r+0x146>
2040487c:	41240cb3          	sub	s9,s0,s2
20404880:	000c8d63          	beqz	s9,2040489a <_vfiprintf_r+0x90>
20404884:	86e6                	mv	a3,s9
20404886:	864a                	mv	a2,s2
20404888:	85a6                	mv	a1,s1
2040488a:	854e                	mv	a0,s3
2040488c:	3f35                	jal	204047c8 <__sfputs_r>
2040488e:	57fd                	li	a5,-1
20404890:	1ef50263          	beq	a0,a5,20404a74 <_vfiprintf_r+0x26a>
20404894:	5692                	lw	a3,36(sp)
20404896:	96e6                	add	a3,a3,s9
20404898:	d236                	sw	a3,36(sp)
2040489a:	00044783          	lbu	a5,0(s0)
2040489e:	1c078b63          	beqz	a5,20404a74 <_vfiprintf_r+0x26a>
204048a2:	57fd                	li	a5,-1
204048a4:	00140913          	addi	s2,s0,1
204048a8:	c802                	sw	zero,16(sp)
204048aa:	ce02                	sw	zero,28(sp)
204048ac:	ca3e                	sw	a5,20(sp)
204048ae:	cc02                	sw	zero,24(sp)
204048b0:	040109a3          	sb	zero,83(sp)
204048b4:	d482                	sw	zero,104(sp)
204048b6:	00094583          	lbu	a1,0(s2)
204048ba:	4615                	li	a2,5
204048bc:	8556                	mv	a0,s5
204048be:	26c1                	jal	20404c7e <memchr>
204048c0:	00190413          	addi	s0,s2,1
204048c4:	47c2                	lw	a5,16(sp)
204048c6:	e559                	bnez	a0,20404954 <_vfiprintf_r+0x14a>
204048c8:	0107f713          	andi	a4,a5,16
204048cc:	c709                	beqz	a4,204048d6 <_vfiprintf_r+0xcc>
204048ce:	02000713          	li	a4,32
204048d2:	04e109a3          	sb	a4,83(sp)
204048d6:	0087f713          	andi	a4,a5,8
204048da:	c709                	beqz	a4,204048e4 <_vfiprintf_r+0xda>
204048dc:	02b00713          	li	a4,43
204048e0:	04e109a3          	sb	a4,83(sp)
204048e4:	00094683          	lbu	a3,0(s2)
204048e8:	02a00713          	li	a4,42
204048ec:	06e68c63          	beq	a3,a4,20404964 <_vfiprintf_r+0x15a>
204048f0:	47f2                	lw	a5,28(sp)
204048f2:	844a                	mv	s0,s2
204048f4:	4681                	li	a3,0
204048f6:	4625                	li	a2,9
204048f8:	00044703          	lbu	a4,0(s0)
204048fc:	00140593          	addi	a1,s0,1
20404900:	fd070713          	addi	a4,a4,-48
20404904:	0ae67563          	bgeu	a2,a4,204049ae <_vfiprintf_r+0x1a4>
20404908:	c6b5                	beqz	a3,20404974 <_vfiprintf_r+0x16a>
2040490a:	ce3e                	sw	a5,28(sp)
2040490c:	a0a5                	j	20404974 <_vfiprintf_r+0x16a>
2040490e:	12818793          	addi	a5,gp,296 # 800013a0 <__sf_fake_stdout>
20404912:	00f49563          	bne	s1,a5,2040491c <_vfiprintf_r+0x112>
20404916:	0089a483          	lw	s1,8(s3)
2040491a:	b71d                	j	20404840 <_vfiprintf_r+0x36>
2040491c:	0e818793          	addi	a5,gp,232 # 80001360 <__sf_fake_stderr>
20404920:	f2f490e3          	bne	s1,a5,20404840 <_vfiprintf_r+0x36>
20404924:	00c9a483          	lw	s1,12(s3)
20404928:	bf21                	j	20404840 <_vfiprintf_r+0x36>
2040492a:	85a6                	mv	a1,s1
2040492c:	854e                	mv	a0,s3
2040492e:	f1eff0ef          	jal	ra,2040404c <__swsetup_r>
20404932:	dd09                	beqz	a0,2040484c <_vfiprintf_r+0x42>
20404934:	557d                	li	a0,-1
20404936:	40fa                	lw	ra,156(sp)
20404938:	446a                	lw	s0,152(sp)
2040493a:	44da                	lw	s1,148(sp)
2040493c:	494a                	lw	s2,144(sp)
2040493e:	49ba                	lw	s3,140(sp)
20404940:	4a2a                	lw	s4,136(sp)
20404942:	4a9a                	lw	s5,132(sp)
20404944:	4b0a                	lw	s6,128(sp)
20404946:	5bf6                	lw	s7,124(sp)
20404948:	5c66                	lw	s8,120(sp)
2040494a:	5cd6                	lw	s9,116(sp)
2040494c:	610d                	addi	sp,sp,160
2040494e:	8082                	ret
20404950:	0405                	addi	s0,s0,1
20404952:	b705                	j	20404872 <_vfiprintf_r+0x68>
20404954:	41550533          	sub	a0,a0,s5
20404958:	00ac1533          	sll	a0,s8,a0
2040495c:	8fc9                	or	a5,a5,a0
2040495e:	c83e                	sw	a5,16(sp)
20404960:	8922                	mv	s2,s0
20404962:	bf91                	j	204048b6 <_vfiprintf_r+0xac>
20404964:	4732                	lw	a4,12(sp)
20404966:	00470693          	addi	a3,a4,4
2040496a:	4318                	lw	a4,0(a4)
2040496c:	c636                	sw	a3,12(sp)
2040496e:	02074963          	bltz	a4,204049a0 <_vfiprintf_r+0x196>
20404972:	ce3a                	sw	a4,28(sp)
20404974:	00044703          	lbu	a4,0(s0)
20404978:	02e00793          	li	a5,46
2040497c:	04f71f63          	bne	a4,a5,204049da <_vfiprintf_r+0x1d0>
20404980:	00144703          	lbu	a4,1(s0)
20404984:	02a00793          	li	a5,42
20404988:	02f71b63          	bne	a4,a5,204049be <_vfiprintf_r+0x1b4>
2040498c:	47b2                	lw	a5,12(sp)
2040498e:	0409                	addi	s0,s0,2
20404990:	00478713          	addi	a4,a5,4
20404994:	439c                	lw	a5,0(a5)
20404996:	c63a                	sw	a4,12(sp)
20404998:	0207c163          	bltz	a5,204049ba <_vfiprintf_r+0x1b0>
2040499c:	ca3e                	sw	a5,20(sp)
2040499e:	a835                	j	204049da <_vfiprintf_r+0x1d0>
204049a0:	40e00733          	neg	a4,a4
204049a4:	0027e793          	ori	a5,a5,2
204049a8:	ce3a                	sw	a4,28(sp)
204049aa:	c83e                	sw	a5,16(sp)
204049ac:	b7e1                	j	20404974 <_vfiprintf_r+0x16a>
204049ae:	036787b3          	mul	a5,a5,s6
204049b2:	4685                	li	a3,1
204049b4:	842e                	mv	s0,a1
204049b6:	97ba                	add	a5,a5,a4
204049b8:	b781                	j	204048f8 <_vfiprintf_r+0xee>
204049ba:	57fd                	li	a5,-1
204049bc:	b7c5                	j	2040499c <_vfiprintf_r+0x192>
204049be:	0405                	addi	s0,s0,1
204049c0:	ca02                	sw	zero,20(sp)
204049c2:	4681                	li	a3,0
204049c4:	4781                	li	a5,0
204049c6:	4625                	li	a2,9
204049c8:	00044703          	lbu	a4,0(s0)
204049cc:	00140593          	addi	a1,s0,1
204049d0:	fd070713          	addi	a4,a4,-48
204049d4:	06e67663          	bgeu	a2,a4,20404a40 <_vfiprintf_r+0x236>
204049d8:	f2f1                	bnez	a3,2040499c <_vfiprintf_r+0x192>
204049da:	00044583          	lbu	a1,0(s0)
204049de:	460d                	li	a2,3
204049e0:	5fbfd517          	auipc	a0,0x5fbfd
204049e4:	9e850513          	addi	a0,a0,-1560 # 800013c8 <__sf_fake_stdout+0x28>
204049e8:	2c59                	jal	20404c7e <memchr>
204049ea:	cd11                	beqz	a0,20404a06 <_vfiprintf_r+0x1fc>
204049ec:	5fbfd797          	auipc	a5,0x5fbfd
204049f0:	9dc78793          	addi	a5,a5,-1572 # 800013c8 <__sf_fake_stdout+0x28>
204049f4:	8d1d                	sub	a0,a0,a5
204049f6:	04000793          	li	a5,64
204049fa:	00a797b3          	sll	a5,a5,a0
204049fe:	4542                	lw	a0,16(sp)
20404a00:	0405                	addi	s0,s0,1
20404a02:	8d5d                	or	a0,a0,a5
20404a04:	c82a                	sw	a0,16(sp)
20404a06:	00044583          	lbu	a1,0(s0)
20404a0a:	4619                	li	a2,6
20404a0c:	5fbfd517          	auipc	a0,0x5fbfd
20404a10:	9c050513          	addi	a0,a0,-1600 # 800013cc <__sf_fake_stdout+0x2c>
20404a14:	00140913          	addi	s2,s0,1
20404a18:	02b10423          	sb	a1,40(sp)
20404a1c:	248d                	jal	20404c7e <memchr>
20404a1e:	c13d                	beqz	a0,20404a84 <_vfiprintf_r+0x27a>
20404a20:	dfbfb797          	auipc	a5,0xdfbfb
20404a24:	5e078793          	addi	a5,a5,1504 # 0 <__metal_boot_hart>
20404a28:	e795                	bnez	a5,20404a54 <_vfiprintf_r+0x24a>
20404a2a:	4742                	lw	a4,16(sp)
20404a2c:	47b2                	lw	a5,12(sp)
20404a2e:	10077713          	andi	a4,a4,256
20404a32:	cf09                	beqz	a4,20404a4c <_vfiprintf_r+0x242>
20404a34:	0791                	addi	a5,a5,4
20404a36:	c63e                	sw	a5,12(sp)
20404a38:	5792                	lw	a5,36(sp)
20404a3a:	97d2                	add	a5,a5,s4
20404a3c:	d23e                	sw	a5,36(sp)
20404a3e:	bd0d                	j	20404870 <_vfiprintf_r+0x66>
20404a40:	036787b3          	mul	a5,a5,s6
20404a44:	4685                	li	a3,1
20404a46:	842e                	mv	s0,a1
20404a48:	97ba                	add	a5,a5,a4
20404a4a:	bfbd                	j	204049c8 <_vfiprintf_r+0x1be>
20404a4c:	079d                	addi	a5,a5,7
20404a4e:	9be1                	andi	a5,a5,-8
20404a50:	07a1                	addi	a5,a5,8
20404a52:	b7d5                	j	20404a36 <_vfiprintf_r+0x22c>
20404a54:	0078                	addi	a4,sp,12
20404a56:	00000697          	auipc	a3,0x0
20404a5a:	d7268693          	addi	a3,a3,-654 # 204047c8 <__sfputs_r>
20404a5e:	8626                	mv	a2,s1
20404a60:	080c                	addi	a1,sp,16
20404a62:	854e                	mv	a0,s3
20404a64:	00000097          	auipc	ra,0x0
20404a68:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20404a6c:	57fd                	li	a5,-1
20404a6e:	8a2a                	mv	s4,a0
20404a70:	fcf514e3          	bne	a0,a5,20404a38 <_vfiprintf_r+0x22e>
20404a74:	00c4d783          	lhu	a5,12(s1)
20404a78:	0407f793          	andi	a5,a5,64
20404a7c:	ea079ce3          	bnez	a5,20404934 <_vfiprintf_r+0x12a>
20404a80:	5512                	lw	a0,36(sp)
20404a82:	bd55                	j	20404936 <_vfiprintf_r+0x12c>
20404a84:	0078                	addi	a4,sp,12
20404a86:	00000697          	auipc	a3,0x0
20404a8a:	d4268693          	addi	a3,a3,-702 # 204047c8 <__sfputs_r>
20404a8e:	8626                	mv	a2,s1
20404a90:	080c                	addi	a1,sp,16
20404a92:	854e                	mv	a0,s3
20404a94:	2e11                	jal	20404da8 <_printf_i>
20404a96:	bfd9                	j	20404a6c <_vfiprintf_r+0x262>

20404a98 <_sbrk_r>:
_sbrk_r():
20404a98:	1141                	addi	sp,sp,-16
20404a9a:	c422                	sw	s0,8(sp)
20404a9c:	842a                	mv	s0,a0
20404a9e:	852e                	mv	a0,a1
20404aa0:	5fbfd797          	auipc	a5,0x5fbfd
20404aa4:	6607aa23          	sw	zero,1652(a5) # 80002114 <errno>
20404aa8:	c606                	sw	ra,12(sp)
20404aaa:	2d41                	jal	2040513a <_sbrk>
20404aac:	57fd                	li	a5,-1
20404aae:	00f51963          	bne	a0,a5,20404ac0 <_sbrk_r+0x28>
20404ab2:	5fbfd797          	auipc	a5,0x5fbfd
20404ab6:	66278793          	addi	a5,a5,1634 # 80002114 <errno>
20404aba:	439c                	lw	a5,0(a5)
20404abc:	c391                	beqz	a5,20404ac0 <_sbrk_r+0x28>
20404abe:	c01c                	sw	a5,0(s0)
20404ac0:	40b2                	lw	ra,12(sp)
20404ac2:	4422                	lw	s0,8(sp)
20404ac4:	0141                	addi	sp,sp,16
20404ac6:	8082                	ret

20404ac8 <__sread>:
__sread():
20404ac8:	1141                	addi	sp,sp,-16
20404aca:	c422                	sw	s0,8(sp)
20404acc:	842e                	mv	s0,a1
20404ace:	00e59583          	lh	a1,14(a1)
20404ad2:	c606                	sw	ra,12(sp)
20404ad4:	2b9d                	jal	2040504a <_read_r>
20404ad6:	00054963          	bltz	a0,20404ae8 <__sread+0x20>
20404ada:	487c                	lw	a5,84(s0)
20404adc:	97aa                	add	a5,a5,a0
20404ade:	c87c                	sw	a5,84(s0)
20404ae0:	40b2                	lw	ra,12(sp)
20404ae2:	4422                	lw	s0,8(sp)
20404ae4:	0141                	addi	sp,sp,16
20404ae6:	8082                	ret
20404ae8:	00c45783          	lhu	a5,12(s0)
20404aec:	777d                	lui	a4,0xfffff
20404aee:	177d                	addi	a4,a4,-1
20404af0:	8ff9                	and	a5,a5,a4
20404af2:	00f41623          	sh	a5,12(s0)
20404af6:	b7ed                	j	20404ae0 <__sread+0x18>

20404af8 <__swrite>:
__swrite():
20404af8:	00c5d783          	lhu	a5,12(a1)
20404afc:	1101                	addi	sp,sp,-32
20404afe:	cc22                	sw	s0,24(sp)
20404b00:	ca26                	sw	s1,20(sp)
20404b02:	c84a                	sw	s2,16(sp)
20404b04:	c64e                	sw	s3,12(sp)
20404b06:	ce06                	sw	ra,28(sp)
20404b08:	1007f793          	andi	a5,a5,256
20404b0c:	84aa                	mv	s1,a0
20404b0e:	842e                	mv	s0,a1
20404b10:	8932                	mv	s2,a2
20404b12:	89b6                	mv	s3,a3
20404b14:	c791                	beqz	a5,20404b20 <__swrite+0x28>
20404b16:	00e59583          	lh	a1,14(a1)
20404b1a:	4689                	li	a3,2
20404b1c:	4601                	li	a2,0
20404b1e:	2235                	jal	20404c4a <_lseek_r>
20404b20:	00c45783          	lhu	a5,12(s0)
20404b24:	777d                	lui	a4,0xfffff
20404b26:	177d                	addi	a4,a4,-1
20404b28:	8ff9                	and	a5,a5,a4
20404b2a:	00f41623          	sh	a5,12(s0)
20404b2e:	00e41583          	lh	a1,14(s0)
20404b32:	4462                	lw	s0,24(sp)
20404b34:	40f2                	lw	ra,28(sp)
20404b36:	86ce                	mv	a3,s3
20404b38:	864a                	mv	a2,s2
20404b3a:	49b2                	lw	s3,12(sp)
20404b3c:	4942                	lw	s2,16(sp)
20404b3e:	8526                	mv	a0,s1
20404b40:	44d2                	lw	s1,20(sp)
20404b42:	6105                	addi	sp,sp,32
20404b44:	a83d                	j	20404b82 <_write_r>

20404b46 <__sseek>:
__sseek():
20404b46:	1141                	addi	sp,sp,-16
20404b48:	c422                	sw	s0,8(sp)
20404b4a:	842e                	mv	s0,a1
20404b4c:	00e59583          	lh	a1,14(a1)
20404b50:	c606                	sw	ra,12(sp)
20404b52:	28e5                	jal	20404c4a <_lseek_r>
20404b54:	57fd                	li	a5,-1
20404b56:	00c45703          	lhu	a4,12(s0)
20404b5a:	00f51b63          	bne	a0,a5,20404b70 <__sseek+0x2a>
20404b5e:	77fd                	lui	a5,0xfffff
20404b60:	17fd                	addi	a5,a5,-1
20404b62:	8ff9                	and	a5,a5,a4
20404b64:	00f41623          	sh	a5,12(s0)
20404b68:	40b2                	lw	ra,12(sp)
20404b6a:	4422                	lw	s0,8(sp)
20404b6c:	0141                	addi	sp,sp,16
20404b6e:	8082                	ret
20404b70:	6785                	lui	a5,0x1
20404b72:	8fd9                	or	a5,a5,a4
20404b74:	00f41623          	sh	a5,12(s0)
20404b78:	c868                	sw	a0,84(s0)
20404b7a:	b7fd                	j	20404b68 <__sseek+0x22>

20404b7c <__sclose>:
__sclose():
20404b7c:	00e59583          	lh	a1,14(a1)
20404b80:	a825                	j	20404bb8 <_close_r>

20404b82 <_write_r>:
_write_r():
20404b82:	1141                	addi	sp,sp,-16
20404b84:	c422                	sw	s0,8(sp)
20404b86:	842a                	mv	s0,a0
20404b88:	852e                	mv	a0,a1
20404b8a:	85b2                	mv	a1,a2
20404b8c:	8636                	mv	a2,a3
20404b8e:	5fbfd797          	auipc	a5,0x5fbfd
20404b92:	5807a323          	sw	zero,1414(a5) # 80002114 <errno>
20404b96:	c606                	sw	ra,12(sp)
20404b98:	790000ef          	jal	ra,20405328 <_write>
20404b9c:	57fd                	li	a5,-1
20404b9e:	00f51963          	bne	a0,a5,20404bb0 <_write_r+0x2e>
20404ba2:	5fbfd797          	auipc	a5,0x5fbfd
20404ba6:	57278793          	addi	a5,a5,1394 # 80002114 <errno>
20404baa:	439c                	lw	a5,0(a5)
20404bac:	c391                	beqz	a5,20404bb0 <_write_r+0x2e>
20404bae:	c01c                	sw	a5,0(s0)
20404bb0:	40b2                	lw	ra,12(sp)
20404bb2:	4422                	lw	s0,8(sp)
20404bb4:	0141                	addi	sp,sp,16
20404bb6:	8082                	ret

20404bb8 <_close_r>:
_close_r():
20404bb8:	1141                	addi	sp,sp,-16
20404bba:	c422                	sw	s0,8(sp)
20404bbc:	842a                	mv	s0,a0
20404bbe:	852e                	mv	a0,a1
20404bc0:	5fbfd797          	auipc	a5,0x5fbfd
20404bc4:	5407aa23          	sw	zero,1364(a5) # 80002114 <errno>
20404bc8:	c606                	sw	ra,12(sp)
20404bca:	2955                	jal	2040507e <_close>
20404bcc:	57fd                	li	a5,-1
20404bce:	00f51963          	bne	a0,a5,20404be0 <_close_r+0x28>
20404bd2:	5fbfd797          	auipc	a5,0x5fbfd
20404bd6:	54278793          	addi	a5,a5,1346 # 80002114 <errno>
20404bda:	439c                	lw	a5,0(a5)
20404bdc:	c391                	beqz	a5,20404be0 <_close_r+0x28>
20404bde:	c01c                	sw	a5,0(s0)
20404be0:	40b2                	lw	ra,12(sp)
20404be2:	4422                	lw	s0,8(sp)
20404be4:	0141                	addi	sp,sp,16
20404be6:	8082                	ret

20404be8 <_fstat_r>:
_fstat_r():
20404be8:	1141                	addi	sp,sp,-16
20404bea:	c422                	sw	s0,8(sp)
20404bec:	842a                	mv	s0,a0
20404bee:	852e                	mv	a0,a1
20404bf0:	85b2                	mv	a1,a2
20404bf2:	5fbfd797          	auipc	a5,0x5fbfd
20404bf6:	5207a123          	sw	zero,1314(a5) # 80002114 <errno>
20404bfa:	c606                	sw	ra,12(sp)
20404bfc:	2155                	jal	204050a0 <_fstat>
20404bfe:	57fd                	li	a5,-1
20404c00:	00f51963          	bne	a0,a5,20404c12 <_fstat_r+0x2a>
20404c04:	5fbfd797          	auipc	a5,0x5fbfd
20404c08:	51078793          	addi	a5,a5,1296 # 80002114 <errno>
20404c0c:	439c                	lw	a5,0(a5)
20404c0e:	c391                	beqz	a5,20404c12 <_fstat_r+0x2a>
20404c10:	c01c                	sw	a5,0(s0)
20404c12:	40b2                	lw	ra,12(sp)
20404c14:	4422                	lw	s0,8(sp)
20404c16:	0141                	addi	sp,sp,16
20404c18:	8082                	ret

20404c1a <_isatty_r>:
_isatty_r():
20404c1a:	1141                	addi	sp,sp,-16
20404c1c:	c422                	sw	s0,8(sp)
20404c1e:	842a                	mv	s0,a0
20404c20:	852e                	mv	a0,a1
20404c22:	5fbfd797          	auipc	a5,0x5fbfd
20404c26:	4e07a923          	sw	zero,1266(a5) # 80002114 <errno>
20404c2a:	c606                	sw	ra,12(sp)
20404c2c:	2969                	jal	204050c6 <_isatty>
20404c2e:	57fd                	li	a5,-1
20404c30:	00f51963          	bne	a0,a5,20404c42 <_isatty_r+0x28>
20404c34:	5fbfd797          	auipc	a5,0x5fbfd
20404c38:	4e078793          	addi	a5,a5,1248 # 80002114 <errno>
20404c3c:	439c                	lw	a5,0(a5)
20404c3e:	c391                	beqz	a5,20404c42 <_isatty_r+0x28>
20404c40:	c01c                	sw	a5,0(s0)
20404c42:	40b2                	lw	ra,12(sp)
20404c44:	4422                	lw	s0,8(sp)
20404c46:	0141                	addi	sp,sp,16
20404c48:	8082                	ret

20404c4a <_lseek_r>:
_lseek_r():
20404c4a:	1141                	addi	sp,sp,-16
20404c4c:	c422                	sw	s0,8(sp)
20404c4e:	842a                	mv	s0,a0
20404c50:	852e                	mv	a0,a1
20404c52:	85b2                	mv	a1,a2
20404c54:	8636                	mv	a2,a3
20404c56:	5fbfd797          	auipc	a5,0x5fbfd
20404c5a:	4a07af23          	sw	zero,1214(a5) # 80002114 <errno>
20404c5e:	c606                	sw	ra,12(sp)
20404c60:	2159                	jal	204050e6 <_lseek>
20404c62:	57fd                	li	a5,-1
20404c64:	00f51963          	bne	a0,a5,20404c76 <_lseek_r+0x2c>
20404c68:	5fbfd797          	auipc	a5,0x5fbfd
20404c6c:	4ac78793          	addi	a5,a5,1196 # 80002114 <errno>
20404c70:	439c                	lw	a5,0(a5)
20404c72:	c391                	beqz	a5,20404c76 <_lseek_r+0x2c>
20404c74:	c01c                	sw	a5,0(s0)
20404c76:	40b2                	lw	ra,12(sp)
20404c78:	4422                	lw	s0,8(sp)
20404c7a:	0141                	addi	sp,sp,16
20404c7c:	8082                	ret

20404c7e <memchr>:
memchr():
20404c7e:	0ff5f593          	andi	a1,a1,255
20404c82:	962a                	add	a2,a2,a0
20404c84:	00c51463          	bne	a0,a2,20404c8c <memchr+0xe>
20404c88:	4501                	li	a0,0
20404c8a:	8082                	ret
20404c8c:	00054783          	lbu	a5,0(a0)
20404c90:	feb78de3          	beq	a5,a1,20404c8a <memchr+0xc>
20404c94:	0505                	addi	a0,a0,1
20404c96:	b7fd                	j	20404c84 <memchr+0x6>

20404c98 <__malloc_lock>:
__malloc_lock():
20404c98:	8082                	ret

20404c9a <__malloc_unlock>:
__malloc_unlock():
20404c9a:	8082                	ret

20404c9c <_printf_common>:
_printf_common():
20404c9c:	7179                	addi	sp,sp,-48
20404c9e:	ca56                	sw	s5,20(sp)
20404ca0:	499c                	lw	a5,16(a1)
20404ca2:	8aba                	mv	s5,a4
20404ca4:	4598                	lw	a4,8(a1)
20404ca6:	d422                	sw	s0,40(sp)
20404ca8:	d226                	sw	s1,36(sp)
20404caa:	ce4e                	sw	s3,28(sp)
20404cac:	cc52                	sw	s4,24(sp)
20404cae:	d606                	sw	ra,44(sp)
20404cb0:	d04a                	sw	s2,32(sp)
20404cb2:	c85a                	sw	s6,16(sp)
20404cb4:	c65e                	sw	s7,12(sp)
20404cb6:	89aa                	mv	s3,a0
20404cb8:	842e                	mv	s0,a1
20404cba:	84b2                	mv	s1,a2
20404cbc:	8a36                	mv	s4,a3
20404cbe:	00e7d363          	bge	a5,a4,20404cc4 <_printf_common+0x28>
20404cc2:	87ba                	mv	a5,a4
20404cc4:	c09c                	sw	a5,0(s1)
20404cc6:	04344703          	lbu	a4,67(s0)
20404cca:	c319                	beqz	a4,20404cd0 <_printf_common+0x34>
20404ccc:	0785                	addi	a5,a5,1
20404cce:	c09c                	sw	a5,0(s1)
20404cd0:	401c                	lw	a5,0(s0)
20404cd2:	0207f793          	andi	a5,a5,32
20404cd6:	c781                	beqz	a5,20404cde <_printf_common+0x42>
20404cd8:	409c                	lw	a5,0(s1)
20404cda:	0789                	addi	a5,a5,2
20404cdc:	c09c                	sw	a5,0(s1)
20404cde:	00042903          	lw	s2,0(s0)
20404ce2:	00697913          	andi	s2,s2,6
20404ce6:	00091a63          	bnez	s2,20404cfa <_printf_common+0x5e>
20404cea:	01940b13          	addi	s6,s0,25
20404cee:	5bfd                	li	s7,-1
20404cf0:	445c                	lw	a5,12(s0)
20404cf2:	4098                	lw	a4,0(s1)
20404cf4:	8f99                	sub	a5,a5,a4
20404cf6:	04f94c63          	blt	s2,a5,20404d4e <_printf_common+0xb2>
20404cfa:	401c                	lw	a5,0(s0)
20404cfc:	04344683          	lbu	a3,67(s0)
20404d00:	0207f793          	andi	a5,a5,32
20404d04:	00d036b3          	snez	a3,a3
20404d08:	eba5                	bnez	a5,20404d78 <_printf_common+0xdc>
20404d0a:	04340613          	addi	a2,s0,67
20404d0e:	85d2                	mv	a1,s4
20404d10:	854e                	mv	a0,s3
20404d12:	9a82                	jalr	s5
20404d14:	57fd                	li	a5,-1
20404d16:	04f50363          	beq	a0,a5,20404d5c <_printf_common+0xc0>
20404d1a:	401c                	lw	a5,0(s0)
20404d1c:	4611                	li	a2,4
20404d1e:	4098                	lw	a4,0(s1)
20404d20:	8b99                	andi	a5,a5,6
20404d22:	4454                	lw	a3,12(s0)
20404d24:	4481                	li	s1,0
20404d26:	00c79763          	bne	a5,a2,20404d34 <_printf_common+0x98>
20404d2a:	40e684b3          	sub	s1,a3,a4
20404d2e:	0004d363          	bgez	s1,20404d34 <_printf_common+0x98>
20404d32:	4481                	li	s1,0
20404d34:	441c                	lw	a5,8(s0)
20404d36:	4818                	lw	a4,16(s0)
20404d38:	00f75463          	bge	a4,a5,20404d40 <_printf_common+0xa4>
20404d3c:	8f99                	sub	a5,a5,a4
20404d3e:	94be                	add	s1,s1,a5
20404d40:	4901                	li	s2,0
20404d42:	0469                	addi	s0,s0,26
20404d44:	5b7d                	li	s6,-1
20404d46:	05249863          	bne	s1,s2,20404d96 <_printf_common+0xfa>
20404d4a:	4501                	li	a0,0
20404d4c:	a809                	j	20404d5e <_printf_common+0xc2>
20404d4e:	4685                	li	a3,1
20404d50:	865a                	mv	a2,s6
20404d52:	85d2                	mv	a1,s4
20404d54:	854e                	mv	a0,s3
20404d56:	9a82                	jalr	s5
20404d58:	01751e63          	bne	a0,s7,20404d74 <_printf_common+0xd8>
20404d5c:	557d                	li	a0,-1
20404d5e:	50b2                	lw	ra,44(sp)
20404d60:	5422                	lw	s0,40(sp)
20404d62:	5492                	lw	s1,36(sp)
20404d64:	5902                	lw	s2,32(sp)
20404d66:	49f2                	lw	s3,28(sp)
20404d68:	4a62                	lw	s4,24(sp)
20404d6a:	4ad2                	lw	s5,20(sp)
20404d6c:	4b42                	lw	s6,16(sp)
20404d6e:	4bb2                	lw	s7,12(sp)
20404d70:	6145                	addi	sp,sp,48
20404d72:	8082                	ret
20404d74:	0905                	addi	s2,s2,1
20404d76:	bfad                	j	20404cf0 <_printf_common+0x54>
20404d78:	00d40733          	add	a4,s0,a3
20404d7c:	03000613          	li	a2,48
20404d80:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffb723>
20404d84:	04544703          	lbu	a4,69(s0)
20404d88:	00168793          	addi	a5,a3,1
20404d8c:	97a2                	add	a5,a5,s0
20404d8e:	0689                	addi	a3,a3,2
20404d90:	04e781a3          	sb	a4,67(a5)
20404d94:	bf9d                	j	20404d0a <_printf_common+0x6e>
20404d96:	4685                	li	a3,1
20404d98:	8622                	mv	a2,s0
20404d9a:	85d2                	mv	a1,s4
20404d9c:	854e                	mv	a0,s3
20404d9e:	9a82                	jalr	s5
20404da0:	fb650ee3          	beq	a0,s6,20404d5c <_printf_common+0xc0>
20404da4:	0905                	addi	s2,s2,1
20404da6:	b745                	j	20404d46 <_printf_common+0xaa>

20404da8 <_printf_i>:
_printf_i():
20404da8:	7179                	addi	sp,sp,-48
20404daa:	d422                	sw	s0,40(sp)
20404dac:	d226                	sw	s1,36(sp)
20404dae:	d04a                	sw	s2,32(sp)
20404db0:	ce4e                	sw	s3,28(sp)
20404db2:	d606                	sw	ra,44(sp)
20404db4:	cc52                	sw	s4,24(sp)
20404db6:	ca56                	sw	s5,20(sp)
20404db8:	c85a                	sw	s6,16(sp)
20404dba:	89b6                	mv	s3,a3
20404dbc:	0185c683          	lbu	a3,24(a1)
20404dc0:	06e00793          	li	a5,110
20404dc4:	8932                	mv	s2,a2
20404dc6:	84aa                	mv	s1,a0
20404dc8:	842e                	mv	s0,a1
20404dca:	04358613          	addi	a2,a1,67
20404dce:	1ef68063          	beq	a3,a5,20404fae <_printf_i+0x206>
20404dd2:	06d7e263          	bltu	a5,a3,20404e36 <_printf_i+0x8e>
20404dd6:	06300793          	li	a5,99
20404dda:	0af68263          	beq	a3,a5,20404e7e <_printf_i+0xd6>
20404dde:	00d7ed63          	bltu	a5,a3,20404df8 <_printf_i+0x50>
20404de2:	1e068a63          	beqz	a3,20404fd6 <_printf_i+0x22e>
20404de6:	05800793          	li	a5,88
20404dea:	16f68663          	beq	a3,a5,20404f56 <_printf_i+0x1ae>
20404dee:	04240a93          	addi	s5,s0,66
20404df2:	04d40123          	sb	a3,66(s0)
20404df6:	a869                	j	20404e90 <_printf_i+0xe8>
20404df8:	06400793          	li	a5,100
20404dfc:	00f68663          	beq	a3,a5,20404e08 <_printf_i+0x60>
20404e00:	06900793          	li	a5,105
20404e04:	fef695e3          	bne	a3,a5,20404dee <_printf_i+0x46>
20404e08:	401c                	lw	a5,0(s0)
20404e0a:	4308                	lw	a0,0(a4)
20404e0c:	0807f693          	andi	a3,a5,128
20404e10:	00450593          	addi	a1,a0,4
20404e14:	c2c1                	beqz	a3,20404e94 <_printf_i+0xec>
20404e16:	411c                	lw	a5,0(a0)
20404e18:	c30c                	sw	a1,0(a4)
20404e1a:	0007d863          	bgez	a5,20404e2a <_printf_i+0x82>
20404e1e:	02d00713          	li	a4,45
20404e22:	40f007b3          	neg	a5,a5
20404e26:	04e401a3          	sb	a4,67(s0)
20404e2a:	5fbfc697          	auipc	a3,0x5fbfc
20404e2e:	5aa68693          	addi	a3,a3,1450 # 800013d4 <__sf_fake_stdout+0x34>
20404e32:	4729                	li	a4,10
20404e34:	a065                	j	20404edc <_printf_i+0x134>
20404e36:	07300793          	li	a5,115
20404e3a:	1af68263          	beq	a3,a5,20404fde <_printf_i+0x236>
20404e3e:	00d7ef63          	bltu	a5,a3,20404e5c <_printf_i+0xb4>
20404e42:	06f00793          	li	a5,111
20404e46:	04f68f63          	beq	a3,a5,20404ea4 <_printf_i+0xfc>
20404e4a:	07000793          	li	a5,112
20404e4e:	faf690e3          	bne	a3,a5,20404dee <_printf_i+0x46>
20404e52:	419c                	lw	a5,0(a1)
20404e54:	0207e793          	ori	a5,a5,32
20404e58:	c19c                	sw	a5,0(a1)
20404e5a:	a809                	j	20404e6c <_printf_i+0xc4>
20404e5c:	07500793          	li	a5,117
20404e60:	04f68263          	beq	a3,a5,20404ea4 <_printf_i+0xfc>
20404e64:	07800793          	li	a5,120
20404e68:	f8f693e3          	bne	a3,a5,20404dee <_printf_i+0x46>
20404e6c:	07800793          	li	a5,120
20404e70:	04f402a3          	sb	a5,69(s0)
20404e74:	5fbfc697          	auipc	a3,0x5fbfc
20404e78:	57468693          	addi	a3,a3,1396 # 800013e8 <__sf_fake_stdout+0x48>
20404e7c:	a0dd                	j	20404f62 <_printf_i+0x1ba>
20404e7e:	431c                	lw	a5,0(a4)
20404e80:	04258a93          	addi	s5,a1,66
20404e84:	00478693          	addi	a3,a5,4
20404e88:	439c                	lw	a5,0(a5)
20404e8a:	c314                	sw	a3,0(a4)
20404e8c:	04f58123          	sb	a5,66(a1)
20404e90:	4785                	li	a5,1
20404e92:	a2ad                	j	20404ffc <_printf_i+0x254>
20404e94:	0407f693          	andi	a3,a5,64
20404e98:	411c                	lw	a5,0(a0)
20404e9a:	c30c                	sw	a1,0(a4)
20404e9c:	debd                	beqz	a3,20404e1a <_printf_i+0x72>
20404e9e:	07c2                	slli	a5,a5,0x10
20404ea0:	87c1                	srai	a5,a5,0x10
20404ea2:	bfa5                	j	20404e1a <_printf_i+0x72>
20404ea4:	400c                	lw	a1,0(s0)
20404ea6:	431c                	lw	a5,0(a4)
20404ea8:	0805f813          	andi	a6,a1,128
20404eac:	00478513          	addi	a0,a5,4
20404eb0:	00080563          	beqz	a6,20404eba <_printf_i+0x112>
20404eb4:	c308                	sw	a0,0(a4)
20404eb6:	439c                	lw	a5,0(a5)
20404eb8:	a039                	j	20404ec6 <_printf_i+0x11e>
20404eba:	0405f593          	andi	a1,a1,64
20404ebe:	c308                	sw	a0,0(a4)
20404ec0:	d9fd                	beqz	a1,20404eb6 <_printf_i+0x10e>
20404ec2:	0007d783          	lhu	a5,0(a5)
20404ec6:	06f00713          	li	a4,111
20404eca:	0ce68a63          	beq	a3,a4,20404f9e <_printf_i+0x1f6>
20404ece:	5fbfc697          	auipc	a3,0x5fbfc
20404ed2:	50668693          	addi	a3,a3,1286 # 800013d4 <__sf_fake_stdout+0x34>
20404ed6:	4729                	li	a4,10
20404ed8:	040401a3          	sb	zero,67(s0)
20404edc:	404c                	lw	a1,4(s0)
20404ede:	c40c                	sw	a1,8(s0)
20404ee0:	0005c563          	bltz	a1,20404eea <_printf_i+0x142>
20404ee4:	4008                	lw	a0,0(s0)
20404ee6:	996d                	andi	a0,a0,-5
20404ee8:	c008                	sw	a0,0(s0)
20404eea:	e399                	bnez	a5,20404ef0 <_printf_i+0x148>
20404eec:	8ab2                	mv	s5,a2
20404eee:	cd91                	beqz	a1,20404f0a <_printf_i+0x162>
20404ef0:	8ab2                	mv	s5,a2
20404ef2:	02e7f5b3          	remu	a1,a5,a4
20404ef6:	1afd                	addi	s5,s5,-1
20404ef8:	95b6                	add	a1,a1,a3
20404efa:	0005c583          	lbu	a1,0(a1)
20404efe:	00ba8023          	sb	a1,0(s5)
20404f02:	02e7d5b3          	divu	a1,a5,a4
20404f06:	0ae7f263          	bgeu	a5,a4,20404faa <_printf_i+0x202>
20404f0a:	47a1                	li	a5,8
20404f0c:	00f71e63          	bne	a4,a5,20404f28 <_printf_i+0x180>
20404f10:	401c                	lw	a5,0(s0)
20404f12:	8b85                	andi	a5,a5,1
20404f14:	cb91                	beqz	a5,20404f28 <_printf_i+0x180>
20404f16:	4058                	lw	a4,4(s0)
20404f18:	481c                	lw	a5,16(s0)
20404f1a:	00e7c763          	blt	a5,a4,20404f28 <_printf_i+0x180>
20404f1e:	03000793          	li	a5,48
20404f22:	fefa8fa3          	sb	a5,-1(s5)
20404f26:	1afd                	addi	s5,s5,-1
20404f28:	41560633          	sub	a2,a2,s5
20404f2c:	c810                	sw	a2,16(s0)
20404f2e:	874e                	mv	a4,s3
20404f30:	86ca                	mv	a3,s2
20404f32:	0070                	addi	a2,sp,12
20404f34:	85a2                	mv	a1,s0
20404f36:	8526                	mv	a0,s1
20404f38:	3395                	jal	20404c9c <_printf_common>
20404f3a:	5a7d                	li	s4,-1
20404f3c:	0d451463          	bne	a0,s4,20405004 <_printf_i+0x25c>
20404f40:	557d                	li	a0,-1
20404f42:	50b2                	lw	ra,44(sp)
20404f44:	5422                	lw	s0,40(sp)
20404f46:	5492                	lw	s1,36(sp)
20404f48:	5902                	lw	s2,32(sp)
20404f4a:	49f2                	lw	s3,28(sp)
20404f4c:	4a62                	lw	s4,24(sp)
20404f4e:	4ad2                	lw	s5,20(sp)
20404f50:	4b42                	lw	s6,16(sp)
20404f52:	6145                	addi	sp,sp,48
20404f54:	8082                	ret
20404f56:	04d582a3          	sb	a3,69(a1)
20404f5a:	5fbfc697          	auipc	a3,0x5fbfc
20404f5e:	47a68693          	addi	a3,a3,1146 # 800013d4 <__sf_fake_stdout+0x34>
20404f62:	400c                	lw	a1,0(s0)
20404f64:	4308                	lw	a0,0(a4)
20404f66:	0805f813          	andi	a6,a1,128
20404f6a:	411c                	lw	a5,0(a0)
20404f6c:	0511                	addi	a0,a0,4
20404f6e:	02080063          	beqz	a6,20404f8e <_printf_i+0x1e6>
20404f72:	c308                	sw	a0,0(a4)
20404f74:	0015f713          	andi	a4,a1,1
20404f78:	c701                	beqz	a4,20404f80 <_printf_i+0x1d8>
20404f7a:	0205e593          	ori	a1,a1,32
20404f7e:	c00c                	sw	a1,0(s0)
20404f80:	4741                	li	a4,16
20404f82:	fbb9                	bnez	a5,20404ed8 <_printf_i+0x130>
20404f84:	400c                	lw	a1,0(s0)
20404f86:	fdf5f593          	andi	a1,a1,-33
20404f8a:	c00c                	sw	a1,0(s0)
20404f8c:	b7b1                	j	20404ed8 <_printf_i+0x130>
20404f8e:	0405f813          	andi	a6,a1,64
20404f92:	c308                	sw	a0,0(a4)
20404f94:	fe0800e3          	beqz	a6,20404f74 <_printf_i+0x1cc>
20404f98:	07c2                	slli	a5,a5,0x10
20404f9a:	83c1                	srli	a5,a5,0x10
20404f9c:	bfe1                	j	20404f74 <_printf_i+0x1cc>
20404f9e:	5fbfc697          	auipc	a3,0x5fbfc
20404fa2:	43668693          	addi	a3,a3,1078 # 800013d4 <__sf_fake_stdout+0x34>
20404fa6:	4721                	li	a4,8
20404fa8:	bf05                	j	20404ed8 <_printf_i+0x130>
20404faa:	87ae                	mv	a5,a1
20404fac:	b799                	j	20404ef2 <_printf_i+0x14a>
20404fae:	4194                	lw	a3,0(a1)
20404fb0:	431c                	lw	a5,0(a4)
20404fb2:	49cc                	lw	a1,20(a1)
20404fb4:	0806f813          	andi	a6,a3,128
20404fb8:	00478513          	addi	a0,a5,4
20404fbc:	00080663          	beqz	a6,20404fc8 <_printf_i+0x220>
20404fc0:	c308                	sw	a0,0(a4)
20404fc2:	439c                	lw	a5,0(a5)
20404fc4:	c38c                	sw	a1,0(a5)
20404fc6:	a801                	j	20404fd6 <_printf_i+0x22e>
20404fc8:	c308                	sw	a0,0(a4)
20404fca:	0406f693          	andi	a3,a3,64
20404fce:	439c                	lw	a5,0(a5)
20404fd0:	daf5                	beqz	a3,20404fc4 <_printf_i+0x21c>
20404fd2:	00b79023          	sh	a1,0(a5)
20404fd6:	00042823          	sw	zero,16(s0)
20404fda:	8ab2                	mv	s5,a2
20404fdc:	bf89                	j	20404f2e <_printf_i+0x186>
20404fde:	431c                	lw	a5,0(a4)
20404fe0:	41d0                	lw	a2,4(a1)
20404fe2:	4581                	li	a1,0
20404fe4:	00478693          	addi	a3,a5,4
20404fe8:	c314                	sw	a3,0(a4)
20404fea:	0007aa83          	lw	s5,0(a5)
20404fee:	8556                	mv	a0,s5
20404ff0:	3179                	jal	20404c7e <memchr>
20404ff2:	c501                	beqz	a0,20404ffa <_printf_i+0x252>
20404ff4:	41550533          	sub	a0,a0,s5
20404ff8:	c048                	sw	a0,4(s0)
20404ffa:	405c                	lw	a5,4(s0)
20404ffc:	c81c                	sw	a5,16(s0)
20404ffe:	040401a3          	sb	zero,67(s0)
20405002:	b735                	j	20404f2e <_printf_i+0x186>
20405004:	4814                	lw	a3,16(s0)
20405006:	8656                	mv	a2,s5
20405008:	85ca                	mv	a1,s2
2040500a:	8526                	mv	a0,s1
2040500c:	9982                	jalr	s3
2040500e:	f34509e3          	beq	a0,s4,20404f40 <_printf_i+0x198>
20405012:	401c                	lw	a5,0(s0)
20405014:	8b89                	andi	a5,a5,2
20405016:	e78d                	bnez	a5,20405040 <_printf_i+0x298>
20405018:	47b2                	lw	a5,12(sp)
2040501a:	4448                	lw	a0,12(s0)
2040501c:	f2f553e3          	bge	a0,a5,20404f42 <_printf_i+0x19a>
20405020:	853e                	mv	a0,a5
20405022:	b705                	j	20404f42 <_printf_i+0x19a>
20405024:	4685                	li	a3,1
20405026:	8656                	mv	a2,s5
20405028:	85ca                	mv	a1,s2
2040502a:	8526                	mv	a0,s1
2040502c:	9982                	jalr	s3
2040502e:	f16509e3          	beq	a0,s6,20404f40 <_printf_i+0x198>
20405032:	0a05                	addi	s4,s4,1
20405034:	445c                	lw	a5,12(s0)
20405036:	4732                	lw	a4,12(sp)
20405038:	8f99                	sub	a5,a5,a4
2040503a:	fefa45e3          	blt	s4,a5,20405024 <_printf_i+0x27c>
2040503e:	bfe9                	j	20405018 <_printf_i+0x270>
20405040:	4a01                	li	s4,0
20405042:	01940a93          	addi	s5,s0,25
20405046:	5b7d                	li	s6,-1
20405048:	b7f5                	j	20405034 <_printf_i+0x28c>

2040504a <_read_r>:
_read_r():
2040504a:	1141                	addi	sp,sp,-16
2040504c:	c422                	sw	s0,8(sp)
2040504e:	842a                	mv	s0,a0
20405050:	852e                	mv	a0,a1
20405052:	85b2                	mv	a1,a2
20405054:	8636                	mv	a2,a3
20405056:	5fbfd797          	auipc	a5,0x5fbfd
2040505a:	0a07af23          	sw	zero,190(a5) # 80002114 <errno>
2040505e:	c606                	sw	ra,12(sp)
20405060:	2845                	jal	20405110 <_read>
20405062:	57fd                	li	a5,-1
20405064:	00f51963          	bne	a0,a5,20405076 <_read_r+0x2c>
20405068:	5fbfd797          	auipc	a5,0x5fbfd
2040506c:	0ac78793          	addi	a5,a5,172 # 80002114 <errno>
20405070:	439c                	lw	a5,0(a5)
20405072:	c391                	beqz	a5,20405076 <_read_r+0x2c>
20405074:	c01c                	sw	a5,0(s0)
20405076:	40b2                	lw	ra,12(sp)
20405078:	4422                	lw	s0,8(sp)
2040507a:	0141                	addi	sp,sp,16
2040507c:	8082                	ret

2040507e <_close>:
_close():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
2040507e:	1101                	addi	sp,sp,-32
20405080:	ce06                	sw	ra,28(sp)
20405082:	cc22                	sw	s0,24(sp)
20405084:	1000                	addi	s0,sp,32
20405086:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
2040508a:	2e21                	jal	204053a2 <__errno>
2040508c:	872a                	mv	a4,a0
2040508e:	05800793          	li	a5,88
20405092:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:5
    return -1;
20405094:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:6
}
20405096:	853e                	mv	a0,a5
20405098:	40f2                	lw	ra,28(sp)
2040509a:	4462                	lw	s0,24(sp)
2040509c:	6105                	addi	sp,sp,32
2040509e:	8082                	ret

204050a0 <_fstat>:
_fstat():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
204050a0:	1101                	addi	sp,sp,-32
204050a2:	ce06                	sw	ra,28(sp)
204050a4:	cc22                	sw	s0,24(sp)
204050a6:	1000                	addi	s0,sp,32
204050a8:	fea42623          	sw	a0,-20(s0)
204050ac:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
204050b0:	2ccd                	jal	204053a2 <__errno>
204050b2:	872a                	mv	a4,a0
204050b4:	fa800793          	li	a5,-88
204050b8:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:6
    return -1;
204050ba:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:7
}
204050bc:	853e                	mv	a0,a5
204050be:	40f2                	lw	ra,28(sp)
204050c0:	4462                	lw	s0,24(sp)
204050c2:	6105                	addi	sp,sp,32
204050c4:	8082                	ret

204050c6 <_isatty>:
_isatty():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
204050c6:	1101                	addi	sp,sp,-32
204050c8:	ce22                	sw	s0,28(sp)
204050ca:	1000                	addi	s0,sp,32
204050cc:	fea42623          	sw	a0,-20(s0)
204050d0:	fec42783          	lw	a5,-20(s0)
204050d4:	17fd                	addi	a5,a5,-1
204050d6:	0017b793          	seqz	a5,a5
204050da:	0ff7f793          	andi	a5,a5,255
204050de:	853e                	mv	a0,a5
204050e0:	4472                	lw	s0,28(sp)
204050e2:	6105                	addi	sp,sp,32
204050e4:	8082                	ret

204050e6 <_lseek>:
_lseek():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
204050e6:	1101                	addi	sp,sp,-32
204050e8:	ce06                	sw	ra,28(sp)
204050ea:	cc22                	sw	s0,24(sp)
204050ec:	1000                	addi	s0,sp,32
204050ee:	fea42623          	sw	a0,-20(s0)
204050f2:	feb42423          	sw	a1,-24(s0)
204050f6:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
204050fa:	2465                	jal	204053a2 <__errno>
204050fc:	872a                	mv	a4,a0
204050fe:	05800793          	li	a5,88
20405102:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20405104:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:7
}
20405106:	853e                	mv	a0,a5
20405108:	40f2                	lw	ra,28(sp)
2040510a:	4462                	lw	s0,24(sp)
2040510c:	6105                	addi	sp,sp,32
2040510e:	8082                	ret

20405110 <_read>:
_read():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20405110:	1101                	addi	sp,sp,-32
20405112:	ce06                	sw	ra,28(sp)
20405114:	cc22                	sw	s0,24(sp)
20405116:	1000                	addi	s0,sp,32
20405118:	fea42623          	sw	a0,-20(s0)
2040511c:	feb42423          	sw	a1,-24(s0)
20405120:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20405124:	2cbd                	jal	204053a2 <__errno>
20405126:	872a                	mv	a4,a0
20405128:	05800793          	li	a5,88
2040512c:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:6
    return -1;
2040512e:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:7
}
20405130:	853e                	mv	a0,a5
20405132:	40f2                	lw	ra,28(sp)
20405134:	4462                	lw	s0,24(sp)
20405136:	6105                	addi	sp,sp,32
20405138:	8082                	ret

2040513a <_sbrk>:
_sbrk():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
2040513a:	7179                	addi	sp,sp,-48
2040513c:	d606                	sw	ra,44(sp)
2040513e:	d422                	sw	s0,40(sp)
20405140:	1800                	addi	s0,sp,48
20405142:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20405146:	8141a783          	lw	a5,-2028(gp) # 80000a8c <__brk>
2040514a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
2040514e:	800037b7          	lui	a5,0x80003
20405152:	12078713          	addi	a4,a5,288 # 80003120 <metal_segment_heap_target_end+0xfffff800>
20405156:	800047b7          	lui	a5,0x80004
2040515a:	92078793          	addi	a5,a5,-1760 # 80003920 <metal_segment_heap_target_end+0x0>
2040515e:	00f71463          	bne	a4,a5,20405166 <_sbrk+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20405162:	57fd                	li	a5,-1
20405164:	a099                	j	204051aa <_sbrk+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20405166:	8141a703          	lw	a4,-2028(gp) # 80000a8c <__brk>
2040516a:	fdc42783          	lw	a5,-36(s0)
2040516e:	973e                	add	a4,a4,a5
20405170:	800047b7          	lui	a5,0x80004
20405174:	92078793          	addi	a5,a5,-1760 # 80003920 <metal_segment_heap_target_end+0x0>
20405178:	02f77263          	bgeu	a4,a5,2040519c <_sbrk+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
2040517c:	8141a703          	lw	a4,-2028(gp) # 80000a8c <__brk>
20405180:	fdc42783          	lw	a5,-36(s0)
20405184:	973e                	add	a4,a4,a5
20405186:	80e1aa23          	sw	a4,-2028(gp) # 80000a8c <__brk>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
2040518a:	fdc42583          	lw	a1,-36(s0)
2040518e:	fec42503          	lw	a0,-20(s0)
20405192:	f09fa0ef          	jal	ra,2040009a <metal_mem_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20405196:	fec42783          	lw	a5,-20(s0)
2040519a:	a801                	j	204051aa <_sbrk+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
2040519c:	80004737          	lui	a4,0x80004
204051a0:	92070713          	addi	a4,a4,-1760 # 80003920 <metal_segment_heap_target_end+0x0>
204051a4:	80e1aa23          	sw	a4,-2028(gp) # 80000a8c <__brk>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
204051a8:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:43
}
204051aa:	853e                	mv	a0,a5
204051ac:	50b2                	lw	ra,44(sp)
204051ae:	5422                	lw	s0,40(sp)
204051b0:	6145                	addi	sp,sp,48
204051b2:	8082                	ret

204051b4 <muldiv>:
muldiv():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:27
 * in 64 bits. CLOCKS_PER_SEC is defined as 1,000,000, so we just need
 * timebase to be less than about 4,000,000,000,000 (4 trillion).
 */

static inline unsigned long long
muldiv(unsigned long long v, unsigned long long num, unsigned long long den) {
204051b4:	7139                	addi	sp,sp,-64
204051b6:	de06                	sw	ra,60(sp)
204051b8:	dc22                	sw	s0,56(sp)
204051ba:	da4a                	sw	s2,52(sp)
204051bc:	d84e                	sw	s3,48(sp)
204051be:	d652                	sw	s4,44(sp)
204051c0:	d456                	sw	s5,40(sp)
204051c2:	0080                	addi	s0,sp,64
204051c4:	fca42c23          	sw	a0,-40(s0)
204051c8:	fcb42e23          	sw	a1,-36(s0)
204051cc:	fcc42823          	sw	a2,-48(s0)
204051d0:	fcd42a23          	sw	a3,-44(s0)
204051d4:	fce42423          	sw	a4,-56(s0)
204051d8:	fcf42623          	sw	a5,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:28
    return (((v % den) * num) / den) + ((v / den) * num);
204051dc:	fd842783          	lw	a5,-40(s0)
204051e0:	fdc42803          	lw	a6,-36(s0)
204051e4:	fc842603          	lw	a2,-56(s0)
204051e8:	fcc42683          	lw	a3,-52(s0)
204051ec:	853e                	mv	a0,a5
204051ee:	85c2                	mv	a1,a6
204051f0:	273d                	jal	2040591e <__umoddi3>
204051f2:	87aa                	mv	a5,a0
204051f4:	882e                	mv	a6,a1
204051f6:	fd042703          	lw	a4,-48(s0)
204051fa:	030706b3          	mul	a3,a4,a6
204051fe:	fd442703          	lw	a4,-44(s0)
20405202:	02f70733          	mul	a4,a4,a5
20405206:	96ba                	add	a3,a3,a4
20405208:	fd042703          	lw	a4,-48(s0)
2040520c:	02f70633          	mul	a2,a4,a5
20405210:	02f73ab3          	mulhu	s5,a4,a5
20405214:	8a32                	mv	s4,a2
20405216:	015687b3          	add	a5,a3,s5
2040521a:	8abe                	mv	s5,a5
2040521c:	fc842603          	lw	a2,-56(s0)
20405220:	fcc42683          	lw	a3,-52(s0)
20405224:	8552                	mv	a0,s4
20405226:	85d6                	mv	a1,s5
20405228:	2645                	jal	204055c8 <__udivdi3>
2040522a:	87aa                	mv	a5,a0
2040522c:	882e                	mv	a6,a1
2040522e:	8a3e                	mv	s4,a5
20405230:	8ac2                	mv	s5,a6
20405232:	fc842603          	lw	a2,-56(s0)
20405236:	fcc42683          	lw	a3,-52(s0)
2040523a:	fd842503          	lw	a0,-40(s0)
2040523e:	fdc42583          	lw	a1,-36(s0)
20405242:	2659                	jal	204055c8 <__udivdi3>
20405244:	87aa                	mv	a5,a0
20405246:	882e                	mv	a6,a1
20405248:	fd042703          	lw	a4,-48(s0)
2040524c:	030706b3          	mul	a3,a4,a6
20405250:	fd442703          	lw	a4,-44(s0)
20405254:	02f70733          	mul	a4,a4,a5
20405258:	96ba                	add	a3,a3,a4
2040525a:	fd042703          	lw	a4,-48(s0)
2040525e:	02f70633          	mul	a2,a4,a5
20405262:	02f739b3          	mulhu	s3,a4,a5
20405266:	8932                	mv	s2,a2
20405268:	013687b3          	add	a5,a3,s3
2040526c:	89be                	mv	s3,a5
2040526e:	012a07b3          	add	a5,s4,s2
20405272:	873e                	mv	a4,a5
20405274:	01473733          	sltu	a4,a4,s4
20405278:	013a8833          	add	a6,s5,s3
2040527c:	9742                	add	a4,a4,a6
2040527e:	883a                	mv	a6,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:29
}
20405280:	853e                	mv	a0,a5
20405282:	85c2                	mv	a1,a6
20405284:	50f2                	lw	ra,60(sp)
20405286:	5462                	lw	s0,56(sp)
20405288:	5952                	lw	s2,52(sp)
2040528a:	59c2                	lw	s3,48(sp)
2040528c:	5a32                	lw	s4,44(sp)
2040528e:	5aa2                	lw	s5,40(sp)
20405290:	6121                	addi	sp,sp,64
20405292:	8082                	ret

20405294 <_times>:
_times():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:43

   Since maven does not currently support processes we set both of the
   children's times to zero. Eventually we might want to separately
   account for user vs system time, but for now we just return the total
   number of cycles since starting the program.  */
clock_t _times(struct tms *buf) {
20405294:	7139                	addi	sp,sp,-64
20405296:	de06                	sw	ra,60(sp)
20405298:	dc22                	sw	s0,56(sp)
2040529a:	0080                	addi	s0,sp,64
2040529c:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:46
    unsigned long long mcc;
    unsigned long long timebase;
    int hartid = metal_cpu_get_current_hartid();
204052a0:	26d000ef          	jal	ra,20405d0c <metal_cpu_get_current_hartid>
204052a4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:48

    metal_timer_get_timebase_frequency(hartid, &timebase);
204052a8:	fd840793          	addi	a5,s0,-40
204052ac:	85be                	mv	a1,a5
204052ae:	fec42503          	lw	a0,-20(s0)
204052b2:	3d3000ef          	jal	ra,20405e84 <metal_timer_get_timebase_frequency>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:49
    metal_timer_get_cyclecount(hartid, &mcc);
204052b6:	fe040793          	addi	a5,s0,-32
204052ba:	85be                	mv	a1,a5
204052bc:	fec42503          	lw	a0,-20(s0)
204052c0:	37f000ef          	jal	ra,20405e3e <metal_timer_get_cyclecount>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:59
     * Truncating this to 64 bits works because a change of 'c' in
     * cyclecount will change the return value by
     * c * CLOCKS_PER_SEC / timebase, so applications will see
     * time marching forward.
     */
    mcc = muldiv(mcc, CLOCKS_PER_SEC, timebase);
204052c4:	fe042503          	lw	a0,-32(s0)
204052c8:	fe442583          	lw	a1,-28(s0)
204052cc:	fd842783          	lw	a5,-40(s0)
204052d0:	fdc42803          	lw	a6,-36(s0)
204052d4:	873e                	mv	a4,a5
204052d6:	87c2                	mv	a5,a6
204052d8:	000f4637          	lui	a2,0xf4
204052dc:	24060613          	addi	a2,a2,576 # f4240 <__stack_size+0xf3240>
204052e0:	4681                	li	a3,0
204052e2:	3dc9                	jal	204051b4 <muldiv>
204052e4:	87aa                	mv	a5,a0
204052e6:	882e                	mv	a6,a1
204052e8:	fef42023          	sw	a5,-32(s0)
204052ec:	ff042223          	sw	a6,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:61

    buf->tms_stime = 0;
204052f0:	fcc42783          	lw	a5,-52(s0)
204052f4:	0007a223          	sw	zero,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:62
    buf->tms_cutime = 0;
204052f8:	fcc42783          	lw	a5,-52(s0)
204052fc:	0007a423          	sw	zero,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:63
    buf->tms_cstime = 0;
20405300:	fcc42783          	lw	a5,-52(s0)
20405304:	0007a623          	sw	zero,12(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:64
    return buf->tms_utime = mcc;
20405308:	fe042783          	lw	a5,-32(s0)
2040530c:	fe442803          	lw	a6,-28(s0)
20405310:	873e                	mv	a4,a5
20405312:	fcc42783          	lw	a5,-52(s0)
20405316:	c398                	sw	a4,0(a5)
20405318:	fcc42783          	lw	a5,-52(s0)
2040531c:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_times.c:65
}
2040531e:	853e                	mv	a0,a5
20405320:	50f2                	lw	ra,60(sp)
20405322:	5462                	lw	s0,56(sp)
20405324:	6121                	addi	sp,sp,64
20405326:	8082                	ret

20405328 <_write>:
_write():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20405328:	7179                	addi	sp,sp,-48
2040532a:	d606                	sw	ra,44(sp)
2040532c:	d422                	sw	s0,40(sp)
2040532e:	1800                	addi	s0,sp,48
20405330:	fca42e23          	sw	a0,-36(s0)
20405334:	fcb42c23          	sw	a1,-40(s0)
20405338:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
2040533c:	fdc42703          	lw	a4,-36(s0)
20405340:	4785                	li	a5,1
20405342:	00f70963          	beq	a4,a5,20405354 <_write+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20405346:	28b1                	jal	204053a2 <__errno>
20405348:	872a                	mv	a4,a0
2040534a:	05800793          	li	a5,88
2040534e:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
        return -1;
20405350:	57fd                	li	a5,-1
20405352:	a835                	j	2040538e <_write+0x66>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20405354:	fd842783          	lw	a5,-40(s0)
20405358:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
2040535c:	fe042623          	sw	zero,-20(s0)
20405360:	a005                	j	20405380 <_write+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20405362:	fe842703          	lw	a4,-24(s0)
20405366:	fec42783          	lw	a5,-20(s0)
2040536a:	97ba                	add	a5,a5,a4
2040536c:	0007c783          	lbu	a5,0(a5)
20405370:	853e                	mv	a0,a5
20405372:	359000ef          	jal	ra,20405eca <metal_tty_putc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20405376:	fec42783          	lw	a5,-20(s0)
2040537a:	0785                	addi	a5,a5,1
2040537c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20405380:	fec42703          	lw	a4,-20(s0)
20405384:	fd442783          	lw	a5,-44(s0)
20405388:	fcf76de3          	bltu	a4,a5,20405362 <_write+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
    return 0;
2040538c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:17
}
2040538e:	853e                	mv	a0,a5
20405390:	50b2                	lw	ra,44(sp)
20405392:	5422                	lw	s0,40(sp)
20405394:	6145                	addi	sp,sp,48
20405396:	8082                	ret

20405398 <atexit>:
atexit():
20405398:	85aa                	mv	a1,a0
2040539a:	4681                	li	a3,0
2040539c:	4601                	li	a2,0
2040539e:	4501                	li	a0,0
204053a0:	a8d1                	j	20405474 <__register_exitproc>

204053a2 <__errno>:
__errno():
204053a2:	80c18793          	addi	a5,gp,-2036 # 80000a84 <_impure_ptr>
204053a6:	4388                	lw	a0,0(a5)
204053a8:	8082                	ret

204053aa <exit>:
exit():
204053aa:	1141                	addi	sp,sp,-16
204053ac:	c422                	sw	s0,8(sp)
204053ae:	c606                	sw	ra,12(sp)
204053b0:	00000797          	auipc	a5,0x0
204053b4:	15078793          	addi	a5,a5,336 # 20405500 <__call_exitprocs>
204053b8:	842a                	mv	s0,a0
204053ba:	c399                	beqz	a5,204053c0 <exit+0x16>
204053bc:	4581                	li	a1,0
204053be:	2289                	jal	20405500 <__call_exitprocs>
204053c0:	81018793          	addi	a5,gp,-2032 # 80000a88 <_global_impure_ptr>
204053c4:	4388                	lw	a0,0(a5)
204053c6:	551c                	lw	a5,40(a0)
204053c8:	c391                	beqz	a5,204053cc <exit+0x22>
204053ca:	9782                	jalr	a5
204053cc:	8522                	mv	a0,s0
204053ce:	0d8050ef          	jal	ra,2040a4a6 <_exit>

204053d2 <__libc_fini_array>:
__libc_fini_array():
204053d2:	1141                	addi	sp,sp,-16
204053d4:	ffffb797          	auipc	a5,0xffffb
204053d8:	f2478793          	addi	a5,a5,-220 # 204002f8 <__fini_array_end>
204053dc:	c422                	sw	s0,8(sp)
204053de:	ffffb417          	auipc	s0,0xffffb
204053e2:	f1a40413          	addi	s0,s0,-230 # 204002f8 <__fini_array_end>
204053e6:	8c1d                	sub	s0,s0,a5
204053e8:	c226                	sw	s1,4(sp)
204053ea:	c606                	sw	ra,12(sp)
204053ec:	8409                	srai	s0,s0,0x2
204053ee:	84be                	mv	s1,a5
204053f0:	e411                	bnez	s0,204053fc <__libc_fini_array+0x2a>
204053f2:	40b2                	lw	ra,12(sp)
204053f4:	4422                	lw	s0,8(sp)
204053f6:	4492                	lw	s1,4(sp)
204053f8:	0141                	addi	sp,sp,16
204053fa:	8082                	ret
204053fc:	147d                	addi	s0,s0,-1
204053fe:	00241793          	slli	a5,s0,0x2
20405402:	97a6                	add	a5,a5,s1
20405404:	439c                	lw	a5,0(a5)
20405406:	9782                	jalr	a5
20405408:	b7e5                	j	204053f0 <__libc_fini_array+0x1e>

2040540a <__libc_init_array>:
__libc_init_array():
2040540a:	1141                	addi	sp,sp,-16
2040540c:	ffffb797          	auipc	a5,0xffffb
20405410:	edc78793          	addi	a5,a5,-292 # 204002e8 <_metal_tty_init_ptr>
20405414:	c422                	sw	s0,8(sp)
20405416:	ffffb417          	auipc	s0,0xffffb
2040541a:	ed240413          	addi	s0,s0,-302 # 204002e8 <_metal_tty_init_ptr>
2040541e:	8c1d                	sub	s0,s0,a5
20405420:	c226                	sw	s1,4(sp)
20405422:	c04a                	sw	s2,0(sp)
20405424:	c606                	sw	ra,12(sp)
20405426:	8409                	srai	s0,s0,0x2
20405428:	4481                	li	s1,0
2040542a:	893e                	mv	s2,a5
2040542c:	02849663          	bne	s1,s0,20405458 <__libc_init_array+0x4e>
20405430:	ffffb797          	auipc	a5,0xffffb
20405434:	eb878793          	addi	a5,a5,-328 # 204002e8 <_metal_tty_init_ptr>
20405438:	ffffb417          	auipc	s0,0xffffb
2040543c:	eb040413          	addi	s0,s0,-336 # 204002e8 <_metal_tty_init_ptr>
20405440:	8c1d                	sub	s0,s0,a5
20405442:	8409                	srai	s0,s0,0x2
20405444:	4481                	li	s1,0
20405446:	893e                	mv	s2,a5
20405448:	00849f63          	bne	s1,s0,20405466 <__libc_init_array+0x5c>
2040544c:	40b2                	lw	ra,12(sp)
2040544e:	4422                	lw	s0,8(sp)
20405450:	4492                	lw	s1,4(sp)
20405452:	4902                	lw	s2,0(sp)
20405454:	0141                	addi	sp,sp,16
20405456:	8082                	ret
20405458:	00249793          	slli	a5,s1,0x2
2040545c:	97ca                	add	a5,a5,s2
2040545e:	439c                	lw	a5,0(a5)
20405460:	0485                	addi	s1,s1,1
20405462:	9782                	jalr	a5
20405464:	b7e1                	j	2040542c <__libc_init_array+0x22>
20405466:	00249793          	slli	a5,s1,0x2
2040546a:	97ca                	add	a5,a5,s2
2040546c:	439c                	lw	a5,0(a5)
2040546e:	0485                	addi	s1,s1,1
20405470:	9782                	jalr	a5
20405472:	bfd9                	j	20405448 <__libc_init_array+0x3e>

20405474 <__register_exitproc>:
__register_exitproc():
20405474:	5fbfd797          	auipc	a5,0x5fbfd
20405478:	c0878793          	addi	a5,a5,-1016 # 8000207c <_global_atexit>
2040547c:	439c                	lw	a5,0(a5)
2040547e:	8e2a                	mv	t3,a0
20405480:	e78d                	bnez	a5,204054aa <__register_exitproc+0x36>
20405482:	5fbfd717          	auipc	a4,0x5fbfd
20405486:	c0670713          	addi	a4,a4,-1018 # 80002088 <_global_atexit0>
2040548a:	5fbfd797          	auipc	a5,0x5fbfd
2040548e:	bee7a923          	sw	a4,-1038(a5) # 8000207c <_global_atexit>
20405492:	dfbfb517          	auipc	a0,0xdfbfb
20405496:	b6e50513          	addi	a0,a0,-1170 # 0 <__metal_boot_hart>
2040549a:	87ba                	mv	a5,a4
2040549c:	c519                	beqz	a0,204054aa <__register_exitproc+0x36>
2040549e:	411c                	lw	a5,0(a0)
204054a0:	5fbfd517          	auipc	a0,0x5fbfd
204054a4:	c6f52823          	sw	a5,-912(a0) # 80002110 <_global_atexit0+0x88>
204054a8:	87ba                	mv	a5,a4
204054aa:	43d8                	lw	a4,4(a5)
204054ac:	487d                	li	a6,31
204054ae:	557d                	li	a0,-1
204054b0:	04e84763          	blt	a6,a4,204054fe <__register_exitproc+0x8a>
204054b4:	020e0e63          	beqz	t3,204054f0 <__register_exitproc+0x7c>
204054b8:	0887a803          	lw	a6,136(a5)
204054bc:	04080163          	beqz	a6,204054fe <__register_exitproc+0x8a>
204054c0:	00271893          	slli	a7,a4,0x2
204054c4:	98c2                	add	a7,a7,a6
204054c6:	00c8a023          	sw	a2,0(a7)
204054ca:	10082303          	lw	t1,256(a6)
204054ce:	4605                	li	a2,1
204054d0:	00e61633          	sll	a2,a2,a4
204054d4:	00c36333          	or	t1,t1,a2
204054d8:	10682023          	sw	t1,256(a6)
204054dc:	08d8a023          	sw	a3,128(a7)
204054e0:	4689                	li	a3,2
204054e2:	00de1763          	bne	t3,a3,204054f0 <__register_exitproc+0x7c>
204054e6:	10482683          	lw	a3,260(a6)
204054ea:	8e55                	or	a2,a2,a3
204054ec:	10c82223          	sw	a2,260(a6)
204054f0:	00170693          	addi	a3,a4,1
204054f4:	070a                	slli	a4,a4,0x2
204054f6:	c3d4                	sw	a3,4(a5)
204054f8:	97ba                	add	a5,a5,a4
204054fa:	c78c                	sw	a1,8(a5)
204054fc:	4501                	li	a0,0
204054fe:	8082                	ret

20405500 <__call_exitprocs>:
__call_exitprocs():
20405500:	7179                	addi	sp,sp,-48
20405502:	cc52                	sw	s4,24(sp)
20405504:	ca56                	sw	s5,20(sp)
20405506:	c85a                	sw	s6,16(sp)
20405508:	c65e                	sw	s7,12(sp)
2040550a:	d606                	sw	ra,44(sp)
2040550c:	d422                	sw	s0,40(sp)
2040550e:	d226                	sw	s1,36(sp)
20405510:	d04a                	sw	s2,32(sp)
20405512:	ce4e                	sw	s3,28(sp)
20405514:	c462                	sw	s8,8(sp)
20405516:	8b2a                	mv	s6,a0
20405518:	8a2e                	mv	s4,a1
2040551a:	5fbfda97          	auipc	s5,0x5fbfd
2040551e:	b62a8a93          	addi	s5,s5,-1182 # 8000207c <_global_atexit>
20405522:	4b85                	li	s7,1
20405524:	000aa403          	lw	s0,0(s5)
20405528:	c811                	beqz	s0,2040553c <__call_exitprocs+0x3c>
2040552a:	4044                	lw	s1,4(s0)
2040552c:	08842983          	lw	s3,136(s0)
20405530:	fff48913          	addi	s2,s1,-1
20405534:	048a                	slli	s1,s1,0x2
20405536:	94a2                	add	s1,s1,s0
20405538:	00095e63          	bgez	s2,20405554 <__call_exitprocs+0x54>
2040553c:	50b2                	lw	ra,44(sp)
2040553e:	5422                	lw	s0,40(sp)
20405540:	5492                	lw	s1,36(sp)
20405542:	5902                	lw	s2,32(sp)
20405544:	49f2                	lw	s3,28(sp)
20405546:	4a62                	lw	s4,24(sp)
20405548:	4ad2                	lw	s5,20(sp)
2040554a:	4b42                	lw	s6,16(sp)
2040554c:	4bb2                	lw	s7,12(sp)
2040554e:	4c22                	lw	s8,8(sp)
20405550:	6145                	addi	sp,sp,48
20405552:	8082                	ret
20405554:	000a0e63          	beqz	s4,20405570 <__call_exitprocs+0x70>
20405558:	00099563          	bnez	s3,20405562 <__call_exitprocs+0x62>
2040555c:	197d                	addi	s2,s2,-1
2040555e:	14f1                	addi	s1,s1,-4
20405560:	bfe1                	j	20405538 <__call_exitprocs+0x38>
20405562:	00291793          	slli	a5,s2,0x2
20405566:	97ce                	add	a5,a5,s3
20405568:	0807a783          	lw	a5,128(a5)
2040556c:	ff4798e3          	bne	a5,s4,2040555c <__call_exitprocs+0x5c>
20405570:	4058                	lw	a4,4(s0)
20405572:	40dc                	lw	a5,4(s1)
20405574:	177d                	addi	a4,a4,-1
20405576:	03271863          	bne	a4,s2,204055a6 <__call_exitprocs+0xa6>
2040557a:	01242223          	sw	s2,4(s0)
2040557e:	dff9                	beqz	a5,2040555c <__call_exitprocs+0x5c>
20405580:	00442c03          	lw	s8,4(s0)
20405584:	00098863          	beqz	s3,20405594 <__call_exitprocs+0x94>
20405588:	1009a683          	lw	a3,256(s3)
2040558c:	012b9733          	sll	a4,s7,s2
20405590:	8ef9                	and	a3,a3,a4
20405592:	ee89                	bnez	a3,204055ac <__call_exitprocs+0xac>
20405594:	9782                	jalr	a5
20405596:	4058                	lw	a4,4(s0)
20405598:	000aa783          	lw	a5,0(s5)
2040559c:	f98714e3          	bne	a4,s8,20405524 <__call_exitprocs+0x24>
204055a0:	faf40ee3          	beq	s0,a5,2040555c <__call_exitprocs+0x5c>
204055a4:	b741                	j	20405524 <__call_exitprocs+0x24>
204055a6:	0004a223          	sw	zero,4(s1)
204055aa:	bfd1                	j	2040557e <__call_exitprocs+0x7e>
204055ac:	00291693          	slli	a3,s2,0x2
204055b0:	96ce                	add	a3,a3,s3
204055b2:	428c                	lw	a1,0(a3)
204055b4:	1049a683          	lw	a3,260(s3)
204055b8:	8f75                	and	a4,a4,a3
204055ba:	e701                	bnez	a4,204055c2 <__call_exitprocs+0xc2>
204055bc:	855a                	mv	a0,s6
204055be:	9782                	jalr	a5
204055c0:	bfd9                	j	20405596 <__call_exitprocs+0x96>
204055c2:	852e                	mv	a0,a1
204055c4:	9782                	jalr	a5
204055c6:	bfc1                	j	20405596 <__call_exitprocs+0x96>

204055c8 <__udivdi3>:
__udivdi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
204055c8:	87ae                	mv	a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
204055ca:	8832                	mv	a6,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
204055cc:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
204055ce:	832a                	mv	t1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
204055d0:	20069463          	bnez	a3,204057d8 <__udivdi3+0x210>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
204055d4:	19818893          	addi	a7,gp,408 # 80001410 <__clz_tab>
204055d8:	0ac5fe63          	bgeu	a1,a2,20405694 <__udivdi3+0xcc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
204055dc:	6741                	lui	a4,0x10
204055de:	0ae67463          	bgeu	a2,a4,20405686 <__udivdi3+0xbe>
204055e2:	0ff00713          	li	a4,255
204055e6:	00c73733          	sltu	a4,a4,a2
204055ea:	070e                	slli	a4,a4,0x3
204055ec:	00e656b3          	srl	a3,a2,a4
204055f0:	98b6                	add	a7,a7,a3
204055f2:	0008c683          	lbu	a3,0(a7)
204055f6:	9736                	add	a4,a4,a3
204055f8:	02000693          	li	a3,32
204055fc:	8e99                	sub	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
204055fe:	ca99                	beqz	a3,20405614 <__udivdi3+0x4c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20405600:	00d797b3          	sll	a5,a5,a3
20405604:	00e55733          	srl	a4,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20405608:	00d61833          	sll	a6,a2,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2040560c:	00f765b3          	or	a1,a4,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20405610:	00d51333          	sll	t1,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20405614:	01085513          	srli	a0,a6,0x10
20405618:	02a5f733          	remu	a4,a1,a0
2040561c:	01081613          	slli	a2,a6,0x10
20405620:	8241                	srli	a2,a2,0x10
20405622:	01035693          	srli	a3,t1,0x10
20405626:	02a5d5b3          	divu	a1,a1,a0
2040562a:	0742                	slli	a4,a4,0x10
2040562c:	8ed9                	or	a3,a3,a4
2040562e:	02b607b3          	mul	a5,a2,a1
20405632:	872e                	mv	a4,a1
20405634:	00f6fc63          	bgeu	a3,a5,2040564c <__udivdi3+0x84>
20405638:	96c2                	add	a3,a3,a6
2040563a:	fff58713          	addi	a4,a1,-1
2040563e:	0106e763          	bltu	a3,a6,2040564c <__udivdi3+0x84>
20405642:	00f6f563          	bgeu	a3,a5,2040564c <__udivdi3+0x84>
20405646:	ffe58713          	addi	a4,a1,-2
2040564a:	96c2                	add	a3,a3,a6
2040564c:	8e9d                	sub	a3,a3,a5
2040564e:	02a6f7b3          	remu	a5,a3,a0
20405652:	0342                	slli	t1,t1,0x10
20405654:	01035313          	srli	t1,t1,0x10
20405658:	02a6d6b3          	divu	a3,a3,a0
2040565c:	07c2                	slli	a5,a5,0x10
2040565e:	0067e333          	or	t1,a5,t1
20405662:	02d605b3          	mul	a1,a2,a3
20405666:	8536                	mv	a0,a3
20405668:	00b37b63          	bgeu	t1,a1,2040567e <__udivdi3+0xb6>
2040566c:	9342                	add	t1,t1,a6
2040566e:	fff68513          	addi	a0,a3,-1
20405672:	01036663          	bltu	t1,a6,2040567e <__udivdi3+0xb6>
20405676:	00b37463          	bgeu	t1,a1,2040567e <__udivdi3+0xb6>
2040567a:	ffe68513          	addi	a0,a3,-2
2040567e:	0742                	slli	a4,a4,0x10
20405680:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20405682:	4581                	li	a1,0
20405684:	a84d                	j	20405736 <__udivdi3+0x16e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20405686:	010006b7          	lui	a3,0x1000
2040568a:	4741                	li	a4,16
2040568c:	f6d660e3          	bltu	a2,a3,204055ec <__udivdi3+0x24>
20405690:	4761                	li	a4,24
20405692:	bfa9                	j	204055ec <__udivdi3+0x24>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20405694:	e601                	bnez	a2,2040569c <__udivdi3+0xd4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20405696:	4685                	li	a3,1
20405698:	02c6d833          	divu	a6,a3,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
2040569c:	66c1                	lui	a3,0x10
2040569e:	08d87e63          	bgeu	a6,a3,2040573a <__udivdi3+0x172>
204056a2:	0ff00693          	li	a3,255
204056a6:	0106f363          	bgeu	a3,a6,204056ac <__udivdi3+0xe4>
204056aa:	4721                	li	a4,8
204056ac:	00e856b3          	srl	a3,a6,a4
204056b0:	98b6                	add	a7,a7,a3
204056b2:	0008c683          	lbu	a3,0(a7)
204056b6:	96ba                	add	a3,a3,a4
204056b8:	02000713          	li	a4,32
204056bc:	8f15                	sub	a4,a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
204056be:	e749                	bnez	a4,20405748 <__udivdi3+0x180>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
204056c0:	410787b3          	sub	a5,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
204056c4:	4585                	li	a1,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
204056c6:	01085613          	srli	a2,a6,0x10
204056ca:	01081893          	slli	a7,a6,0x10
204056ce:	0108d893          	srli	a7,a7,0x10
204056d2:	01035693          	srli	a3,t1,0x10
204056d6:	02c7f733          	remu	a4,a5,a2
204056da:	02c7d7b3          	divu	a5,a5,a2
204056de:	0742                	slli	a4,a4,0x10
204056e0:	8ed9                	or	a3,a3,a4
204056e2:	02f88533          	mul	a0,a7,a5
204056e6:	873e                	mv	a4,a5
204056e8:	00a6fc63          	bgeu	a3,a0,20405700 <__udivdi3+0x138>
204056ec:	96c2                	add	a3,a3,a6
204056ee:	fff78713          	addi	a4,a5,-1
204056f2:	0106e763          	bltu	a3,a6,20405700 <__udivdi3+0x138>
204056f6:	00a6f563          	bgeu	a3,a0,20405700 <__udivdi3+0x138>
204056fa:	ffe78713          	addi	a4,a5,-2
204056fe:	96c2                	add	a3,a3,a6
20405700:	8e89                	sub	a3,a3,a0
20405702:	02c6f7b3          	remu	a5,a3,a2
20405706:	0342                	slli	t1,t1,0x10
20405708:	01035313          	srli	t1,t1,0x10
2040570c:	02c6d6b3          	divu	a3,a3,a2
20405710:	07c2                	slli	a5,a5,0x10
20405712:	0067e333          	or	t1,a5,t1
20405716:	02d888b3          	mul	a7,a7,a3
2040571a:	8536                	mv	a0,a3
2040571c:	01137b63          	bgeu	t1,a7,20405732 <__udivdi3+0x16a>
20405720:	9342                	add	t1,t1,a6
20405722:	fff68513          	addi	a0,a3,-1 # ffff <__stack_size+0xefff>
20405726:	01036663          	bltu	t1,a6,20405732 <__udivdi3+0x16a>
2040572a:	01137463          	bgeu	t1,a7,20405732 <__udivdi3+0x16a>
2040572e:	ffe68513          	addi	a0,a3,-2
20405732:	0742                	slli	a4,a4,0x10
20405734:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20405736:	853a                	mv	a0,a4
20405738:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
2040573a:	010006b7          	lui	a3,0x1000
2040573e:	4741                	li	a4,16
20405740:	f6d866e3          	bltu	a6,a3,204056ac <__udivdi3+0xe4>
20405744:	4761                	li	a4,24
20405746:	b79d                	j	204056ac <__udivdi3+0xe4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20405748:	00e81833          	sll	a6,a6,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
2040574c:	00d7d5b3          	srl	a1,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20405750:	00e51333          	sll	t1,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20405754:	00d556b3          	srl	a3,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20405758:	01085513          	srli	a0,a6,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2040575c:	00e797b3          	sll	a5,a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20405760:	02a5f733          	remu	a4,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20405764:	00f6e8b3          	or	a7,a3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20405768:	01081793          	slli	a5,a6,0x10
2040576c:	83c1                	srli	a5,a5,0x10
2040576e:	0108d613          	srli	a2,a7,0x10
20405772:	02a5d5b3          	divu	a1,a1,a0
20405776:	0742                	slli	a4,a4,0x10
20405778:	8f51                	or	a4,a4,a2
2040577a:	02b786b3          	mul	a3,a5,a1
2040577e:	862e                	mv	a2,a1
20405780:	00d77c63          	bgeu	a4,a3,20405798 <__udivdi3+0x1d0>
20405784:	9742                	add	a4,a4,a6
20405786:	fff58613          	addi	a2,a1,-1
2040578a:	01076763          	bltu	a4,a6,20405798 <__udivdi3+0x1d0>
2040578e:	00d77563          	bgeu	a4,a3,20405798 <__udivdi3+0x1d0>
20405792:	ffe58613          	addi	a2,a1,-2
20405796:	9742                	add	a4,a4,a6
20405798:	40d706b3          	sub	a3,a4,a3
2040579c:	02a6f733          	remu	a4,a3,a0
204057a0:	08c2                	slli	a7,a7,0x10
204057a2:	0108d893          	srli	a7,a7,0x10
204057a6:	02a6d6b3          	divu	a3,a3,a0
204057aa:	0742                	slli	a4,a4,0x10
204057ac:	02d785b3          	mul	a1,a5,a3
204057b0:	011767b3          	or	a5,a4,a7
204057b4:	8736                	mv	a4,a3
204057b6:	00b7fc63          	bgeu	a5,a1,204057ce <__udivdi3+0x206>
204057ba:	97c2                	add	a5,a5,a6
204057bc:	fff68713          	addi	a4,a3,-1 # ffffff <__stack_size+0xffefff>
204057c0:	0107e763          	bltu	a5,a6,204057ce <__udivdi3+0x206>
204057c4:	00b7f563          	bgeu	a5,a1,204057ce <__udivdi3+0x206>
204057c8:	ffe68713          	addi	a4,a3,-2
204057cc:	97c2                	add	a5,a5,a6
204057ce:	8f8d                	sub	a5,a5,a1
204057d0:	01061593          	slli	a1,a2,0x10
204057d4:	8dd9                	or	a1,a1,a4
204057d6:	bdc5                	j	204056c6 <__udivdi3+0xfe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
204057d8:	14d5e063          	bltu	a1,a3,20405918 <__udivdi3+0x350>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
204057dc:	6741                	lui	a4,0x10
204057de:	02e6fc63          	bgeu	a3,a4,20405816 <__udivdi3+0x24e>
204057e2:	0ff00813          	li	a6,255
204057e6:	00d83733          	sltu	a4,a6,a3
204057ea:	070e                	slli	a4,a4,0x3
204057ec:	00e6d833          	srl	a6,a3,a4
204057f0:	19818593          	addi	a1,gp,408 # 80001410 <__clz_tab>
204057f4:	95c2                	add	a1,a1,a6
204057f6:	0005c803          	lbu	a6,0(a1)
204057fa:	02000593          	li	a1,32
204057fe:	983a                	add	a6,a6,a4
20405800:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20405804:	e185                	bnez	a1,20405824 <__udivdi3+0x25c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20405806:	4705                	li	a4,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20405808:	f2f6e7e3          	bltu	a3,a5,20405736 <__udivdi3+0x16e>
2040580c:	00c53533          	sltu	a0,a0,a2
20405810:	00154713          	xori	a4,a0,1
20405814:	b70d                	j	20405736 <__udivdi3+0x16e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20405816:	010005b7          	lui	a1,0x1000
2040581a:	4741                	li	a4,16
2040581c:	fcb6e8e3          	bltu	a3,a1,204057ec <__udivdi3+0x224>
20405820:	4761                	li	a4,24
20405822:	b7e9                	j	204057ec <__udivdi3+0x224>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20405824:	01065733          	srl	a4,a2,a6
20405828:	00b696b3          	sll	a3,a3,a1
2040582c:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2040582e:	0106de93          	srli	t4,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20405832:	0107d733          	srl	a4,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405836:	03d778b3          	remu	a7,a4,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
2040583a:	00b797b3          	sll	a5,a5,a1
2040583e:	01055833          	srl	a6,a0,a6
20405842:	00f86333          	or	t1,a6,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405846:	01069793          	slli	a5,a3,0x10
2040584a:	83c1                	srli	a5,a5,0x10
2040584c:	01035813          	srli	a6,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20405850:	00b61633          	sll	a2,a2,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405854:	03d75733          	divu	a4,a4,t4
20405858:	08c2                	slli	a7,a7,0x10
2040585a:	0108e833          	or	a6,a7,a6
2040585e:	02e78f33          	mul	t5,a5,a4
20405862:	8e3a                	mv	t3,a4
20405864:	01e87c63          	bgeu	a6,t5,2040587c <__udivdi3+0x2b4>
20405868:	9836                	add	a6,a6,a3
2040586a:	fff70e13          	addi	t3,a4,-1 # ffff <__stack_size+0xefff>
2040586e:	00d86763          	bltu	a6,a3,2040587c <__udivdi3+0x2b4>
20405872:	01e87563          	bgeu	a6,t5,2040587c <__udivdi3+0x2b4>
20405876:	ffe70e13          	addi	t3,a4,-2
2040587a:	9836                	add	a6,a6,a3
2040587c:	41e80833          	sub	a6,a6,t5
20405880:	03d878b3          	remu	a7,a6,t4
20405884:	03d85833          	divu	a6,a6,t4
20405888:	08c2                	slli	a7,a7,0x10
2040588a:	03078eb3          	mul	t4,a5,a6
2040588e:	01031793          	slli	a5,t1,0x10
20405892:	83c1                	srli	a5,a5,0x10
20405894:	00f8e7b3          	or	a5,a7,a5
20405898:	8742                	mv	a4,a6
2040589a:	01d7fc63          	bgeu	a5,t4,204058b2 <__udivdi3+0x2ea>
2040589e:	97b6                	add	a5,a5,a3
204058a0:	fff80713          	addi	a4,a6,-1
204058a4:	00d7e763          	bltu	a5,a3,204058b2 <__udivdi3+0x2ea>
204058a8:	01d7f563          	bgeu	a5,t4,204058b2 <__udivdi3+0x2ea>
204058ac:	ffe80713          	addi	a4,a6,-2
204058b0:	97b6                	add	a5,a5,a3
204058b2:	0e42                	slli	t3,t3,0x10
204058b4:	41d787b3          	sub	a5,a5,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204058b8:	6ec1                	lui	t4,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204058ba:	00ee6733          	or	a4,t3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204058be:	fffe8813          	addi	a6,t4,-1 # ffff <__stack_size+0xefff>
204058c2:	01077333          	and	t1,a4,a6
204058c6:	01075893          	srli	a7,a4,0x10
204058ca:	01067833          	and	a6,a2,a6
204058ce:	8241                	srli	a2,a2,0x10
204058d0:	03030e33          	mul	t3,t1,a6
204058d4:	03088833          	mul	a6,a7,a6
204058d8:	010e5693          	srli	a3,t3,0x10
204058dc:	02c30333          	mul	t1,t1,a2
204058e0:	9342                	add	t1,t1,a6
204058e2:	969a                	add	a3,a3,t1
204058e4:	02c888b3          	mul	a7,a7,a2
204058e8:	0106f363          	bgeu	a3,a6,204058ee <__udivdi3+0x326>
204058ec:	98f6                	add	a7,a7,t4
204058ee:	0106d613          	srli	a2,a3,0x10
204058f2:	98b2                	add	a7,a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
204058f4:	0317e063          	bltu	a5,a7,20405914 <__udivdi3+0x34c>
204058f8:	d91795e3          	bne	a5,a7,20405682 <__udivdi3+0xba>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204058fc:	67c1                	lui	a5,0x10
204058fe:	17fd                	addi	a5,a5,-1
20405900:	8efd                	and	a3,a3,a5
20405902:	06c2                	slli	a3,a3,0x10
20405904:	00fe7e33          	and	t3,t3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20405908:	00b51533          	sll	a0,a0,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040590c:	96f2                	add	a3,a3,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
2040590e:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20405910:	e2d573e3          	bgeu	a0,a3,20405736 <__udivdi3+0x16e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
20405914:	177d                	addi	a4,a4,-1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20405916:	b3b5                	j	20405682 <__udivdi3+0xba>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
20405918:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
2040591a:	4701                	li	a4,0
2040591c:	bd29                	j	20405736 <__udivdi3+0x16e>

2040591e <__umoddi3>:
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
2040591e:	88b2                	mv	a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20405920:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20405922:	87aa                	mv	a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
20405924:	882e                	mv	a6,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20405926:	1c069663          	bnez	a3,20405af2 <__umoddi3+0x1d4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
2040592a:	19818693          	addi	a3,gp,408 # 80001410 <__clz_tab>
2040592e:	0ac5f863          	bgeu	a1,a2,204059de <__umoddi3+0xc0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20405932:	6341                	lui	t1,0x10
20405934:	08667e63          	bgeu	a2,t1,204059d0 <__umoddi3+0xb2>
20405938:	0ff00313          	li	t1,255
2040593c:	00c37363          	bgeu	t1,a2,20405942 <__umoddi3+0x24>
20405940:	4721                	li	a4,8
20405942:	00e65333          	srl	t1,a2,a4
20405946:	969a                	add	a3,a3,t1
20405948:	0006ce03          	lbu	t3,0(a3)
2040594c:	02000313          	li	t1,32
20405950:	9e3a                	add	t3,t3,a4
20405952:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20405956:	00030c63          	beqz	t1,2040596e <__umoddi3+0x50>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2040595a:	006595b3          	sll	a1,a1,t1
2040595e:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20405962:	006618b3          	sll	a7,a2,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20405966:	00be6833          	or	a6,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2040596a:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
2040596e:	0108d613          	srli	a2,a7,0x10
20405972:	02c87733          	remu	a4,a6,a2
20405976:	01089513          	slli	a0,a7,0x10
2040597a:	8141                	srli	a0,a0,0x10
2040597c:	0107d693          	srli	a3,a5,0x10
20405980:	02c85833          	divu	a6,a6,a2
20405984:	0742                	slli	a4,a4,0x10
20405986:	8ed9                	or	a3,a3,a4
20405988:	03050833          	mul	a6,a0,a6
2040598c:	0106f863          	bgeu	a3,a6,2040599c <__umoddi3+0x7e>
20405990:	96c6                	add	a3,a3,a7
20405992:	0116e563          	bltu	a3,a7,2040599c <__umoddi3+0x7e>
20405996:	0106f363          	bgeu	a3,a6,2040599c <__umoddi3+0x7e>
2040599a:	96c6                	add	a3,a3,a7
2040599c:	410686b3          	sub	a3,a3,a6
204059a0:	02c6f733          	remu	a4,a3,a2
204059a4:	07c2                	slli	a5,a5,0x10
204059a6:	83c1                	srli	a5,a5,0x10
204059a8:	02c6d6b3          	divu	a3,a3,a2
204059ac:	02d506b3          	mul	a3,a0,a3
204059b0:	01071513          	slli	a0,a4,0x10
204059b4:	8fc9                	or	a5,a5,a0
204059b6:	00d7f863          	bgeu	a5,a3,204059c6 <__umoddi3+0xa8>
204059ba:	97c6                	add	a5,a5,a7
204059bc:	0117e563          	bltu	a5,a7,204059c6 <__umoddi3+0xa8>
204059c0:	00d7f363          	bgeu	a5,a3,204059c6 <__umoddi3+0xa8>
204059c4:	97c6                	add	a5,a5,a7
204059c6:	8f95                	sub	a5,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
204059c8:	0067d533          	srl	a0,a5,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
204059cc:	4581                	li	a1,0
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
204059ce:	8082                	ret
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
204059d0:	01000337          	lui	t1,0x1000
204059d4:	4741                	li	a4,16
204059d6:	f66666e3          	bltu	a2,t1,20405942 <__umoddi3+0x24>
204059da:	4761                	li	a4,24
204059dc:	b79d                	j	20405942 <__umoddi3+0x24>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
204059de:	e601                	bnez	a2,204059e6 <__umoddi3+0xc8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
204059e0:	4605                	li	a2,1
204059e2:	031658b3          	divu	a7,a2,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
204059e6:	6641                	lui	a2,0x10
204059e8:	08c8f363          	bgeu	a7,a2,20405a6e <__umoddi3+0x150>
204059ec:	0ff00613          	li	a2,255
204059f0:	01167363          	bgeu	a2,a7,204059f6 <__umoddi3+0xd8>
204059f4:	4721                	li	a4,8
204059f6:	00e8d633          	srl	a2,a7,a4
204059fa:	96b2                	add	a3,a3,a2
204059fc:	0006ce03          	lbu	t3,0(a3)
20405a00:	02000313          	li	t1,32
20405a04:	9e3a                	add	t3,t3,a4
20405a06:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20405a0a:	06031963          	bnez	t1,20405a7c <__umoddi3+0x15e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20405a0e:	411585b3          	sub	a1,a1,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20405a12:	0108d713          	srli	a4,a7,0x10
20405a16:	01089513          	slli	a0,a7,0x10
20405a1a:	8141                	srli	a0,a0,0x10
20405a1c:	0107d613          	srli	a2,a5,0x10
20405a20:	02e5f6b3          	remu	a3,a1,a4
20405a24:	02e5d5b3          	divu	a1,a1,a4
20405a28:	06c2                	slli	a3,a3,0x10
20405a2a:	8ed1                	or	a3,a3,a2
20405a2c:	02b505b3          	mul	a1,a0,a1
20405a30:	00b6f863          	bgeu	a3,a1,20405a40 <__umoddi3+0x122>
20405a34:	96c6                	add	a3,a3,a7
20405a36:	0116e563          	bltu	a3,a7,20405a40 <__umoddi3+0x122>
20405a3a:	00b6f363          	bgeu	a3,a1,20405a40 <__umoddi3+0x122>
20405a3e:	96c6                	add	a3,a3,a7
20405a40:	40b685b3          	sub	a1,a3,a1
20405a44:	02e5f6b3          	remu	a3,a1,a4
20405a48:	07c2                	slli	a5,a5,0x10
20405a4a:	83c1                	srli	a5,a5,0x10
20405a4c:	02e5d5b3          	divu	a1,a1,a4
20405a50:	02b505b3          	mul	a1,a0,a1
20405a54:	01069513          	slli	a0,a3,0x10
20405a58:	8fc9                	or	a5,a5,a0
20405a5a:	00b7f863          	bgeu	a5,a1,20405a6a <__umoddi3+0x14c>
20405a5e:	97c6                	add	a5,a5,a7
20405a60:	0117e563          	bltu	a5,a7,20405a6a <__umoddi3+0x14c>
20405a64:	00b7f363          	bgeu	a5,a1,20405a6a <__umoddi3+0x14c>
20405a68:	97c6                	add	a5,a5,a7
20405a6a:	8f8d                	sub	a5,a5,a1
20405a6c:	bfb1                	j	204059c8 <__umoddi3+0xaa>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20405a6e:	01000637          	lui	a2,0x1000
20405a72:	4741                	li	a4,16
20405a74:	f8c8e1e3          	bltu	a7,a2,204059f6 <__umoddi3+0xd8>
20405a78:	4761                	li	a4,24
20405a7a:	bfb5                	j	204059f6 <__umoddi3+0xd8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20405a7c:	006898b3          	sll	a7,a7,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20405a80:	01c5d733          	srl	a4,a1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20405a84:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20405a88:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20405a8c:	0108d513          	srli	a0,a7,0x10
20405a90:	02a776b3          	remu	a3,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20405a94:	006595b3          	sll	a1,a1,t1
20405a98:	00be6e33          	or	t3,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20405a9c:	01089593          	slli	a1,a7,0x10
20405aa0:	81c1                	srli	a1,a1,0x10
20405aa2:	010e5613          	srli	a2,t3,0x10
20405aa6:	02a75733          	divu	a4,a4,a0
20405aaa:	06c2                	slli	a3,a3,0x10
20405aac:	8ed1                	or	a3,a3,a2
20405aae:	02e58733          	mul	a4,a1,a4
20405ab2:	00e6f863          	bgeu	a3,a4,20405ac2 <__umoddi3+0x1a4>
20405ab6:	96c6                	add	a3,a3,a7
20405ab8:	0116e563          	bltu	a3,a7,20405ac2 <__umoddi3+0x1a4>
20405abc:	00e6f363          	bgeu	a3,a4,20405ac2 <__umoddi3+0x1a4>
20405ac0:	96c6                	add	a3,a3,a7
20405ac2:	40e68633          	sub	a2,a3,a4
20405ac6:	02a676b3          	remu	a3,a2,a0
20405aca:	0e42                	slli	t3,t3,0x10
20405acc:	010e5e13          	srli	t3,t3,0x10
20405ad0:	02a65633          	divu	a2,a2,a0
20405ad4:	06c2                	slli	a3,a3,0x10
20405ad6:	02c58633          	mul	a2,a1,a2
20405ada:	01c6e5b3          	or	a1,a3,t3
20405ade:	00c5f863          	bgeu	a1,a2,20405aee <__umoddi3+0x1d0>
20405ae2:	95c6                	add	a1,a1,a7
20405ae4:	0115e563          	bltu	a1,a7,20405aee <__umoddi3+0x1d0>
20405ae8:	00c5f363          	bgeu	a1,a2,20405aee <__umoddi3+0x1d0>
20405aec:	95c6                	add	a1,a1,a7
20405aee:	8d91                	sub	a1,a1,a2
20405af0:	b70d                	j	20405a12 <__umoddi3+0xf4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20405af2:	ecd5eee3          	bltu	a1,a3,204059ce <__umoddi3+0xb0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20405af6:	6741                	lui	a4,0x10
20405af8:	04e6f363          	bgeu	a3,a4,20405b3e <__umoddi3+0x220>
20405afc:	0ff00e93          	li	t4,255
20405b00:	00deb733          	sltu	a4,t4,a3
20405b04:	070e                	slli	a4,a4,0x3
20405b06:	00e6d333          	srl	t1,a3,a4
20405b0a:	19818893          	addi	a7,gp,408 # 80001410 <__clz_tab>
20405b0e:	989a                	add	a7,a7,t1
20405b10:	0008ce83          	lbu	t4,0(a7)
20405b14:	02000e13          	li	t3,32
20405b18:	9eba                	add	t4,t4,a4
20405b1a:	41de0e33          	sub	t3,t3,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20405b1e:	020e1763          	bnez	t3,20405b4c <__umoddi3+0x22e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20405b22:	00b6e463          	bltu	a3,a1,20405b2a <__umoddi3+0x20c>
20405b26:	00c56963          	bltu	a0,a2,20405b38 <__umoddi3+0x21a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20405b2a:	40c507b3          	sub	a5,a0,a2
20405b2e:	8d95                	sub	a1,a1,a3
20405b30:	00f53533          	sltu	a0,a0,a5
20405b34:	40a58833          	sub	a6,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
20405b38:	853e                	mv	a0,a5
20405b3a:	85c2                	mv	a1,a6
20405b3c:	bd49                	j	204059ce <__umoddi3+0xb0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20405b3e:	010008b7          	lui	a7,0x1000
20405b42:	4741                	li	a4,16
20405b44:	fd16e1e3          	bltu	a3,a7,20405b06 <__umoddi3+0x1e8>
20405b48:	4761                	li	a4,24
20405b4a:	bf75                	j	20405b06 <__umoddi3+0x1e8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20405b4c:	01d65733          	srl	a4,a2,t4
20405b50:	01c696b3          	sll	a3,a3,t3
20405b54:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405b56:	0106d813          	srli	a6,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20405b5a:	01d5d733          	srl	a4,a1,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405b5e:	03077333          	remu	t1,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20405b62:	01c595b3          	sll	a1,a1,t3
20405b66:	01d557b3          	srl	a5,a0,t4
20405b6a:	8fcd                	or	a5,a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405b6c:	01069593          	slli	a1,a3,0x10
20405b70:	81c1                	srli	a1,a1,0x10
20405b72:	0107d893          	srli	a7,a5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20405b76:	01c61633          	sll	a2,a2,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20405b7a:	01c51533          	sll	a0,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405b7e:	03075733          	divu	a4,a4,a6
20405b82:	0342                	slli	t1,t1,0x10
20405b84:	011368b3          	or	a7,t1,a7
20405b88:	02e58f33          	mul	t5,a1,a4
20405b8c:	833a                	mv	t1,a4
20405b8e:	01e8fc63          	bgeu	a7,t5,20405ba6 <__umoddi3+0x288>
20405b92:	98b6                	add	a7,a7,a3
20405b94:	fff70313          	addi	t1,a4,-1 # ffff <__stack_size+0xefff>
20405b98:	00d8e763          	bltu	a7,a3,20405ba6 <__umoddi3+0x288>
20405b9c:	01e8f563          	bgeu	a7,t5,20405ba6 <__umoddi3+0x288>
20405ba0:	ffe70313          	addi	t1,a4,-2
20405ba4:	98b6                	add	a7,a7,a3
20405ba6:	41e888b3          	sub	a7,a7,t5
20405baa:	0308ff33          	remu	t5,a7,a6
20405bae:	0308d8b3          	divu	a7,a7,a6
20405bb2:	0f42                	slli	t5,t5,0x10
20405bb4:	03158833          	mul	a6,a1,a7
20405bb8:	01079593          	slli	a1,a5,0x10
20405bbc:	81c1                	srli	a1,a1,0x10
20405bbe:	00bf65b3          	or	a1,t5,a1
20405bc2:	87c6                	mv	a5,a7
20405bc4:	0105fc63          	bgeu	a1,a6,20405bdc <__umoddi3+0x2be>
20405bc8:	95b6                	add	a1,a1,a3
20405bca:	fff88793          	addi	a5,a7,-1 # ffffff <__stack_size+0xffefff>
20405bce:	00d5e763          	bltu	a1,a3,20405bdc <__umoddi3+0x2be>
20405bd2:	0105f563          	bgeu	a1,a6,20405bdc <__umoddi3+0x2be>
20405bd6:	ffe88793          	addi	a5,a7,-2
20405bda:	95b6                	add	a1,a1,a3
20405bdc:	0342                	slli	t1,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20405bde:	6f41                	lui	t5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405be0:	00f36333          	or	t1,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20405be4:	ffff0793          	addi	a5,t5,-1 # ffff <__stack_size+0xefff>
20405be8:	00f378b3          	and	a7,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20405bec:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20405bf0:	01035313          	srli	t1,t1,0x10
20405bf4:	01065813          	srli	a6,a2,0x10
20405bf8:	8ff1                	and	a5,a5,a2
20405bfa:	02f88733          	mul	a4,a7,a5
20405bfe:	02f307b3          	mul	a5,t1,a5
20405c02:	030888b3          	mul	a7,a7,a6
20405c06:	03030333          	mul	t1,t1,a6
20405c0a:	98be                	add	a7,a7,a5
20405c0c:	01075813          	srli	a6,a4,0x10
20405c10:	9846                	add	a6,a6,a7
20405c12:	00f87363          	bgeu	a6,a5,20405c18 <__umoddi3+0x2fa>
20405c16:	937a                	add	t1,t1,t5
20405c18:	01085793          	srli	a5,a6,0x10
20405c1c:	933e                	add	t1,t1,a5
20405c1e:	67c1                	lui	a5,0x10
20405c20:	17fd                	addi	a5,a5,-1
20405c22:	00f87833          	and	a6,a6,a5
20405c26:	0842                	slli	a6,a6,0x10
20405c28:	8f7d                	and	a4,a4,a5
20405c2a:	9742                	add	a4,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20405c2c:	0065e663          	bltu	a1,t1,20405c38 <__umoddi3+0x31a>
20405c30:	00659c63          	bne	a1,t1,20405c48 <__umoddi3+0x32a>
20405c34:	00e57a63          	bgeu	a0,a4,20405c48 <__umoddi3+0x32a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20405c38:	40c70633          	sub	a2,a4,a2
20405c3c:	00c73733          	sltu	a4,a4,a2
20405c40:	9736                	add	a4,a4,a3
20405c42:	40e30333          	sub	t1,t1,a4
20405c46:	8732                	mv	a4,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
20405c48:	40e50733          	sub	a4,a0,a4
20405c4c:	00e53533          	sltu	a0,a0,a4
20405c50:	406585b3          	sub	a1,a1,t1
20405c54:	8d89                	sub	a1,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
20405c56:	01d597b3          	sll	a5,a1,t4
20405c5a:	01c75733          	srl	a4,a4,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
20405c5e:	00e7e533          	or	a0,a5,a4
20405c62:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp03--toolchain-only-package--scratch-carsteng/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
20405c66:	b3a5                	j	204059ce <__umoddi3+0xb0>

20405c68 <metal_cpu_get_timer>:
metal_cpu_get_timer():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:73
 * Get the value of the cycle count timer for a given CPU
 *
 * @param cpu The CPU device handle
 * @return The value of the CPU cycle count timer
 */
__inline__ unsigned long long metal_cpu_get_timer(struct metal_cpu *cpu) {
20405c68:	1101                	addi	sp,sp,-32
20405c6a:	ce06                	sw	ra,28(sp)
20405c6c:	cc22                	sw	s0,24(sp)
20405c6e:	1000                	addi	s0,sp,32
20405c70:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:74
    return cpu->vtable->mcycle_get(cpu);
20405c74:	fec42783          	lw	a5,-20(s0)
20405c78:	439c                	lw	a5,0(a5)
20405c7a:	439c                	lw	a5,0(a5)
20405c7c:	fec42503          	lw	a0,-20(s0)
20405c80:	9782                	jalr	a5
20405c82:	87aa                	mv	a5,a0
20405c84:	882e                	mv	a6,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:75
}
20405c86:	853e                	mv	a0,a5
20405c88:	85c2                	mv	a1,a6
20405c8a:	40f2                	lw	ra,28(sp)
20405c8c:	4462                	lw	s0,24(sp)
20405c8e:	6105                	addi	sp,sp,32
20405c90:	8082                	ret

20405c92 <metal_cpu_get_timebase>:
metal_cpu_get_timebase():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:84
 * Get the value of the timebase of the cycle count timer
 *
 * @param cpu The CPU device handle
 * @return The value of the cycle count timer timebase
 */
__inline__ unsigned long long metal_cpu_get_timebase(struct metal_cpu *cpu) {
20405c92:	1101                	addi	sp,sp,-32
20405c94:	ce06                	sw	ra,28(sp)
20405c96:	cc22                	sw	s0,24(sp)
20405c98:	1000                	addi	s0,sp,32
20405c9a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:85
    return cpu->vtable->timebase_get(cpu);
20405c9e:	fec42783          	lw	a5,-20(s0)
20405ca2:	439c                	lw	a5,0(a5)
20405ca4:	43dc                	lw	a5,4(a5)
20405ca6:	fec42503          	lw	a0,-20(s0)
20405caa:	9782                	jalr	a5
20405cac:	87aa                	mv	a5,a0
20405cae:	882e                	mv	a6,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:86
}
20405cb0:	853e                	mv	a0,a5
20405cb2:	85c2                	mv	a1,a6
20405cb4:	40f2                	lw	ra,28(sp)
20405cb6:	4462                	lw	s0,24(sp)
20405cb8:	6105                	addi	sp,sp,32
20405cba:	8082                	ret

20405cbc <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20405cbc:	1101                	addi	sp,sp,-32
20405cbe:	ce06                	sw	ra,28(sp)
20405cc0:	cc22                	sw	s0,24(sp)
20405cc2:	1000                	addi	s0,sp,32
20405cc4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20405cc8:	fec42783          	lw	a5,-20(s0)
20405ccc:	439c                	lw	a5,0(a5)
20405cce:	57dc                	lw	a5,44(a5)
20405cd0:	fec42503          	lw	a0,-20(s0)
20405cd4:	9782                	jalr	a5
20405cd6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:226
}
20405cd8:	853e                	mv	a0,a5
20405cda:	40f2                	lw	ra,28(sp)
20405cdc:	4462                	lw	s0,24(sp)
20405cde:	6105                	addi	sp,sp,32
20405ce0:	8082                	ret

20405ce2 <metal_cpu_get>:
metal_cpu_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20405ce2:	1101                	addi	sp,sp,-32
20405ce4:	ce22                	sw	s0,28(sp)
20405ce6:	1000                	addi	s0,sp,32
20405ce8:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20405cec:	fec42783          	lw	a5,-20(s0)
20405cf0:	eb89                	bnez	a5,20405d02 <metal_cpu_get+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20405cf2:	fec42703          	lw	a4,-20(s0)
20405cf6:	070a                	slli	a4,a4,0x2
20405cf8:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20405cfc:	97ba                	add	a5,a5,a4
20405cfe:	439c                	lw	a5,0(a5)
20405d00:	a011                	j	20405d04 <metal_cpu_get+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:11
    }
    return NULL;
20405d02:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:12
}
20405d04:	853e                	mv	a0,a5
20405d06:	4472                	lw	s0,28(sp)
20405d08:	6105                	addi	sp,sp,32
20405d0a:	8082                	ret

20405d0c <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20405d0c:	1101                	addi	sp,sp,-32
20405d0e:	ce22                	sw	s0,28(sp)
20405d10:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20405d12:	f14027f3          	csrr	a5,mhartid
20405d16:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:18
    return mhartid;
20405d1a:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:20
#endif
}
20405d1e:	853e                	mv	a0,a5
20405d20:	4472                	lw	s0,28(sp)
20405d22:	6105                	addi	sp,sp,32
20405d24:	8082                	ret

20405d26 <metal_init>:
metal_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20405d26:	1101                	addi	sp,sp,-32
20405d28:	ce06                	sw	ra,28(sp)
20405d2a:	cc22                	sw	s0,24(sp)
20405d2c:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20405d2e:	800027b7          	lui	a5,0x80002
20405d32:	0807a783          	lw	a5,128(a5) # 80002080 <metal_segment_heap_target_end+0xffffe760>
20405d36:	efa9                	bnez	a5,20405d90 <metal_init+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20405d38:	800027b7          	lui	a5,0x80002
20405d3c:	4705                	li	a4,1
20405d3e:	08e7a023          	sw	a4,128(a5) # 80002080 <metal_segment_heap_target_end+0xffffe760>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20405d42:	204007b7          	lui	a5,0x20400
20405d46:	2f478713          	addi	a4,a5,756 # 204002f4 <metal_constructors_end>
20405d4a:	204007b7          	lui	a5,0x20400
20405d4e:	2e878793          	addi	a5,a5,744 # 204002e8 <_metal_tty_init_ptr>
20405d52:	04e7f163          	bgeu	a5,a4,20405d94 <metal_init+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20405d56:	204007b7          	lui	a5,0x20400
20405d5a:	2e878793          	addi	a5,a5,744 # 204002e8 <_metal_tty_init_ptr>
20405d5e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20405d62:	a831                	j	20405d7e <metal_init+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20405d64:	fec42783          	lw	a5,-20(s0)
20405d68:	439c                	lw	a5,0(a5)
20405d6a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:33

        func();
20405d6e:	fe842783          	lw	a5,-24(s0)
20405d72:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:35

        funcptr += 1;
20405d74:	fec42783          	lw	a5,-20(s0)
20405d78:	0791                	addi	a5,a5,4
20405d7a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20405d7e:	fec42703          	lw	a4,-20(s0)
20405d82:	204007b7          	lui	a5,0x20400
20405d86:	2f478793          	addi	a5,a5,756 # 204002f4 <metal_constructors_end>
20405d8a:	fcf71de3          	bne	a4,a5,20405d64 <metal_init+0x3e>
20405d8e:	a021                	j	20405d96 <metal_init+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:21
        return;
20405d90:	0001                	nop
20405d92:	a011                	j	20405d96 <metal_init+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:26
        return;
20405d94:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:37
    }
}
20405d96:	40f2                	lw	ra,28(sp)
20405d98:	4462                	lw	s0,24(sp)
20405d9a:	6105                	addi	sp,sp,32
20405d9c:	8082                	ret

20405d9e <metal_fini>:
metal_fini():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:39

void metal_fini(void) {
20405d9e:	1101                	addi	sp,sp,-32
20405da0:	ce06                	sw	ra,28(sp)
20405da2:	cc22                	sw	s0,24(sp)
20405da4:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20405da6:	800027b7          	lui	a5,0x80002
20405daa:	0847a783          	lw	a5,132(a5) # 80002084 <metal_segment_heap_target_end+0xffffe764>
20405dae:	efa9                	bnez	a5,20405e08 <metal_fini+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20405db0:	800027b7          	lui	a5,0x80002
20405db4:	4705                	li	a4,1
20405db6:	08e7a223          	sw	a4,132(a5) # 80002084 <metal_segment_heap_target_end+0xffffe764>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20405dba:	204007b7          	lui	a5,0x20400
20405dbe:	2f878713          	addi	a4,a5,760 # 204002f8 <__fini_array_end>
20405dc2:	204007b7          	lui	a5,0x20400
20405dc6:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
20405dca:	04e7f163          	bgeu	a5,a4,20405e0c <metal_fini+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20405dce:	204007b7          	lui	a5,0x20400
20405dd2:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
20405dd6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20405dda:	a831                	j	20405df6 <metal_fini+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20405ddc:	fec42783          	lw	a5,-20(s0)
20405de0:	439c                	lw	a5,0(a5)
20405de2:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:55

        func();
20405de6:	fe842783          	lw	a5,-24(s0)
20405dea:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:57

        funcptr += 1;
20405dec:	fec42783          	lw	a5,-20(s0)
20405df0:	0791                	addi	a5,a5,4
20405df2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20405df6:	fec42703          	lw	a4,-20(s0)
20405dfa:	204007b7          	lui	a5,0x20400
20405dfe:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
20405e02:	fcf71de3          	bne	a4,a5,20405ddc <metal_fini+0x3e>
20405e06:	a021                	j	20405e0e <metal_fini+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:43
        return;
20405e08:	0001                	nop
20405e0a:	a011                	j	20405e0e <metal_fini+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:48
        return;
20405e0c:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:59
    }
}
20405e0e:	40f2                	lw	ra,28(sp)
20405e10:	4462                	lw	s0,24(sp)
20405e12:	6105                	addi	sp,sp,32
20405e14:	8082                	ret

20405e16 <metal_init_run>:
metal_init_run():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20405e16:	1141                	addi	sp,sp,-16
20405e18:	c606                	sw	ra,12(sp)
20405e1a:	c422                	sw	s0,8(sp)
20405e1c:	0800                	addi	s0,sp,16
20405e1e:	3721                	jal	20405d26 <metal_init>
20405e20:	0001                	nop
20405e22:	40b2                	lw	ra,12(sp)
20405e24:	4422                	lw	s0,8(sp)
20405e26:	0141                	addi	sp,sp,16
20405e28:	8082                	ret

20405e2a <metal_fini_run>:
metal_fini_run():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20405e2a:	1141                	addi	sp,sp,-16
20405e2c:	c606                	sw	ra,12(sp)
20405e2e:	c422                	sw	s0,8(sp)
20405e30:	0800                	addi	s0,sp,16
20405e32:	37b5                	jal	20405d9e <metal_fini>
20405e34:	0001                	nop
20405e36:	40b2                	lw	ra,12(sp)
20405e38:	4422                	lw	s0,8(sp)
20405e3a:	0141                	addi	sp,sp,16
20405e3c:	8082                	ret

20405e3e <metal_timer_get_cyclecount>:
metal_timer_get_cyclecount():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:15
#endif

#if defined(__METAL_DT_MAX_HARTS)
/* This implementation serves as a small shim that interfaces with the first
 * timer on a system. */
int metal_timer_get_cyclecount(int hartid, unsigned long long *mcc) {
20405e3e:	7179                	addi	sp,sp,-48
20405e40:	d606                	sw	ra,44(sp)
20405e42:	d422                	sw	s0,40(sp)
20405e44:	1800                	addi	s0,sp,48
20405e46:	fca42e23          	sw	a0,-36(s0)
20405e4a:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:16
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20405e4e:	fdc42783          	lw	a5,-36(s0)
20405e52:	853e                	mv	a0,a5
20405e54:	3579                	jal	20405ce2 <metal_cpu_get>
20405e56:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:18

    if (cpu) {
20405e5a:	fec42783          	lw	a5,-20(s0)
20405e5e:	cf89                	beqz	a5,20405e78 <metal_timer_get_cyclecount+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:19
        *mcc = metal_cpu_get_timer(cpu);
20405e60:	fec42503          	lw	a0,-20(s0)
20405e64:	3511                	jal	20405c68 <metal_cpu_get_timer>
20405e66:	87aa                	mv	a5,a0
20405e68:	882e                	mv	a6,a1
20405e6a:	fd842703          	lw	a4,-40(s0)
20405e6e:	c31c                	sw	a5,0(a4)
20405e70:	01072223          	sw	a6,4(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:20
        return 0;
20405e74:	4781                	li	a5,0
20405e76:	a011                	j	20405e7a <metal_timer_get_cyclecount+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:22
    }
    return -1;
20405e78:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:23
}
20405e7a:	853e                	mv	a0,a5
20405e7c:	50b2                	lw	ra,44(sp)
20405e7e:	5422                	lw	s0,40(sp)
20405e80:	6145                	addi	sp,sp,48
20405e82:	8082                	ret

20405e84 <metal_timer_get_timebase_frequency>:
metal_timer_get_timebase_frequency():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:26

int metal_timer_get_timebase_frequency(int hartid,
                                       unsigned long long *timebase) {
20405e84:	7179                	addi	sp,sp,-48
20405e86:	d606                	sw	ra,44(sp)
20405e88:	d422                	sw	s0,40(sp)
20405e8a:	1800                	addi	s0,sp,48
20405e8c:	fca42e23          	sw	a0,-36(s0)
20405e90:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:27
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20405e94:	fdc42783          	lw	a5,-36(s0)
20405e98:	853e                	mv	a0,a5
20405e9a:	35a1                	jal	20405ce2 <metal_cpu_get>
20405e9c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:29

    if (cpu) {
20405ea0:	fec42783          	lw	a5,-20(s0)
20405ea4:	cf89                	beqz	a5,20405ebe <metal_timer_get_timebase_frequency+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:30
        *timebase = metal_cpu_get_timebase(cpu);
20405ea6:	fec42503          	lw	a0,-20(s0)
20405eaa:	33e5                	jal	20405c92 <metal_cpu_get_timebase>
20405eac:	87aa                	mv	a5,a0
20405eae:	882e                	mv	a6,a1
20405eb0:	fd842703          	lw	a4,-40(s0)
20405eb4:	c31c                	sw	a5,0(a4)
20405eb6:	01072223          	sw	a6,4(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:31
        return 0;
20405eba:	4781                	li	a5,0
20405ebc:	a011                	j	20405ec0 <metal_timer_get_timebase_frequency+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:33
    }
    return -1;
20405ebe:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/timer.c:34
}
20405ec0:	853e                	mv	a0,a5
20405ec2:	50b2                	lw	ra,44(sp)
20405ec4:	5422                	lw	s0,40(sp)
20405ec6:	6145                	addi	sp,sp,48
20405ec8:	8082                	ret

20405eca <metal_tty_putc>:
metal_tty_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20405eca:	1101                	addi	sp,sp,-32
20405ecc:	ce06                	sw	ra,28(sp)
20405ece:	cc22                	sw	s0,24(sp)
20405ed0:	1000                	addi	s0,sp,32
20405ed2:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20405ed6:	fec42583          	lw	a1,-20(s0)
20405eda:	800017b7          	lui	a5,0x80001
20405ede:	a3078513          	addi	a0,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
20405ee2:	282d                	jal	20405f1c <metal_uart_putc>
20405ee4:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:14
}
20405ee6:	853e                	mv	a0,a5
20405ee8:	40f2                	lw	ra,28(sp)
20405eea:	4462                	lw	s0,24(sp)
20405eec:	6105                	addi	sp,sp,32
20405eee:	8082                	ret

20405ef0 <metal_uart_init>:
metal_uart_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20405ef0:	1101                	addi	sp,sp,-32
20405ef2:	ce06                	sw	ra,28(sp)
20405ef4:	cc22                	sw	s0,24(sp)
20405ef6:	1000                	addi	s0,sp,32
20405ef8:	fea42623          	sw	a0,-20(s0)
20405efc:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20405f00:	fec42783          	lw	a5,-20(s0)
20405f04:	439c                	lw	a5,0(a5)
20405f06:	439c                	lw	a5,0(a5)
20405f08:	fe842583          	lw	a1,-24(s0)
20405f0c:	fec42503          	lw	a0,-20(s0)
20405f10:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:61
}
20405f12:	0001                	nop
20405f14:	40f2                	lw	ra,28(sp)
20405f16:	4462                	lw	s0,24(sp)
20405f18:	6105                	addi	sp,sp,32
20405f1a:	8082                	ret

20405f1c <metal_uart_putc>:
metal_uart_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20405f1c:	1101                	addi	sp,sp,-32
20405f1e:	ce06                	sw	ra,28(sp)
20405f20:	cc22                	sw	s0,24(sp)
20405f22:	1000                	addi	s0,sp,32
20405f24:	fea42623          	sw	a0,-20(s0)
20405f28:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20405f2c:	fec42783          	lw	a5,-20(s0)
20405f30:	439c                	lw	a5,0(a5)
20405f32:	43dc                	lw	a5,4(a5)
20405f34:	fe842583          	lw	a1,-24(s0)
20405f38:	fec42503          	lw	a0,-20(s0)
20405f3c:	9782                	jalr	a5
20405f3e:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:71
}
20405f40:	853e                	mv	a0,a5
20405f42:	40f2                	lw	ra,28(sp)
20405f44:	4462                	lw	s0,24(sp)
20405f46:	6105                	addi	sp,sp,32
20405f48:	8082                	ret

20405f4a <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20405f4a:	1101                	addi	sp,sp,-32
20405f4c:	ce06                	sw	ra,28(sp)
20405f4e:	cc22                	sw	s0,24(sp)
20405f50:	1000                	addi	s0,sp,32
20405f52:	fea42623          	sw	a0,-20(s0)
20405f56:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20405f5a:	fec42783          	lw	a5,-20(s0)
20405f5e:	439c                	lw	a5,0(a5)
20405f60:	4bdc                	lw	a5,20(a5)
20405f62:	fe842583          	lw	a1,-24(s0)
20405f66:	fec42503          	lw	a0,-20(s0)
20405f6a:	9782                	jalr	a5
20405f6c:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:113
}
20405f6e:	853e                	mv	a0,a5
20405f70:	40f2                	lw	ra,28(sp)
20405f72:	4462                	lw	s0,24(sp)
20405f74:	6105                	addi	sp,sp,32
20405f76:	8082                	ret

20405f78 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:208
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20405f78:	1101                	addi	sp,sp,-32
20405f7a:	ce22                	sw	s0,28(sp)
20405f7c:	1000                	addi	s0,sp,32
20405f7e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:209
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20405f82:	fec42703          	lw	a4,-20(s0)
20405f86:	81c18793          	addi	a5,gp,-2020 # 80000a94 <__metal_dt_clint_2000000>
20405f8a:	00f71563          	bne	a4,a5,20405f94 <__metal_driver_sifive_clint0_control_base+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:210
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20405f8e:	020007b7          	lui	a5,0x2000
20405f92:	a011                	j	20405f96 <__metal_driver_sifive_clint0_control_base+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:213
	}
	else {
		return 0;
20405f94:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:215
	}
}
20405f96:	853e                	mv	a0,a5
20405f98:	4472                	lw	s0,28(sp)
20405f9a:	6105                	addi	sp,sp,32
20405f9c:	8082                	ret

20405f9e <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:228
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20405f9e:	1101                	addi	sp,sp,-32
20405fa0:	ce22                	sw	s0,28(sp)
20405fa2:	1000                	addi	s0,sp,32
20405fa4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:229
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20405fa8:	fec42703          	lw	a4,-20(s0)
20405fac:	81c18793          	addi	a5,gp,-2020 # 80000a94 <__metal_dt_clint_2000000>
20405fb0:	00f71463          	bne	a4,a5,20405fb8 <__metal_driver_sifive_clint0_num_interrupts+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:230
		return METAL_MAX_CLINT_INTERRUPTS;
20405fb4:	4789                	li	a5,2
20405fb6:	a011                	j	20405fba <__metal_driver_sifive_clint0_num_interrupts+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:233
	}
	else {
		return 0;
20405fb8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:235
	}
}
20405fba:	853e                	mv	a0,a5
20405fbc:	4472                	lw	s0,28(sp)
20405fbe:	6105                	addi	sp,sp,32
20405fc0:	8082                	ret

20405fc2 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:238

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20405fc2:	1101                	addi	sp,sp,-32
20405fc4:	ce22                	sw	s0,28(sp)
20405fc6:	1000                	addi	s0,sp,32
20405fc8:	fea42623          	sw	a0,-20(s0)
20405fcc:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:239
	if (idx == 0) {
20405fd0:	fe842783          	lw	a5,-24(s0)
20405fd4:	e791                	bnez	a5,20405fe0 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:240
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405fd6:	800007b7          	lui	a5,0x80000
20405fda:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffc768>
20405fde:	a821                	j	20405ff6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:242
	}
	else if (idx == 1) {
20405fe0:	fe842703          	lw	a4,-24(s0)
20405fe4:	4785                	li	a5,1
20405fe6:	00f71763          	bne	a4,a5,20405ff4 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:243
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405fea:	800007b7          	lui	a5,0x80000
20405fee:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffc768>
20405ff2:	a011                	j	20405ff6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:246
	}
	else {
		return NULL;
20405ff4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:248
	}
}
20405ff6:	853e                	mv	a0,a5
20405ff8:	4472                	lw	s0,28(sp)
20405ffa:	6105                	addi	sp,sp,32
20405ffc:	8082                	ret

20405ffe <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:251

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20405ffe:	1101                	addi	sp,sp,-32
20406000:	ce22                	sw	s0,28(sp)
20406002:	1000                	addi	s0,sp,32
20406004:	fea42623          	sw	a0,-20(s0)
20406008:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:252
	if (idx == 0) {
2040600c:	fe842783          	lw	a5,-24(s0)
20406010:	e399                	bnez	a5,20406016 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:253
		return 3;
20406012:	478d                	li	a5,3
20406014:	a809                	j	20406026 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:255
	}
	else if (idx == 1) {
20406016:	fe842703          	lw	a4,-24(s0)
2040601a:	4785                	li	a5,1
2040601c:	00f71463          	bne	a4,a5,20406024 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:256
		return 7;
20406020:	479d                	li	a5,7
20406022:	a011                	j	20406026 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:259
	}
	else {
		return 0;
20406024:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:261
	}
}
20406026:	853e                	mv	a0,a5
20406028:	4472                	lw	s0,28(sp)
2040602a:	6105                	addi	sp,sp,32
2040602c:	8082                	ret

2040602e <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
2040602e:	715d                	addi	sp,sp,-80
20406030:	c686                	sw	ra,76(sp)
20406032:	c4a2                	sw	s0,72(sp)
20406034:	c2ca                	sw	s2,68(sp)
20406036:	c0ce                	sw	s3,64(sp)
20406038:	de52                	sw	s4,60(sp)
2040603a:	dc56                	sw	s5,56(sp)
2040603c:	da5a                	sw	s6,52(sp)
2040603e:	d85e                	sw	s7,48(sp)
20406040:	d662                	sw	s8,44(sp)
20406042:	d466                	sw	s9,40(sp)
20406044:	0880                	addi	s0,sp,80
20406046:	faa42e23          	sw	a0,-68(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2040604a:	fbc42783          	lw	a5,-68(s0)
2040604e:	853e                	mv	a0,a5
20406050:	3725                	jal	20405f78 <__metal_driver_sifive_clint0_control_base>
20406052:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20406056:	fcc42703          	lw	a4,-52(s0)
2040605a:	67b1                	lui	a5,0xc
2040605c:	17f1                	addi	a5,a5,-4
2040605e:	97ba                	add	a5,a5,a4
20406060:	439c                	lw	a5,0(a5)
20406062:	fcf42423          	sw	a5,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20406066:	fcc42703          	lw	a4,-52(s0)
2040606a:	67b1                	lui	a5,0xc
2040606c:	17e1                	addi	a5,a5,-8
2040606e:	97ba                	add	a5,a5,a4
20406070:	439c                	lw	a5,0(a5)
20406072:	fcf42223          	sw	a5,-60(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406076:	fcc42703          	lw	a4,-52(s0)
2040607a:	67b1                	lui	a5,0xc
2040607c:	17f1                	addi	a5,a5,-4
2040607e:	97ba                	add	a5,a5,a4
20406080:	439c                	lw	a5,0(a5)
20406082:	fc842703          	lw	a4,-56(s0)
20406086:	fcf718e3          	bne	a4,a5,20406056 <__metal_clint0_mtime_get+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
2040608a:	fc842783          	lw	a5,-56(s0)
2040608e:	8c3e                	mv	s8,a5
20406090:	4c81                	li	s9,0
20406092:	000c1993          	slli	s3,s8,0x0
20406096:	4901                	li	s2,0
20406098:	fc442783          	lw	a5,-60(s0)
2040609c:	8a3e                	mv	s4,a5
2040609e:	4a81                	li	s5,0
204060a0:	01496b33          	or	s6,s2,s4
204060a4:	0159ebb3          	or	s7,s3,s5
204060a8:	87da                	mv	a5,s6
204060aa:	885e                	mv	a6,s7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30
}
204060ac:	853e                	mv	a0,a5
204060ae:	85c2                	mv	a1,a6
204060b0:	40b6                	lw	ra,76(sp)
204060b2:	4426                	lw	s0,72(sp)
204060b4:	4916                	lw	s2,68(sp)
204060b6:	4986                	lw	s3,64(sp)
204060b8:	5a72                	lw	s4,60(sp)
204060ba:	5ae2                	lw	s5,56(sp)
204060bc:	5b52                	lw	s6,52(sp)
204060be:	5bc2                	lw	s7,48(sp)
204060c0:	5c32                	lw	s8,44(sp)
204060c2:	5ca2                	lw	s9,40(sp)
204060c4:	6161                	addi	sp,sp,80
204060c6:	8082                	ret

204060c8 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
204060c8:	7179                	addi	sp,sp,-48
204060ca:	d606                	sw	ra,44(sp)
204060cc:	d422                	sw	s0,40(sp)
204060ce:	d24a                	sw	s2,36(sp)
204060d0:	d04e                	sw	s3,32(sp)
204060d2:	1800                	addi	s0,sp,48
204060d4:	fca42e23          	sw	a0,-36(s0)
204060d8:	fcb42c23          	sw	a1,-40(s0)
204060dc:	fcc42823          	sw	a2,-48(s0)
204060e0:	fcd42a23          	sw	a3,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
204060e4:	fdc42783          	lw	a5,-36(s0)
204060e8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
204060ec:	fec42783          	lw	a5,-20(s0)
204060f0:	853e                	mv	a0,a5
204060f2:	3559                	jal	20405f78 <__metal_driver_sifive_clint0_control_base>
204060f4:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204060f8:	fd842783          	lw	a5,-40(s0)
204060fc:	078e                	slli	a5,a5,0x3
204060fe:	873e                	mv	a4,a5
20406100:	fe842783          	lw	a5,-24(s0)
20406104:	973e                	add	a4,a4,a5
20406106:	6791                	lui	a5,0x4
20406108:	0791                	addi	a5,a5,4
2040610a:	97ba                	add	a5,a5,a4
2040610c:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
2040610e:	57fd                	li	a5,-1
20406110:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20406112:	fd842783          	lw	a5,-40(s0)
20406116:	078e                	slli	a5,a5,0x3
20406118:	873e                	mv	a4,a5
2040611a:	fe842783          	lw	a5,-24(s0)
2040611e:	973e                	add	a4,a4,a5
20406120:	6791                	lui	a5,0x4
20406122:	97ba                	add	a5,a5,a4
20406124:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20406126:	fd042783          	lw	a5,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
2040612a:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
2040612c:	fd442783          	lw	a5,-44(s0)
20406130:	0007d913          	srli	s2,a5,0x0
20406134:	4981                	li	s3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20406136:	fd842783          	lw	a5,-40(s0)
2040613a:	078e                	slli	a5,a5,0x3
2040613c:	873e                	mv	a4,a5
2040613e:	fe842783          	lw	a5,-24(s0)
20406142:	973e                	add	a4,a4,a5
20406144:	6791                	lui	a5,0x4
20406146:	0791                	addi	a5,a5,4
20406148:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2040614a:	874a                	mv	a4,s2
2040614c:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
2040614e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
20406150:	853e                	mv	a0,a5
20406152:	50b2                	lw	ra,44(sp)
20406154:	5422                	lw	s0,40(sp)
20406156:	5912                	lw	s2,36(sp)
20406158:	5982                	lw	s3,32(sp)
2040615a:	6145                	addi	sp,sp,48
2040615c:	8082                	ret

2040615e <_get_cpu_intc>:
_get_cpu_intc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2040615e:	1101                	addi	sp,sp,-32
20406160:	ce06                	sw	ra,28(sp)
20406162:	cc22                	sw	s0,24(sp)
20406164:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20406166:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2040616a:	f14027f3          	csrr	a5,mhartid
2040616e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20406172:	fec42783          	lw	a5,-20(s0)
20406176:	853e                	mv	a0,a5
20406178:	b6bff0ef          	jal	ra,20405ce2 <metal_cpu_get>
2040617c:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20406180:	fe842503          	lw	a0,-24(s0)
20406184:	b39ff0ef          	jal	ra,20405cbc <metal_cpu_interrupt_controller>
20406188:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
}
2040618a:	853e                	mv	a0,a5
2040618c:	40f2                	lw	ra,28(sp)
2040618e:	4462                	lw	s0,24(sp)
20406190:	6105                	addi	sp,sp,32
20406192:	8082                	ret

20406194 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20406194:	7139                	addi	sp,sp,-64
20406196:	de06                	sw	ra,60(sp)
20406198:	dc22                	sw	s0,56(sp)
2040619a:	0080                	addi	s0,sp,64
2040619c:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
204061a0:	fcc42503          	lw	a0,-52(s0)
204061a4:	3bed                	jal	20405f9e <__metal_driver_sifive_clint0_num_interrupts>
204061a6:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
204061aa:	fcc42783          	lw	a5,-52(s0)
204061ae:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
204061b2:	fe442783          	lw	a5,-28(s0)
204061b6:	43dc                	lw	a5,4(a5)
204061b8:	efa9                	bnez	a5,20406212 <__metal_driver_riscv_clint0_init+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
204061ba:	fe042623          	sw	zero,-20(s0)
204061be:	a081                	j	204061fe <__metal_driver_riscv_clint0_init+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204061c0:	fec42583          	lw	a1,-20(s0)
204061c4:	fcc42503          	lw	a0,-52(s0)
204061c8:	3bed                	jal	20405fc2 <__metal_driver_sifive_clint0_interrupt_parents>
204061ca:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204061ce:	fec42583          	lw	a1,-20(s0)
204061d2:	fcc42503          	lw	a0,-52(s0)
204061d6:	3525                	jal	20405ffe <__metal_driver_sifive_clint0_interrupt_lines>
204061d8:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
204061dc:	fe042783          	lw	a5,-32(s0)
204061e0:	439c                	lw	a5,0(a5)
204061e2:	4fdc                	lw	a5,28(a5)
204061e4:	fcc42683          	lw	a3,-52(s0)
204061e8:	4601                	li	a2,0
204061ea:	fdc42583          	lw	a1,-36(s0)
204061ee:	fe042503          	lw	a0,-32(s0)
204061f2:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
204061f4:	fec42783          	lw	a5,-20(s0)
204061f8:	0785                	addi	a5,a5,1
204061fa:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
204061fe:	fec42703          	lw	a4,-20(s0)
20406202:	fe842783          	lw	a5,-24(s0)
20406206:	faf74de3          	blt	a4,a5,204061c0 <__metal_driver_riscv_clint0_init+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
2040620a:	fe442783          	lw	a5,-28(s0)
2040620e:	4705                	li	a4,1
20406210:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20406212:	0001                	nop
20406214:	50f2                	lw	ra,60(sp)
20406216:	5462                	lw	s0,56(sp)
20406218:	6121                	addi	sp,sp,64
2040621a:	8082                	ret

2040621c <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
2040621c:	7139                	addi	sp,sp,-64
2040621e:	de06                	sw	ra,60(sp)
20406220:	dc22                	sw	s0,56(sp)
20406222:	0080                	addi	s0,sp,64
20406224:	fca42623          	sw	a0,-52(s0)
20406228:	fcb42423          	sw	a1,-56(s0)
2040622c:	fcc42223          	sw	a2,-60(s0)
20406230:	fcd42023          	sw	a3,-64(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20406234:	57fd                	li	a5,-1
20406236:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
2040623a:	45c010ef          	jal	ra,20407696 <__metal_controller_interrupt_vector_mode>
2040623e:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20406242:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20406246:	3f21                	jal	2040615e <_get_cpu_intc>
20406248:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2040624c:	fcc42503          	lw	a0,-52(s0)
20406250:	33b9                	jal	20405f9e <__metal_driver_sifive_clint0_num_interrupts>
20406252:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20406256:	fe042703          	lw	a4,-32(s0)
2040625a:	4785                	li	a5,1
2040625c:	00f70863          	beq	a4,a5,2040626c <__metal_driver_riscv_clint0_register+0x50>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20406260:	fe042783          	lw	a5,-32(s0)
20406264:	c781                	beqz	a5,2040626c <__metal_driver_riscv_clint0_register+0x50>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20406266:	fec42783          	lw	a5,-20(s0)
2040626a:	a049                	j	204062ec <__metal_driver_riscv_clint0_register+0xd0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
2040626c:	fe042223          	sw	zero,-28(s0)
20406270:	a091                	j	204062b4 <__metal_driver_riscv_clint0_register+0x98>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20406272:	fe442583          	lw	a1,-28(s0)
20406276:	fcc42503          	lw	a0,-52(s0)
2040627a:	3351                	jal	20405ffe <__metal_driver_sifive_clint0_interrupt_lines>
2040627c:	fca42a23          	sw	a0,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20406280:	fe442583          	lw	a1,-28(s0)
20406284:	fcc42503          	lw	a0,-52(s0)
20406288:	3b2d                	jal	20405fc2 <__metal_driver_sifive_clint0_interrupt_parents>
2040628a:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2040628e:	fdc42703          	lw	a4,-36(s0)
20406292:	fe842783          	lw	a5,-24(s0)
20406296:	00f71863          	bne	a4,a5,204062a6 <__metal_driver_riscv_clint0_register+0x8a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
2040629a:	fc842703          	lw	a4,-56(s0)
2040629e:	fd442783          	lw	a5,-44(s0)
204062a2:	02f70063          	beq	a4,a5,204062c2 <__metal_driver_riscv_clint0_register+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
204062a6:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
204062aa:	fe442783          	lw	a5,-28(s0)
204062ae:	0785                	addi	a5,a5,1
204062b0:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
204062b4:	fe442703          	lw	a4,-28(s0)
204062b8:	fd842783          	lw	a5,-40(s0)
204062bc:	faf74be3          	blt	a4,a5,20406272 <__metal_driver_riscv_clint0_register+0x56>
204062c0:	a011                	j	204062c4 <__metal_driver_riscv_clint0_register+0xa8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
204062c2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
204062c4:	fe842783          	lw	a5,-24(s0)
204062c8:	c385                	beqz	a5,204062e8 <__metal_driver_riscv_clint0_register+0xcc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
204062ca:	fe842783          	lw	a5,-24(s0)
204062ce:	439c                	lw	a5,0(a5)
204062d0:	4fdc                	lw	a5,28(a5)
204062d2:	fc042683          	lw	a3,-64(s0)
204062d6:	fc442603          	lw	a2,-60(s0)
204062da:	fc842583          	lw	a1,-56(s0)
204062de:	fe842503          	lw	a0,-24(s0)
204062e2:	9782                	jalr	a5
204062e4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
204062e8:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
}
204062ec:	853e                	mv	a0,a5
204062ee:	50f2                	lw	ra,60(sp)
204062f0:	5462                	lw	s0,56(sp)
204062f2:	6121                	addi	sp,sp,64
204062f4:	8082                	ret

204062f6 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
204062f6:	7179                	addi	sp,sp,-48
204062f8:	d622                	sw	s0,44(sp)
204062fa:	1800                	addi	s0,sp,48
204062fc:	fca42e23          	sw	a0,-36(s0)
20406300:	fcb42c23          	sw	a1,-40(s0)
20406304:	fcc42a23          	sw	a2,-44(s0)
20406308:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
2040630c:	57fd                	li	a5,-1
2040630e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20406312:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123
}
20406316:	853e                	mv	a0,a5
20406318:	5432                	lw	s0,44(sp)
2040631a:	6145                	addi	sp,sp,48
2040631c:	8082                	ret

2040631e <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
2040631e:	1101                	addi	sp,sp,-32
20406320:	ce06                	sw	ra,28(sp)
20406322:	cc22                	sw	s0,24(sp)
20406324:	1000                	addi	s0,sp,32
20406326:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
2040632a:	36c010ef          	jal	ra,20407696 <__metal_controller_interrupt_vector_mode>
2040632e:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
}
20406330:	853e                	mv	a0,a5
20406332:	40f2                	lw	ra,28(sp)
20406334:	4462                	lw	s0,24(sp)
20406336:	6105                	addi	sp,sp,32
20406338:	8082                	ret

2040633a <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2040633a:	7179                	addi	sp,sp,-48
2040633c:	d606                	sw	ra,44(sp)
2040633e:	d422                	sw	s0,40(sp)
20406340:	1800                	addi	s0,sp,48
20406342:	fca42e23          	sw	a0,-36(s0)
20406346:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
2040634a:	57fd                	li	a5,-1
2040634c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20406350:	3539                	jal	2040615e <_get_cpu_intc>
20406352:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20406356:	fe842783          	lw	a5,-24(s0)
2040635a:	c395                	beqz	a5,2040637e <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
2040635c:	fd842703          	lw	a4,-40(s0)
20406360:	4785                	li	a5,1
20406362:	02e7e063          	bltu	a5,a4,20406382 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20406366:	fe842783          	lw	a5,-24(s0)
2040636a:	439c                	lw	a5,0(a5)
2040636c:	43dc                	lw	a5,4(a5)
2040636e:	fd842583          	lw	a1,-40(s0)
20406372:	fe842503          	lw	a0,-24(s0)
20406376:	9782                	jalr	a5
20406378:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
2040637c:	a021                	j	20406384 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2040637e:	0001                	nop
20406380:	a011                	j	20406384 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20406382:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20406384:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
}
20406388:	853e                	mv	a0,a5
2040638a:	50b2                	lw	ra,44(sp)
2040638c:	5422                	lw	s0,40(sp)
2040638e:	6145                	addi	sp,sp,48
20406390:	8082                	ret

20406392 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20406392:	7139                	addi	sp,sp,-64
20406394:	de06                	sw	ra,60(sp)
20406396:	dc22                	sw	s0,56(sp)
20406398:	0080                	addi	s0,sp,64
2040639a:	fca42623          	sw	a0,-52(s0)
2040639e:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
204063a2:	57fd                	li	a5,-1
204063a4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
204063a8:	fc842783          	lw	a5,-56(s0)
204063ac:	cbc1                	beqz	a5,2040643c <__metal_driver_riscv_clint0_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
204063ae:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204063b2:	3375                	jal	2040615e <_get_cpu_intc>
204063b4:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
204063b8:	fcc42503          	lw	a0,-52(s0)
204063bc:	be3ff0ef          	jal	ra,20405f9e <__metal_driver_sifive_clint0_num_interrupts>
204063c0:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
204063c4:	fe042223          	sw	zero,-28(s0)
204063c8:	a0a1                	j	20406410 <__metal_driver_riscv_clint0_enable+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204063ca:	fe442583          	lw	a1,-28(s0)
204063ce:	fcc42503          	lw	a0,-52(s0)
204063d2:	c2dff0ef          	jal	ra,20405ffe <__metal_driver_sifive_clint0_interrupt_lines>
204063d6:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204063da:	fe442583          	lw	a1,-28(s0)
204063de:	fcc42503          	lw	a0,-52(s0)
204063e2:	be1ff0ef          	jal	ra,20405fc2 <__metal_driver_sifive_clint0_interrupt_parents>
204063e6:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
204063ea:	fe042703          	lw	a4,-32(s0)
204063ee:	fe842783          	lw	a5,-24(s0)
204063f2:	00f71863          	bne	a4,a5,20406402 <__metal_driver_riscv_clint0_enable+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
204063f6:	fc842703          	lw	a4,-56(s0)
204063fa:	fd842783          	lw	a5,-40(s0)
204063fe:	02f70063          	beq	a4,a5,2040641e <__metal_driver_riscv_clint0_enable+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20406402:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20406406:	fe442783          	lw	a5,-28(s0)
2040640a:	0785                	addi	a5,a5,1
2040640c:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20406410:	fe442703          	lw	a4,-28(s0)
20406414:	fdc42783          	lw	a5,-36(s0)
20406418:	faf749e3          	blt	a4,a5,204063ca <__metal_driver_riscv_clint0_enable+0x38>
2040641c:	a011                	j	20406420 <__metal_driver_riscv_clint0_enable+0x8e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
2040641e:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20406420:	fe842783          	lw	a5,-24(s0)
20406424:	cf81                	beqz	a5,2040643c <__metal_driver_riscv_clint0_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20406426:	fe842783          	lw	a5,-24(s0)
2040642a:	439c                	lw	a5,0(a5)
2040642c:	53dc                	lw	a5,36(a5)
2040642e:	fc842583          	lw	a1,-56(s0)
20406432:	fe842503          	lw	a0,-24(s0)
20406436:	9782                	jalr	a5
20406438:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
2040643c:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:178
}
20406440:	853e                	mv	a0,a5
20406442:	50f2                	lw	ra,60(sp)
20406444:	5462                	lw	s0,56(sp)
20406446:	6121                	addi	sp,sp,64
20406448:	8082                	ret

2040644a <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
2040644a:	7139                	addi	sp,sp,-64
2040644c:	de06                	sw	ra,60(sp)
2040644e:	dc22                	sw	s0,56(sp)
20406450:	0080                	addi	s0,sp,64
20406452:	fca42623          	sw	a0,-52(s0)
20406456:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
2040645a:	57fd                	li	a5,-1
2040645c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20406460:	fc842783          	lw	a5,-56(s0)
20406464:	cbc9                	beqz	a5,204064f6 <__metal_driver_riscv_clint0_disable+0xac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20406466:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2040646a:	cf5ff0ef          	jal	ra,2040615e <_get_cpu_intc>
2040646e:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20406472:	fcc42503          	lw	a0,-52(s0)
20406476:	b29ff0ef          	jal	ra,20405f9e <__metal_driver_sifive_clint0_num_interrupts>
2040647a:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
2040647e:	fe042223          	sw	zero,-28(s0)
20406482:	a0a1                	j	204064ca <__metal_driver_riscv_clint0_disable+0x80>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20406484:	fe442583          	lw	a1,-28(s0)
20406488:	fcc42503          	lw	a0,-52(s0)
2040648c:	b73ff0ef          	jal	ra,20405ffe <__metal_driver_sifive_clint0_interrupt_lines>
20406490:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20406494:	fe442583          	lw	a1,-28(s0)
20406498:	fcc42503          	lw	a0,-52(s0)
2040649c:	b27ff0ef          	jal	ra,20405fc2 <__metal_driver_sifive_clint0_interrupt_parents>
204064a0:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
204064a4:	fe042703          	lw	a4,-32(s0)
204064a8:	fe842783          	lw	a5,-24(s0)
204064ac:	00f71863          	bne	a4,a5,204064bc <__metal_driver_riscv_clint0_disable+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
204064b0:	fc842703          	lw	a4,-56(s0)
204064b4:	fd842783          	lw	a5,-40(s0)
204064b8:	02f70063          	beq	a4,a5,204064d8 <__metal_driver_riscv_clint0_disable+0x8e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
204064bc:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204064c0:	fe442783          	lw	a5,-28(s0)
204064c4:	0785                	addi	a5,a5,1
204064c6:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
204064ca:	fe442703          	lw	a4,-28(s0)
204064ce:	fdc42783          	lw	a5,-36(s0)
204064d2:	faf749e3          	blt	a4,a5,20406484 <__metal_driver_riscv_clint0_disable+0x3a>
204064d6:	a011                	j	204064da <__metal_driver_riscv_clint0_disable+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
204064d8:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
204064da:	fe842783          	lw	a5,-24(s0)
204064de:	cf81                	beqz	a5,204064f6 <__metal_driver_riscv_clint0_disable+0xac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
204064e0:	fe842783          	lw	a5,-24(s0)
204064e4:	439c                	lw	a5,0(a5)
204064e6:	579c                	lw	a5,40(a5)
204064e8:	fc842583          	lw	a1,-56(s0)
204064ec:	fe842503          	lw	a0,-24(s0)
204064f0:	9782                	jalr	a5
204064f2:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
204064f6:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
}
204064fa:	853e                	mv	a0,a5
204064fc:	50f2                	lw	ra,60(sp)
204064fe:	5462                	lw	s0,56(sp)
20406500:	6121                	addi	sp,sp,64
20406502:	8082                	ret

20406504 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20406504:	7179                	addi	sp,sp,-48
20406506:	d606                	sw	ra,44(sp)
20406508:	d422                	sw	s0,40(sp)
2040650a:	1800                	addi	s0,sp,48
2040650c:	fca42e23          	sw	a0,-36(s0)
20406510:	fcb42c23          	sw	a1,-40(s0)
20406514:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20406518:	57fd                	li	a5,-1
2040651a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
2040651e:	fdc42783          	lw	a5,-36(s0)
20406522:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20406526:	fdc42503          	lw	a0,-36(s0)
2040652a:	a4fff0ef          	jal	ra,20405f78 <__metal_driver_sifive_clint0_control_base>
2040652e:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20406532:	fd842703          	lw	a4,-40(s0)
20406536:	4789                	li	a5,2
20406538:	04f70963          	beq	a4,a5,2040658a <__metal_driver_riscv_clint0_command_request+0x86>
2040653c:	fd842703          	lw	a4,-40(s0)
20406540:	4789                	li	a5,2
20406542:	00e7c863          	blt	a5,a4,20406552 <__metal_driver_riscv_clint0_command_request+0x4e>
20406546:	fd842703          	lw	a4,-40(s0)
2040654a:	4785                	li	a5,1
2040654c:	00f70e63          	beq	a4,a5,20406568 <__metal_driver_riscv_clint0_command_request+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20406550:	a8f1                	j	2040662c <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20406552:	fd842703          	lw	a4,-40(s0)
20406556:	478d                	li	a5,3
20406558:	04f70d63          	beq	a4,a5,204065b2 <__metal_driver_riscv_clint0_command_request+0xae>
2040655c:	fd842703          	lw	a4,-40(s0)
20406560:	4791                	li	a5,4
20406562:	08f70963          	beq	a4,a5,204065f4 <__metal_driver_riscv_clint0_command_request+0xf0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20406566:	a0d9                	j	2040662c <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20406568:	fd442783          	lw	a5,-44(s0)
2040656c:	cbcd                	beqz	a5,2040661e <__metal_driver_riscv_clint0_command_request+0x11a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
2040656e:	fe842503          	lw	a0,-24(s0)
20406572:	abdff0ef          	jal	ra,2040602e <__metal_clint0_mtime_get>
20406576:	87aa                	mv	a5,a0
20406578:	882e                	mv	a6,a1
2040657a:	fd442703          	lw	a4,-44(s0)
2040657e:	c31c                	sw	a5,0(a4)
20406580:	01072223          	sw	a6,4(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20406584:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20406588:	a859                	j	2040661e <__metal_driver_riscv_clint0_command_request+0x11a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
2040658a:	fd442783          	lw	a5,-44(s0)
2040658e:	cbd1                	beqz	a5,20406622 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20406590:	fd442783          	lw	a5,-44(s0)
20406594:	439c                	lw	a5,0(a5)
20406596:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
2040659a:	fe042783          	lw	a5,-32(s0)
2040659e:	078a                	slli	a5,a5,0x2
204065a0:	873e                	mv	a4,a5
204065a2:	fe442783          	lw	a5,-28(s0)
204065a6:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
204065a8:	0007a023          	sw	zero,0(a5) # 4000 <__stack_size+0x3000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
204065ac:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
204065b0:	a88d                	j	20406622 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
204065b2:	fd442783          	lw	a5,-44(s0)
204065b6:	cba5                	beqz	a5,20406626 <__metal_driver_riscv_clint0_command_request+0x122>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
204065b8:	fd442783          	lw	a5,-44(s0)
204065bc:	439c                	lw	a5,0(a5)
204065be:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
204065c2:	fe042783          	lw	a5,-32(s0)
204065c6:	078a                	slli	a5,a5,0x2
204065c8:	873e                	mv	a4,a5
204065ca:	fe442783          	lw	a5,-28(s0)
204065ce:	97ba                	add	a5,a5,a4
204065d0:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
204065d2:	4785                	li	a5,1
204065d4:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
204065d6:	0480000f          	fence	o,i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
204065da:	fe042783          	lw	a5,-32(s0)
204065de:	078a                	slli	a5,a5,0x2
204065e0:	873e                	mv	a4,a5
204065e2:	fe442783          	lw	a5,-28(s0)
204065e6:	97ba                	add	a5,a5,a4
204065e8:	439c                	lw	a5,0(a5)
204065ea:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
204065ee:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
204065f2:	a815                	j	20406626 <__metal_driver_riscv_clint0_command_request+0x122>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
204065f4:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
204065f8:	fd442783          	lw	a5,-44(s0)
204065fc:	c79d                	beqz	a5,2040662a <__metal_driver_riscv_clint0_command_request+0x126>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
204065fe:	fd442783          	lw	a5,-44(s0)
20406602:	439c                	lw	a5,0(a5)
20406604:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20406608:	fe042783          	lw	a5,-32(s0)
2040660c:	078a                	slli	a5,a5,0x2
2040660e:	873e                	mv	a4,a5
20406610:	fe442783          	lw	a5,-28(s0)
20406614:	97ba                	add	a5,a5,a4
20406616:	439c                	lw	a5,0(a5)
20406618:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2040661c:	a039                	j	2040662a <__metal_driver_riscv_clint0_command_request+0x126>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2040661e:	0001                	nop
20406620:	a031                	j	2040662c <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20406622:	0001                	nop
20406624:	a021                	j	2040662c <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20406626:	0001                	nop
20406628:	a011                	j	2040662c <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2040662a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
2040662c:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:267
}
20406630:	853e                	mv	a0,a5
20406632:	50b2                	lw	ra,44(sp)
20406634:	5422                	lw	s0,40(sp)
20406636:	6145                	addi	sp,sp,48
20406638:	8082                	ret

2040663a <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
2040663a:	7179                	addi	sp,sp,-48
2040663c:	d606                	sw	ra,44(sp)
2040663e:	d422                	sw	s0,40(sp)
20406640:	1800                	addi	s0,sp,48
20406642:	fca42e23          	sw	a0,-36(s0)
20406646:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
2040664a:	ec2ff0ef          	jal	ra,20405d0c <metal_cpu_get_current_hartid>
2040664e:	87aa                	mv	a5,a0
20406650:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20406654:	fec40793          	addi	a5,s0,-20
20406658:	863e                	mv	a2,a5
2040665a:	4589                	li	a1,2
2040665c:	fdc42503          	lw	a0,-36(s0)
20406660:	3555                	jal	20406504 <__metal_driver_riscv_clint0_command_request>
20406662:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20406664:	853e                	mv	a0,a5
20406666:	50b2                	lw	ra,44(sp)
20406668:	5422                	lw	s0,40(sp)
2040666a:	6145                	addi	sp,sp,48
2040666c:	8082                	ret

2040666e <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
2040666e:	7179                	addi	sp,sp,-48
20406670:	d606                	sw	ra,44(sp)
20406672:	d422                	sw	s0,40(sp)
20406674:	1800                	addi	s0,sp,48
20406676:	fca42e23          	sw	a0,-36(s0)
2040667a:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
2040667e:	e8eff0ef          	jal	ra,20405d0c <metal_cpu_get_current_hartid>
20406682:	87aa                	mv	a5,a0
20406684:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20406688:	fec40793          	addi	a5,s0,-20
2040668c:	863e                	mv	a2,a5
2040668e:	458d                	li	a1,3
20406690:	fdc42503          	lw	a0,-36(s0)
20406694:	3d85                	jal	20406504 <__metal_driver_riscv_clint0_command_request>
20406696:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20406698:	853e                	mv	a0,a5
2040669a:	50b2                	lw	ra,44(sp)
2040669c:	5422                	lw	s0,40(sp)
2040669e:	6145                	addi	sp,sp,48
204066a0:	8082                	ret

204066a2 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:267



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
204066a2:	1101                	addi	sp,sp,-32
204066a4:	ce22                	sw	s0,28(sp)
204066a6:	1000                	addi	s0,sp,32
204066a8:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:268
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204066ac:	fec42703          	lw	a4,-20(s0)
204066b0:	82418793          	addi	a5,gp,-2012 # 80000a9c <__metal_dt_cpu_0>
204066b4:	00f71463          	bne	a4,a5,204066bc <__metal_driver_cpu_hartid+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:269
		return 0;
204066b8:	4781                	li	a5,0
204066ba:	a011                	j	204066be <__metal_driver_cpu_hartid+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:272
	}
	else {
		return -1;
204066bc:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:274
	}
}
204066be:	853e                	mv	a0,a5
204066c0:	4472                	lw	s0,28(sp)
204066c2:	6105                	addi	sp,sp,32
204066c4:	8082                	ret

204066c6 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:277

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
204066c6:	1101                	addi	sp,sp,-32
204066c8:	ce22                	sw	s0,28(sp)
204066ca:	1000                	addi	s0,sp,32
204066cc:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:278
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204066d0:	fec42703          	lw	a4,-20(s0)
204066d4:	82418793          	addi	a5,gp,-2012 # 80000a9c <__metal_dt_cpu_0>
204066d8:	00f71763          	bne	a4,a5,204066e6 <__metal_driver_cpu_timebase+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:279
		return 1000000;
204066dc:	000f47b7          	lui	a5,0xf4
204066e0:	24078793          	addi	a5,a5,576 # f4240 <__stack_size+0xf3240>
204066e4:	a011                	j	204066e8 <__metal_driver_cpu_timebase+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:282
	}
	else {
		return 0;
204066e6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:284
	}
}
204066e8:	853e                	mv	a0,a5
204066ea:	4472                	lw	s0,28(sp)
204066ec:	6105                	addi	sp,sp,32
204066ee:	8082                	ret

204066f0 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:287

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
204066f0:	1101                	addi	sp,sp,-32
204066f2:	ce22                	sw	s0,28(sp)
204066f4:	1000                	addi	s0,sp,32
204066f6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:288
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204066fa:	fec42703          	lw	a4,-20(s0)
204066fe:	82418793          	addi	a5,gp,-2012 # 80000a9c <__metal_dt_cpu_0>
20406702:	00f71763          	bne	a4,a5,20406710 <__metal_driver_cpu_interrupt_controller+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:289
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20406706:	800007b7          	lui	a5,0x80000
2040670a:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffc768>
2040670e:	a011                	j	20406712 <__metal_driver_cpu_interrupt_controller+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:292
	}
	else {
		return NULL;
20406710:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:294
	}
}
20406712:	853e                	mv	a0,a5
20406714:	4472                	lw	s0,28(sp)
20406716:	6105                	addi	sp,sp,32
20406718:	8082                	ret

2040671a <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:307
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
2040671a:	1101                	addi	sp,sp,-32
2040671c:	ce22                	sw	s0,28(sp)
2040671e:	1000                	addi	s0,sp,32
20406720:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:308
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20406724:	fec42703          	lw	a4,-20(s0)
20406728:	82418793          	addi	a5,gp,-2012 # 80000a9c <__metal_dt_cpu_0>
2040672c:	00f71463          	bne	a4,a5,20406734 <__metal_driver_cpu_buserror+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:309
		return NULL;
20406730:	4781                	li	a5,0
20406732:	a011                	j	20406736 <__metal_driver_cpu_buserror+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:312
	}
	else {
		return NULL;
20406734:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:314
	}
}
20406736:	853e                	mv	a0,a5
20406738:	4472                	lw	s0,28(sp)
2040673a:	6105                	addi	sp,sp,32
2040673c:	8082                	ret

2040673e <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
2040673e:	1101                	addi	sp,sp,-32
20406740:	ce22                	sw	s0,28(sp)
20406742:	1000                	addi	s0,sp,32
20406744:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20406748:	fec42783          	lw	a5,-20(s0)
2040674c:	00f04a63          	bgtz	a5,20406760 <__metal_driver_cpu_get+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20406750:	fec42703          	lw	a4,-20(s0)
20406754:	070a                	slli	a4,a4,0x2
20406756:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
2040675a:	97ba                	add	a5,a5,a4
2040675c:	439c                	lw	a5,0(a5)
2040675e:	a011                	j	20406762 <__metal_driver_cpu_get+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20406760:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:30
}
20406762:	853e                	mv	a0,a5
20406764:	4472                	lw	s0,28(sp)
20406766:	6105                	addi	sp,sp,32
20406768:	8082                	ret

2040676a <__metal_myhart_id>:
__metal_myhart_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
2040676a:	1101                	addi	sp,sp,-32
2040676c:	ce22                	sw	s0,28(sp)
2040676e:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20406770:	f14027f3          	csrr	a5,mhartid
20406774:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20406778:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
}
2040677c:	853e                	mv	a0,a5
2040677e:	4472                	lw	s0,28(sp)
20406780:	6105                	addi	sp,sp,32
20406782:	8082                	ret

20406784 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20406784:	1101                	addi	sp,sp,-32
20406786:	ce22                	sw	s0,28(sp)
20406788:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
2040678a:	47a1                	li	a5,8
2040678c:	3007a7f3          	csrrs	a5,mstatus,a5
20406790:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20406794:	0001                	nop
20406796:	4472                	lw	s0,28(sp)
20406798:	6105                	addi	sp,sp,32
2040679a:	8082                	ret

2040679c <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
2040679c:	1101                	addi	sp,sp,-32
2040679e:	ce22                	sw	s0,28(sp)
204067a0:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
204067a2:	47a1                	li	a5,8
204067a4:	3007b7f3          	csrrc	a5,mstatus,a5
204067a8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
204067ac:	0001                	nop
204067ae:	4472                	lw	s0,28(sp)
204067b0:	6105                	addi	sp,sp,32
204067b2:	8082                	ret

204067b4 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
204067b4:	1101                	addi	sp,sp,-32
204067b6:	ce22                	sw	s0,28(sp)
204067b8:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204067ba:	47a1                	li	a5,8
204067bc:	3047a7f3          	csrrs	a5,mie,a5
204067c0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204067c4:	0001                	nop
204067c6:	4472                	lw	s0,28(sp)
204067c8:	6105                	addi	sp,sp,32
204067ca:	8082                	ret

204067cc <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
204067cc:	1101                	addi	sp,sp,-32
204067ce:	ce22                	sw	s0,28(sp)
204067d0:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204067d2:	47a1                	li	a5,8
204067d4:	3047b7f3          	csrrc	a5,mie,a5
204067d8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204067dc:	0001                	nop
204067de:	4472                	lw	s0,28(sp)
204067e0:	6105                	addi	sp,sp,32
204067e2:	8082                	ret

204067e4 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
204067e4:	1101                	addi	sp,sp,-32
204067e6:	ce22                	sw	s0,28(sp)
204067e8:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204067ea:	08000793          	li	a5,128
204067ee:	3047a7f3          	csrrs	a5,mie,a5
204067f2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204067f6:	0001                	nop
204067f8:	4472                	lw	s0,28(sp)
204067fa:	6105                	addi	sp,sp,32
204067fc:	8082                	ret

204067fe <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
204067fe:	1101                	addi	sp,sp,-32
20406800:	ce22                	sw	s0,28(sp)
20406802:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20406804:	08000793          	li	a5,128
20406808:	3047b7f3          	csrrc	a5,mie,a5
2040680c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20406810:	0001                	nop
20406812:	4472                	lw	s0,28(sp)
20406814:	6105                	addi	sp,sp,32
20406816:	8082                	ret

20406818 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20406818:	1101                	addi	sp,sp,-32
2040681a:	ce22                	sw	s0,28(sp)
2040681c:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2040681e:	6785                	lui	a5,0x1
20406820:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20406824:	3047a7f3          	csrrs	a5,mie,a5
20406828:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2040682c:	0001                	nop
2040682e:	4472                	lw	s0,28(sp)
20406830:	6105                	addi	sp,sp,32
20406832:	8082                	ret

20406834 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20406834:	1101                	addi	sp,sp,-32
20406836:	ce22                	sw	s0,28(sp)
20406838:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
2040683a:	6785                	lui	a5,0x1
2040683c:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20406840:	3047b7f3          	csrrc	a5,mie,a5
20406844:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20406848:	0001                	nop
2040684a:	4472                	lw	s0,28(sp)
2040684c:	6105                	addi	sp,sp,32
2040684e:	8082                	ret

20406850 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20406850:	7179                	addi	sp,sp,-48
20406852:	d622                	sw	s0,44(sp)
20406854:	1800                	addi	s0,sp,48
20406856:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
2040685a:	fdc42783          	lw	a5,-36(s0)
2040685e:	4705                	li	a4,1
20406860:	00f717b3          	sll	a5,a4,a5
20406864:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20406868:	fec42783          	lw	a5,-20(s0)
2040686c:	3047a7f3          	csrrs	a5,mie,a5
20406870:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
}
20406874:	0001                	nop
20406876:	5432                	lw	s0,44(sp)
20406878:	6145                	addi	sp,sp,48
2040687a:	8082                	ret

2040687c <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
2040687c:	7179                	addi	sp,sp,-48
2040687e:	d622                	sw	s0,44(sp)
20406880:	1800                	addi	s0,sp,48
20406882:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20406886:	fdc42783          	lw	a5,-36(s0)
2040688a:	4705                	li	a4,1
2040688c:	00f717b3          	sll	a5,a4,a5
20406890:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20406894:	fec42783          	lw	a5,-20(s0)
20406898:	3047b7f3          	csrrc	a5,mie,a5
2040689c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
}
204068a0:	0001                	nop
204068a2:	5432                	lw	s0,44(sp)
204068a4:	6145                	addi	sp,sp,48
204068a6:	8082                	ret

204068a8 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
204068a8:	1101                	addi	sp,sp,-32
204068aa:	ce06                	sw	ra,28(sp)
204068ac:	cc22                	sw	s0,24(sp)
204068ae:	1000                	addi	s0,sp,32
204068b0:	fea42623          	sw	a0,-20(s0)
204068b4:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
204068b8:	06400513          	li	a0,100
204068bc:	2b7030ef          	jal	ra,2040a372 <metal_shutdown>

204068c0 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
204068c0:	1101                	addi	sp,sp,-32
204068c2:	ce06                	sw	ra,28(sp)
204068c4:	cc22                	sw	s0,24(sp)
204068c6:	1000                	addi	s0,sp,32
204068c8:	fea42623          	sw	a0,-20(s0)
204068cc:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
204068d0:	0c800513          	li	a0,200
204068d4:	29f030ef          	jal	ra,2040a372 <metal_shutdown>

204068d8 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
204068d8:	715d                	addi	sp,sp,-80
204068da:	c686                	sw	ra,76(sp)
204068dc:	c496                	sw	t0,72(sp)
204068de:	c29a                	sw	t1,68(sp)
204068e0:	c09e                	sw	t2,64(sp)
204068e2:	de22                	sw	s0,60(sp)
204068e4:	dc2a                	sw	a0,56(sp)
204068e6:	da2e                	sw	a1,52(sp)
204068e8:	d832                	sw	a2,48(sp)
204068ea:	d636                	sw	a3,44(sp)
204068ec:	d43a                	sw	a4,40(sp)
204068ee:	d23e                	sw	a5,36(sp)
204068f0:	d042                	sw	a6,32(sp)
204068f2:	ce46                	sw	a7,28(sp)
204068f4:	cc72                	sw	t3,24(sp)
204068f6:	ca76                	sw	t4,20(sp)
204068f8:	c87a                	sw	t5,16(sp)
204068fa:	c67e                	sw	t6,12(sp)
204068fc:	0880                	addi	s0,sp,80
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
204068fe:	12c00513          	li	a0,300
20406902:	271030ef          	jal	ra,2040a372 <metal_shutdown>

20406906 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20406906:	711d                	addi	sp,sp,-96
20406908:	ce86                	sw	ra,92(sp)
2040690a:	cc96                	sw	t0,88(sp)
2040690c:	ca9a                	sw	t1,84(sp)
2040690e:	c89e                	sw	t2,80(sp)
20406910:	c6a2                	sw	s0,76(sp)
20406912:	c4aa                	sw	a0,72(sp)
20406914:	c2ae                	sw	a1,68(sp)
20406916:	c0b2                	sw	a2,64(sp)
20406918:	de36                	sw	a3,60(sp)
2040691a:	dc3a                	sw	a4,56(sp)
2040691c:	da3e                	sw	a5,52(sp)
2040691e:	d842                	sw	a6,48(sp)
20406920:	d646                	sw	a7,44(sp)
20406922:	d472                	sw	t3,40(sp)
20406924:	d276                	sw	t4,36(sp)
20406926:	d07a                	sw	t5,32(sp)
20406928:	ce7e                	sw	t6,28(sp)
2040692a:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
2040692c:	3d3d                	jal	2040676a <__metal_myhart_id>
2040692e:	872a                	mv	a4,a0
20406930:	070a                	slli	a4,a4,0x2
20406932:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20406936:	97ba                	add	a5,a5,a4
20406938:	439c                	lw	a5,0(a5)
2040693a:	faf42623          	sw	a5,-84(s0)
2040693e:	fac42783          	lw	a5,-84(s0)
20406942:	c785                	beqz	a5,2040696a <metal_software_interrupt_vector_handler+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20406944:	fac42503          	lw	a0,-84(s0)
20406948:	3365                	jal	204066f0 <__metal_driver_cpu_interrupt_controller>
2040694a:	faa42423          	sw	a0,-88(s0)
2040694e:	fa842783          	lw	a5,-88(s0)
20406952:	0e07a783          	lw	a5,224(a5)
20406956:	faf42223          	sw	a5,-92(s0)
2040695a:	fa842783          	lw	a5,-88(s0)
2040695e:	0d87a783          	lw	a5,216(a5)
20406962:	fa442583          	lw	a1,-92(s0)
20406966:	450d                	li	a0,3
20406968:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:130
}
2040696a:	0001                	nop
2040696c:	40f6                	lw	ra,92(sp)
2040696e:	42e6                	lw	t0,88(sp)
20406970:	4356                	lw	t1,84(sp)
20406972:	43c6                	lw	t2,80(sp)
20406974:	4436                	lw	s0,76(sp)
20406976:	4526                	lw	a0,72(sp)
20406978:	4596                	lw	a1,68(sp)
2040697a:	4606                	lw	a2,64(sp)
2040697c:	56f2                	lw	a3,60(sp)
2040697e:	5762                	lw	a4,56(sp)
20406980:	57d2                	lw	a5,52(sp)
20406982:	5842                	lw	a6,48(sp)
20406984:	58b2                	lw	a7,44(sp)
20406986:	5e22                	lw	t3,40(sp)
20406988:	5e92                	lw	t4,36(sp)
2040698a:	5f02                	lw	t5,32(sp)
2040698c:	4ff2                	lw	t6,28(sp)
2040698e:	6125                	addi	sp,sp,96
20406990:	30200073          	mret

20406994 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20406994:	7179                	addi	sp,sp,-48
20406996:	d606                	sw	ra,44(sp)
20406998:	d422                	sw	s0,40(sp)
2040699a:	1800                	addi	s0,sp,48
2040699c:	fca42e23          	sw	a0,-36(s0)
204069a0:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204069a4:	33d9                	jal	2040676a <__metal_myhart_id>
204069a6:	872a                	mv	a4,a0
204069a8:	070a                	slli	a4,a4,0x2
204069aa:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
204069ae:	97ba                	add	a5,a5,a4
204069b0:	439c                	lw	a5,0(a5)
204069b2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
204069b6:	342027f3          	csrr	a5,mcause
204069ba:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
204069be:	fec42783          	lw	a5,-20(s0)
204069c2:	c79d                	beqz	a5,204069f0 <__metal_default_sw_handler+0x5c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204069c4:	fec42503          	lw	a0,-20(s0)
204069c8:	d29ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
204069cc:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
204069d0:	fe842783          	lw	a5,-24(s0)
204069d4:	3ff7f793          	andi	a5,a5,1023
204069d8:	fe442703          	lw	a4,-28(s0)
204069dc:	0e878793          	addi	a5,a5,232
204069e0:	078a                	slli	a5,a5,0x2
204069e2:	97ba                	add	a5,a5,a4
204069e4:	439c                	lw	a5,0(a5)
204069e6:	fdc42583          	lw	a1,-36(s0)
204069ea:	fec42503          	lw	a0,-20(s0)
204069ee:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
204069f0:	0001                	nop
204069f2:	50b2                	lw	ra,44(sp)
204069f4:	5422                	lw	s0,40(sp)
204069f6:	6145                	addi	sp,sp,48
204069f8:	8082                	ret

204069fa <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
204069fa:	711d                	addi	sp,sp,-96
204069fc:	ce86                	sw	ra,92(sp)
204069fe:	cc96                	sw	t0,88(sp)
20406a00:	ca9a                	sw	t1,84(sp)
20406a02:	c89e                	sw	t2,80(sp)
20406a04:	c6a2                	sw	s0,76(sp)
20406a06:	c4aa                	sw	a0,72(sp)
20406a08:	c2ae                	sw	a1,68(sp)
20406a0a:	c0b2                	sw	a2,64(sp)
20406a0c:	de36                	sw	a3,60(sp)
20406a0e:	dc3a                	sw	a4,56(sp)
20406a10:	da3e                	sw	a5,52(sp)
20406a12:	d842                	sw	a6,48(sp)
20406a14:	d646                	sw	a7,44(sp)
20406a16:	d472                	sw	t3,40(sp)
20406a18:	d276                	sw	t4,36(sp)
20406a1a:	d07a                	sw	t5,32(sp)
20406a1c:	ce7e                	sw	t6,28(sp)
20406a1e:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20406a20:	d4bff0ef          	jal	ra,2040676a <__metal_myhart_id>
20406a24:	872a                	mv	a4,a0
20406a26:	070a                	slli	a4,a4,0x2
20406a28:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20406a2c:	97ba                	add	a5,a5,a4
20406a2e:	439c                	lw	a5,0(a5)
20406a30:	faf42623          	sw	a5,-84(s0)
20406a34:	fac42783          	lw	a5,-84(s0)
20406a38:	c78d                	beqz	a5,20406a62 <metal_timer_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20406a3a:	fac42503          	lw	a0,-84(s0)
20406a3e:	cb3ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20406a42:	faa42423          	sw	a0,-88(s0)
20406a46:	fa842783          	lw	a5,-88(s0)
20406a4a:	1407a783          	lw	a5,320(a5)
20406a4e:	faf42223          	sw	a5,-92(s0)
20406a52:	fa842783          	lw	a5,-88(s0)
20406a56:	1387a783          	lw	a5,312(a5)
20406a5a:	fa442583          	lw	a1,-92(s0)
20406a5e:	451d                	li	a0,7
20406a60:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:150
}
20406a62:	0001                	nop
20406a64:	40f6                	lw	ra,92(sp)
20406a66:	42e6                	lw	t0,88(sp)
20406a68:	4356                	lw	t1,84(sp)
20406a6a:	43c6                	lw	t2,80(sp)
20406a6c:	4436                	lw	s0,76(sp)
20406a6e:	4526                	lw	a0,72(sp)
20406a70:	4596                	lw	a1,68(sp)
20406a72:	4606                	lw	a2,64(sp)
20406a74:	56f2                	lw	a3,60(sp)
20406a76:	5762                	lw	a4,56(sp)
20406a78:	57d2                	lw	a5,52(sp)
20406a7a:	5842                	lw	a6,48(sp)
20406a7c:	58b2                	lw	a7,44(sp)
20406a7e:	5e22                	lw	t3,40(sp)
20406a80:	5e92                	lw	t4,36(sp)
20406a82:	5f02                	lw	t5,32(sp)
20406a84:	4ff2                	lw	t6,28(sp)
20406a86:	6125                	addi	sp,sp,96
20406a88:	30200073          	mret

20406a8c <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20406a8c:	1101                	addi	sp,sp,-32
20406a8e:	ce22                	sw	s0,28(sp)
20406a90:	1000                	addi	s0,sp,32
20406a92:	fea42623          	sw	a0,-20(s0)
20406a96:	feb42423          	sw	a1,-24(s0)
20406a9a:	0001                	nop
20406a9c:	4472                	lw	s0,28(sp)
20406a9e:	6105                	addi	sp,sp,32
20406aa0:	8082                	ret

20406aa2 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20406aa2:	7179                	addi	sp,sp,-48
20406aa4:	d606                	sw	ra,44(sp)
20406aa6:	d422                	sw	s0,40(sp)
20406aa8:	1800                	addi	s0,sp,48
20406aaa:	fca42e23          	sw	a0,-36(s0)
20406aae:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20406ab2:	cb9ff0ef          	jal	ra,2040676a <__metal_myhart_id>
20406ab6:	87aa                	mv	a5,a0
20406ab8:	853e                	mv	a0,a5
20406aba:	c85ff0ef          	jal	ra,2040673e <__metal_driver_cpu_get>
20406abe:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20406ac2:	fec42503          	lw	a0,-20(s0)
20406ac6:	278010ef          	jal	ra,20407d3e <__metal_driver_cpu_mtime_get>
20406aca:	fea42023          	sw	a0,-32(s0)
20406ace:	feb42223          	sw	a1,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20406ad2:	fe042783          	lw	a5,-32(s0)
20406ad6:	fe442803          	lw	a6,-28(s0)
20406ada:	45a9                	li	a1,10
20406adc:	4601                	li	a2,0
20406ade:	00b786b3          	add	a3,a5,a1
20406ae2:	8536                	mv	a0,a3
20406ae4:	00f53533          	sltu	a0,a0,a5
20406ae8:	00c80733          	add	a4,a6,a2
20406aec:	00e507b3          	add	a5,a0,a4
20406af0:	873e                	mv	a4,a5
20406af2:	87b6                	mv	a5,a3
20406af4:	883a                	mv	a6,a4
20406af6:	85be                	mv	a1,a5
20406af8:	8642                	mv	a2,a6
20406afa:	fec42503          	lw	a0,-20(s0)
20406afe:	2a6010ef          	jal	ra,20407da4 <__metal_driver_cpu_mtimecmp_set>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:160
}
20406b02:	0001                	nop
20406b04:	50b2                	lw	ra,44(sp)
20406b06:	5422                	lw	s0,40(sp)
20406b08:	6145                	addi	sp,sp,48
20406b0a:	8082                	ret
	...

20406b80 <__metal_exception_handler>:
__metal_exception_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20406b80:	7119                	addi	sp,sp,-128
20406b82:	de86                	sw	ra,124(sp)
20406b84:	dc96                	sw	t0,120(sp)
20406b86:	da9a                	sw	t1,116(sp)
20406b88:	d89e                	sw	t2,112(sp)
20406b8a:	d6a2                	sw	s0,108(sp)
20406b8c:	d4aa                	sw	a0,104(sp)
20406b8e:	d2ae                	sw	a1,100(sp)
20406b90:	d0b2                	sw	a2,96(sp)
20406b92:	ceb6                	sw	a3,92(sp)
20406b94:	ccba                	sw	a4,88(sp)
20406b96:	cabe                	sw	a5,84(sp)
20406b98:	c8c2                	sw	a6,80(sp)
20406b9a:	c6c6                	sw	a7,76(sp)
20406b9c:	c4f2                	sw	t3,72(sp)
20406b9e:	c2f6                	sw	t4,68(sp)
20406ba0:	c0fa                	sw	t5,64(sp)
20406ba2:	de7e                	sw	t6,60(sp)
20406ba4:	0100                	addi	s0,sp,128
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406ba6:	bc5ff0ef          	jal	ra,2040676a <__metal_myhart_id>
20406baa:	872a                	mv	a4,a0
20406bac:	070a                	slli	a4,a4,0x2
20406bae:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20406bb2:	97ba                	add	a5,a5,a4
20406bb4:	439c                	lw	a5,0(a5)
20406bb6:	faf42623          	sw	a5,-84(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20406bba:	342027f3          	csrr	a5,mcause
20406bbe:	faf42423          	sw	a5,-88(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20406bc2:	341027f3          	csrr	a5,mepc
20406bc6:	faf42223          	sw	a5,-92(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20406bca:	343027f3          	csrr	a5,mtval
20406bce:	faf42023          	sw	a5,-96(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20406bd2:	305027f3          	csrr	a5,mtvec
20406bd6:	f8f42e23          	sw	a5,-100(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20406bda:	fac42783          	lw	a5,-84(s0)
20406bde:	cbfd                	beqz	a5,20406cd4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406be0:	fac42503          	lw	a0,-84(s0)
20406be4:	b0dff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20406be8:	f8a42c23          	sw	a0,-104(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20406bec:	fa842783          	lw	a5,-88(s0)
20406bf0:	3ff7f793          	andi	a5,a5,1023
20406bf4:	f8f42a23          	sw	a5,-108(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20406bf8:	fa842783          	lw	a5,-88(s0)
20406bfc:	0a07de63          	bgez	a5,20406cb8 <__metal_exception_handler+0x138>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20406c00:	f9442703          	lw	a4,-108(s0)
20406c04:	08000793          	li	a5,128
20406c08:	02f71263          	bne	a4,a5,20406c2c <__metal_exception_handler+0xac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20406c0c:	f9842783          	lw	a5,-104(s0)
20406c10:	3987a783          	lw	a5,920(a5)
20406c14:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20406c18:	f9842783          	lw	a5,-104(s0)
20406c1c:	3907a783          	lw	a5,912(a5)
20406c20:	f9042583          	lw	a1,-112(s0)
20406c24:	f9442503          	lw	a0,-108(s0)
20406c28:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20406c2a:	a06d                	j	20406cd4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20406c2c:	f9442703          	lw	a4,-108(s0)
20406c30:	47ad                	li	a5,11
20406c32:	00e7d763          	bge	a5,a4,20406c40 <__metal_exception_handler+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20406c36:	f9c42783          	lw	a5,-100(s0)
20406c3a:	03f7f793          	andi	a5,a5,63
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20406c3e:	ef9d                	bnez	a5,20406c7c <__metal_exception_handler+0xfc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20406c40:	f9842683          	lw	a3,-104(s0)
20406c44:	f9442703          	lw	a4,-108(s0)
20406c48:	87ba                	mv	a5,a4
20406c4a:	0786                	slli	a5,a5,0x1
20406c4c:	97ba                	add	a5,a5,a4
20406c4e:	078e                	slli	a5,a5,0x3
20406c50:	97b6                	add	a5,a5,a3
20406c52:	0987a783          	lw	a5,152(a5)
20406c56:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20406c5a:	f9842683          	lw	a3,-104(s0)
20406c5e:	f9442703          	lw	a4,-108(s0)
20406c62:	87ba                	mv	a5,a4
20406c64:	0786                	slli	a5,a5,0x1
20406c66:	97ba                	add	a5,a5,a4
20406c68:	078e                	slli	a5,a5,0x3
20406c6a:	97b6                	add	a5,a5,a3
20406c6c:	0907a783          	lw	a5,144(a5)
20406c70:	f9042583          	lw	a1,-112(s0)
20406c74:	f9442503          	lw	a0,-108(s0)
20406c78:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20406c7a:	a8a9                	j	20406cd4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20406c7c:	f9c42783          	lw	a5,-100(s0)
20406c80:	03f7f713          	andi	a4,a5,63
20406c84:	4789                	li	a5,2
20406c86:	04f71763          	bne	a4,a5,20406cd4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20406c8a:	307027f3          	csrr	a5,mtvt
20406c8e:	f8f42623          	sw	a5,-116(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20406c92:	f9842783          	lw	a5,-104(s0)
20406c96:	0dc7a783          	lw	a5,220(a5)
20406c9a:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20406c9e:	f8c42783          	lw	a5,-116(s0)
20406ca2:	439c                	lw	a5,0(a5)
20406ca4:	f8f42423          	sw	a5,-120(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20406ca8:	f8842783          	lw	a5,-120(s0)
20406cac:	f9042583          	lw	a1,-112(s0)
20406cb0:	f9442503          	lw	a0,-108(s0)
20406cb4:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20406cb6:	a839                	j	20406cd4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20406cb8:	f9842703          	lw	a4,-104(s0)
20406cbc:	f9442783          	lw	a5,-108(s0)
20406cc0:	0e878793          	addi	a5,a5,232
20406cc4:	078a                	slli	a5,a5,0x2
20406cc6:	97ba                	add	a5,a5,a4
20406cc8:	439c                	lw	a5,0(a5)
20406cca:	f9442583          	lw	a1,-108(s0)
20406cce:	fac42503          	lw	a0,-84(s0)
20406cd2:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20406cd4:	50f6                	lw	ra,124(sp)
20406cd6:	52e6                	lw	t0,120(sp)
20406cd8:	5356                	lw	t1,116(sp)
20406cda:	53c6                	lw	t2,112(sp)
20406cdc:	5436                	lw	s0,108(sp)
20406cde:	5526                	lw	a0,104(sp)
20406ce0:	5596                	lw	a1,100(sp)
20406ce2:	5606                	lw	a2,96(sp)
20406ce4:	46f6                	lw	a3,92(sp)
20406ce6:	4766                	lw	a4,88(sp)
20406ce8:	47d6                	lw	a5,84(sp)
20406cea:	4846                	lw	a6,80(sp)
20406cec:	48b6                	lw	a7,76(sp)
20406cee:	4e26                	lw	t3,72(sp)
20406cf0:	4e96                	lw	t4,68(sp)
20406cf2:	4f06                	lw	t5,64(sp)
20406cf4:	5ff2                	lw	t6,60(sp)
20406cf6:	6109                	addi	sp,sp,128
20406cf8:	30200073          	mret
	...

20406d76 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20406d76:	711d                	addi	sp,sp,-96
20406d78:	ce86                	sw	ra,92(sp)
20406d7a:	cc96                	sw	t0,88(sp)
20406d7c:	ca9a                	sw	t1,84(sp)
20406d7e:	c89e                	sw	t2,80(sp)
20406d80:	c6a2                	sw	s0,76(sp)
20406d82:	c4aa                	sw	a0,72(sp)
20406d84:	c2ae                	sw	a1,68(sp)
20406d86:	c0b2                	sw	a2,64(sp)
20406d88:	de36                	sw	a3,60(sp)
20406d8a:	dc3a                	sw	a4,56(sp)
20406d8c:	da3e                	sw	a5,52(sp)
20406d8e:	d842                	sw	a6,48(sp)
20406d90:	d646                	sw	a7,44(sp)
20406d92:	d472                	sw	t3,40(sp)
20406d94:	d276                	sw	t4,36(sp)
20406d96:	d07a                	sw	t5,32(sp)
20406d98:	ce7e                	sw	t6,28(sp)
20406d9a:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20406d9c:	9cfff0ef          	jal	ra,2040676a <__metal_myhart_id>
20406da0:	872a                	mv	a4,a0
20406da2:	070a                	slli	a4,a4,0x2
20406da4:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20406da8:	97ba                	add	a5,a5,a4
20406daa:	439c                	lw	a5,0(a5)
20406dac:	faf42623          	sw	a5,-84(s0)
20406db0:	fac42783          	lw	a5,-84(s0)
20406db4:	c78d                	beqz	a5,20406dde <metal_lc0_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20406db6:	fac42503          	lw	a0,-84(s0)
20406dba:	937ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20406dbe:	faa42423          	sw	a0,-88(s0)
20406dc2:	fa842783          	lw	a5,-88(s0)
20406dc6:	2187a783          	lw	a5,536(a5)
20406dca:	faf42223          	sw	a5,-92(s0)
20406dce:	fa842783          	lw	a5,-88(s0)
20406dd2:	2107a783          	lw	a5,528(a5)
20406dd6:	fa442583          	lw	a1,-92(s0)
20406dda:	4541                	li	a0,16
20406ddc:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
}
20406dde:	0001                	nop
20406de0:	40f6                	lw	ra,92(sp)
20406de2:	42e6                	lw	t0,88(sp)
20406de4:	4356                	lw	t1,84(sp)
20406de6:	43c6                	lw	t2,80(sp)
20406de8:	4436                	lw	s0,76(sp)
20406dea:	4526                	lw	a0,72(sp)
20406dec:	4596                	lw	a1,68(sp)
20406dee:	4606                	lw	a2,64(sp)
20406df0:	56f2                	lw	a3,60(sp)
20406df2:	5762                	lw	a4,56(sp)
20406df4:	57d2                	lw	a5,52(sp)
20406df6:	5842                	lw	a6,48(sp)
20406df8:	58b2                	lw	a7,44(sp)
20406dfa:	5e22                	lw	t3,40(sp)
20406dfc:	5e92                	lw	t4,36(sp)
20406dfe:	5f02                	lw	t5,32(sp)
20406e00:	4ff2                	lw	t6,28(sp)
20406e02:	6125                	addi	sp,sp,96
20406e04:	30200073          	mret

20406e08 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20406e08:	711d                	addi	sp,sp,-96
20406e0a:	ce86                	sw	ra,92(sp)
20406e0c:	cc96                	sw	t0,88(sp)
20406e0e:	ca9a                	sw	t1,84(sp)
20406e10:	c89e                	sw	t2,80(sp)
20406e12:	c6a2                	sw	s0,76(sp)
20406e14:	c4aa                	sw	a0,72(sp)
20406e16:	c2ae                	sw	a1,68(sp)
20406e18:	c0b2                	sw	a2,64(sp)
20406e1a:	de36                	sw	a3,60(sp)
20406e1c:	dc3a                	sw	a4,56(sp)
20406e1e:	da3e                	sw	a5,52(sp)
20406e20:	d842                	sw	a6,48(sp)
20406e22:	d646                	sw	a7,44(sp)
20406e24:	d472                	sw	t3,40(sp)
20406e26:	d276                	sw	t4,36(sp)
20406e28:	d07a                	sw	t5,32(sp)
20406e2a:	ce7e                	sw	t6,28(sp)
20406e2c:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20406e2e:	93dff0ef          	jal	ra,2040676a <__metal_myhart_id>
20406e32:	872a                	mv	a4,a0
20406e34:	070a                	slli	a4,a4,0x2
20406e36:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20406e3a:	97ba                	add	a5,a5,a4
20406e3c:	439c                	lw	a5,0(a5)
20406e3e:	faf42623          	sw	a5,-84(s0)
20406e42:	fac42783          	lw	a5,-84(s0)
20406e46:	c78d                	beqz	a5,20406e70 <metal_lc1_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20406e48:	fac42503          	lw	a0,-84(s0)
20406e4c:	8a5ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20406e50:	faa42423          	sw	a0,-88(s0)
20406e54:	fa842783          	lw	a5,-88(s0)
20406e58:	2307a783          	lw	a5,560(a5)
20406e5c:	faf42223          	sw	a5,-92(s0)
20406e60:	fa842783          	lw	a5,-88(s0)
20406e64:	2287a783          	lw	a5,552(a5)
20406e68:	fa442583          	lw	a1,-92(s0)
20406e6c:	4545                	li	a0,17
20406e6e:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:221
}
20406e70:	0001                	nop
20406e72:	40f6                	lw	ra,92(sp)
20406e74:	42e6                	lw	t0,88(sp)
20406e76:	4356                	lw	t1,84(sp)
20406e78:	43c6                	lw	t2,80(sp)
20406e7a:	4436                	lw	s0,76(sp)
20406e7c:	4526                	lw	a0,72(sp)
20406e7e:	4596                	lw	a1,68(sp)
20406e80:	4606                	lw	a2,64(sp)
20406e82:	56f2                	lw	a3,60(sp)
20406e84:	5762                	lw	a4,56(sp)
20406e86:	57d2                	lw	a5,52(sp)
20406e88:	5842                	lw	a6,48(sp)
20406e8a:	58b2                	lw	a7,44(sp)
20406e8c:	5e22                	lw	t3,40(sp)
20406e8e:	5e92                	lw	t4,36(sp)
20406e90:	5f02                	lw	t5,32(sp)
20406e92:	4ff2                	lw	t6,28(sp)
20406e94:	6125                	addi	sp,sp,96
20406e96:	30200073          	mret

20406e9a <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20406e9a:	711d                	addi	sp,sp,-96
20406e9c:	ce86                	sw	ra,92(sp)
20406e9e:	cc96                	sw	t0,88(sp)
20406ea0:	ca9a                	sw	t1,84(sp)
20406ea2:	c89e                	sw	t2,80(sp)
20406ea4:	c6a2                	sw	s0,76(sp)
20406ea6:	c4aa                	sw	a0,72(sp)
20406ea8:	c2ae                	sw	a1,68(sp)
20406eaa:	c0b2                	sw	a2,64(sp)
20406eac:	de36                	sw	a3,60(sp)
20406eae:	dc3a                	sw	a4,56(sp)
20406eb0:	da3e                	sw	a5,52(sp)
20406eb2:	d842                	sw	a6,48(sp)
20406eb4:	d646                	sw	a7,44(sp)
20406eb6:	d472                	sw	t3,40(sp)
20406eb8:	d276                	sw	t4,36(sp)
20406eba:	d07a                	sw	t5,32(sp)
20406ebc:	ce7e                	sw	t6,28(sp)
20406ebe:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20406ec0:	8abff0ef          	jal	ra,2040676a <__metal_myhart_id>
20406ec4:	872a                	mv	a4,a0
20406ec6:	070a                	slli	a4,a4,0x2
20406ec8:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20406ecc:	97ba                	add	a5,a5,a4
20406ece:	439c                	lw	a5,0(a5)
20406ed0:	faf42623          	sw	a5,-84(s0)
20406ed4:	fac42783          	lw	a5,-84(s0)
20406ed8:	c78d                	beqz	a5,20406f02 <metal_lc2_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20406eda:	fac42503          	lw	a0,-84(s0)
20406ede:	813ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20406ee2:	faa42423          	sw	a0,-88(s0)
20406ee6:	fa842783          	lw	a5,-88(s0)
20406eea:	2487a783          	lw	a5,584(a5)
20406eee:	faf42223          	sw	a5,-92(s0)
20406ef2:	fa842783          	lw	a5,-88(s0)
20406ef6:	2407a783          	lw	a5,576(a5)
20406efa:	fa442583          	lw	a1,-92(s0)
20406efe:	4549                	li	a0,18
20406f00:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
}
20406f02:	0001                	nop
20406f04:	40f6                	lw	ra,92(sp)
20406f06:	42e6                	lw	t0,88(sp)
20406f08:	4356                	lw	t1,84(sp)
20406f0a:	43c6                	lw	t2,80(sp)
20406f0c:	4436                	lw	s0,76(sp)
20406f0e:	4526                	lw	a0,72(sp)
20406f10:	4596                	lw	a1,68(sp)
20406f12:	4606                	lw	a2,64(sp)
20406f14:	56f2                	lw	a3,60(sp)
20406f16:	5762                	lw	a4,56(sp)
20406f18:	57d2                	lw	a5,52(sp)
20406f1a:	5842                	lw	a6,48(sp)
20406f1c:	58b2                	lw	a7,44(sp)
20406f1e:	5e22                	lw	t3,40(sp)
20406f20:	5e92                	lw	t4,36(sp)
20406f22:	5f02                	lw	t5,32(sp)
20406f24:	4ff2                	lw	t6,28(sp)
20406f26:	6125                	addi	sp,sp,96
20406f28:	30200073          	mret

20406f2c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20406f2c:	711d                	addi	sp,sp,-96
20406f2e:	ce86                	sw	ra,92(sp)
20406f30:	cc96                	sw	t0,88(sp)
20406f32:	ca9a                	sw	t1,84(sp)
20406f34:	c89e                	sw	t2,80(sp)
20406f36:	c6a2                	sw	s0,76(sp)
20406f38:	c4aa                	sw	a0,72(sp)
20406f3a:	c2ae                	sw	a1,68(sp)
20406f3c:	c0b2                	sw	a2,64(sp)
20406f3e:	de36                	sw	a3,60(sp)
20406f40:	dc3a                	sw	a4,56(sp)
20406f42:	da3e                	sw	a5,52(sp)
20406f44:	d842                	sw	a6,48(sp)
20406f46:	d646                	sw	a7,44(sp)
20406f48:	d472                	sw	t3,40(sp)
20406f4a:	d276                	sw	t4,36(sp)
20406f4c:	d07a                	sw	t5,32(sp)
20406f4e:	ce7e                	sw	t6,28(sp)
20406f50:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20406f52:	819ff0ef          	jal	ra,2040676a <__metal_myhart_id>
20406f56:	872a                	mv	a4,a0
20406f58:	070a                	slli	a4,a4,0x2
20406f5a:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20406f5e:	97ba                	add	a5,a5,a4
20406f60:	439c                	lw	a5,0(a5)
20406f62:	faf42623          	sw	a5,-84(s0)
20406f66:	fac42783          	lw	a5,-84(s0)
20406f6a:	c78d                	beqz	a5,20406f94 <metal_lc3_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20406f6c:	fac42503          	lw	a0,-84(s0)
20406f70:	f80ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20406f74:	faa42423          	sw	a0,-88(s0)
20406f78:	fa842783          	lw	a5,-88(s0)
20406f7c:	2607a783          	lw	a5,608(a5)
20406f80:	faf42223          	sw	a5,-92(s0)
20406f84:	fa842783          	lw	a5,-88(s0)
20406f88:	2587a783          	lw	a5,600(a5)
20406f8c:	fa442583          	lw	a1,-92(s0)
20406f90:	454d                	li	a0,19
20406f92:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:231
}
20406f94:	0001                	nop
20406f96:	40f6                	lw	ra,92(sp)
20406f98:	42e6                	lw	t0,88(sp)
20406f9a:	4356                	lw	t1,84(sp)
20406f9c:	43c6                	lw	t2,80(sp)
20406f9e:	4436                	lw	s0,76(sp)
20406fa0:	4526                	lw	a0,72(sp)
20406fa2:	4596                	lw	a1,68(sp)
20406fa4:	4606                	lw	a2,64(sp)
20406fa6:	56f2                	lw	a3,60(sp)
20406fa8:	5762                	lw	a4,56(sp)
20406faa:	57d2                	lw	a5,52(sp)
20406fac:	5842                	lw	a6,48(sp)
20406fae:	58b2                	lw	a7,44(sp)
20406fb0:	5e22                	lw	t3,40(sp)
20406fb2:	5e92                	lw	t4,36(sp)
20406fb4:	5f02                	lw	t5,32(sp)
20406fb6:	4ff2                	lw	t6,28(sp)
20406fb8:	6125                	addi	sp,sp,96
20406fba:	30200073          	mret

20406fbe <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20406fbe:	711d                	addi	sp,sp,-96
20406fc0:	ce86                	sw	ra,92(sp)
20406fc2:	cc96                	sw	t0,88(sp)
20406fc4:	ca9a                	sw	t1,84(sp)
20406fc6:	c89e                	sw	t2,80(sp)
20406fc8:	c6a2                	sw	s0,76(sp)
20406fca:	c4aa                	sw	a0,72(sp)
20406fcc:	c2ae                	sw	a1,68(sp)
20406fce:	c0b2                	sw	a2,64(sp)
20406fd0:	de36                	sw	a3,60(sp)
20406fd2:	dc3a                	sw	a4,56(sp)
20406fd4:	da3e                	sw	a5,52(sp)
20406fd6:	d842                	sw	a6,48(sp)
20406fd8:	d646                	sw	a7,44(sp)
20406fda:	d472                	sw	t3,40(sp)
20406fdc:	d276                	sw	t4,36(sp)
20406fde:	d07a                	sw	t5,32(sp)
20406fe0:	ce7e                	sw	t6,28(sp)
20406fe2:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20406fe4:	f86ff0ef          	jal	ra,2040676a <__metal_myhart_id>
20406fe8:	872a                	mv	a4,a0
20406fea:	070a                	slli	a4,a4,0x2
20406fec:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20406ff0:	97ba                	add	a5,a5,a4
20406ff2:	439c                	lw	a5,0(a5)
20406ff4:	faf42623          	sw	a5,-84(s0)
20406ff8:	fac42783          	lw	a5,-84(s0)
20406ffc:	c78d                	beqz	a5,20407026 <metal_lc4_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20406ffe:	fac42503          	lw	a0,-84(s0)
20407002:	eeeff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407006:	faa42423          	sw	a0,-88(s0)
2040700a:	fa842783          	lw	a5,-88(s0)
2040700e:	2787a783          	lw	a5,632(a5)
20407012:	faf42223          	sw	a5,-92(s0)
20407016:	fa842783          	lw	a5,-88(s0)
2040701a:	2707a783          	lw	a5,624(a5)
2040701e:	fa442583          	lw	a1,-92(s0)
20407022:	4551                	li	a0,20
20407024:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
}
20407026:	0001                	nop
20407028:	40f6                	lw	ra,92(sp)
2040702a:	42e6                	lw	t0,88(sp)
2040702c:	4356                	lw	t1,84(sp)
2040702e:	43c6                	lw	t2,80(sp)
20407030:	4436                	lw	s0,76(sp)
20407032:	4526                	lw	a0,72(sp)
20407034:	4596                	lw	a1,68(sp)
20407036:	4606                	lw	a2,64(sp)
20407038:	56f2                	lw	a3,60(sp)
2040703a:	5762                	lw	a4,56(sp)
2040703c:	57d2                	lw	a5,52(sp)
2040703e:	5842                	lw	a6,48(sp)
20407040:	58b2                	lw	a7,44(sp)
20407042:	5e22                	lw	t3,40(sp)
20407044:	5e92                	lw	t4,36(sp)
20407046:	5f02                	lw	t5,32(sp)
20407048:	4ff2                	lw	t6,28(sp)
2040704a:	6125                	addi	sp,sp,96
2040704c:	30200073          	mret

20407050 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20407050:	711d                	addi	sp,sp,-96
20407052:	ce86                	sw	ra,92(sp)
20407054:	cc96                	sw	t0,88(sp)
20407056:	ca9a                	sw	t1,84(sp)
20407058:	c89e                	sw	t2,80(sp)
2040705a:	c6a2                	sw	s0,76(sp)
2040705c:	c4aa                	sw	a0,72(sp)
2040705e:	c2ae                	sw	a1,68(sp)
20407060:	c0b2                	sw	a2,64(sp)
20407062:	de36                	sw	a3,60(sp)
20407064:	dc3a                	sw	a4,56(sp)
20407066:	da3e                	sw	a5,52(sp)
20407068:	d842                	sw	a6,48(sp)
2040706a:	d646                	sw	a7,44(sp)
2040706c:	d472                	sw	t3,40(sp)
2040706e:	d276                	sw	t4,36(sp)
20407070:	d07a                	sw	t5,32(sp)
20407072:	ce7e                	sw	t6,28(sp)
20407074:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20407076:	ef4ff0ef          	jal	ra,2040676a <__metal_myhart_id>
2040707a:	872a                	mv	a4,a0
2040707c:	070a                	slli	a4,a4,0x2
2040707e:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20407082:	97ba                	add	a5,a5,a4
20407084:	439c                	lw	a5,0(a5)
20407086:	faf42623          	sw	a5,-84(s0)
2040708a:	fac42783          	lw	a5,-84(s0)
2040708e:	c78d                	beqz	a5,204070b8 <metal_lc5_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20407090:	fac42503          	lw	a0,-84(s0)
20407094:	e5cff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407098:	faa42423          	sw	a0,-88(s0)
2040709c:	fa842783          	lw	a5,-88(s0)
204070a0:	2907a783          	lw	a5,656(a5)
204070a4:	faf42223          	sw	a5,-92(s0)
204070a8:	fa842783          	lw	a5,-88(s0)
204070ac:	2887a783          	lw	a5,648(a5)
204070b0:	fa442583          	lw	a1,-92(s0)
204070b4:	4555                	li	a0,21
204070b6:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
}
204070b8:	0001                	nop
204070ba:	40f6                	lw	ra,92(sp)
204070bc:	42e6                	lw	t0,88(sp)
204070be:	4356                	lw	t1,84(sp)
204070c0:	43c6                	lw	t2,80(sp)
204070c2:	4436                	lw	s0,76(sp)
204070c4:	4526                	lw	a0,72(sp)
204070c6:	4596                	lw	a1,68(sp)
204070c8:	4606                	lw	a2,64(sp)
204070ca:	56f2                	lw	a3,60(sp)
204070cc:	5762                	lw	a4,56(sp)
204070ce:	57d2                	lw	a5,52(sp)
204070d0:	5842                	lw	a6,48(sp)
204070d2:	58b2                	lw	a7,44(sp)
204070d4:	5e22                	lw	t3,40(sp)
204070d6:	5e92                	lw	t4,36(sp)
204070d8:	5f02                	lw	t5,32(sp)
204070da:	4ff2                	lw	t6,28(sp)
204070dc:	6125                	addi	sp,sp,96
204070de:	30200073          	mret

204070e2 <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
204070e2:	711d                	addi	sp,sp,-96
204070e4:	ce86                	sw	ra,92(sp)
204070e6:	cc96                	sw	t0,88(sp)
204070e8:	ca9a                	sw	t1,84(sp)
204070ea:	c89e                	sw	t2,80(sp)
204070ec:	c6a2                	sw	s0,76(sp)
204070ee:	c4aa                	sw	a0,72(sp)
204070f0:	c2ae                	sw	a1,68(sp)
204070f2:	c0b2                	sw	a2,64(sp)
204070f4:	de36                	sw	a3,60(sp)
204070f6:	dc3a                	sw	a4,56(sp)
204070f8:	da3e                	sw	a5,52(sp)
204070fa:	d842                	sw	a6,48(sp)
204070fc:	d646                	sw	a7,44(sp)
204070fe:	d472                	sw	t3,40(sp)
20407100:	d276                	sw	t4,36(sp)
20407102:	d07a                	sw	t5,32(sp)
20407104:	ce7e                	sw	t6,28(sp)
20407106:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20407108:	e62ff0ef          	jal	ra,2040676a <__metal_myhart_id>
2040710c:	872a                	mv	a4,a0
2040710e:	070a                	slli	a4,a4,0x2
20407110:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20407114:	97ba                	add	a5,a5,a4
20407116:	439c                	lw	a5,0(a5)
20407118:	faf42623          	sw	a5,-84(s0)
2040711c:	fac42783          	lw	a5,-84(s0)
20407120:	c78d                	beqz	a5,2040714a <metal_lc6_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20407122:	fac42503          	lw	a0,-84(s0)
20407126:	dcaff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
2040712a:	faa42423          	sw	a0,-88(s0)
2040712e:	fa842783          	lw	a5,-88(s0)
20407132:	2a87a783          	lw	a5,680(a5)
20407136:	faf42223          	sw	a5,-92(s0)
2040713a:	fa842783          	lw	a5,-88(s0)
2040713e:	2a07a783          	lw	a5,672(a5)
20407142:	fa442583          	lw	a1,-92(s0)
20407146:	4559                	li	a0,22
20407148:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:246
}
2040714a:	0001                	nop
2040714c:	40f6                	lw	ra,92(sp)
2040714e:	42e6                	lw	t0,88(sp)
20407150:	4356                	lw	t1,84(sp)
20407152:	43c6                	lw	t2,80(sp)
20407154:	4436                	lw	s0,76(sp)
20407156:	4526                	lw	a0,72(sp)
20407158:	4596                	lw	a1,68(sp)
2040715a:	4606                	lw	a2,64(sp)
2040715c:	56f2                	lw	a3,60(sp)
2040715e:	5762                	lw	a4,56(sp)
20407160:	57d2                	lw	a5,52(sp)
20407162:	5842                	lw	a6,48(sp)
20407164:	58b2                	lw	a7,44(sp)
20407166:	5e22                	lw	t3,40(sp)
20407168:	5e92                	lw	t4,36(sp)
2040716a:	5f02                	lw	t5,32(sp)
2040716c:	4ff2                	lw	t6,28(sp)
2040716e:	6125                	addi	sp,sp,96
20407170:	30200073          	mret

20407174 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20407174:	711d                	addi	sp,sp,-96
20407176:	ce86                	sw	ra,92(sp)
20407178:	cc96                	sw	t0,88(sp)
2040717a:	ca9a                	sw	t1,84(sp)
2040717c:	c89e                	sw	t2,80(sp)
2040717e:	c6a2                	sw	s0,76(sp)
20407180:	c4aa                	sw	a0,72(sp)
20407182:	c2ae                	sw	a1,68(sp)
20407184:	c0b2                	sw	a2,64(sp)
20407186:	de36                	sw	a3,60(sp)
20407188:	dc3a                	sw	a4,56(sp)
2040718a:	da3e                	sw	a5,52(sp)
2040718c:	d842                	sw	a6,48(sp)
2040718e:	d646                	sw	a7,44(sp)
20407190:	d472                	sw	t3,40(sp)
20407192:	d276                	sw	t4,36(sp)
20407194:	d07a                	sw	t5,32(sp)
20407196:	ce7e                	sw	t6,28(sp)
20407198:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2040719a:	dd0ff0ef          	jal	ra,2040676a <__metal_myhart_id>
2040719e:	872a                	mv	a4,a0
204071a0:	070a                	slli	a4,a4,0x2
204071a2:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
204071a6:	97ba                	add	a5,a5,a4
204071a8:	439c                	lw	a5,0(a5)
204071aa:	faf42623          	sw	a5,-84(s0)
204071ae:	fac42783          	lw	a5,-84(s0)
204071b2:	c78d                	beqz	a5,204071dc <metal_lc7_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
204071b4:	fac42503          	lw	a0,-84(s0)
204071b8:	d38ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
204071bc:	faa42423          	sw	a0,-88(s0)
204071c0:	fa842783          	lw	a5,-88(s0)
204071c4:	2c07a783          	lw	a5,704(a5)
204071c8:	faf42223          	sw	a5,-92(s0)
204071cc:	fa842783          	lw	a5,-88(s0)
204071d0:	2b87a783          	lw	a5,696(a5)
204071d4:	fa442583          	lw	a1,-92(s0)
204071d8:	455d                	li	a0,23
204071da:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:251
}
204071dc:	0001                	nop
204071de:	40f6                	lw	ra,92(sp)
204071e0:	42e6                	lw	t0,88(sp)
204071e2:	4356                	lw	t1,84(sp)
204071e4:	43c6                	lw	t2,80(sp)
204071e6:	4436                	lw	s0,76(sp)
204071e8:	4526                	lw	a0,72(sp)
204071ea:	4596                	lw	a1,68(sp)
204071ec:	4606                	lw	a2,64(sp)
204071ee:	56f2                	lw	a3,60(sp)
204071f0:	5762                	lw	a4,56(sp)
204071f2:	57d2                	lw	a5,52(sp)
204071f4:	5842                	lw	a6,48(sp)
204071f6:	58b2                	lw	a7,44(sp)
204071f8:	5e22                	lw	t3,40(sp)
204071fa:	5e92                	lw	t4,36(sp)
204071fc:	5f02                	lw	t5,32(sp)
204071fe:	4ff2                	lw	t6,28(sp)
20407200:	6125                	addi	sp,sp,96
20407202:	30200073          	mret

20407206 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20407206:	711d                	addi	sp,sp,-96
20407208:	ce86                	sw	ra,92(sp)
2040720a:	cc96                	sw	t0,88(sp)
2040720c:	ca9a                	sw	t1,84(sp)
2040720e:	c89e                	sw	t2,80(sp)
20407210:	c6a2                	sw	s0,76(sp)
20407212:	c4aa                	sw	a0,72(sp)
20407214:	c2ae                	sw	a1,68(sp)
20407216:	c0b2                	sw	a2,64(sp)
20407218:	de36                	sw	a3,60(sp)
2040721a:	dc3a                	sw	a4,56(sp)
2040721c:	da3e                	sw	a5,52(sp)
2040721e:	d842                	sw	a6,48(sp)
20407220:	d646                	sw	a7,44(sp)
20407222:	d472                	sw	t3,40(sp)
20407224:	d276                	sw	t4,36(sp)
20407226:	d07a                	sw	t5,32(sp)
20407228:	ce7e                	sw	t6,28(sp)
2040722a:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
2040722c:	d3eff0ef          	jal	ra,2040676a <__metal_myhart_id>
20407230:	872a                	mv	a4,a0
20407232:	070a                	slli	a4,a4,0x2
20407234:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20407238:	97ba                	add	a5,a5,a4
2040723a:	439c                	lw	a5,0(a5)
2040723c:	faf42623          	sw	a5,-84(s0)
20407240:	fac42783          	lw	a5,-84(s0)
20407244:	c78d                	beqz	a5,2040726e <metal_lc8_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20407246:	fac42503          	lw	a0,-84(s0)
2040724a:	ca6ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
2040724e:	faa42423          	sw	a0,-88(s0)
20407252:	fa842783          	lw	a5,-88(s0)
20407256:	2d87a783          	lw	a5,728(a5)
2040725a:	faf42223          	sw	a5,-92(s0)
2040725e:	fa842783          	lw	a5,-88(s0)
20407262:	2d07a783          	lw	a5,720(a5)
20407266:	fa442583          	lw	a1,-92(s0)
2040726a:	4561                	li	a0,24
2040726c:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
}
2040726e:	0001                	nop
20407270:	40f6                	lw	ra,92(sp)
20407272:	42e6                	lw	t0,88(sp)
20407274:	4356                	lw	t1,84(sp)
20407276:	43c6                	lw	t2,80(sp)
20407278:	4436                	lw	s0,76(sp)
2040727a:	4526                	lw	a0,72(sp)
2040727c:	4596                	lw	a1,68(sp)
2040727e:	4606                	lw	a2,64(sp)
20407280:	56f2                	lw	a3,60(sp)
20407282:	5762                	lw	a4,56(sp)
20407284:	57d2                	lw	a5,52(sp)
20407286:	5842                	lw	a6,48(sp)
20407288:	58b2                	lw	a7,44(sp)
2040728a:	5e22                	lw	t3,40(sp)
2040728c:	5e92                	lw	t4,36(sp)
2040728e:	5f02                	lw	t5,32(sp)
20407290:	4ff2                	lw	t6,28(sp)
20407292:	6125                	addi	sp,sp,96
20407294:	30200073          	mret

20407298 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20407298:	711d                	addi	sp,sp,-96
2040729a:	ce86                	sw	ra,92(sp)
2040729c:	cc96                	sw	t0,88(sp)
2040729e:	ca9a                	sw	t1,84(sp)
204072a0:	c89e                	sw	t2,80(sp)
204072a2:	c6a2                	sw	s0,76(sp)
204072a4:	c4aa                	sw	a0,72(sp)
204072a6:	c2ae                	sw	a1,68(sp)
204072a8:	c0b2                	sw	a2,64(sp)
204072aa:	de36                	sw	a3,60(sp)
204072ac:	dc3a                	sw	a4,56(sp)
204072ae:	da3e                	sw	a5,52(sp)
204072b0:	d842                	sw	a6,48(sp)
204072b2:	d646                	sw	a7,44(sp)
204072b4:	d472                	sw	t3,40(sp)
204072b6:	d276                	sw	t4,36(sp)
204072b8:	d07a                	sw	t5,32(sp)
204072ba:	ce7e                	sw	t6,28(sp)
204072bc:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
204072be:	cacff0ef          	jal	ra,2040676a <__metal_myhart_id>
204072c2:	872a                	mv	a4,a0
204072c4:	070a                	slli	a4,a4,0x2
204072c6:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
204072ca:	97ba                	add	a5,a5,a4
204072cc:	439c                	lw	a5,0(a5)
204072ce:	faf42623          	sw	a5,-84(s0)
204072d2:	fac42783          	lw	a5,-84(s0)
204072d6:	c78d                	beqz	a5,20407300 <metal_lc9_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
204072d8:	fac42503          	lw	a0,-84(s0)
204072dc:	c14ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
204072e0:	faa42423          	sw	a0,-88(s0)
204072e4:	fa842783          	lw	a5,-88(s0)
204072e8:	2f07a783          	lw	a5,752(a5)
204072ec:	faf42223          	sw	a5,-92(s0)
204072f0:	fa842783          	lw	a5,-88(s0)
204072f4:	2e87a783          	lw	a5,744(a5)
204072f8:	fa442583          	lw	a1,-92(s0)
204072fc:	4565                	li	a0,25
204072fe:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261
}
20407300:	0001                	nop
20407302:	40f6                	lw	ra,92(sp)
20407304:	42e6                	lw	t0,88(sp)
20407306:	4356                	lw	t1,84(sp)
20407308:	43c6                	lw	t2,80(sp)
2040730a:	4436                	lw	s0,76(sp)
2040730c:	4526                	lw	a0,72(sp)
2040730e:	4596                	lw	a1,68(sp)
20407310:	4606                	lw	a2,64(sp)
20407312:	56f2                	lw	a3,60(sp)
20407314:	5762                	lw	a4,56(sp)
20407316:	57d2                	lw	a5,52(sp)
20407318:	5842                	lw	a6,48(sp)
2040731a:	58b2                	lw	a7,44(sp)
2040731c:	5e22                	lw	t3,40(sp)
2040731e:	5e92                	lw	t4,36(sp)
20407320:	5f02                	lw	t5,32(sp)
20407322:	4ff2                	lw	t6,28(sp)
20407324:	6125                	addi	sp,sp,96
20407326:	30200073          	mret

2040732a <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
2040732a:	711d                	addi	sp,sp,-96
2040732c:	ce86                	sw	ra,92(sp)
2040732e:	cc96                	sw	t0,88(sp)
20407330:	ca9a                	sw	t1,84(sp)
20407332:	c89e                	sw	t2,80(sp)
20407334:	c6a2                	sw	s0,76(sp)
20407336:	c4aa                	sw	a0,72(sp)
20407338:	c2ae                	sw	a1,68(sp)
2040733a:	c0b2                	sw	a2,64(sp)
2040733c:	de36                	sw	a3,60(sp)
2040733e:	dc3a                	sw	a4,56(sp)
20407340:	da3e                	sw	a5,52(sp)
20407342:	d842                	sw	a6,48(sp)
20407344:	d646                	sw	a7,44(sp)
20407346:	d472                	sw	t3,40(sp)
20407348:	d276                	sw	t4,36(sp)
2040734a:	d07a                	sw	t5,32(sp)
2040734c:	ce7e                	sw	t6,28(sp)
2040734e:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20407350:	c1aff0ef          	jal	ra,2040676a <__metal_myhart_id>
20407354:	872a                	mv	a4,a0
20407356:	070a                	slli	a4,a4,0x2
20407358:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
2040735c:	97ba                	add	a5,a5,a4
2040735e:	439c                	lw	a5,0(a5)
20407360:	faf42623          	sw	a5,-84(s0)
20407364:	fac42783          	lw	a5,-84(s0)
20407368:	c78d                	beqz	a5,20407392 <metal_lc10_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2040736a:	fac42503          	lw	a0,-84(s0)
2040736e:	b82ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407372:	faa42423          	sw	a0,-88(s0)
20407376:	fa842783          	lw	a5,-88(s0)
2040737a:	3087a783          	lw	a5,776(a5)
2040737e:	faf42223          	sw	a5,-92(s0)
20407382:	fa842783          	lw	a5,-88(s0)
20407386:	3007a783          	lw	a5,768(a5)
2040738a:	fa442583          	lw	a1,-92(s0)
2040738e:	4569                	li	a0,26
20407390:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:267
}
20407392:	0001                	nop
20407394:	40f6                	lw	ra,92(sp)
20407396:	42e6                	lw	t0,88(sp)
20407398:	4356                	lw	t1,84(sp)
2040739a:	43c6                	lw	t2,80(sp)
2040739c:	4436                	lw	s0,76(sp)
2040739e:	4526                	lw	a0,72(sp)
204073a0:	4596                	lw	a1,68(sp)
204073a2:	4606                	lw	a2,64(sp)
204073a4:	56f2                	lw	a3,60(sp)
204073a6:	5762                	lw	a4,56(sp)
204073a8:	57d2                	lw	a5,52(sp)
204073aa:	5842                	lw	a6,48(sp)
204073ac:	58b2                	lw	a7,44(sp)
204073ae:	5e22                	lw	t3,40(sp)
204073b0:	5e92                	lw	t4,36(sp)
204073b2:	5f02                	lw	t5,32(sp)
204073b4:	4ff2                	lw	t6,28(sp)
204073b6:	6125                	addi	sp,sp,96
204073b8:	30200073          	mret

204073bc <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
204073bc:	711d                	addi	sp,sp,-96
204073be:	ce86                	sw	ra,92(sp)
204073c0:	cc96                	sw	t0,88(sp)
204073c2:	ca9a                	sw	t1,84(sp)
204073c4:	c89e                	sw	t2,80(sp)
204073c6:	c6a2                	sw	s0,76(sp)
204073c8:	c4aa                	sw	a0,72(sp)
204073ca:	c2ae                	sw	a1,68(sp)
204073cc:	c0b2                	sw	a2,64(sp)
204073ce:	de36                	sw	a3,60(sp)
204073d0:	dc3a                	sw	a4,56(sp)
204073d2:	da3e                	sw	a5,52(sp)
204073d4:	d842                	sw	a6,48(sp)
204073d6:	d646                	sw	a7,44(sp)
204073d8:	d472                	sw	t3,40(sp)
204073da:	d276                	sw	t4,36(sp)
204073dc:	d07a                	sw	t5,32(sp)
204073de:	ce7e                	sw	t6,28(sp)
204073e0:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
204073e2:	b88ff0ef          	jal	ra,2040676a <__metal_myhart_id>
204073e6:	872a                	mv	a4,a0
204073e8:	070a                	slli	a4,a4,0x2
204073ea:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
204073ee:	97ba                	add	a5,a5,a4
204073f0:	439c                	lw	a5,0(a5)
204073f2:	faf42623          	sw	a5,-84(s0)
204073f6:	fac42783          	lw	a5,-84(s0)
204073fa:	c78d                	beqz	a5,20407424 <metal_lc11_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
204073fc:	fac42503          	lw	a0,-84(s0)
20407400:	af0ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407404:	faa42423          	sw	a0,-88(s0)
20407408:	fa842783          	lw	a5,-88(s0)
2040740c:	3207a783          	lw	a5,800(a5)
20407410:	faf42223          	sw	a5,-92(s0)
20407414:	fa842783          	lw	a5,-88(s0)
20407418:	3187a783          	lw	a5,792(a5)
2040741c:	fa442583          	lw	a1,-92(s0)
20407420:	456d                	li	a0,27
20407422:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:273
}
20407424:	0001                	nop
20407426:	40f6                	lw	ra,92(sp)
20407428:	42e6                	lw	t0,88(sp)
2040742a:	4356                	lw	t1,84(sp)
2040742c:	43c6                	lw	t2,80(sp)
2040742e:	4436                	lw	s0,76(sp)
20407430:	4526                	lw	a0,72(sp)
20407432:	4596                	lw	a1,68(sp)
20407434:	4606                	lw	a2,64(sp)
20407436:	56f2                	lw	a3,60(sp)
20407438:	5762                	lw	a4,56(sp)
2040743a:	57d2                	lw	a5,52(sp)
2040743c:	5842                	lw	a6,48(sp)
2040743e:	58b2                	lw	a7,44(sp)
20407440:	5e22                	lw	t3,40(sp)
20407442:	5e92                	lw	t4,36(sp)
20407444:	5f02                	lw	t5,32(sp)
20407446:	4ff2                	lw	t6,28(sp)
20407448:	6125                	addi	sp,sp,96
2040744a:	30200073          	mret

2040744e <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
2040744e:	711d                	addi	sp,sp,-96
20407450:	ce86                	sw	ra,92(sp)
20407452:	cc96                	sw	t0,88(sp)
20407454:	ca9a                	sw	t1,84(sp)
20407456:	c89e                	sw	t2,80(sp)
20407458:	c6a2                	sw	s0,76(sp)
2040745a:	c4aa                	sw	a0,72(sp)
2040745c:	c2ae                	sw	a1,68(sp)
2040745e:	c0b2                	sw	a2,64(sp)
20407460:	de36                	sw	a3,60(sp)
20407462:	dc3a                	sw	a4,56(sp)
20407464:	da3e                	sw	a5,52(sp)
20407466:	d842                	sw	a6,48(sp)
20407468:	d646                	sw	a7,44(sp)
2040746a:	d472                	sw	t3,40(sp)
2040746c:	d276                	sw	t4,36(sp)
2040746e:	d07a                	sw	t5,32(sp)
20407470:	ce7e                	sw	t6,28(sp)
20407472:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20407474:	af6ff0ef          	jal	ra,2040676a <__metal_myhart_id>
20407478:	872a                	mv	a4,a0
2040747a:	070a                	slli	a4,a4,0x2
2040747c:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20407480:	97ba                	add	a5,a5,a4
20407482:	439c                	lw	a5,0(a5)
20407484:	faf42623          	sw	a5,-84(s0)
20407488:	fac42783          	lw	a5,-84(s0)
2040748c:	c78d                	beqz	a5,204074b6 <metal_lc12_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
2040748e:	fac42503          	lw	a0,-84(s0)
20407492:	a5eff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407496:	faa42423          	sw	a0,-88(s0)
2040749a:	fa842783          	lw	a5,-88(s0)
2040749e:	3387a783          	lw	a5,824(a5)
204074a2:	faf42223          	sw	a5,-92(s0)
204074a6:	fa842783          	lw	a5,-88(s0)
204074aa:	3307a783          	lw	a5,816(a5)
204074ae:	fa442583          	lw	a1,-92(s0)
204074b2:	4571                	li	a0,28
204074b4:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:279
}
204074b6:	0001                	nop
204074b8:	40f6                	lw	ra,92(sp)
204074ba:	42e6                	lw	t0,88(sp)
204074bc:	4356                	lw	t1,84(sp)
204074be:	43c6                	lw	t2,80(sp)
204074c0:	4436                	lw	s0,76(sp)
204074c2:	4526                	lw	a0,72(sp)
204074c4:	4596                	lw	a1,68(sp)
204074c6:	4606                	lw	a2,64(sp)
204074c8:	56f2                	lw	a3,60(sp)
204074ca:	5762                	lw	a4,56(sp)
204074cc:	57d2                	lw	a5,52(sp)
204074ce:	5842                	lw	a6,48(sp)
204074d0:	58b2                	lw	a7,44(sp)
204074d2:	5e22                	lw	t3,40(sp)
204074d4:	5e92                	lw	t4,36(sp)
204074d6:	5f02                	lw	t5,32(sp)
204074d8:	4ff2                	lw	t6,28(sp)
204074da:	6125                	addi	sp,sp,96
204074dc:	30200073          	mret

204074e0 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
204074e0:	711d                	addi	sp,sp,-96
204074e2:	ce86                	sw	ra,92(sp)
204074e4:	cc96                	sw	t0,88(sp)
204074e6:	ca9a                	sw	t1,84(sp)
204074e8:	c89e                	sw	t2,80(sp)
204074ea:	c6a2                	sw	s0,76(sp)
204074ec:	c4aa                	sw	a0,72(sp)
204074ee:	c2ae                	sw	a1,68(sp)
204074f0:	c0b2                	sw	a2,64(sp)
204074f2:	de36                	sw	a3,60(sp)
204074f4:	dc3a                	sw	a4,56(sp)
204074f6:	da3e                	sw	a5,52(sp)
204074f8:	d842                	sw	a6,48(sp)
204074fa:	d646                	sw	a7,44(sp)
204074fc:	d472                	sw	t3,40(sp)
204074fe:	d276                	sw	t4,36(sp)
20407500:	d07a                	sw	t5,32(sp)
20407502:	ce7e                	sw	t6,28(sp)
20407504:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20407506:	a64ff0ef          	jal	ra,2040676a <__metal_myhart_id>
2040750a:	872a                	mv	a4,a0
2040750c:	070a                	slli	a4,a4,0x2
2040750e:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20407512:	97ba                	add	a5,a5,a4
20407514:	439c                	lw	a5,0(a5)
20407516:	faf42623          	sw	a5,-84(s0)
2040751a:	fac42783          	lw	a5,-84(s0)
2040751e:	c78d                	beqz	a5,20407548 <metal_lc13_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20407520:	fac42503          	lw	a0,-84(s0)
20407524:	9ccff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407528:	faa42423          	sw	a0,-88(s0)
2040752c:	fa842783          	lw	a5,-88(s0)
20407530:	3507a783          	lw	a5,848(a5)
20407534:	faf42223          	sw	a5,-92(s0)
20407538:	fa842783          	lw	a5,-88(s0)
2040753c:	3487a783          	lw	a5,840(a5)
20407540:	fa442583          	lw	a1,-92(s0)
20407544:	4575                	li	a0,29
20407546:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:285
}
20407548:	0001                	nop
2040754a:	40f6                	lw	ra,92(sp)
2040754c:	42e6                	lw	t0,88(sp)
2040754e:	4356                	lw	t1,84(sp)
20407550:	43c6                	lw	t2,80(sp)
20407552:	4436                	lw	s0,76(sp)
20407554:	4526                	lw	a0,72(sp)
20407556:	4596                	lw	a1,68(sp)
20407558:	4606                	lw	a2,64(sp)
2040755a:	56f2                	lw	a3,60(sp)
2040755c:	5762                	lw	a4,56(sp)
2040755e:	57d2                	lw	a5,52(sp)
20407560:	5842                	lw	a6,48(sp)
20407562:	58b2                	lw	a7,44(sp)
20407564:	5e22                	lw	t3,40(sp)
20407566:	5e92                	lw	t4,36(sp)
20407568:	5f02                	lw	t5,32(sp)
2040756a:	4ff2                	lw	t6,28(sp)
2040756c:	6125                	addi	sp,sp,96
2040756e:	30200073          	mret

20407572 <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20407572:	711d                	addi	sp,sp,-96
20407574:	ce86                	sw	ra,92(sp)
20407576:	cc96                	sw	t0,88(sp)
20407578:	ca9a                	sw	t1,84(sp)
2040757a:	c89e                	sw	t2,80(sp)
2040757c:	c6a2                	sw	s0,76(sp)
2040757e:	c4aa                	sw	a0,72(sp)
20407580:	c2ae                	sw	a1,68(sp)
20407582:	c0b2                	sw	a2,64(sp)
20407584:	de36                	sw	a3,60(sp)
20407586:	dc3a                	sw	a4,56(sp)
20407588:	da3e                	sw	a5,52(sp)
2040758a:	d842                	sw	a6,48(sp)
2040758c:	d646                	sw	a7,44(sp)
2040758e:	d472                	sw	t3,40(sp)
20407590:	d276                	sw	t4,36(sp)
20407592:	d07a                	sw	t5,32(sp)
20407594:	ce7e                	sw	t6,28(sp)
20407596:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20407598:	9d2ff0ef          	jal	ra,2040676a <__metal_myhart_id>
2040759c:	872a                	mv	a4,a0
2040759e:	070a                	slli	a4,a4,0x2
204075a0:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
204075a4:	97ba                	add	a5,a5,a4
204075a6:	439c                	lw	a5,0(a5)
204075a8:	faf42623          	sw	a5,-84(s0)
204075ac:	fac42783          	lw	a5,-84(s0)
204075b0:	c78d                	beqz	a5,204075da <metal_lc14_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
204075b2:	fac42503          	lw	a0,-84(s0)
204075b6:	93aff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
204075ba:	faa42423          	sw	a0,-88(s0)
204075be:	fa842783          	lw	a5,-88(s0)
204075c2:	3687a783          	lw	a5,872(a5)
204075c6:	faf42223          	sw	a5,-92(s0)
204075ca:	fa842783          	lw	a5,-88(s0)
204075ce:	3607a783          	lw	a5,864(a5)
204075d2:	fa442583          	lw	a1,-92(s0)
204075d6:	4579                	li	a0,30
204075d8:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:291
}
204075da:	0001                	nop
204075dc:	40f6                	lw	ra,92(sp)
204075de:	42e6                	lw	t0,88(sp)
204075e0:	4356                	lw	t1,84(sp)
204075e2:	43c6                	lw	t2,80(sp)
204075e4:	4436                	lw	s0,76(sp)
204075e6:	4526                	lw	a0,72(sp)
204075e8:	4596                	lw	a1,68(sp)
204075ea:	4606                	lw	a2,64(sp)
204075ec:	56f2                	lw	a3,60(sp)
204075ee:	5762                	lw	a4,56(sp)
204075f0:	57d2                	lw	a5,52(sp)
204075f2:	5842                	lw	a6,48(sp)
204075f4:	58b2                	lw	a7,44(sp)
204075f6:	5e22                	lw	t3,40(sp)
204075f8:	5e92                	lw	t4,36(sp)
204075fa:	5f02                	lw	t5,32(sp)
204075fc:	4ff2                	lw	t6,28(sp)
204075fe:	6125                	addi	sp,sp,96
20407600:	30200073          	mret

20407604 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20407604:	711d                	addi	sp,sp,-96
20407606:	ce86                	sw	ra,92(sp)
20407608:	cc96                	sw	t0,88(sp)
2040760a:	ca9a                	sw	t1,84(sp)
2040760c:	c89e                	sw	t2,80(sp)
2040760e:	c6a2                	sw	s0,76(sp)
20407610:	c4aa                	sw	a0,72(sp)
20407612:	c2ae                	sw	a1,68(sp)
20407614:	c0b2                	sw	a2,64(sp)
20407616:	de36                	sw	a3,60(sp)
20407618:	dc3a                	sw	a4,56(sp)
2040761a:	da3e                	sw	a5,52(sp)
2040761c:	d842                	sw	a6,48(sp)
2040761e:	d646                	sw	a7,44(sp)
20407620:	d472                	sw	t3,40(sp)
20407622:	d276                	sw	t4,36(sp)
20407624:	d07a                	sw	t5,32(sp)
20407626:	ce7e                	sw	t6,28(sp)
20407628:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
2040762a:	940ff0ef          	jal	ra,2040676a <__metal_myhart_id>
2040762e:	872a                	mv	a4,a0
20407630:	070a                	slli	a4,a4,0x2
20407632:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_cpu_table>
20407636:	97ba                	add	a5,a5,a4
20407638:	439c                	lw	a5,0(a5)
2040763a:	faf42623          	sw	a5,-84(s0)
2040763e:	fac42783          	lw	a5,-84(s0)
20407642:	c78d                	beqz	a5,2040766c <metal_lc15_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20407644:	fac42503          	lw	a0,-84(s0)
20407648:	8a8ff0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
2040764c:	faa42423          	sw	a0,-88(s0)
20407650:	fa842783          	lw	a5,-88(s0)
20407654:	3807a783          	lw	a5,896(a5)
20407658:	faf42223          	sw	a5,-92(s0)
2040765c:	fa842783          	lw	a5,-88(s0)
20407660:	3787a783          	lw	a5,888(a5)
20407664:	fa442583          	lw	a1,-92(s0)
20407668:	457d                	li	a0,31
2040766a:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
}
2040766c:	0001                	nop
2040766e:	40f6                	lw	ra,92(sp)
20407670:	42e6                	lw	t0,88(sp)
20407672:	4356                	lw	t1,84(sp)
20407674:	43c6                	lw	t2,80(sp)
20407676:	4436                	lw	s0,76(sp)
20407678:	4526                	lw	a0,72(sp)
2040767a:	4596                	lw	a1,68(sp)
2040767c:	4606                	lw	a2,64(sp)
2040767e:	56f2                	lw	a3,60(sp)
20407680:	5762                	lw	a4,56(sp)
20407682:	57d2                	lw	a5,52(sp)
20407684:	5842                	lw	a6,48(sp)
20407686:	58b2                	lw	a7,44(sp)
20407688:	5e22                	lw	t3,40(sp)
2040768a:	5e92                	lw	t4,36(sp)
2040768c:	5f02                	lw	t5,32(sp)
2040768e:	4ff2                	lw	t6,28(sp)
20407690:	6125                	addi	sp,sp,96
20407692:	30200073          	mret

20407696 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20407696:	1101                	addi	sp,sp,-32
20407698:	ce22                	sw	s0,28(sp)
2040769a:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
2040769c:	305027f3          	csrr	a5,mtvec
204076a0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
204076a4:	fec42783          	lw	a5,-20(s0)
204076a8:	03f7f793          	andi	a5,a5,63
204076ac:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
204076b0:	fec42703          	lw	a4,-20(s0)
204076b4:	4789                	li	a5,2
204076b6:	00f70d63          	beq	a4,a5,204076d0 <__metal_controller_interrupt_vector_mode+0x3a>
204076ba:	fec42703          	lw	a4,-20(s0)
204076be:	478d                	li	a5,3
204076c0:	00f70a63          	beq	a4,a5,204076d4 <__metal_controller_interrupt_vector_mode+0x3e>
204076c4:	fec42703          	lw	a4,-20(s0)
204076c8:	4785                	li	a5,1
204076ca:	00f70763          	beq	a4,a5,204076d8 <__metal_controller_interrupt_vector_mode+0x42>
204076ce:	a039                	j	204076dc <__metal_controller_interrupt_vector_mode+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
204076d0:	478d                	li	a5,3
204076d2:	a031                	j	204076de <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
204076d4:	4791                	li	a5,4
204076d6:	a021                	j	204076de <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
204076d8:	4785                	li	a5,1
204076da:	a011                	j	204076de <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
204076dc:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
}
204076de:	853e                	mv	a0,a5
204076e0:	4472                	lw	s0,28(sp)
204076e2:	6105                	addi	sp,sp,32
204076e4:	8082                	ret

204076e6 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
204076e6:	7179                	addi	sp,sp,-48
204076e8:	d622                	sw	s0,44(sp)
204076ea:	1800                	addi	s0,sp,48
204076ec:	fca42e23          	sw	a0,-36(s0)
204076f0:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204076f4:	305027f3          	csrr	a5,mtvec
204076f8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
204076fc:	fec42783          	lw	a5,-20(s0)
20407700:	fc07f793          	andi	a5,a5,-64
20407704:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20407708:	fd842783          	lw	a5,-40(s0)
2040770c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20407710:	fdc42703          	lw	a4,-36(s0)
20407714:	4791                	li	a5,4
20407716:	04e7ee63          	bltu	a5,a4,20407772 <__metal_controller_interrupt_vector+0x8c>
2040771a:	fdc42783          	lw	a5,-36(s0)
2040771e:	00279713          	slli	a4,a5,0x2
20407722:	2fc18793          	addi	a5,gp,764 # 80001574 <__metal_driver_vtable_riscv_clint0+0x64>
20407726:	97ba                	add	a5,a5,a4
20407728:	439c                	lw	a5,0(a5)
2040772a:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2040772c:	fe842783          	lw	a5,-24(s0)
20407730:	30779073          	csrw	mtvt,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20407734:	fec42783          	lw	a5,-20(s0)
20407738:	0027e793          	ori	a5,a5,2
2040773c:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20407740:	a80d                	j	20407772 <__metal_controller_interrupt_vector+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20407742:	fe842783          	lw	a5,-24(s0)
20407746:	30779073          	csrw	mtvt,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
2040774a:	fec42783          	lw	a5,-20(s0)
2040774e:	0037e793          	ori	a5,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20407752:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20407756:	a831                	j	20407772 <__metal_controller_interrupt_vector+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20407758:	fe842783          	lw	a5,-24(s0)
2040775c:	0017e793          	ori	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20407760:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20407764:	a039                	j	20407772 <__metal_controller_interrupt_vector+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20407766:	fe842783          	lw	a5,-24(s0)
2040776a:	9bf1                	andi	a5,a5,-4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
2040776c:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20407770:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20407772:	0001                	nop
20407774:	5432                	lw	s0,44(sp)
20407776:	6145                	addi	sp,sp,48
20407778:	8082                	ret

2040777a <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
2040777a:	1101                	addi	sp,sp,-32
2040777c:	ce22                	sw	s0,28(sp)
2040777e:	1000                	addi	s0,sp,32
20407780:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20407784:	fec42703          	lw	a4,-20(s0)
20407788:	47ad                	li	a5,11
2040778a:	04f70263          	beq	a4,a5,204077ce <__metal_valid_interrupt_id+0x54>
2040778e:	fec42703          	lw	a4,-20(s0)
20407792:	47ad                	li	a5,11
20407794:	00e7cd63          	blt	a5,a4,204077ae <__metal_valid_interrupt_id+0x34>
20407798:	fec42703          	lw	a4,-20(s0)
2040779c:	478d                	li	a5,3
2040779e:	02f70863          	beq	a4,a5,204077ce <__metal_valid_interrupt_id+0x54>
204077a2:	fec42703          	lw	a4,-20(s0)
204077a6:	479d                	li	a5,7
204077a8:	02f70363          	beq	a4,a5,204077ce <__metal_valid_interrupt_id+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
204077ac:	a01d                	j	204077d2 <__metal_valid_interrupt_id+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204077ae:	fec42703          	lw	a4,-20(s0)
204077b2:	47c1                	li	a5,16
204077b4:	00f74f63          	blt	a4,a5,204077d2 <__metal_valid_interrupt_id+0x58>
204077b8:	fec42703          	lw	a4,-20(s0)
204077bc:	47fd                	li	a5,31
204077be:	00e7d863          	bge	a5,a4,204077ce <__metal_valid_interrupt_id+0x54>
204077c2:	fec42703          	lw	a4,-20(s0)
204077c6:	08000793          	li	a5,128
204077ca:	00f71463          	bne	a4,a5,204077d2 <__metal_valid_interrupt_id+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
204077ce:	4785                	li	a5,1
204077d0:	a019                	j	204077d6 <__metal_valid_interrupt_id+0x5c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
204077d2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
204077d4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:374
}
204077d6:	853e                	mv	a0,a5
204077d8:	4472                	lw	s0,28(sp)
204077da:	6105                	addi	sp,sp,32
204077dc:	8082                	ret

204077de <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
204077de:	7179                	addi	sp,sp,-48
204077e0:	d606                	sw	ra,44(sp)
204077e2:	d422                	sw	s0,40(sp)
204077e4:	1800                	addi	s0,sp,48
204077e6:	fca42e23          	sw	a0,-36(s0)
204077ea:	fcb42c23          	sw	a1,-40(s0)
204077ee:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
204077f2:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
204077f6:	fdc42783          	lw	a5,-36(s0)
204077fa:	e399                	bnez	a5,20407800 <__metal_local_interrupt_enable+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
204077fc:	57fd                	li	a5,-1
204077fe:	a079                	j	2040788c <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20407800:	fd842703          	lw	a4,-40(s0)
20407804:	47fd                	li	a5,31
20407806:	06e7ee63          	bltu	a5,a4,20407882 <__metal_local_interrupt_enable+0xa4>
2040780a:	fd842783          	lw	a5,-40(s0)
2040780e:	00279713          	slli	a4,a5,0x2
20407812:	31018793          	addi	a5,gp,784 # 80001588 <__metal_driver_vtable_riscv_clint0+0x78>
20407816:	97ba                	add	a5,a5,a4
20407818:	439c                	lw	a5,0(a5)
2040781a:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
2040781c:	fd442783          	lw	a5,-44(s0)
20407820:	c781                	beqz	a5,20407828 <__metal_local_interrupt_enable+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20407822:	f63fe0ef          	jal	ra,20406784 <__metal_interrupt_global_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20407826:	a08d                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20407828:	f75fe0ef          	jal	ra,2040679c <__metal_interrupt_global_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2040782c:	a8b1                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
2040782e:	fd442783          	lw	a5,-44(s0)
20407832:	c781                	beqz	a5,2040783a <__metal_local_interrupt_enable+0x5c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20407834:	f81fe0ef          	jal	ra,204067b4 <__metal_interrupt_software_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20407838:	a881                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2040783a:	f93fe0ef          	jal	ra,204067cc <__metal_interrupt_software_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
2040783e:	a0a9                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20407840:	fd442783          	lw	a5,-44(s0)
20407844:	c781                	beqz	a5,2040784c <__metal_local_interrupt_enable+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20407846:	f9ffe0ef          	jal	ra,204067e4 <__metal_interrupt_timer_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
2040784a:	a83d                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
2040784c:	fb3fe0ef          	jal	ra,204067fe <__metal_interrupt_timer_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20407850:	a825                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20407852:	fd442783          	lw	a5,-44(s0)
20407856:	c781                	beqz	a5,2040785e <__metal_local_interrupt_enable+0x80>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20407858:	fc1fe0ef          	jal	ra,20406818 <__metal_interrupt_external_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
2040785c:	a035                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
2040785e:	fd7fe0ef          	jal	ra,20406834 <__metal_interrupt_external_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20407862:	a01d                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20407864:	fd442783          	lw	a5,-44(s0)
20407868:	c799                	beqz	a5,20407876 <__metal_local_interrupt_enable+0x98>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
2040786a:	fd842783          	lw	a5,-40(s0)
2040786e:	853e                	mv	a0,a5
20407870:	fe1fe0ef          	jal	ra,20406850 <__metal_interrupt_local_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20407874:	a811                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20407876:	fd842783          	lw	a5,-40(s0)
2040787a:	853e                	mv	a0,a5
2040787c:	800ff0ef          	jal	ra,2040687c <__metal_interrupt_local_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20407880:	a021                	j	20407888 <__metal_local_interrupt_enable+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20407882:	57fd                	li	a5,-1
20407884:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20407888:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
}
2040788c:	853e                	mv	a0,a5
2040788e:	50b2                	lw	ra,44(sp)
20407890:	5422                	lw	s0,40(sp)
20407892:	6145                	addi	sp,sp,48
20407894:	8082                	ret

20407896 <__metal_exception_register>:
__metal_exception_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20407896:	7179                	addi	sp,sp,-48
20407898:	d622                	sw	s0,44(sp)
2040789a:	1800                	addi	s0,sp,48
2040789c:	fca42e23          	sw	a0,-36(s0)
204078a0:	fcb42c23          	sw	a1,-40(s0)
204078a4:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204078a8:	fdc42783          	lw	a5,-36(s0)
204078ac:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
204078b0:	fd842703          	lw	a4,-40(s0)
204078b4:	47ad                	li	a5,11
204078b6:	02e7c263          	blt	a5,a4,204078da <__metal_exception_register+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
204078ba:	fd442783          	lw	a5,-44(s0)
204078be:	cf91                	beqz	a5,204078da <__metal_exception_register+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
204078c0:	fec42703          	lw	a4,-20(s0)
204078c4:	fd842783          	lw	a5,-40(s0)
204078c8:	0e878793          	addi	a5,a5,232
204078cc:	078a                	slli	a5,a5,0x2
204078ce:	97ba                	add	a5,a5,a4
204078d0:	fd442703          	lw	a4,-44(s0)
204078d4:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
204078d6:	4781                	li	a5,0
204078d8:	a011                	j	204078dc <__metal_exception_register+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
204078da:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
}
204078dc:	853e                	mv	a0,a5
204078de:	5432                	lw	s0,44(sp)
204078e0:	6145                	addi	sp,sp,48
204078e2:	8082                	ret

204078e4 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
204078e4:	7179                	addi	sp,sp,-48
204078e6:	d606                	sw	ra,44(sp)
204078e8:	d422                	sw	s0,40(sp)
204078ea:	1800                	addi	s0,sp,48
204078ec:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204078f0:	fdc42783          	lw	a5,-36(s0)
204078f4:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
204078f8:	fe442783          	lw	a5,-28(s0)
204078fc:	43dc                	lw	a5,4(a5)
204078fe:	e3e1                	bnez	a5,204079be <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20407900:	fe042623          	sw	zero,-20(s0)
20407904:	a0b9                	j	20407952 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20407906:	fe442683          	lw	a3,-28(s0)
2040790a:	fec42703          	lw	a4,-20(s0)
2040790e:	87ba                	mv	a5,a4
20407910:	0786                	slli	a5,a5,0x1
20407912:	97ba                	add	a5,a5,a4
20407914:	078e                	slli	a5,a5,0x3
20407916:	97b6                	add	a5,a5,a3
20407918:	0807a823          	sw	zero,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
2040791c:	fe442683          	lw	a3,-28(s0)
20407920:	fec42703          	lw	a4,-20(s0)
20407924:	87ba                	mv	a5,a4
20407926:	0786                	slli	a5,a5,0x1
20407928:	97ba                	add	a5,a5,a4
2040792a:	078e                	slli	a5,a5,0x3
2040792c:	97b6                	add	a5,a5,a3
2040792e:	0807aa23          	sw	zero,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20407932:	fe442683          	lw	a3,-28(s0)
20407936:	fec42703          	lw	a4,-20(s0)
2040793a:	87ba                	mv	a5,a4
2040793c:	0786                	slli	a5,a5,0x1
2040793e:	97ba                	add	a5,a5,a4
20407940:	078e                	slli	a5,a5,0x3
20407942:	97b6                	add	a5,a5,a3
20407944:	0807ac23          	sw	zero,152(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20407948:	fec42783          	lw	a5,-20(s0)
2040794c:	0785                	addi	a5,a5,1
2040794e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20407952:	fec42703          	lw	a4,-20(s0)
20407956:	47fd                	li	a5,31
20407958:	fae7d7e3          	bge	a5,a4,20407906 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
2040795c:	fe042423          	sw	zero,-24(s0)
20407960:	a01d                	j	20407986 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20407962:	fe442703          	lw	a4,-28(s0)
20407966:	fe842783          	lw	a5,-24(s0)
2040796a:	0e878793          	addi	a5,a5,232
2040796e:	078a                	slli	a5,a5,0x2
20407970:	97ba                	add	a5,a5,a4
20407972:	20407737          	lui	a4,0x20407
20407976:	8a870713          	addi	a4,a4,-1880 # 204068a8 <__metal_default_exception_handler>
2040797a:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
2040797c:	fe842783          	lw	a5,-24(s0)
20407980:	0785                	addi	a5,a5,1
20407982:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20407986:	fe842703          	lw	a4,-24(s0)
2040798a:	47ad                	li	a5,11
2040798c:	fce7dbe3          	bge	a5,a4,20407962 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20407990:	305027f3          	csrr	a5,mtvec
20407994:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20407998:	204007b7          	lui	a5,0x20400
2040799c:	14478793          	addi	a5,a5,324 # 20400144 <early_trap_vector>
204079a0:	fe042703          	lw	a4,-32(s0)
204079a4:	00f71963          	bne	a4,a5,204079b6 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
204079a8:	204077b7          	lui	a5,0x20407
204079ac:	b8078593          	addi	a1,a5,-1152 # 20406b80 <__metal_exception_handler>
204079b0:	4501                	li	a0,0
204079b2:	d35ff0ef          	jal	ra,204076e6 <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
204079b6:	fe442783          	lw	a5,-28(s0)
204079ba:	4705                	li	a4,1
204079bc:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
204079be:	0001                	nop
204079c0:	50b2                	lw	ra,44(sp)
204079c2:	5422                	lw	s0,40(sp)
204079c4:	6145                	addi	sp,sp,48
204079c6:	8082                	ret

204079c8 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
204079c8:	7179                	addi	sp,sp,-48
204079ca:	d606                	sw	ra,44(sp)
204079cc:	d422                	sw	s0,40(sp)
204079ce:	1800                	addi	s0,sp,48
204079d0:	fca42e23          	sw	a0,-36(s0)
204079d4:	fcb42c23          	sw	a1,-40(s0)
204079d8:	fcc42a23          	sw	a2,-44(s0)
204079dc:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
204079e0:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204079e4:	fdc42783          	lw	a5,-36(s0)
204079e8:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
204079ec:	fd842503          	lw	a0,-40(s0)
204079f0:	d8bff0ef          	jal	ra,2040777a <__metal_valid_interrupt_id>
204079f4:	87aa                	mv	a5,a0
204079f6:	e399                	bnez	a5,204079fc <__metal_driver_riscv_cpu_controller_interrupt_register+0x34>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
204079f8:	57d5                	li	a5,-11
204079fa:	aa79                	j	20407b98 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204079fc:	fd842703          	lw	a4,-40(s0)
20407a00:	08000793          	li	a5,128
20407a04:	00f71863          	bne	a4,a5,20407a14 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20407a08:	c8fff0ef          	jal	ra,20407696 <__metal_controller_interrupt_vector_mode>
20407a0c:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20407a0e:	c399                	beqz	a5,20407a14 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20407a10:	57cd                	li	a5,-13
20407a12:	a259                	j	20407b98 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20407a14:	fd442783          	lw	a5,-44(s0)
20407a18:	cfb9                	beqz	a5,20407a76 <__metal_driver_riscv_cpu_controller_interrupt_register+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20407a1a:	fd842703          	lw	a4,-40(s0)
20407a1e:	08000793          	li	a5,128
20407a22:	00f71f63          	bne	a4,a5,20407a40 <__metal_driver_riscv_cpu_controller_interrupt_register+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20407a26:	fe842783          	lw	a5,-24(s0)
20407a2a:	fd442703          	lw	a4,-44(s0)
20407a2e:	38e7a823          	sw	a4,912(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20407a32:	fe842783          	lw	a5,-24(s0)
20407a36:	fd042703          	lw	a4,-48(s0)
20407a3a:	38e7ac23          	sw	a4,920(a5)
20407a3e:	aa99                	j	20407b94 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20407a40:	fe842683          	lw	a3,-24(s0)
20407a44:	fd842703          	lw	a4,-40(s0)
20407a48:	87ba                	mv	a5,a4
20407a4a:	0786                	slli	a5,a5,0x1
20407a4c:	97ba                	add	a5,a5,a4
20407a4e:	078e                	slli	a5,a5,0x3
20407a50:	97b6                	add	a5,a5,a3
20407a52:	fd442703          	lw	a4,-44(s0)
20407a56:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20407a5a:	fe842683          	lw	a3,-24(s0)
20407a5e:	fd842703          	lw	a4,-40(s0)
20407a62:	87ba                	mv	a5,a4
20407a64:	0786                	slli	a5,a5,0x1
20407a66:	97ba                	add	a5,a5,a4
20407a68:	078e                	slli	a5,a5,0x3
20407a6a:	97b6                	add	a5,a5,a3
20407a6c:	fd042703          	lw	a4,-48(s0)
20407a70:	08e7ac23          	sw	a4,152(a5)
20407a74:	a205                	j	20407b94 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20407a76:	fd842703          	lw	a4,-40(s0)
20407a7a:	47ad                	li	a5,11
20407a7c:	0cf70c63          	beq	a4,a5,20407b54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x18c>
20407a80:	fd842703          	lw	a4,-40(s0)
20407a84:	47ad                	li	a5,11
20407a86:	00e7cd63          	blt	a5,a4,20407aa0 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd8>
20407a8a:	fd842703          	lw	a4,-40(s0)
20407a8e:	478d                	li	a5,3
20407a90:	02f70963          	beq	a4,a5,20407ac2 <__metal_driver_riscv_cpu_controller_interrupt_register+0xfa>
20407a94:	fd842703          	lw	a4,-40(s0)
20407a98:	479d                	li	a5,7
20407a9a:	06f70163          	beq	a4,a5,20407afc <__metal_driver_riscv_cpu_controller_interrupt_register+0x134>
20407a9e:	a8c5                	j	20407b8e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c6>
20407aa0:	fd842703          	lw	a4,-40(s0)
20407aa4:	47c1                	li	a5,16
20407aa6:	0ef74463          	blt	a4,a5,20407b8e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c6>
20407aaa:	fd842703          	lw	a4,-40(s0)
20407aae:	47fd                	li	a5,31
20407ab0:	0ae7d263          	bge	a5,a4,20407b54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x18c>
20407ab4:	fd842703          	lw	a4,-40(s0)
20407ab8:	08000793          	li	a5,128
20407abc:	06f70d63          	beq	a4,a5,20407b36 <__metal_driver_riscv_cpu_controller_interrupt_register+0x16e>
20407ac0:	a0f9                	j	20407b8e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20407ac2:	fe842683          	lw	a3,-24(s0)
20407ac6:	fd842703          	lw	a4,-40(s0)
20407aca:	87ba                	mv	a5,a4
20407acc:	0786                	slli	a5,a5,0x1
20407ace:	97ba                	add	a5,a5,a4
20407ad0:	078e                	slli	a5,a5,0x3
20407ad2:	97b6                	add	a5,a5,a3
20407ad4:	20407737          	lui	a4,0x20407
20407ad8:	99470713          	addi	a4,a4,-1644 # 20406994 <__metal_default_sw_handler>
20407adc:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20407ae0:	fe842683          	lw	a3,-24(s0)
20407ae4:	fd842703          	lw	a4,-40(s0)
20407ae8:	87ba                	mv	a5,a4
20407aea:	0786                	slli	a5,a5,0x1
20407aec:	97ba                	add	a5,a5,a4
20407aee:	078e                	slli	a5,a5,0x3
20407af0:	97b6                	add	a5,a5,a3
20407af2:	fd042703          	lw	a4,-48(s0)
20407af6:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20407afa:	a869                	j	20407b94 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20407afc:	fe842683          	lw	a3,-24(s0)
20407b00:	fd842703          	lw	a4,-40(s0)
20407b04:	87ba                	mv	a5,a4
20407b06:	0786                	slli	a5,a5,0x1
20407b08:	97ba                	add	a5,a5,a4
20407b0a:	078e                	slli	a5,a5,0x3
20407b0c:	97b6                	add	a5,a5,a3
20407b0e:	20407737          	lui	a4,0x20407
20407b12:	aa270713          	addi	a4,a4,-1374 # 20406aa2 <__metal_default_timer_handler>
20407b16:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20407b1a:	fe842683          	lw	a3,-24(s0)
20407b1e:	fd842703          	lw	a4,-40(s0)
20407b22:	87ba                	mv	a5,a4
20407b24:	0786                	slli	a5,a5,0x1
20407b26:	97ba                	add	a5,a5,a4
20407b28:	078e                	slli	a5,a5,0x3
20407b2a:	97b6                	add	a5,a5,a3
20407b2c:	fd042703          	lw	a4,-48(s0)
20407b30:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20407b34:	a085                	j	20407b94 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20407b36:	fe842783          	lw	a5,-24(s0)
20407b3a:	20407737          	lui	a4,0x20407
20407b3e:	a8c70713          	addi	a4,a4,-1396 # 20406a8c <__metal_default_beu_handler>
20407b42:	38e7a823          	sw	a4,912(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20407b46:	fe842783          	lw	a5,-24(s0)
20407b4a:	fd042703          	lw	a4,-48(s0)
20407b4e:	38e7ac23          	sw	a4,920(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20407b52:	a089                	j	20407b94 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20407b54:	fe842683          	lw	a3,-24(s0)
20407b58:	fd842703          	lw	a4,-40(s0)
20407b5c:	87ba                	mv	a5,a4
20407b5e:	0786                	slli	a5,a5,0x1
20407b60:	97ba                	add	a5,a5,a4
20407b62:	078e                	slli	a5,a5,0x3
20407b64:	97b6                	add	a5,a5,a3
20407b66:	20407737          	lui	a4,0x20407
20407b6a:	8c070713          	addi	a4,a4,-1856 # 204068c0 <__metal_default_interrupt_handler>
20407b6e:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20407b72:	fe842683          	lw	a3,-24(s0)
20407b76:	fd842703          	lw	a4,-40(s0)
20407b7a:	87ba                	mv	a5,a4
20407b7c:	0786                	slli	a5,a5,0x1
20407b7e:	97ba                	add	a5,a5,a4
20407b80:	078e                	slli	a5,a5,0x3
20407b82:	97b6                	add	a5,a5,a3
20407b84:	fd042703          	lw	a4,-48(s0)
20407b88:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20407b8c:	a021                	j	20407b94 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20407b8e:	57d1                	li	a5,-12
20407b90:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20407b94:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:549
}
20407b98:	853e                	mv	a0,a5
20407b9a:	50b2                	lw	ra,44(sp)
20407b9c:	5422                	lw	s0,40(sp)
20407b9e:	6145                	addi	sp,sp,48
20407ba0:	8082                	ret

20407ba2 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20407ba2:	1101                	addi	sp,sp,-32
20407ba4:	ce06                	sw	ra,28(sp)
20407ba6:	cc22                	sw	s0,24(sp)
20407ba8:	1000                	addi	s0,sp,32
20407baa:	fea42623          	sw	a0,-20(s0)
20407bae:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20407bb2:	fe842783          	lw	a5,-24(s0)
20407bb6:	4605                	li	a2,1
20407bb8:	85be                	mv	a1,a5
20407bba:	fec42503          	lw	a0,-20(s0)
20407bbe:	c21ff0ef          	jal	ra,204077de <__metal_local_interrupt_enable>
20407bc2:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:554
}
20407bc4:	853e                	mv	a0,a5
20407bc6:	40f2                	lw	ra,28(sp)
20407bc8:	4462                	lw	s0,24(sp)
20407bca:	6105                	addi	sp,sp,32
20407bcc:	8082                	ret

20407bce <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20407bce:	1101                	addi	sp,sp,-32
20407bd0:	ce06                	sw	ra,28(sp)
20407bd2:	cc22                	sw	s0,24(sp)
20407bd4:	1000                	addi	s0,sp,32
20407bd6:	fea42623          	sw	a0,-20(s0)
20407bda:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20407bde:	fe842783          	lw	a5,-24(s0)
20407be2:	4601                	li	a2,0
20407be4:	85be                	mv	a1,a5
20407be6:	fec42503          	lw	a0,-20(s0)
20407bea:	bf5ff0ef          	jal	ra,204077de <__metal_local_interrupt_enable>
20407bee:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
}
20407bf0:	853e                	mv	a0,a5
20407bf2:	40f2                	lw	ra,28(sp)
20407bf4:	4462                	lw	s0,24(sp)
20407bf6:	6105                	addi	sp,sp,32
20407bf8:	8082                	ret

20407bfa <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20407bfa:	1101                	addi	sp,sp,-32
20407bfc:	ce06                	sw	ra,28(sp)
20407bfe:	cc22                	sw	s0,24(sp)
20407c00:	1000                	addi	s0,sp,32
20407c02:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20407c06:	a91ff0ef          	jal	ra,20407696 <__metal_controller_interrupt_vector_mode>
20407c0a:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:593
}
20407c0c:	853e                	mv	a0,a5
20407c0e:	40f2                	lw	ra,28(sp)
20407c10:	4462                	lw	s0,24(sp)
20407c12:	6105                	addi	sp,sp,32
20407c14:	8082                	ret

20407c16 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20407c16:	1101                	addi	sp,sp,-32
20407c18:	ce06                	sw	ra,28(sp)
20407c1a:	cc22                	sw	s0,24(sp)
20407c1c:	1000                	addi	s0,sp,32
20407c1e:	fea42623          	sw	a0,-20(s0)
20407c22:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20407c26:	fe842783          	lw	a5,-24(s0)
20407c2a:	eb99                	bnez	a5,20407c40 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20407c2c:	204077b7          	lui	a5,0x20407
20407c30:	b8078593          	addi	a1,a5,-1152 # 20406b80 <__metal_exception_handler>
20407c34:	fe842503          	lw	a0,-24(s0)
20407c38:	aafff0ef          	jal	ra,204076e6 <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20407c3c:	4781                	li	a5,0
20407c3e:	a00d                	j	20407c60 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20407c40:	fe842703          	lw	a4,-24(s0)
20407c44:	4785                	li	a5,1
20407c46:	00f71c63          	bne	a4,a5,20407c5e <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20407c4a:	2040a7b7          	lui	a5,0x2040a
20407c4e:	38078593          	addi	a1,a5,896 # 2040a380 <__metal_vector_table>
20407c52:	fe842503          	lw	a0,-24(s0)
20407c56:	a91ff0ef          	jal	ra,204076e6 <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20407c5a:	4781                	li	a5,0
20407c5c:	a011                	j	20407c60 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20407c5e:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:609
}
20407c60:	853e                	mv	a0,a5
20407c62:	40f2                	lw	ra,28(sp)
20407c64:	4462                	lw	s0,24(sp)
20407c66:	6105                	addi	sp,sp,32
20407c68:	8082                	ret

20407c6a <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20407c6a:	1101                	addi	sp,sp,-32
20407c6c:	ce22                	sw	s0,28(sp)
20407c6e:	1000                	addi	s0,sp,32
20407c70:	fea42623          	sw	a0,-20(s0)
20407c74:	feb42423          	sw	a1,-24(s0)
20407c78:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20407c7c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
}
20407c7e:	853e                	mv	a0,a5
20407c80:	4472                	lw	s0,28(sp)
20407c82:	6105                	addi	sp,sp,32
20407c84:	8082                	ret

20407c86 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20407c86:	7139                	addi	sp,sp,-64
20407c88:	de22                	sw	s0,60(sp)
20407c8a:	0080                	addi	s0,sp,64
20407c8c:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20407c90:	4301                	li	t1,0
20407c92:	4381                	li	t2,0
20407c94:	fe642423          	sw	t1,-24(s0)
20407c98:	fe742623          	sw	t2,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20407c9c:	b8002573          	csrr	a0,mcycleh
20407ca0:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20407ca4:	b0002573          	csrr	a0,mcycle
20407ca8:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20407cac:	b8002573          	csrr	a0,mcycleh
20407cb0:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20407cb4:	fe442883          	lw	a7,-28(s0)
20407cb8:	fdc42503          	lw	a0,-36(s0)
20407cbc:	fea890e3          	bne	a7,a0,20407c9c <__metal_driver_cpu_mcycle_get+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20407cc0:	fe442503          	lw	a0,-28(s0)
20407cc4:	85aa                	mv	a1,a0
20407cc6:	4601                	li	a2,0
20407cc8:	00059813          	slli	a6,a1,0x0
20407ccc:	4781                	li	a5,0
20407cce:	fe042603          	lw	a2,-32(s0)
20407cd2:	86b2                	mv	a3,a2
20407cd4:	4701                	li	a4,0
20407cd6:	00d7e633          	or	a2,a5,a3
20407cda:	fec42423          	sw	a2,-24(s0)
20407cde:	00e867b3          	or	a5,a6,a4
20407ce2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20407ce6:	fe842783          	lw	a5,-24(s0)
20407cea:	fec42803          	lw	a6,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:640
}
20407cee:	853e                	mv	a0,a5
20407cf0:	85c2                	mv	a1,a6
20407cf2:	5472                	lw	s0,60(sp)
20407cf4:	6121                	addi	sp,sp,64
20407cf6:	8082                	ret

20407cf8 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20407cf8:	7179                	addi	sp,sp,-48
20407cfa:	d606                	sw	ra,44(sp)
20407cfc:	d422                	sw	s0,40(sp)
20407cfe:	d24a                	sw	s2,36(sp)
20407d00:	d04e                	sw	s3,32(sp)
20407d02:	1800                	addi	s0,sp,48
20407d04:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20407d08:	fdc42783          	lw	a5,-36(s0)
20407d0c:	e781                	bnez	a5,20407d14 <__metal_driver_cpu_timebase_get+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20407d0e:	4901                	li	s2,0
20407d10:	4981                	li	s3,0
20407d12:	a821                	j	20407d2a <__metal_driver_cpu_timebase_get+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20407d14:	fdc42503          	lw	a0,-36(s0)
20407d18:	9affe0ef          	jal	ra,204066c6 <__metal_driver_cpu_timebase>
20407d1c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20407d20:	fec42783          	lw	a5,-20(s0)
20407d24:	893e                	mv	s2,a5
20407d26:	87fd                	srai	a5,a5,0x1f
20407d28:	89be                	mv	s3,a5
20407d2a:	87ca                	mv	a5,s2
20407d2c:	884e                	mv	a6,s3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:650
}
20407d2e:	853e                	mv	a0,a5
20407d30:	85c2                	mv	a1,a6
20407d32:	50b2                	lw	ra,44(sp)
20407d34:	5422                	lw	s0,40(sp)
20407d36:	5912                	lw	s2,36(sp)
20407d38:	5982                	lw	s3,32(sp)
20407d3a:	6145                	addi	sp,sp,48
20407d3c:	8082                	ret

20407d3e <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20407d3e:	7179                	addi	sp,sp,-48
20407d40:	d606                	sw	ra,44(sp)
20407d42:	d422                	sw	s0,40(sp)
20407d44:	1800                	addi	s0,sp,48
20407d46:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20407d4a:	4781                	li	a5,0
20407d4c:	4801                	li	a6,0
20407d4e:	fef42023          	sw	a5,-32(s0)
20407d52:	ff042223          	sw	a6,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20407d56:	fdc42503          	lw	a0,-36(s0)
20407d5a:	997fe0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407d5e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20407d62:	fec42783          	lw	a5,-20(s0)
20407d66:	c78d                	beqz	a5,20407d90 <__metal_driver_cpu_mtime_get+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20407d68:	fec42783          	lw	a5,-20(s0)
20407d6c:	13c7a783          	lw	a5,316(a5)
20407d70:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20407d74:	fe842783          	lw	a5,-24(s0)
20407d78:	cf81                	beqz	a5,20407d90 <__metal_driver_cpu_mtime_get+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20407d7a:	fe842783          	lw	a5,-24(s0)
20407d7e:	439c                	lw	a5,0(a5)
20407d80:	47f8                	lw	a4,76(a5)
20407d82:	fe040793          	addi	a5,s0,-32
20407d86:	863e                	mv	a2,a5
20407d88:	4585                	li	a1,1
20407d8a:	fe842503          	lw	a0,-24(s0)
20407d8e:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20407d90:	fe042783          	lw	a5,-32(s0)
20407d94:	fe442803          	lw	a6,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:667
}
20407d98:	853e                	mv	a0,a5
20407d9a:	85c2                	mv	a1,a6
20407d9c:	50b2                	lw	ra,44(sp)
20407d9e:	5422                	lw	s0,40(sp)
20407da0:	6145                	addi	sp,sp,48
20407da2:	8082                	ret

20407da4 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20407da4:	7179                	addi	sp,sp,-48
20407da6:	d606                	sw	ra,44(sp)
20407da8:	d422                	sw	s0,40(sp)
20407daa:	d226                	sw	s1,36(sp)
20407dac:	1800                	addi	s0,sp,48
20407dae:	fca42e23          	sw	a0,-36(s0)
20407db2:	fcb42823          	sw	a1,-48(s0)
20407db6:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20407dba:	57fd                	li	a5,-1
20407dbc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20407dc0:	fdc42503          	lw	a0,-36(s0)
20407dc4:	92dfe0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407dc8:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20407dcc:	fe842783          	lw	a5,-24(s0)
20407dd0:	cf8d                	beqz	a5,20407e0a <__metal_driver_cpu_mtimecmp_set+0x66>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20407dd2:	fe842783          	lw	a5,-24(s0)
20407dd6:	13c7a783          	lw	a5,316(a5)
20407dda:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20407dde:	fe442783          	lw	a5,-28(s0)
20407de2:	c785                	beqz	a5,20407e0a <__metal_driver_cpu_mtimecmp_set+0x66>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20407de4:	fe442783          	lw	a5,-28(s0)
20407de8:	439c                	lw	a5,0(a5)
20407dea:	4ba4                	lw	s1,80(a5)
20407dec:	fdc42503          	lw	a0,-36(s0)
20407df0:	8b3fe0ef          	jal	ra,204066a2 <__metal_driver_cpu_hartid>
20407df4:	87aa                	mv	a5,a0
20407df6:	fd042603          	lw	a2,-48(s0)
20407dfa:	fd442683          	lw	a3,-44(s0)
20407dfe:	85be                	mv	a1,a5
20407e00:	fe442503          	lw	a0,-28(s0)
20407e04:	9482                	jalr	s1
20407e06:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20407e0a:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
20407e0e:	853e                	mv	a0,a5
20407e10:	50b2                	lw	ra,44(sp)
20407e12:	5422                	lw	s0,40(sp)
20407e14:	5492                	lw	s1,36(sp)
20407e16:	6145                	addi	sp,sp,48
20407e18:	8082                	ret

20407e1a <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20407e1a:	1101                	addi	sp,sp,-32
20407e1c:	ce22                	sw	s0,28(sp)
20407e1e:	1000                	addi	s0,sp,32
20407e20:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20407e24:	81c18793          	addi	a5,gp,-2020 # 80000a94 <__metal_dt_clint_2000000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20407e28:	853e                	mv	a0,a5
20407e2a:	4472                	lw	s0,28(sp)
20407e2c:	6105                	addi	sp,sp,32
20407e2e:	8082                	ret

20407e30 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20407e30:	1101                	addi	sp,sp,-32
20407e32:	ce22                	sw	s0,28(sp)
20407e34:	1000                	addi	s0,sp,32
20407e36:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20407e3a:	479d                	li	a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:703
}
20407e3c:	853e                	mv	a0,a5
20407e3e:	4472                	lw	s0,28(sp)
20407e40:	6105                	addi	sp,sp,32
20407e42:	8082                	ret

20407e44 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20407e44:	1101                	addi	sp,sp,-32
20407e46:	ce22                	sw	s0,28(sp)
20407e48:	1000                	addi	s0,sp,32
20407e4a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20407e4e:	81c18793          	addi	a5,gp,-2020 # 80000a94 <__metal_dt_clint_2000000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20407e52:	853e                	mv	a0,a5
20407e54:	4472                	lw	s0,28(sp)
20407e56:	6105                	addi	sp,sp,32
20407e58:	8082                	ret

20407e5a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20407e5a:	1101                	addi	sp,sp,-32
20407e5c:	ce22                	sw	s0,28(sp)
20407e5e:	1000                	addi	s0,sp,32
20407e60:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20407e64:	478d                	li	a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:721
}
20407e66:	853e                	mv	a0,a5
20407e68:	4472                	lw	s0,28(sp)
20407e6a:	6105                	addi	sp,sp,32
20407e6c:	8082                	ret

20407e6e <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20407e6e:	7179                	addi	sp,sp,-48
20407e70:	d606                	sw	ra,44(sp)
20407e72:	d422                	sw	s0,40(sp)
20407e74:	1800                	addi	s0,sp,48
20407e76:	fca42e23          	sw	a0,-36(s0)
20407e7a:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20407e7e:	57fd                	li	a5,-1
20407e80:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20407e84:	fdc42503          	lw	a0,-36(s0)
20407e88:	869fe0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407e8c:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20407e90:	fe842783          	lw	a5,-24(s0)
20407e94:	c79d                	beqz	a5,20407ec2 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407e96:	fe842783          	lw	a5,-24(s0)
20407e9a:	0dc7a783          	lw	a5,220(a5)
20407e9e:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20407ea2:	fe442783          	lw	a5,-28(s0)
20407ea6:	cf91                	beqz	a5,20407ec2 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20407ea8:	fe442783          	lw	a5,-28(s0)
20407eac:	439c                	lw	a5,0(a5)
20407eae:	47f8                	lw	a4,76(a5)
20407eb0:	fd840793          	addi	a5,s0,-40
20407eb4:	863e                	mv	a2,a5
20407eb6:	458d                	li	a1,3
20407eb8:	fe442503          	lw	a0,-28(s0)
20407ebc:	9702                	jalr	a4
20407ebe:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20407ec2:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:738
}
20407ec6:	853e                	mv	a0,a5
20407ec8:	50b2                	lw	ra,44(sp)
20407eca:	5422                	lw	s0,40(sp)
20407ecc:	6145                	addi	sp,sp,48
20407ece:	8082                	ret

20407ed0 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20407ed0:	7179                	addi	sp,sp,-48
20407ed2:	d606                	sw	ra,44(sp)
20407ed4:	d422                	sw	s0,40(sp)
20407ed6:	1800                	addi	s0,sp,48
20407ed8:	fca42e23          	sw	a0,-36(s0)
20407edc:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20407ee0:	57fd                	li	a5,-1
20407ee2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20407ee6:	fdc42503          	lw	a0,-36(s0)
20407eea:	807fe0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407eee:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20407ef2:	fe842783          	lw	a5,-24(s0)
20407ef6:	c79d                	beqz	a5,20407f24 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407ef8:	fe842783          	lw	a5,-24(s0)
20407efc:	0dc7a783          	lw	a5,220(a5)
20407f00:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20407f04:	fe442783          	lw	a5,-28(s0)
20407f08:	cf91                	beqz	a5,20407f24 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20407f0a:	fe442783          	lw	a5,-28(s0)
20407f0e:	439c                	lw	a5,0(a5)
20407f10:	47f8                	lw	a4,76(a5)
20407f12:	fd840793          	addi	a5,s0,-40
20407f16:	863e                	mv	a2,a5
20407f18:	4589                	li	a1,2
20407f1a:	fe442503          	lw	a0,-28(s0)
20407f1e:	9702                	jalr	a4
20407f20:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20407f24:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:755
}
20407f28:	853e                	mv	a0,a5
20407f2a:	50b2                	lw	ra,44(sp)
20407f2c:	5422                	lw	s0,40(sp)
20407f2e:	6145                	addi	sp,sp,48
20407f30:	8082                	ret

20407f32 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20407f32:	7179                	addi	sp,sp,-48
20407f34:	d606                	sw	ra,44(sp)
20407f36:	d422                	sw	s0,40(sp)
20407f38:	1800                	addi	s0,sp,48
20407f3a:	fca42e23          	sw	a0,-36(s0)
20407f3e:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20407f42:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20407f46:	fdc42503          	lw	a0,-36(s0)
20407f4a:	fa6fe0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407f4e:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20407f52:	fe842783          	lw	a5,-24(s0)
20407f56:	c79d                	beqz	a5,20407f84 <__metal_driver_cpu_get_msip+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407f58:	fe842783          	lw	a5,-24(s0)
20407f5c:	0dc7a783          	lw	a5,220(a5)
20407f60:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20407f64:	fe442783          	lw	a5,-28(s0)
20407f68:	cf91                	beqz	a5,20407f84 <__metal_driver_cpu_get_msip+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20407f6a:	fe442783          	lw	a5,-28(s0)
20407f6e:	439c                	lw	a5,0(a5)
20407f70:	47f8                	lw	a4,76(a5)
20407f72:	fd840793          	addi	a5,s0,-40
20407f76:	863e                	mv	a2,a5
20407f78:	4591                	li	a1,4
20407f7a:	fe442503          	lw	a0,-28(s0)
20407f7e:	9702                	jalr	a4
20407f80:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20407f84:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772
}
20407f88:	853e                	mv	a0,a5
20407f8a:	50b2                	lw	ra,44(sp)
20407f8c:	5422                	lw	s0,40(sp)
20407f8e:	6145                	addi	sp,sp,48
20407f90:	8082                	ret

20407f92 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20407f92:	1101                	addi	sp,sp,-32
20407f94:	ce06                	sw	ra,28(sp)
20407f96:	cc22                	sw	s0,24(sp)
20407f98:	1000                	addi	s0,sp,32
20407f9a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20407f9e:	fec42503          	lw	a0,-20(s0)
20407fa2:	f4efe0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407fa6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:777
}
20407fa8:	853e                	mv	a0,a5
20407faa:	40f2                	lw	ra,28(sp)
20407fac:	4462                	lw	s0,24(sp)
20407fae:	6105                	addi	sp,sp,32
20407fb0:	8082                	ret

20407fb2 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20407fb2:	7179                	addi	sp,sp,-48
20407fb4:	d606                	sw	ra,44(sp)
20407fb6:	d422                	sw	s0,40(sp)
20407fb8:	1800                	addi	s0,sp,48
20407fba:	fca42e23          	sw	a0,-36(s0)
20407fbe:	fcb42c23          	sw	a1,-40(s0)
20407fc2:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20407fc6:	fdc42503          	lw	a0,-36(s0)
20407fca:	f26fe0ef          	jal	ra,204066f0 <__metal_driver_cpu_interrupt_controller>
20407fce:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20407fd2:	fec42783          	lw	a5,-20(s0)
20407fd6:	cb99                	beqz	a5,20407fec <__metal_driver_cpu_exception_register+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20407fd8:	fd442603          	lw	a2,-44(s0)
20407fdc:	fd842583          	lw	a1,-40(s0)
20407fe0:	fec42503          	lw	a0,-20(s0)
20407fe4:	8b3ff0ef          	jal	ra,20407896 <__metal_exception_register>
20407fe8:	87aa                	mv	a5,a0
20407fea:	a011                	j	20407fee <__metal_driver_cpu_exception_register+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20407fec:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
}
20407fee:	853e                	mv	a0,a5
20407ff0:	50b2                	lw	ra,44(sp)
20407ff2:	5422                	lw	s0,40(sp)
20407ff4:	6145                	addi	sp,sp,48
20407ff6:	8082                	ret

20407ff8 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20407ff8:	1101                	addi	sp,sp,-32
20407ffa:	ce22                	sw	s0,28(sp)
20407ffc:	1000                	addi	s0,sp,32
20407ffe:	fea42623          	sw	a0,-20(s0)
20408002:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20408006:	fe842783          	lw	a5,-24(s0)
2040800a:	0007d783          	lhu	a5,0(a5)
2040800e:	0037f713          	andi	a4,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20408012:	478d                	li	a5,3
20408014:	00f71463          	bne	a4,a5,2040801c <__metal_driver_cpu_get_instruction_length+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20408018:	4791                	li	a5,4
2040801a:	a011                	j	2040801e <__metal_driver_cpu_get_instruction_length+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2040801c:	4789                	li	a5,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2040801e:	853e                	mv	a0,a5
20408020:	4472                	lw	s0,28(sp)
20408022:	6105                	addi	sp,sp,32
20408024:	8082                	ret

20408026 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20408026:	7179                	addi	sp,sp,-48
20408028:	d622                	sw	s0,44(sp)
2040802a:	1800                	addi	s0,sp,48
2040802c:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20408030:	341027f3          	csrr	a5,mepc
20408034:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20408038:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:827
}
2040803c:	853e                	mv	a0,a5
2040803e:	5432                	lw	s0,44(sp)
20408040:	6145                	addi	sp,sp,48
20408042:	8082                	ret

20408044 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20408044:	1101                	addi	sp,sp,-32
20408046:	ce22                	sw	s0,28(sp)
20408048:	1000                	addi	s0,sp,32
2040804a:	fea42623          	sw	a0,-20(s0)
2040804e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20408052:	fe842783          	lw	a5,-24(s0)
20408056:	34179073          	csrw	mepc,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2040805a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:832
}
2040805c:	853e                	mv	a0,a5
2040805e:	4472                	lw	s0,28(sp)
20408060:	6105                	addi	sp,sp,32
20408062:	8082                	ret

20408064 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20408064:	1101                	addi	sp,sp,-32
20408066:	ce06                	sw	ra,28(sp)
20408068:	cc22                	sw	s0,24(sp)
2040806a:	1000                	addi	s0,sp,32
2040806c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20408070:	fec42503          	lw	a0,-20(s0)
20408074:	ea6fe0ef          	jal	ra,2040671a <__metal_driver_cpu_buserror>
20408078:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:836
}
2040807a:	853e                	mv	a0,a5
2040807c:	40f2                	lw	ra,28(sp)
2040807e:	4462                	lw	s0,24(sp)
20408080:	6105                	addi	sp,sp,32
20408082:	8082                	ret

20408084 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:320



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20408084:	1101                	addi	sp,sp,-32
20408086:	ce22                	sw	s0,28(sp)
20408088:	1000                	addi	s0,sp,32
2040808a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:321
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040808e:	fec42703          	lw	a4,-20(s0)
20408092:	800007b7          	lui	a5,0x80000
20408096:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffcb38>
2040809a:	00f71563          	bne	a4,a5,204080a4 <__metal_driver_sifive_plic0_control_base+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:322
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040809e:	0c0007b7          	lui	a5,0xc000
204080a2:	a011                	j	204080a6 <__metal_driver_sifive_plic0_control_base+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:325
	}
	else {
		return 0;
204080a4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:327
	}
}
204080a6:	853e                	mv	a0,a5
204080a8:	4472                	lw	s0,28(sp)
204080aa:	6105                	addi	sp,sp,32
204080ac:	8082                	ret

204080ae <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:340
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
204080ae:	1101                	addi	sp,sp,-32
204080b0:	ce22                	sw	s0,28(sp)
204080b2:	1000                	addi	s0,sp,32
204080b4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:341
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204080b8:	fec42703          	lw	a4,-20(s0)
204080bc:	800007b7          	lui	a5,0x80000
204080c0:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffcb38>
204080c4:	00f71563          	bne	a4,a5,204080ce <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:342
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
204080c8:	03500793          	li	a5,53
204080cc:	a011                	j	204080d0 <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:345
	}
	else {
		return 0;
204080ce:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:347
	}
}
204080d0:	853e                	mv	a0,a5
204080d2:	4472                	lw	s0,28(sp)
204080d4:	6105                	addi	sp,sp,32
204080d6:	8082                	ret

204080d8 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:350

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204080d8:	1101                	addi	sp,sp,-32
204080da:	ce22                	sw	s0,28(sp)
204080dc:	1000                	addi	s0,sp,32
204080de:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:351
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204080e2:	fec42703          	lw	a4,-20(s0)
204080e6:	800007b7          	lui	a5,0x80000
204080ea:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffcb38>
204080ee:	00f71463          	bne	a4,a5,204080f6 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:352
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204080f2:	479d                	li	a5,7
204080f4:	a011                	j	204080f8 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:355
	}
	else {
		return 0;
204080f6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:357
	}
}
204080f8:	853e                	mv	a0,a5
204080fa:	4472                	lw	s0,28(sp)
204080fc:	6105                	addi	sp,sp,32
204080fe:	8082                	ret

20408100 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:360

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20408100:	1101                	addi	sp,sp,-32
20408102:	ce22                	sw	s0,28(sp)
20408104:	1000                	addi	s0,sp,32
20408106:	fea42623          	sw	a0,-20(s0)
2040810a:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:361
	if (idx == 0) {
2040810e:	fe842783          	lw	a5,-24(s0)
20408112:	e791                	bnez	a5,2040811e <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:362
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20408114:	800007b7          	lui	a5,0x80000
20408118:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffc768>
2040811c:	a011                	j	20408120 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:365
	}
	else {
		return NULL;
2040811e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:367
	}
}
20408120:	853e                	mv	a0,a5
20408122:	4472                	lw	s0,28(sp)
20408124:	6105                	addi	sp,sp,32
20408126:	8082                	ret

20408128 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:370

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20408128:	1101                	addi	sp,sp,-32
2040812a:	ce22                	sw	s0,28(sp)
2040812c:	1000                	addi	s0,sp,32
2040812e:	fea42623          	sw	a0,-20(s0)
20408132:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:371
	if (idx == 0) {
20408136:	fe842783          	lw	a5,-24(s0)
2040813a:	e399                	bnez	a5,20408140 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:372
		return 11;
2040813c:	47ad                	li	a5,11
2040813e:	a011                	j	20408142 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:375
	}
	else {
		return 0;
20408140:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:377
	}
}
20408142:	853e                	mv	a0,a5
20408144:	4472                	lw	s0,28(sp)
20408146:	6105                	addi	sp,sp,32
20408148:	8082                	ret

2040814a <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:380

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2040814a:	1101                	addi	sp,sp,-32
2040814c:	ce22                	sw	s0,28(sp)
2040814e:	1000                	addi	s0,sp,32
20408150:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:381
	if (hartid == 0) {
20408154:	fec42783          	lw	a5,-20(s0)
20408158:	e399                	bnez	a5,2040815e <__metal_driver_sifive_plic0_context_ids+0x14>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:382
		return 0;
2040815a:	4781                	li	a5,0
2040815c:	a011                	j	20408160 <__metal_driver_sifive_plic0_context_ids+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:385
	}
	else {
		return -1;
2040815e:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:387
	}
}
20408160:	853e                	mv	a0,a5
20408162:	4472                	lw	s0,28(sp)
20408164:	6105                	addi	sp,sp,32
20408166:	8082                	ret

20408168 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20408168:	7179                	addi	sp,sp,-48
2040816a:	d606                	sw	ra,44(sp)
2040816c:	d422                	sw	s0,40(sp)
2040816e:	1800                	addi	s0,sp,48
20408170:	fca42e23          	sw	a0,-36(s0)
20408174:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20408178:	fdc42503          	lw	a0,-36(s0)
2040817c:	3721                	jal	20408084 <__metal_driver_sifive_plic0_control_base>
2040817e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20408182:	fd842783          	lw	a5,-40(s0)
20408186:	00c79713          	slli	a4,a5,0xc
2040818a:	fec42783          	lw	a5,-20(s0)
2040818e:	973e                	add	a4,a4,a5
20408190:	002007b7          	lui	a5,0x200
20408194:	0791                	addi	a5,a5,4
20408196:	97ba                	add	a5,a5,a4
20408198:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
2040819a:	853e                	mv	a0,a5
2040819c:	50b2                	lw	ra,44(sp)
2040819e:	5422                	lw	s0,40(sp)
204081a0:	6145                	addi	sp,sp,48
204081a2:	8082                	ret

204081a4 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
204081a4:	7179                	addi	sp,sp,-48
204081a6:	d606                	sw	ra,44(sp)
204081a8:	d422                	sw	s0,40(sp)
204081aa:	1800                	addi	s0,sp,48
204081ac:	fca42e23          	sw	a0,-36(s0)
204081b0:	fcb42c23          	sw	a1,-40(s0)
204081b4:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204081b8:	fdc42503          	lw	a0,-36(s0)
204081bc:	ec9ff0ef          	jal	ra,20408084 <__metal_driver_sifive_plic0_control_base>
204081c0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
204081c4:	fd842783          	lw	a5,-40(s0)
204081c8:	00c79713          	slli	a4,a5,0xc
204081cc:	fec42783          	lw	a5,-20(s0)
204081d0:	973e                	add	a4,a4,a5
204081d2:	002007b7          	lui	a5,0x200
204081d6:	0791                	addi	a5,a5,4
204081d8:	97ba                	add	a5,a5,a4
204081da:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
204081dc:	fd442783          	lw	a5,-44(s0)
204081e0:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:35
}
204081e2:	0001                	nop
204081e4:	50b2                	lw	ra,44(sp)
204081e6:	5422                	lw	s0,40(sp)
204081e8:	6145                	addi	sp,sp,48
204081ea:	8082                	ret

204081ec <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
204081ec:	7179                	addi	sp,sp,-48
204081ee:	d606                	sw	ra,44(sp)
204081f0:	d422                	sw	s0,40(sp)
204081f2:	1800                	addi	s0,sp,48
204081f4:	fca42e23          	sw	a0,-36(s0)
204081f8:	fcb42c23          	sw	a1,-40(s0)
204081fc:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20408200:	fdc42503          	lw	a0,-36(s0)
20408204:	e81ff0ef          	jal	ra,20408084 <__metal_driver_sifive_plic0_control_base>
20408208:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
2040820c:	fd842783          	lw	a5,-40(s0)
20408210:	00c79713          	slli	a4,a5,0xc
20408214:	fec42783          	lw	a5,-20(s0)
20408218:	973e                	add	a4,a4,a5
2040821a:	002007b7          	lui	a5,0x200
2040821e:	97ba                	add	a5,a5,a4
20408220:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20408222:	fd442783          	lw	a5,-44(s0)
20408226:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20408228:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
}
2040822a:	853e                	mv	a0,a5
2040822c:	50b2                	lw	ra,44(sp)
2040822e:	5422                	lw	s0,40(sp)
20408230:	6145                	addi	sp,sp,48
20408232:	8082                	ret

20408234 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20408234:	7179                	addi	sp,sp,-48
20408236:	d606                	sw	ra,44(sp)
20408238:	d422                	sw	s0,40(sp)
2040823a:	1800                	addi	s0,sp,48
2040823c:	fca42e23          	sw	a0,-36(s0)
20408240:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20408244:	fdc42503          	lw	a0,-36(s0)
20408248:	e3dff0ef          	jal	ra,20408084 <__metal_driver_sifive_plic0_control_base>
2040824c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20408250:	fd842783          	lw	a5,-40(s0)
20408254:	00c79713          	slli	a4,a5,0xc
20408258:	fec42783          	lw	a5,-20(s0)
2040825c:	973e                	add	a4,a4,a5
2040825e:	002007b7          	lui	a5,0x200
20408262:	97ba                	add	a5,a5,a4
20408264:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20408266:	853e                	mv	a0,a5
20408268:	50b2                	lw	ra,44(sp)
2040826a:	5422                	lw	s0,40(sp)
2040826c:	6145                	addi	sp,sp,48
2040826e:	8082                	ret

20408270 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20408270:	7179                	addi	sp,sp,-48
20408272:	d606                	sw	ra,44(sp)
20408274:	d422                	sw	s0,40(sp)
20408276:	1800                	addi	s0,sp,48
20408278:	fca42e23          	sw	a0,-36(s0)
2040827c:	fcb42c23          	sw	a1,-40(s0)
20408280:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20408284:	fdc42503          	lw	a0,-36(s0)
20408288:	dfdff0ef          	jal	ra,20408084 <__metal_driver_sifive_plic0_control_base>
2040828c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20408290:	fdc42503          	lw	a0,-36(s0)
20408294:	e45ff0ef          	jal	ra,204080d8 <__metal_driver_sifive_plic0_max_priority>
20408298:	87aa                	mv	a5,a0
2040829a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
2040829e:	fe842783          	lw	a5,-24(s0)
204082a2:	c785                	beqz	a5,204082ca <__metal_driver_riscv_plic0_set_priority+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
204082a4:	fd442703          	lw	a4,-44(s0)
204082a8:	fe842783          	lw	a5,-24(s0)
204082ac:	00f77f63          	bgeu	a4,a5,204082ca <__metal_driver_riscv_plic0_set_priority+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
204082b0:	fd842783          	lw	a5,-40(s0)
204082b4:	078a                	slli	a5,a5,0x2
204082b6:	873e                	mv	a4,a5
204082b8:	fec42783          	lw	a5,-20(s0)
204082bc:	97ba                	add	a5,a5,a4
204082be:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
204082c0:	fd442783          	lw	a5,-44(s0)
204082c4:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
204082c6:	4781                	li	a5,0
204082c8:	a011                	j	204082cc <__metal_driver_riscv_plic0_set_priority+0x5c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
204082ca:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:72
}
204082cc:	853e                	mv	a0,a5
204082ce:	50b2                	lw	ra,44(sp)
204082d0:	5422                	lw	s0,40(sp)
204082d2:	6145                	addi	sp,sp,48
204082d4:	8082                	ret

204082d6 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
204082d6:	7179                	addi	sp,sp,-48
204082d8:	d606                	sw	ra,44(sp)
204082da:	d422                	sw	s0,40(sp)
204082dc:	1800                	addi	s0,sp,48
204082de:	fca42e23          	sw	a0,-36(s0)
204082e2:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204082e6:	fdc42503          	lw	a0,-36(s0)
204082ea:	d9bff0ef          	jal	ra,20408084 <__metal_driver_sifive_plic0_control_base>
204082ee:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
204082f2:	fd842783          	lw	a5,-40(s0)
204082f6:	078a                	slli	a5,a5,0x2
204082f8:	873e                	mv	a4,a5
204082fa:	fec42783          	lw	a5,-20(s0)
204082fe:	97ba                	add	a5,a5,a4
20408300:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20408302:	853e                	mv	a0,a5
20408304:	50b2                	lw	ra,44(sp)
20408306:	5422                	lw	s0,40(sp)
20408308:	6145                	addi	sp,sp,48
2040830a:	8082                	ret

2040830c <__metal_plic0_enable>:
__metal_plic0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
2040830c:	7179                	addi	sp,sp,-48
2040830e:	d606                	sw	ra,44(sp)
20408310:	d422                	sw	s0,40(sp)
20408312:	1800                	addi	s0,sp,48
20408314:	fca42e23          	sw	a0,-36(s0)
20408318:	fcb42c23          	sw	a1,-40(s0)
2040831c:	fcc42a23          	sw	a2,-44(s0)
20408320:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20408324:	fdc42503          	lw	a0,-36(s0)
20408328:	d5dff0ef          	jal	ra,20408084 <__metal_driver_sifive_plic0_control_base>
2040832c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20408330:	fd842783          	lw	a5,-40(s0)
20408334:	00779713          	slli	a4,a5,0x7
20408338:	fec42783          	lw	a5,-20(s0)
2040833c:	97ba                	add	a5,a5,a4
2040833e:	fd442703          	lw	a4,-44(s0)
20408342:	8715                	srai	a4,a4,0x5
20408344:	070a                	slli	a4,a4,0x2
20408346:	973e                	add	a4,a4,a5
20408348:	6789                	lui	a5,0x2
2040834a:	97ba                	add	a5,a5,a4
2040834c:	439c                	lw	a5,0(a5)
2040834e:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20408352:	fd042783          	lw	a5,-48(s0)
20408356:	cf81                	beqz	a5,2040836e <__metal_plic0_enable+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20408358:	fd442783          	lw	a5,-44(s0)
2040835c:	8bfd                	andi	a5,a5,31
2040835e:	4705                	li	a4,1
20408360:	00f717b3          	sll	a5,a4,a5
20408364:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20408366:	fe842783          	lw	a5,-24(s0)
2040836a:	8fd9                	or	a5,a5,a4
2040836c:	a829                	j	20408386 <__metal_plic0_enable+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
2040836e:	fd442783          	lw	a5,-44(s0)
20408372:	8bfd                	andi	a5,a5,31
20408374:	4705                	li	a4,1
20408376:	00f717b3          	sll	a5,a4,a5
2040837a:	fff7c793          	not	a5,a5
2040837e:	873e                	mv	a4,a5
20408380:	fe842783          	lw	a5,-24(s0)
20408384:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20408386:	fd842703          	lw	a4,-40(s0)
2040838a:	00771693          	slli	a3,a4,0x7
2040838e:	fec42703          	lw	a4,-20(s0)
20408392:	9736                	add	a4,a4,a3
20408394:	fd442683          	lw	a3,-44(s0)
20408398:	8695                	srai	a3,a3,0x5
2040839a:	068a                	slli	a3,a3,0x2
2040839c:	96ba                	add	a3,a3,a4
2040839e:	6709                	lui	a4,0x2
204083a0:	9736                	add	a4,a4,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
204083a2:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
204083a4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103
}
204083a6:	853e                	mv	a0,a5
204083a8:	50b2                	lw	ra,44(sp)
204083aa:	5422                	lw	s0,40(sp)
204083ac:	6145                	addi	sp,sp,48
204083ae:	8082                	ret

204083b0 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
204083b0:	1101                	addi	sp,sp,-32
204083b2:	ce06                	sw	ra,28(sp)
204083b4:	cc22                	sw	s0,24(sp)
204083b6:	1000                	addi	s0,sp,32
204083b8:	fea42623          	sw	a0,-20(s0)
204083bc:	feb42423          	sw	a1,-24(s0)
204083c0:	12c00513          	li	a0,300
204083c4:	7af010ef          	jal	ra,2040a372 <metal_shutdown>

204083c8 <__metal_plic0_handler>:
__metal_plic0_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
204083c8:	7179                	addi	sp,sp,-48
204083ca:	d606                	sw	ra,44(sp)
204083cc:	d422                	sw	s0,40(sp)
204083ce:	1800                	addi	s0,sp,48
204083d0:	fca42e23          	sw	a0,-36(s0)
204083d4:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
204083d8:	fd842783          	lw	a5,-40(s0)
204083dc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
204083e0:	b8afe0ef          	jal	ra,2040676a <__metal_myhart_id>
204083e4:	87aa                	mv	a5,a0
204083e6:	853e                	mv	a0,a5
204083e8:	d63ff0ef          	jal	ra,2040814a <__metal_driver_sifive_plic0_context_ids>
204083ec:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
204083f0:	fe842583          	lw	a1,-24(s0)
204083f4:	fec42503          	lw	a0,-20(s0)
204083f8:	d71ff0ef          	jal	ra,20408168 <__metal_plic0_claim_interrupt>
204083fc:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20408400:	fec42503          	lw	a0,-20(s0)
20408404:	cabff0ef          	jal	ra,204080ae <__metal_driver_sifive_plic0_num_interrupts>
20408408:	87aa                	mv	a5,a0
2040840a:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
2040840e:	fe442703          	lw	a4,-28(s0)
20408412:	fe042783          	lw	a5,-32(s0)
20408416:	04f77263          	bgeu	a4,a5,2040845a <__metal_plic0_handler+0x92>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
2040841a:	fec42703          	lw	a4,-20(s0)
2040841e:	fe442783          	lw	a5,-28(s0)
20408422:	078a                	slli	a5,a5,0x2
20408424:	97ba                	add	a5,a5,a4
20408426:	479c                	lw	a5,8(a5)
20408428:	cb8d                	beqz	a5,2040845a <__metal_plic0_handler+0x92>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
2040842a:	fec42703          	lw	a4,-20(s0)
2040842e:	fe442783          	lw	a5,-28(s0)
20408432:	078a                	slli	a5,a5,0x2
20408434:	97ba                	add	a5,a5,a4
20408436:	0087a803          	lw	a6,8(a5) # 2008 <__stack_size+0x1008>
2040843a:	fe442603          	lw	a2,-28(s0)
2040843e:	fec42683          	lw	a3,-20(s0)
20408442:	fe442703          	lw	a4,-28(s0)
20408446:	87ba                	mv	a5,a4
20408448:	0786                	slli	a5,a5,0x1
2040844a:	97ba                	add	a5,a5,a4
2040844c:	078e                	slli	a5,a5,0x3
2040844e:	97b6                	add	a5,a5,a3
20408450:	0f07a783          	lw	a5,240(a5)
20408454:	85be                	mv	a1,a5
20408456:	8532                	mv	a0,a2
20408458:	9802                	jalr	a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
2040845a:	fe442603          	lw	a2,-28(s0)
2040845e:	fe842583          	lw	a1,-24(s0)
20408462:	fec42503          	lw	a0,-20(s0)
20408466:	d3fff0ef          	jal	ra,204081a4 <__metal_plic0_complete_interrupt>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:121
}
2040846a:	0001                	nop
2040846c:	50b2                	lw	ra,44(sp)
2040846e:	5422                	lw	s0,40(sp)
20408470:	6145                	addi	sp,sp,48
20408472:	8082                	ret

20408474 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20408474:	7139                	addi	sp,sp,-64
20408476:	de06                	sw	ra,60(sp)
20408478:	dc22                	sw	s0,56(sp)
2040847a:	0080                	addi	s0,sp,64
2040847c:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20408480:	fcc42783          	lw	a5,-52(s0)
20408484:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20408488:	fe442783          	lw	a5,-28(s0)
2040848c:	43dc                	lw	a5,4(a5)
2040848e:	12079c63          	bnez	a5,204085c6 <__metal_driver_riscv_plic0_init+0x152>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20408492:	fe042623          	sw	zero,-20(s0)
20408496:	a205                	j	204085b6 <__metal_driver_riscv_plic0_init+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20408498:	fcc42503          	lw	a0,-52(s0)
2040849c:	c13ff0ef          	jal	ra,204080ae <__metal_driver_sifive_plic0_num_interrupts>
204084a0:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
204084a4:	fec42583          	lw	a1,-20(s0)
204084a8:	fcc42503          	lw	a0,-52(s0)
204084ac:	c55ff0ef          	jal	ra,20408100 <__metal_driver_sifive_plic0_interrupt_parents>
204084b0:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
204084b4:	fec42583          	lw	a1,-20(s0)
204084b8:	fcc42503          	lw	a0,-52(s0)
204084bc:	c6dff0ef          	jal	ra,20408128 <__metal_driver_sifive_plic0_interrupt_lines>
204084c0:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
204084c4:	fdc42783          	lw	a5,-36(s0)
204084c8:	439c                	lw	a5,0(a5)
204084ca:	439c                	lw	a5,0(a5)
204084cc:	fdc42503          	lw	a0,-36(s0)
204084d0:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
204084d2:	fe042423          	sw	zero,-24(s0)
204084d6:	a895                	j	2040854a <__metal_driver_riscv_plic0_init+0xd6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
204084d8:	4681                	li	a3,0
204084da:	fe842603          	lw	a2,-24(s0)
204084de:	fec42583          	lw	a1,-20(s0)
204084e2:	fe442503          	lw	a0,-28(s0)
204084e6:	e27ff0ef          	jal	ra,2040830c <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
204084ea:	fe842703          	lw	a4,-24(s0)
204084ee:	fe042783          	lw	a5,-32(s0)
204084f2:	04f75763          	bge	a4,a5,20408540 <__metal_driver_riscv_plic0_init+0xcc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
204084f6:	4601                	li	a2,0
204084f8:	fe842583          	lw	a1,-24(s0)
204084fc:	fcc42503          	lw	a0,-52(s0)
20408500:	d71ff0ef          	jal	ra,20408270 <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20408504:	fe442703          	lw	a4,-28(s0)
20408508:	fe842783          	lw	a5,-24(s0)
2040850c:	078a                	slli	a5,a5,0x2
2040850e:	97ba                	add	a5,a5,a4
20408510:	0007a423          	sw	zero,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20408514:	fe442683          	lw	a3,-28(s0)
20408518:	fe842703          	lw	a4,-24(s0)
2040851c:	87ba                	mv	a5,a4
2040851e:	0786                	slli	a5,a5,0x1
20408520:	97ba                	add	a5,a5,a4
20408522:	078e                	slli	a5,a5,0x3
20408524:	97b6                	add	a5,a5,a3
20408526:	0e07a623          	sw	zero,236(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
2040852a:	fe442683          	lw	a3,-28(s0)
2040852e:	fe842703          	lw	a4,-24(s0)
20408532:	87ba                	mv	a5,a4
20408534:	0786                	slli	a5,a5,0x1
20408536:	97ba                	add	a5,a5,a4
20408538:	078e                	slli	a5,a5,0x3
2040853a:	97b6                	add	a5,a5,a3
2040853c:	0e07a823          	sw	zero,240(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20408540:	fe842783          	lw	a5,-24(s0)
20408544:	0785                	addi	a5,a5,1
20408546:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
2040854a:	fe842703          	lw	a4,-24(s0)
2040854e:	3ff00793          	li	a5,1023
20408552:	f8e7d3e3          	bge	a5,a4,204084d8 <__metal_driver_riscv_plic0_init+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20408556:	4601                	li	a2,0
20408558:	fec42583          	lw	a1,-20(s0)
2040855c:	fcc42503          	lw	a0,-52(s0)
20408560:	c8dff0ef          	jal	ra,204081ec <__metal_plic0_set_threshold>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20408564:	fdc42783          	lw	a5,-36(s0)
20408568:	439c                	lw	a5,0(a5)
2040856a:	4fdc                	lw	a5,28(a5)
2040856c:	fe442683          	lw	a3,-28(s0)
20408570:	4601                	li	a2,0
20408572:	fd842583          	lw	a1,-40(s0)
20408576:	fdc42503          	lw	a0,-36(s0)
2040857a:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
2040857c:	fdc42783          	lw	a5,-36(s0)
20408580:	439c                	lw	a5,0(a5)
20408582:	4fd8                	lw	a4,28(a5)
20408584:	fe442683          	lw	a3,-28(s0)
20408588:	204087b7          	lui	a5,0x20408
2040858c:	3c878613          	addi	a2,a5,968 # 204083c8 <__metal_plic0_handler>
20408590:	fd842583          	lw	a1,-40(s0)
20408594:	fdc42503          	lw	a0,-36(s0)
20408598:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
2040859a:	fdc42783          	lw	a5,-36(s0)
2040859e:	439c                	lw	a5,0(a5)
204085a0:	53dc                	lw	a5,36(a5)
204085a2:	fd842583          	lw	a1,-40(s0)
204085a6:	fdc42503          	lw	a0,-36(s0)
204085aa:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204085ac:	fec42783          	lw	a5,-20(s0)
204085b0:	0785                	addi	a5,a5,1
204085b2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
204085b6:	fec42783          	lw	a5,-20(s0)
204085ba:	ecf05fe3          	blez	a5,20408498 <__metal_driver_riscv_plic0_init+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
204085be:	fe442783          	lw	a5,-28(s0)
204085c2:	4705                	li	a4,1
204085c4:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
204085c6:	0001                	nop
204085c8:	50f2                	lw	ra,60(sp)
204085ca:	5462                	lw	s0,56(sp)
204085cc:	6121                	addi	sp,sp,64
204085ce:	8082                	ret

204085d0 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
204085d0:	7179                	addi	sp,sp,-48
204085d2:	d606                	sw	ra,44(sp)
204085d4:	d422                	sw	s0,40(sp)
204085d6:	1800                	addi	s0,sp,48
204085d8:	fca42e23          	sw	a0,-36(s0)
204085dc:	fcb42c23          	sw	a1,-40(s0)
204085e0:	fcc42a23          	sw	a2,-44(s0)
204085e4:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204085e8:	fdc42783          	lw	a5,-36(s0)
204085ec:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204085f0:	fdc42503          	lw	a0,-36(s0)
204085f4:	abbff0ef          	jal	ra,204080ae <__metal_driver_sifive_plic0_num_interrupts>
204085f8:	872a                	mv	a4,a0
204085fa:	fd842783          	lw	a5,-40(s0)
204085fe:	00e7c463          	blt	a5,a4,20408606 <__metal_driver_riscv_plic0_register+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20408602:	57fd                	li	a5,-1
20408604:	a051                	j	20408688 <__metal_driver_riscv_plic0_register+0xb8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20408606:	fd442783          	lw	a5,-44(s0)
2040860a:	cf9d                	beqz	a5,20408648 <__metal_driver_riscv_plic0_register+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
2040860c:	4609                	li	a2,2
2040860e:	fd842583          	lw	a1,-40(s0)
20408612:	fdc42503          	lw	a0,-36(s0)
20408616:	c5bff0ef          	jal	ra,20408270 <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
2040861a:	fec42703          	lw	a4,-20(s0)
2040861e:	fd842783          	lw	a5,-40(s0)
20408622:	078a                	slli	a5,a5,0x2
20408624:	97ba                	add	a5,a5,a4
20408626:	fd442703          	lw	a4,-44(s0)
2040862a:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
2040862c:	fec42683          	lw	a3,-20(s0)
20408630:	fd842703          	lw	a4,-40(s0)
20408634:	87ba                	mv	a5,a4
20408636:	0786                	slli	a5,a5,0x1
20408638:	97ba                	add	a5,a5,a4
2040863a:	078e                	slli	a5,a5,0x3
2040863c:	97b6                	add	a5,a5,a3
2040863e:	fd042703          	lw	a4,-48(s0)
20408642:	0ee7a823          	sw	a4,240(a5)
20408646:	a081                	j	20408686 <__metal_driver_riscv_plic0_register+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20408648:	4605                	li	a2,1
2040864a:	fd842583          	lw	a1,-40(s0)
2040864e:	fdc42503          	lw	a0,-36(s0)
20408652:	c1fff0ef          	jal	ra,20408270 <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20408656:	fec42703          	lw	a4,-20(s0)
2040865a:	fd842783          	lw	a5,-40(s0)
2040865e:	078a                	slli	a5,a5,0x2
20408660:	97ba                	add	a5,a5,a4
20408662:	20408737          	lui	a4,0x20408
20408666:	3b070713          	addi	a4,a4,944 # 204083b0 <__metal_plic0_default_handler>
2040866a:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
2040866c:	fec42683          	lw	a3,-20(s0)
20408670:	fd842703          	lw	a4,-40(s0)
20408674:	87ba                	mv	a5,a4
20408676:	0786                	slli	a5,a5,0x1
20408678:	97ba                	add	a5,a5,a4
2040867a:	078e                	slli	a5,a5,0x3
2040867c:	97b6                	add	a5,a5,a3
2040867e:	fd042703          	lw	a4,-48(s0)
20408682:	0ee7a623          	sw	a4,236(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20408686:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:185
}
20408688:	853e                	mv	a0,a5
2040868a:	50b2                	lw	ra,44(sp)
2040868c:	5422                	lw	s0,40(sp)
2040868e:	6145                	addi	sp,sp,48
20408690:	8082                	ret

20408692 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20408692:	7179                	addi	sp,sp,-48
20408694:	d606                	sw	ra,44(sp)
20408696:	d422                	sw	s0,40(sp)
20408698:	1800                	addi	s0,sp,48
2040869a:	fca42e23          	sw	a0,-36(s0)
2040869e:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204086a2:	fdc42783          	lw	a5,-36(s0)
204086a6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204086aa:	fdc42503          	lw	a0,-36(s0)
204086ae:	a01ff0ef          	jal	ra,204080ae <__metal_driver_sifive_plic0_num_interrupts>
204086b2:	872a                	mv	a4,a0
204086b4:	fd842783          	lw	a5,-40(s0)
204086b8:	00e7c463          	blt	a5,a4,204086c0 <__metal_driver_riscv_plic0_enable+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
204086bc:	57fd                	li	a5,-1
204086be:	a829                	j	204086d8 <__metal_driver_riscv_plic0_enable+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
204086c0:	8aafe0ef          	jal	ra,2040676a <__metal_myhart_id>
204086c4:	87aa                	mv	a5,a0
204086c6:	4685                	li	a3,1
204086c8:	fd842603          	lw	a2,-40(s0)
204086cc:	85be                	mv	a1,a5
204086ce:	fec42503          	lw	a0,-20(s0)
204086d2:	c3bff0ef          	jal	ra,2040830c <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
204086d6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:197
}
204086d8:	853e                	mv	a0,a5
204086da:	50b2                	lw	ra,44(sp)
204086dc:	5422                	lw	s0,40(sp)
204086de:	6145                	addi	sp,sp,48
204086e0:	8082                	ret

204086e2 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
204086e2:	7179                	addi	sp,sp,-48
204086e4:	d606                	sw	ra,44(sp)
204086e6:	d422                	sw	s0,40(sp)
204086e8:	1800                	addi	s0,sp,48
204086ea:	fca42e23          	sw	a0,-36(s0)
204086ee:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204086f2:	fdc42783          	lw	a5,-36(s0)
204086f6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204086fa:	fdc42503          	lw	a0,-36(s0)
204086fe:	9b1ff0ef          	jal	ra,204080ae <__metal_driver_sifive_plic0_num_interrupts>
20408702:	872a                	mv	a4,a0
20408704:	fd842783          	lw	a5,-40(s0)
20408708:	00e7c463          	blt	a5,a4,20408710 <__metal_driver_riscv_plic0_disable+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
2040870c:	57fd                	li	a5,-1
2040870e:	a829                	j	20408728 <__metal_driver_riscv_plic0_disable+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20408710:	85afe0ef          	jal	ra,2040676a <__metal_myhart_id>
20408714:	87aa                	mv	a5,a0
20408716:	4681                	li	a3,0
20408718:	fd842603          	lw	a2,-40(s0)
2040871c:	85be                	mv	a1,a5
2040871e:	fec42503          	lw	a0,-20(s0)
20408722:	bebff0ef          	jal	ra,2040830c <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20408726:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:208
}
20408728:	853e                	mv	a0,a5
2040872a:	50b2                	lw	ra,44(sp)
2040872c:	5422                	lw	s0,40(sp)
2040872e:	6145                	addi	sp,sp,48
20408730:	8082                	ret

20408732 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20408732:	1101                	addi	sp,sp,-32
20408734:	ce06                	sw	ra,28(sp)
20408736:	cc22                	sw	s0,24(sp)
20408738:	1000                	addi	s0,sp,32
2040873a:	fea42623          	sw	a0,-20(s0)
2040873e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20408742:	828fe0ef          	jal	ra,2040676a <__metal_myhart_id>
20408746:	87aa                	mv	a5,a0
20408748:	fe842603          	lw	a2,-24(s0)
2040874c:	85be                	mv	a1,a5
2040874e:	fec42503          	lw	a0,-20(s0)
20408752:	a9bff0ef          	jal	ra,204081ec <__metal_plic0_set_threshold>
20408756:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20408758:	853e                	mv	a0,a5
2040875a:	40f2                	lw	ra,28(sp)
2040875c:	4462                	lw	s0,24(sp)
2040875e:	6105                	addi	sp,sp,32
20408760:	8082                	ret

20408762 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20408762:	1101                	addi	sp,sp,-32
20408764:	ce06                	sw	ra,28(sp)
20408766:	cc22                	sw	s0,24(sp)
20408768:	1000                	addi	s0,sp,32
2040876a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
2040876e:	ffdfd0ef          	jal	ra,2040676a <__metal_myhart_id>
20408772:	87aa                	mv	a5,a0
20408774:	85be                	mv	a1,a5
20408776:	fec42503          	lw	a0,-20(s0)
2040877a:	abbff0ef          	jal	ra,20408234 <__metal_plic0_get_threshold>
2040877e:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:219
}
20408780:	853e                	mv	a0,a5
20408782:	40f2                	lw	ra,28(sp)
20408784:	4462                	lw	s0,24(sp)
20408786:	6105                	addi	sp,sp,32
20408788:	8082                	ret

2040878a <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
2040878a:	7179                	addi	sp,sp,-48
2040878c:	d606                	sw	ra,44(sp)
2040878e:	d422                	sw	s0,40(sp)
20408790:	1800                	addi	s0,sp,48
20408792:	fca42e23          	sw	a0,-36(s0)
20408796:	fcb42c23          	sw	a1,-40(s0)
2040879a:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
2040879e:	fe042223          	sw	zero,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204087a2:	fdc42783          	lw	a5,-36(s0)
204087a6:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204087aa:	fdc42503          	lw	a0,-36(s0)
204087ae:	901ff0ef          	jal	ra,204080ae <__metal_driver_sifive_plic0_num_interrupts>
204087b2:	872a                	mv	a4,a0
204087b4:	fd442783          	lw	a5,-44(s0)
204087b8:	00e7c863          	blt	a5,a4,204087c8 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
204087bc:	57fd                	li	a5,-1
204087be:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
204087c2:	fe442783          	lw	a5,-28(s0)
204087c6:	a899                	j	2040881c <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
204087c8:	fe042623          	sw	zero,-20(s0)
204087cc:	a099                	j	20408812 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
204087ce:	fec42783          	lw	a5,-20(s0)
204087d2:	c795                	beqz	a5,204087fe <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
204087d4:	4685                	li	a3,1
204087d6:	fd442603          	lw	a2,-44(s0)
204087da:	fec42583          	lw	a1,-20(s0)
204087de:	fe842503          	lw	a0,-24(s0)
204087e2:	b2bff0ef          	jal	ra,2040830c <__metal_plic0_enable>
204087e6:	87aa                	mv	a5,a0
204087e8:	0017f713          	andi	a4,a5,1
204087ec:	fec42783          	lw	a5,-20(s0)
204087f0:	00f71733          	sll	a4,a4,a5
204087f4:	fe442783          	lw	a5,-28(s0)
204087f8:	8fd9                	or	a5,a5,a4
204087fa:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204087fe:	fec42783          	lw	a5,-20(s0)
20408802:	0785                	addi	a5,a5,1
20408804:	fef42623          	sw	a5,-20(s0)
20408808:	fd842783          	lw	a5,-40(s0)
2040880c:	8385                	srli	a5,a5,0x1
2040880e:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20408812:	fd842783          	lw	a5,-40(s0)
20408816:	ffc5                	bnez	a5,204087ce <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20408818:	fe442783          	lw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
2040881c:	853e                	mv	a0,a5
2040881e:	50b2                	lw	ra,44(sp)
20408820:	5422                	lw	s0,40(sp)
20408822:	6145                	addi	sp,sp,48
20408824:	8082                	ret

20408826 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20408826:	7179                	addi	sp,sp,-48
20408828:	d606                	sw	ra,44(sp)
2040882a:	d422                	sw	s0,40(sp)
2040882c:	1800                	addi	s0,sp,48
2040882e:	fca42e23          	sw	a0,-36(s0)
20408832:	fcb42c23          	sw	a1,-40(s0)
20408836:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2040883a:	fe042223          	sw	zero,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040883e:	fdc42783          	lw	a5,-36(s0)
20408842:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20408846:	fdc42503          	lw	a0,-36(s0)
2040884a:	865ff0ef          	jal	ra,204080ae <__metal_driver_sifive_plic0_num_interrupts>
2040884e:	872a                	mv	a4,a0
20408850:	fd442783          	lw	a5,-44(s0)
20408854:	00e7c863          	blt	a5,a4,20408864 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20408858:	57fd                	li	a5,-1
2040885a:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
2040885e:	fe442783          	lw	a5,-28(s0)
20408862:	a899                	j	204088b8 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20408864:	fe042623          	sw	zero,-20(s0)
20408868:	a099                	j	204088ae <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
2040886a:	fec42783          	lw	a5,-20(s0)
2040886e:	c795                	beqz	a5,2040889a <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20408870:	4681                	li	a3,0
20408872:	fd442603          	lw	a2,-44(s0)
20408876:	fec42583          	lw	a1,-20(s0)
2040887a:	fe842503          	lw	a0,-24(s0)
2040887e:	a8fff0ef          	jal	ra,2040830c <__metal_plic0_enable>
20408882:	87aa                	mv	a5,a0
20408884:	0017f713          	andi	a4,a5,1
20408888:	fec42783          	lw	a5,-20(s0)
2040888c:	00f71733          	sll	a4,a4,a5
20408890:	fe442783          	lw	a5,-28(s0)
20408894:	8fd9                	or	a5,a5,a4
20408896:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040889a:	fec42783          	lw	a5,-20(s0)
2040889e:	0785                	addi	a5,a5,1
204088a0:	fef42623          	sw	a5,-20(s0)
204088a4:	fd842783          	lw	a5,-40(s0)
204088a8:	8385                	srli	a5,a5,0x1
204088aa:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
204088ae:	fd842783          	lw	a5,-40(s0)
204088b2:	ffc5                	bnez	a5,2040886a <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
204088b4:	fe442783          	lw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
204088b8:	853e                	mv	a0,a5
204088ba:	50b2                	lw	ra,44(sp)
204088bc:	5422                	lw	s0,40(sp)
204088be:	6145                	addi	sp,sp,48
204088c0:	8082                	ret

204088c2 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
204088c2:	7179                	addi	sp,sp,-48
204088c4:	d606                	sw	ra,44(sp)
204088c6:	d422                	sw	s0,40(sp)
204088c8:	1800                	addi	s0,sp,48
204088ca:	fca42e23          	sw	a0,-36(s0)
204088ce:	fcb42c23          	sw	a1,-40(s0)
204088d2:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
204088d6:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
204088da:	fe042623          	sw	zero,-20(s0)
204088de:	a091                	j	20408922 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
204088e0:	fec42783          	lw	a5,-20(s0)
204088e4:	c78d                	beqz	a5,2040890e <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
204088e6:	fd442603          	lw	a2,-44(s0)
204088ea:	fec42583          	lw	a1,-20(s0)
204088ee:	fdc42503          	lw	a0,-36(s0)
204088f2:	8fbff0ef          	jal	ra,204081ec <__metal_plic0_set_threshold>
204088f6:	87aa                	mv	a5,a0
204088f8:	0017f713          	andi	a4,a5,1
204088fc:	fec42783          	lw	a5,-20(s0)
20408900:	00f71733          	sll	a4,a4,a5
20408904:	fe842783          	lw	a5,-24(s0)
20408908:	8fd9                	or	a5,a5,a4
2040890a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040890e:	fec42783          	lw	a5,-20(s0)
20408912:	0785                	addi	a5,a5,1
20408914:	fef42623          	sw	a5,-20(s0)
20408918:	fd842783          	lw	a5,-40(s0)
2040891c:	8385                	srli	a5,a5,0x1
2040891e:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20408922:	fd842783          	lw	a5,-40(s0)
20408926:	ffcd                	bnez	a5,204088e0 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20408928:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:281
}
2040892c:	853e                	mv	a0,a5
2040892e:	50b2                	lw	ra,44(sp)
20408930:	5422                	lw	s0,40(sp)
20408932:	6145                	addi	sp,sp,48
20408934:	8082                	ret

20408936 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20408936:	1101                	addi	sp,sp,-32
20408938:	ce06                	sw	ra,28(sp)
2040893a:	cc22                	sw	s0,24(sp)
2040893c:	1000                	addi	s0,sp,32
2040893e:	fea42623          	sw	a0,-20(s0)
20408942:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20408946:	fe842583          	lw	a1,-24(s0)
2040894a:	fec42503          	lw	a0,-20(s0)
2040894e:	8e7ff0ef          	jal	ra,20408234 <__metal_plic0_get_threshold>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20408952:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:287
}
20408954:	853e                	mv	a0,a5
20408956:	40f2                	lw	ra,28(sp)
20408958:	4462                	lw	s0,24(sp)
2040895a:	6105                	addi	sp,sp,32
2040895c:	8082                	ret

2040895e <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1101



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
2040895e:	1101                	addi	sp,sp,-32
20408960:	ce22                	sw	s0,28(sp)
20408962:	1000                	addi	s0,sp,32
20408964:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1102
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20408968:	800007b7          	lui	a5,0x80000
2040896c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffc74c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1103
}
20408970:	853e                	mv	a0,a5
20408972:	4472                	lw	s0,28(sp)
20408974:	6105                	addi	sp,sp,32
20408976:	8082                	ret

20408978 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1106

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20408978:	1101                	addi	sp,sp,-32
2040897a:	ce22                	sw	s0,28(sp)
2040897c:	1000                	addi	s0,sp,32
2040897e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1107
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20408982:	83018793          	addi	a5,gp,-2000 # 80000aa8 <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1108
}
20408986:	853e                	mv	a0,a5
20408988:	4472                	lw	s0,28(sp)
2040898a:	6105                	addi	sp,sp,32
2040898c:	8082                	ret

2040898e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1116
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
2040898e:	1101                	addi	sp,sp,-32
20408990:	ce22                	sw	s0,28(sp)
20408992:	1000                	addi	s0,sp,32
20408994:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1117
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20408998:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1118
}
2040899a:	853e                	mv	a0,a5
2040899c:	4472                	lw	s0,28(sp)
2040899e:	6105                	addi	sp,sp,32
204089a0:	8082                	ret

204089a2 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
204089a2:	1141                	addi	sp,sp,-16
204089a4:	c622                	sw	s0,12(sp)
204089a6:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
204089a8:	84418793          	addi	a5,gp,-1980 # 80000abc <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
204089ac:	853e                	mv	a0,a5
204089ae:	4432                	lw	s0,12(sp)
204089b0:	0141                	addi	sp,sp,16
204089b2:	8082                	ret

204089b4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
204089b4:	7139                	addi	sp,sp,-64
204089b6:	de06                	sw	ra,60(sp)
204089b8:	dc22                	sw	s0,56(sp)
204089ba:	0080                	addi	s0,sp,64
204089bc:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
204089c0:	fcc42503          	lw	a0,-52(s0)
204089c4:	3f69                	jal	2040895e <__metal_driver_sifive_fe310_g000_hfrosc_ref>
204089c6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
204089ca:	fcc42503          	lw	a0,-52(s0)
204089ce:	37c1                	jal	2040898e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
204089d0:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
204089d4:	fcc42503          	lw	a0,-52(s0)
204089d8:	3745                	jal	20408978 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
204089da:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
204089de:	37d1                	jal	204089a2 <__metal_driver_sifive_fe310_g000_prci_vtable>
204089e0:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
204089e4:	fe042783          	lw	a5,-32(s0)
204089e8:	439c                	lw	a5,0(a5)
204089ea:	fe842583          	lw	a1,-24(s0)
204089ee:	fe442503          	lw	a0,-28(s0)
204089f2:	9782                	jalr	a5
204089f4:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
204089f8:	fdc42703          	lw	a4,-36(s0)
204089fc:	400007b7          	lui	a5,0x40000
20408a00:	8ff9                	and	a5,a5,a4
20408a02:	e399                	bnez	a5,20408a08 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20408a04:	57fd                	li	a5,-1
20408a06:	a025                	j	20408a2e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20408a08:	fdc42783          	lw	a5,-36(s0)
20408a0c:	0007c463          	bltz	a5,20408a14 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20408a10:	57fd                	li	a5,-1
20408a12:	a831                	j	20408a2e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20408a14:	fec42503          	lw	a0,-20(s0)
20408a18:	085010ef          	jal	ra,2040a29c <metal_clock_get_rate_hz>
20408a1c:	87aa                	mv	a5,a0
20408a1e:	873e                	mv	a4,a5
20408a20:	fdc42783          	lw	a5,-36(s0)
20408a24:	03f7f793          	andi	a5,a5,63
20408a28:	0785                	addi	a5,a5,1
20408a2a:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20408a2e:	853e                	mv	a0,a5
20408a30:	50f2                	lw	ra,60(sp)
20408a32:	5462                	lw	s0,56(sp)
20408a34:	6121                	addi	sp,sp,64
20408a36:	8082                	ret

20408a38 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20408a38:	1101                	addi	sp,sp,-32
20408a3a:	ce06                	sw	ra,28(sp)
20408a3c:	cc22                	sw	s0,24(sp)
20408a3e:	1000                	addi	s0,sp,32
20408a40:	fea42623          	sw	a0,-20(s0)
20408a44:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20408a48:	fec42503          	lw	a0,-20(s0)
20408a4c:	f69ff0ef          	jal	ra,204089b4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20408a50:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20408a52:	853e                	mv	a0,a5
20408a54:	40f2                	lw	ra,28(sp)
20408a56:	4462                	lw	s0,24(sp)
20408a58:	6105                	addi	sp,sp,32
20408a5a:	8082                	ret

20408a5c <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1124
{
20408a5c:	1101                	addi	sp,sp,-32
20408a5e:	ce22                	sw	s0,28(sp)
20408a60:	1000                	addi	s0,sp,32
20408a62:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1125
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20408a66:	800007b7          	lui	a5,0x80000
20408a6a:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffc740>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1126
}
20408a6e:	853e                	mv	a0,a5
20408a70:	4472                	lw	s0,28(sp)
20408a72:	6105                	addi	sp,sp,32
20408a74:	8082                	ret

20408a76 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1129
{
20408a76:	1101                	addi	sp,sp,-32
20408a78:	ce22                	sw	s0,28(sp)
20408a7a:	1000                	addi	s0,sp,32
20408a7c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1130
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20408a80:	83018793          	addi	a5,gp,-2000 # 80000aa8 <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1131
}
20408a84:	853e                	mv	a0,a5
20408a86:	4472                	lw	s0,28(sp)
20408a88:	6105                	addi	sp,sp,32
20408a8a:	8082                	ret

20408a8c <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1134
{
20408a8c:	1101                	addi	sp,sp,-32
20408a8e:	ce22                	sw	s0,28(sp)
20408a90:	1000                	addi	s0,sp,32
20408a92:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1135
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20408a96:	4791                	li	a5,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1136
}
20408a98:	853e                	mv	a0,a5
20408a9a:	4472                	lw	s0,28(sp)
20408a9c:	6105                	addi	sp,sp,32
20408a9e:	8082                	ret

20408aa0 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
20408aa0:	1141                	addi	sp,sp,-16
20408aa2:	c622                	sw	s0,12(sp)
20408aa4:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20408aa6:	84418793          	addi	a5,gp,-1980 # 80000abc <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
20408aaa:	853e                	mv	a0,a5
20408aac:	4432                	lw	s0,12(sp)
20408aae:	0141                	addi	sp,sp,16
20408ab0:	8082                	ret

20408ab2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20408ab2:	7139                	addi	sp,sp,-64
20408ab4:	de06                	sw	ra,60(sp)
20408ab6:	dc22                	sw	s0,56(sp)
20408ab8:	0080                	addi	s0,sp,64
20408aba:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20408abe:	fcc42503          	lw	a0,-52(s0)
20408ac2:	f9bff0ef          	jal	ra,20408a5c <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20408ac6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20408aca:	fcc42503          	lw	a0,-52(s0)
20408ace:	3f7d                	jal	20408a8c <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20408ad0:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20408ad4:	fcc42503          	lw	a0,-52(s0)
20408ad8:	3f79                	jal	20408a76 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20408ada:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20408ade:	37c9                	jal	20408aa0 <__metal_driver_sifive_fe310_g000_prci_vtable>
20408ae0:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20408ae4:	fe042783          	lw	a5,-32(s0)
20408ae8:	439c                	lw	a5,0(a5)
20408aea:	fe842583          	lw	a1,-24(s0)
20408aee:	fe442503          	lw	a0,-28(s0)
20408af2:	9782                	jalr	a5
20408af4:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20408af8:	fdc42703          	lw	a4,-36(s0)
20408afc:	400007b7          	lui	a5,0x40000
20408b00:	8ff9                	and	a5,a5,a4
20408b02:	e399                	bnez	a5,20408b08 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20408b04:	57fd                	li	a5,-1
20408b06:	a821                	j	20408b1e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20408b08:	fdc42783          	lw	a5,-36(s0)
20408b0c:	0007c463          	bltz	a5,20408b14 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20408b10:	57fd                	li	a5,-1
20408b12:	a031                	j	20408b1e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20408b14:	fec42503          	lw	a0,-20(s0)
20408b18:	784010ef          	jal	ra,2040a29c <metal_clock_get_rate_hz>
20408b1c:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20408b1e:	853e                	mv	a0,a5
20408b20:	50f2                	lw	ra,60(sp)
20408b22:	5462                	lw	s0,56(sp)
20408b24:	6121                	addi	sp,sp,64
20408b26:	8082                	ret

20408b28 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20408b28:	1101                	addi	sp,sp,-32
20408b2a:	ce06                	sw	ra,28(sp)
20408b2c:	cc22                	sw	s0,24(sp)
20408b2e:	1000                	addi	s0,sp,32
20408b30:	fea42623          	sw	a0,-20(s0)
20408b34:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20408b38:	fec42503          	lw	a0,-20(s0)
20408b3c:	f77ff0ef          	jal	ra,20408ab2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20408b40:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20408b42:	853e                	mv	a0,a5
20408b44:	40f2                	lw	ra,28(sp)
20408b46:	4462                	lw	s0,24(sp)
20408b48:	6105                	addi	sp,sp,32
20408b4a:	8082                	ret

20408b4c <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1185
{
20408b4c:	1101                	addi	sp,sp,-32
20408b4e:	ce22                	sw	s0,28(sp)
20408b50:	1000                	addi	s0,sp,32
20408b52:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1186
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20408b56:	800017b7          	lui	a5,0x80001
20408b5a:	a5078793          	addi	a5,a5,-1456 # 80000a50 <metal_segment_heap_target_end+0xffffd130>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1187
}
20408b5e:	853e                	mv	a0,a5
20408b60:	4472                	lw	s0,28(sp)
20408b62:	6105                	addi	sp,sp,32
20408b64:	8082                	ret

20408b66 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1190
{
20408b66:	1101                	addi	sp,sp,-32
20408b68:	ce22                	sw	s0,28(sp)
20408b6a:	1000                	addi	s0,sp,32
20408b6c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1191
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20408b70:	800017b7          	lui	a5,0x80001
20408b74:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xffffd13c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1192
}
20408b78:	853e                	mv	a0,a5
20408b7a:	4472                	lw	s0,28(sp)
20408b7c:	6105                	addi	sp,sp,32
20408b7e:	8082                	ret

20408b80 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1195
{
20408b80:	1101                	addi	sp,sp,-32
20408b82:	ce22                	sw	s0,28(sp)
20408b84:	1000                	addi	s0,sp,32
20408b86:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1196
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20408b8a:	83018793          	addi	a5,gp,-2000 # 80000aa8 <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1197
}
20408b8e:	853e                	mv	a0,a5
20408b90:	4472                	lw	s0,28(sp)
20408b92:	6105                	addi	sp,sp,32
20408b94:	8082                	ret

20408b96 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1200
{
20408b96:	1101                	addi	sp,sp,-32
20408b98:	ce22                	sw	s0,28(sp)
20408b9a:	1000                	addi	s0,sp,32
20408b9c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1201
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20408ba0:	47b1                	li	a5,12
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1202
}
20408ba2:	853e                	mv	a0,a5
20408ba4:	4472                	lw	s0,28(sp)
20408ba6:	6105                	addi	sp,sp,32
20408ba8:	8082                	ret

20408baa <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1205
{
20408baa:	1141                	addi	sp,sp,-16
20408bac:	c622                	sw	s0,12(sp)
20408bae:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1206
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20408bb0:	83018793          	addi	a5,gp,-2000 # 80000aa8 <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1207
}
20408bb4:	853e                	mv	a0,a5
20408bb6:	4432                	lw	s0,12(sp)
20408bb8:	0141                	addi	sp,sp,16
20408bba:	8082                	ret

20408bbc <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1210
{
20408bbc:	1141                	addi	sp,sp,-16
20408bbe:	c622                	sw	s0,12(sp)
20408bc0:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1211
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20408bc2:	47a1                	li	a5,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1212
}
20408bc4:	853e                	mv	a0,a5
20408bc6:	4432                	lw	s0,12(sp)
20408bc8:	0141                	addi	sp,sp,16
20408bca:	8082                	ret

20408bcc <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1215
{
20408bcc:	1141                	addi	sp,sp,-16
20408bce:	c622                	sw	s0,12(sp)
20408bd0:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1216
		return 16000000;
20408bd2:	00f427b7          	lui	a5,0xf42
20408bd6:	40078793          	addi	a5,a5,1024 # f42400 <__stack_size+0xf41400>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1217
}
20408bda:	853e                	mv	a0,a5
20408bdc:	4432                	lw	s0,12(sp)
20408bde:	0141                	addi	sp,sp,16
20408be0:	8082                	ret

20408be2 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1223
{
20408be2:	1141                	addi	sp,sp,-16
20408be4:	c622                	sw	s0,12(sp)
20408be6:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1224
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20408be8:	100087b7          	lui	a5,0x10008
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1225
}
20408bec:	853e                	mv	a0,a5
20408bee:	4432                	lw	s0,12(sp)
20408bf0:	0141                	addi	sp,sp,16
20408bf2:	8082                	ret

20408bf4 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
20408bf4:	1141                	addi	sp,sp,-16
20408bf6:	c622                	sw	s0,12(sp)
20408bf8:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20408bfa:	84418793          	addi	a5,gp,-1980 # 80000abc <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
20408bfe:	853e                	mv	a0,a5
20408c00:	4432                	lw	s0,12(sp)
20408c02:	0141                	addi	sp,sp,16
20408c04:	8082                	ret

20408c06 <get_pll_config_freq>:
get_pll_config_freq():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20408c06:	1101                	addi	sp,sp,-32
20408c08:	ce22                	sw	s0,28(sp)
20408c0a:	1000                	addi	s0,sp,32
20408c0c:	fea42623          	sw	a0,-20(s0)
20408c10:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20408c14:	fe842783          	lw	a5,-24(s0)
20408c18:	479c                	lw	a5,8(a5)
20408c1a:	fec42703          	lw	a4,-20(s0)
20408c1e:	00f76963          	bltu	a4,a5,20408c30 <get_pll_config_freq+0x2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20408c22:	fe842783          	lw	a5,-24(s0)
20408c26:	47dc                	lw	a5,12(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20408c28:	fec42703          	lw	a4,-20(s0)
20408c2c:	00e7f463          	bgeu	a5,a4,20408c34 <get_pll_config_freq+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20408c30:	57fd                	li	a5,-1
20408c32:	a829                	j	20408c4c <get_pll_config_freq+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20408c34:	fe842783          	lw	a5,-24(s0)
20408c38:	4398                	lw	a4,0(a5)
20408c3a:	fec42783          	lw	a5,-20(s0)
20408c3e:	02f70733          	mul	a4,a4,a5
20408c42:	fe842783          	lw	a5,-24(s0)
20408c46:	43dc                	lw	a5,4(a5)
20408c48:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20408c4c:	853e                	mv	a0,a5
20408c4e:	4472                	lw	s0,28(sp)
20408c50:	6105                	addi	sp,sp,32
20408c52:	8082                	ret

20408c54 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20408c54:	7139                	addi	sp,sp,-64
20408c56:	de06                	sw	ra,60(sp)
20408c58:	dc22                	sw	s0,56(sp)
20408c5a:	0080                	addi	s0,sp,64
20408c5c:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20408c60:	fcc42783          	lw	a5,-52(s0)
20408c64:	853e                	mv	a0,a5
20408c66:	f01ff0ef          	jal	ra,20408b66 <__metal_driver_sifive_fe310_g000_pll_pllref>
20408c6a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20408c6e:	f5fff0ef          	jal	ra,20408bcc <__metal_driver_sifive_fe310_g000_pll_init_rate>
20408c72:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20408c76:	f47ff0ef          	jal	ra,20408bbc <__metal_driver_sifive_fe310_g000_pll_config_offset>
20408c7a:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20408c7e:	f65ff0ef          	jal	ra,20408be2 <__metal_driver_sifive_fe310_g000_prci_base>
20408c82:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20408c86:	fe042703          	lw	a4,-32(s0)
20408c8a:	fe442783          	lw	a5,-28(s0)
20408c8e:	97ba                	add	a5,a5,a4
20408c90:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20408c94:	fcc42783          	lw	a5,-52(s0)
20408c98:	43dc                	lw	a5,4(a5)
20408c9a:	853e                	mv	a0,a5
20408c9c:	56c010ef          	jal	ra,2040a208 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20408ca0:	fdc42783          	lw	a5,-36(s0)
20408ca4:	4398                	lw	a4,0(a5)
20408ca6:	67c1                	lui	a5,0x10
20408ca8:	8ff9                	and	a5,a5,a4
20408caa:	cb91                	beqz	a5,20408cbe <__metal_driver_sifive_fe310_g000_pll_init+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20408cac:	fdc42783          	lw	a5,-36(s0)
20408cb0:	4398                	lw	a4,0(a5)
20408cb2:	77c1                	lui	a5,0xffff0
20408cb4:	17fd                	addi	a5,a5,-1
20408cb6:	8f7d                	and	a4,a4,a5
20408cb8:	fdc42783          	lw	a5,-36(s0)
20408cbc:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20408cbe:	fec42783          	lw	a5,-20(s0)
20408cc2:	cb91                	beqz	a5,20408cd6 <__metal_driver_sifive_fe310_g000_pll_init+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20408cc4:	fdc42783          	lw	a5,-36(s0)
20408cc8:	4398                	lw	a4,0(a5)
20408cca:	000207b7          	lui	a5,0x20
20408cce:	8f5d                	or	a4,a4,a5
20408cd0:	fdc42783          	lw	a5,-36(s0)
20408cd4:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20408cd6:	fcc42783          	lw	a5,-52(s0)
20408cda:	439c                	lw	a5,0(a5)
20408cdc:	43d8                	lw	a4,4(a5)
20408cde:	fcc42783          	lw	a5,-52(s0)
20408ce2:	fe842583          	lw	a1,-24(s0)
20408ce6:	853e                	mv	a0,a5
20408ce8:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20408cea:	fcc42783          	lw	a5,-52(s0)
20408cee:	479c                	lw	a5,8(a5)
20408cf0:	853e                	mv	a0,a5
20408cf2:	516010ef          	jal	ra,2040a208 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20408cf6:	0001                	nop
20408cf8:	50f2                	lw	ra,60(sp)
20408cfa:	5462                	lw	s0,56(sp)
20408cfc:	6121                	addi	sp,sp,64
20408cfe:	8082                	ret

20408d00 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20408d00:	711d                	addi	sp,sp,-96
20408d02:	ce86                	sw	ra,92(sp)
20408d04:	cca2                	sw	s0,88(sp)
20408d06:	1080                	addi	s0,sp,96
20408d08:	faa42623          	sw	a0,-84(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20408d0c:	fac42503          	lw	a0,-84(s0)
20408d10:	e57ff0ef          	jal	ra,20408b66 <__metal_driver_sifive_fe310_g000_pll_pllref>
20408d14:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20408d18:	fac42503          	lw	a0,-84(s0)
20408d1c:	e31ff0ef          	jal	ra,20408b4c <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20408d20:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20408d24:	fac42503          	lw	a0,-84(s0)
20408d28:	e95ff0ef          	jal	ra,20408bbc <__metal_driver_sifive_fe310_g000_pll_config_offset>
20408d2c:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20408d30:	fac42503          	lw	a0,-84(s0)
20408d34:	e77ff0ef          	jal	ra,20408baa <__metal_driver_sifive_fe310_g000_pll_config_base>
20408d38:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20408d3c:	fac42503          	lw	a0,-84(s0)
20408d40:	e57ff0ef          	jal	ra,20408b96 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20408d44:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20408d48:	fac42503          	lw	a0,-84(s0)
20408d4c:	e35ff0ef          	jal	ra,20408b80 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20408d50:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20408d54:	ea1ff0ef          	jal	ra,20408bf4 <__metal_driver_sifive_fe310_g000_prci_vtable>
20408d58:	fca42a23          	sw	a0,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20408d5c:	fd442783          	lw	a5,-44(s0)
20408d60:	439c                	lw	a5,0(a5)
20408d62:	fe442583          	lw	a1,-28(s0)
20408d66:	fe042503          	lw	a0,-32(s0)
20408d6a:	9782                	jalr	a5
20408d6c:	fca42823          	sw	a0,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20408d70:	fd442783          	lw	a5,-44(s0)
20408d74:	439c                	lw	a5,0(a5)
20408d76:	fdc42583          	lw	a1,-36(s0)
20408d7a:	fd842503          	lw	a0,-40(s0)
20408d7e:	9782                	jalr	a5
20408d80:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20408d84:	fd042703          	lw	a4,-48(s0)
20408d88:	67c1                	lui	a5,0x10
20408d8a:	8f7d                	and	a4,a4,a5
20408d8c:	67c1                	lui	a5,0x10
20408d8e:	00f77863          	bgeu	a4,a5,20408d9e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20408d92:	fe842503          	lw	a0,-24(s0)
20408d96:	506010ef          	jal	ra,2040a29c <metal_clock_get_rate_hz>
20408d9a:	87aa                	mv	a5,a0
20408d9c:	a8e1                	j	20408e74 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20408d9e:	fd042703          	lw	a4,-48(s0)
20408da2:	000207b7          	lui	a5,0x20
20408da6:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20408da8:	000207b7          	lui	a5,0x20
20408dac:	00f76563          	bltu	a4,a5,20408db6 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20408db0:	fec42783          	lw	a5,-20(s0)
20408db4:	a019                	j	20408dba <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xba>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20408db6:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20408dba:	853e                	mv	a0,a5
20408dbc:	4e0010ef          	jal	ra,2040a29c <metal_clock_get_rate_hz>
20408dc0:	fca42423          	sw	a0,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20408dc4:	fd042703          	lw	a4,-48(s0)
20408dc8:	000407b7          	lui	a5,0x40
20408dcc:	8f7d                	and	a4,a4,a5
20408dce:	000407b7          	lui	a5,0x40
20408dd2:	00f76563          	bltu	a4,a5,20408ddc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xdc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20408dd6:	fc842783          	lw	a5,-56(s0)
20408dda:	a869                	j	20408e74 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20408ddc:	fd042783          	lw	a5,-48(s0)
20408de0:	8b9d                	andi	a5,a5,7
20408de2:	0785                	addi	a5,a5,1
20408de4:	fcf42223          	sw	a5,-60(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20408de8:	fd042783          	lw	a5,-48(s0)
20408dec:	3f07f793          	andi	a5,a5,1008
20408df0:	8391                	srli	a5,a5,0x4
20408df2:	0785                	addi	a5,a5,1
20408df4:	0786                	slli	a5,a5,0x1
20408df6:	fcf42023          	sw	a5,-64(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20408dfa:	fd042703          	lw	a4,-48(s0)
20408dfe:	6785                	lui	a5,0x1
20408e00:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20408e04:	8f7d                	and	a4,a4,a5
20408e06:	3ff00793          	li	a5,1023
20408e0a:	00e7e463          	bltu	a5,a4,20408e12 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x112>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20408e0e:	57fd                	li	a5,-1
20408e10:	a095                	j	20408e74 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20408e12:	fd042703          	lw	a4,-48(s0)
20408e16:	6785                	lui	a5,0x1
20408e18:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20408e1c:	8ff9                	and	a5,a5,a4
20408e1e:	83a9                	srli	a5,a5,0xa
20408e20:	4705                	li	a4,1
20408e22:	00f717b3          	sll	a5,a4,a5
20408e26:	faf42e23          	sw	a5,-68(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20408e2a:	fc842703          	lw	a4,-56(s0)
20408e2e:	fc442783          	lw	a5,-60(s0)
20408e32:	02f74733          	div	a4,a4,a5
20408e36:	fc042783          	lw	a5,-64(s0)
20408e3a:	02f70733          	mul	a4,a4,a5
20408e3e:	fbc42783          	lw	a5,-68(s0)
20408e42:	02f747b3          	div	a5,a4,a5
20408e46:	faf42c23          	sw	a5,-72(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20408e4a:	fcc42783          	lw	a5,-52(s0)
20408e4e:	1007f713          	andi	a4,a5,256
20408e52:	0ff00793          	li	a5,255
20408e56:	00e7f563          	bgeu	a5,a4,20408e60 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x160>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20408e5a:	fb842783          	lw	a5,-72(s0)
20408e5e:	a819                	j	20408e74 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20408e60:	fb842703          	lw	a4,-72(s0)
20408e64:	fcc42783          	lw	a5,-52(s0)
20408e68:	03f7f793          	andi	a5,a5,63
20408e6c:	0785                	addi	a5,a5,1
20408e6e:	0786                	slli	a5,a5,0x1
20408e70:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20408e74:	853e                	mv	a0,a5
20408e76:	40f6                	lw	ra,92(sp)
20408e78:	4466                	lw	s0,88(sp)
20408e7a:	6125                	addi	sp,sp,96
20408e7c:	8082                	ret

20408e7e <find_closest_config>:
find_closest_config():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20408e7e:	7139                	addi	sp,sp,-64
20408e80:	de06                	sw	ra,60(sp)
20408e82:	dc22                	sw	s0,56(sp)
20408e84:	0080                	addi	s0,sp,64
20408e86:	fca42623          	sw	a0,-52(s0)
20408e8a:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20408e8e:	57fd                	li	a5,-1
20408e90:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20408e94:	800007b7          	lui	a5,0x80000
20408e98:	fff7c793          	not	a5,a5
20408e9c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20408ea0:	04300793          	li	a5,67
20408ea4:	fef42223          	sw	a5,-28(s0)
20408ea8:	a0b5                	j	20408f14 <find_closest_config+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20408eaa:	fcc42683          	lw	a3,-52(s0)
20408eae:	fe442783          	lw	a5,-28(s0)
20408eb2:	00579713          	slli	a4,a5,0x5
20408eb6:	800017b7          	lui	a5,0x80001
20408eba:	71478793          	addi	a5,a5,1812 # 80001714 <metal_segment_heap_target_end+0xffffddf4>
20408ebe:	97ba                	add	a5,a5,a4
20408ec0:	85be                	mv	a1,a5
20408ec2:	8536                	mv	a0,a3
20408ec4:	d43ff0ef          	jal	ra,20408c06 <get_pll_config_freq>
20408ec8:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20408ecc:	fe042703          	lw	a4,-32(s0)
20408ed0:	57fd                	li	a5,-1
20408ed2:	02f70c63          	beq	a4,a5,20408f0a <find_closest_config+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20408ed6:	fe042703          	lw	a4,-32(s0)
20408eda:	fc842783          	lw	a5,-56(s0)
20408ede:	8f1d                	sub	a4,a4,a5
20408ee0:	41f75793          	srai	a5,a4,0x1f
20408ee4:	8f3d                	xor	a4,a4,a5
20408ee6:	40f707b3          	sub	a5,a4,a5
20408eea:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20408eee:	fdc42703          	lw	a4,-36(s0)
20408ef2:	fe842783          	lw	a5,-24(s0)
20408ef6:	00f75a63          	bge	a4,a5,20408f0a <find_closest_config+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20408efa:	fe442783          	lw	a5,-28(s0)
20408efe:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20408f02:	fdc42783          	lw	a5,-36(s0)
20408f06:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20408f0a:	fe442783          	lw	a5,-28(s0)
20408f0e:	17fd                	addi	a5,a5,-1
20408f10:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20408f14:	fe442783          	lw	a5,-28(s0)
20408f18:	f807d9e3          	bgez	a5,20408eaa <find_closest_config+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20408f1c:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20408f20:	853e                	mv	a0,a5
20408f22:	50f2                	lw	ra,60(sp)
20408f24:	5462                	lw	s0,56(sp)
20408f26:	6121                	addi	sp,sp,64
20408f28:	8082                	ret

20408f2a <configure_pll>:
configure_pll():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20408f2a:	7179                	addi	sp,sp,-48
20408f2c:	d606                	sw	ra,44(sp)
20408f2e:	d422                	sw	s0,40(sp)
20408f30:	1800                	addi	s0,sp,48
20408f32:	fca42e23          	sw	a0,-36(s0)
20408f36:	fcb42c23          	sw	a1,-40(s0)
20408f3a:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20408f3e:	fdc42783          	lw	a5,-36(s0)
20408f42:	439c                	lw	a5,0(a5)
20408f44:	ff87f713          	andi	a4,a5,-8
20408f48:	fdc42783          	lw	a5,-36(s0)
20408f4c:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20408f4e:	fdc42783          	lw	a5,-36(s0)
20408f52:	4398                	lw	a4,0(a5)
20408f54:	fd442783          	lw	a5,-44(s0)
20408f58:	4b9c                	lw	a5,16(a5)
20408f5a:	8b9d                	andi	a5,a5,7
20408f5c:	8f5d                	or	a4,a4,a5
20408f5e:	fdc42783          	lw	a5,-36(s0)
20408f62:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20408f64:	fdc42783          	lw	a5,-36(s0)
20408f68:	439c                	lw	a5,0(a5)
20408f6a:	c0f7f713          	andi	a4,a5,-1009
20408f6e:	fdc42783          	lw	a5,-36(s0)
20408f72:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20408f74:	fdc42783          	lw	a5,-36(s0)
20408f78:	4398                	lw	a4,0(a5)
20408f7a:	fd442783          	lw	a5,-44(s0)
20408f7e:	4bdc                	lw	a5,20(a5)
20408f80:	0792                	slli	a5,a5,0x4
20408f82:	3f07f793          	andi	a5,a5,1008
20408f86:	8f5d                	or	a4,a4,a5
20408f88:	fdc42783          	lw	a5,-36(s0)
20408f8c:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20408f8e:	fdc42783          	lw	a5,-36(s0)
20408f92:	4398                	lw	a4,0(a5)
20408f94:	77fd                	lui	a5,0xfffff
20408f96:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffbadf>
20408f9a:	8f7d                	and	a4,a4,a5
20408f9c:	fdc42783          	lw	a5,-36(s0)
20408fa0:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20408fa2:	fdc42783          	lw	a5,-36(s0)
20408fa6:	4398                	lw	a4,0(a5)
20408fa8:	fd442783          	lw	a5,-44(s0)
20408fac:	4f9c                	lw	a5,24(a5)
20408fae:	00a79693          	slli	a3,a5,0xa
20408fb2:	6785                	lui	a5,0x1
20408fb4:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20408fb8:	8ff5                	and	a5,a5,a3
20408fba:	8f5d                	or	a4,a4,a5
20408fbc:	fdc42783          	lw	a5,-36(s0)
20408fc0:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20408fc2:	fd442783          	lw	a5,-44(s0)
20408fc6:	4fdc                	lw	a5,28(a5)
20408fc8:	0207db63          	bgez	a5,20408ffe <configure_pll+0xd4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20408fcc:	fd842783          	lw	a5,-40(s0)
20408fd0:	439c                	lw	a5,0(a5)
20408fd2:	1007e713          	ori	a4,a5,256
20408fd6:	fd842783          	lw	a5,-40(s0)
20408fda:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20408fdc:	fd842783          	lw	a5,-40(s0)
20408fe0:	439c                	lw	a5,0(a5)
20408fe2:	fc07f713          	andi	a4,a5,-64
20408fe6:	fd842783          	lw	a5,-40(s0)
20408fea:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20408fec:	fd842783          	lw	a5,-40(s0)
20408ff0:	439c                	lw	a5,0(a5)
20408ff2:	0017e713          	ori	a4,a5,1
20408ff6:	fd842783          	lw	a5,-40(s0)
20408ffa:	c398                	sw	a4,0(a5)
20408ffc:	a82d                	j	20409036 <configure_pll+0x10c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20408ffe:	fd842783          	lw	a5,-40(s0)
20409002:	439c                	lw	a5,0(a5)
20409004:	eff7f713          	andi	a4,a5,-257
20409008:	fd842783          	lw	a5,-40(s0)
2040900c:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2040900e:	fd842783          	lw	a5,-40(s0)
20409012:	439c                	lw	a5,0(a5)
20409014:	fc07f713          	andi	a4,a5,-64
20409018:	fd842783          	lw	a5,-40(s0)
2040901c:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
2040901e:	fd842783          	lw	a5,-40(s0)
20409022:	4398                	lw	a4,0(a5)
20409024:	fd442783          	lw	a5,-44(s0)
20409028:	4fdc                	lw	a5,28(a5)
2040902a:	03f7f793          	andi	a5,a5,63
2040902e:	8f5d                	or	a4,a4,a5
20409030:	fd842783          	lw	a5,-40(s0)
20409034:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20409036:	fdc42783          	lw	a5,-36(s0)
2040903a:	4398                	lw	a4,0(a5)
2040903c:	fffc07b7          	lui	a5,0xfffc0
20409040:	17fd                	addi	a5,a5,-1
20409042:	8f7d                	and	a4,a4,a5
20409044:	fdc42783          	lw	a5,-36(s0)
20409048:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2040904a:	fe040793          	addi	a5,s0,-32
2040904e:	863e                	mv	a2,a5
20409050:	4585                	li	a1,1
20409052:	81c18513          	addi	a0,gp,-2020 # 80000a94 <__metal_dt_clint_2000000>
20409056:	caefd0ef          	jal	ra,20406504 <__metal_driver_riscv_clint0_command_request>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2040905a:	fe042683          	lw	a3,-32(s0)
2040905e:	fe442703          	lw	a4,-28(s0)
20409062:	4591                	li	a1,4
20409064:	4601                	li	a2,0
20409066:	00b687b3          	add	a5,a3,a1
2040906a:	853e                	mv	a0,a5
2040906c:	00d53533          	sltu	a0,a0,a3
20409070:	00c70833          	add	a6,a4,a2
20409074:	01050733          	add	a4,a0,a6
20409078:	883a                	mv	a6,a4
2040907a:	fef42423          	sw	a5,-24(s0)
2040907e:	ff042623          	sw	a6,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20409082:	a809                	j	20409094 <configure_pll+0x16a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20409084:	fe040793          	addi	a5,s0,-32
20409088:	863e                	mv	a2,a5
2040908a:	4585                	li	a1,1
2040908c:	81c18513          	addi	a0,gp,-2020 # 80000a94 <__metal_dt_clint_2000000>
20409090:	c74fd0ef          	jal	ra,20406504 <__metal_driver_riscv_clint0_command_request>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20409094:	fe042783          	lw	a5,-32(s0)
20409098:	fe442803          	lw	a6,-28(s0)
2040909c:	fec42703          	lw	a4,-20(s0)
204090a0:	86c2                	mv	a3,a6
204090a2:	00d76b63          	bltu	a4,a3,204090b8 <configure_pll+0x18e>
204090a6:	fec42703          	lw	a4,-20(s0)
204090aa:	86c2                	mv	a3,a6
204090ac:	fcd71ce3          	bne	a4,a3,20409084 <configure_pll+0x15a>
204090b0:	fe842703          	lw	a4,-24(s0)
204090b4:	fcf778e3          	bgeu	a4,a5,20409084 <configure_pll+0x15a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
204090b8:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
204090ba:	fdc42783          	lw	a5,-36(s0)
204090be:	439c                	lw	a5,0(a5)
204090c0:	fe07dde3          	bgez	a5,204090ba <configure_pll+0x190>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
204090c4:	0001                	nop
204090c6:	50b2                	lw	ra,44(sp)
204090c8:	5422                	lw	s0,40(sp)
204090ca:	6145                	addi	sp,sp,48
204090cc:	8082                	ret

204090ce <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
204090ce:	715d                	addi	sp,sp,-80
204090d0:	c686                	sw	ra,76(sp)
204090d2:	c4a2                	sw	s0,72(sp)
204090d4:	0880                	addi	s0,sp,80
204090d6:	faa42e23          	sw	a0,-68(s0)
204090da:	fab42c23          	sw	a1,-72(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204090de:	fbc42503          	lw	a0,-68(s0)
204090e2:	a85ff0ef          	jal	ra,20408b66 <__metal_driver_sifive_fe310_g000_pll_pllref>
204090e6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204090ea:	fbc42503          	lw	a0,-68(s0)
204090ee:	a5fff0ef          	jal	ra,20408b4c <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204090f2:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204090f6:	fbc42503          	lw	a0,-68(s0)
204090fa:	ac3ff0ef          	jal	ra,20408bbc <__metal_driver_sifive_fe310_g000_pll_config_offset>
204090fe:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20409102:	fbc42503          	lw	a0,-68(s0)
20409106:	a91ff0ef          	jal	ra,20408b96 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2040910a:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2040910e:	ad5ff0ef          	jal	ra,20408be2 <__metal_driver_sifive_fe310_g000_prci_base>
20409112:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20409116:	fdc42703          	lw	a4,-36(s0)
2040911a:	fe442783          	lw	a5,-28(s0)
2040911e:	97ba                	add	a5,a5,a4
20409120:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20409124:	fdc42703          	lw	a4,-36(s0)
20409128:	fe042783          	lw	a5,-32(s0)
2040912c:	97ba                	add	a5,a5,a4
2040912e:	fcf42a23          	sw	a5,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20409132:	fd842783          	lw	a5,-40(s0)
20409136:	4398                	lw	a4,0(a5)
20409138:	67c1                	lui	a5,0x10
2040913a:	8ff9                	and	a5,a5,a4
2040913c:	cb91                	beqz	a5,20409150 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2040913e:	fd842783          	lw	a5,-40(s0)
20409142:	4398                	lw	a4,0(a5)
20409144:	77c1                	lui	a5,0xffff0
20409146:	17fd                	addi	a5,a5,-1
20409148:	8f7d                	and	a4,a4,a5
2040914a:	fd842783          	lw	a5,-40(s0)
2040914e:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20409150:	fd842783          	lw	a5,-40(s0)
20409154:	4398                	lw	a4,0(a5)
20409156:	000207b7          	lui	a5,0x20
2040915a:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2040915c:	c781                	beqz	a5,20409164 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2040915e:	fec42783          	lw	a5,-20(s0)
20409162:	a019                	j	20409168 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20409164:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20409168:	853e                	mv	a0,a5
2040916a:	132010ef          	jal	ra,2040a29c <metal_clock_get_rate_hz>
2040916e:	fca42823          	sw	a0,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20409172:	fd042703          	lw	a4,-48(s0)
20409176:	87ba                	mv	a5,a4
20409178:	0786                	slli	a5,a5,0x1
2040917a:	97ba                	add	a5,a5,a4
2040917c:	41f7d713          	srai	a4,a5,0x1f
20409180:	8b0d                	andi	a4,a4,3
20409182:	97ba                	add	a5,a5,a4
20409184:	8789                	srai	a5,a5,0x2
20409186:	873e                	mv	a4,a5
20409188:	fb842783          	lw	a5,-72(s0)
2040918c:	02e7cb63          	blt	a5,a4,204091c2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20409190:	fd042703          	lw	a4,-48(s0)
20409194:	87ba                	mv	a5,a4
20409196:	078a                	slli	a5,a5,0x2
20409198:	97ba                	add	a5,a5,a4
2040919a:	41f7d713          	srai	a4,a5,0x1f
2040919e:	8b0d                	andi	a4,a4,3
204091a0:	97ba                	add	a5,a5,a4
204091a2:	8789                	srai	a5,a5,0x2
204091a4:	873e                	mv	a4,a5
204091a6:	fb842783          	lw	a5,-72(s0)
204091aa:	00f74c63          	blt	a4,a5,204091c2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204091ae:	fd842783          	lw	a5,-40(s0)
204091b2:	4398                	lw	a4,0(a5)
204091b4:	000407b7          	lui	a5,0x40
204091b8:	8f5d                	or	a4,a4,a5
204091ba:	fd842783          	lw	a5,-40(s0)
204091be:	c398                	sw	a4,0(a5)
204091c0:	a881                	j	20409210 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
204091c2:	fb842583          	lw	a1,-72(s0)
204091c6:	fd042503          	lw	a0,-48(s0)
204091ca:	cb5ff0ef          	jal	ra,20408e7e <find_closest_config>
204091ce:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
204091d2:	fcc42703          	lw	a4,-52(s0)
204091d6:	57fd                	li	a5,-1
204091d8:	02f70363          	beq	a4,a5,204091fe <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
204091dc:	fcc42783          	lw	a5,-52(s0)
204091e0:	00579713          	slli	a4,a5,0x5
204091e4:	800017b7          	lui	a5,0x80001
204091e8:	71478793          	addi	a5,a5,1812 # 80001714 <metal_segment_heap_target_end+0xffffddf4>
204091ec:	97ba                	add	a5,a5,a4
204091ee:	863e                	mv	a2,a5
204091f0:	fd442583          	lw	a1,-44(s0)
204091f4:	fd842503          	lw	a0,-40(s0)
204091f8:	d33ff0ef          	jal	ra,20408f2a <configure_pll>
204091fc:	a811                	j	20409210 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204091fe:	fd842783          	lw	a5,-40(s0)
20409202:	4398                	lw	a4,0(a5)
20409204:	000407b7          	lui	a5,0x40
20409208:	8f5d                	or	a4,a4,a5
2040920a:	fd842783          	lw	a5,-40(s0)
2040920e:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20409210:	fd842783          	lw	a5,-40(s0)
20409214:	4398                	lw	a4,0(a5)
20409216:	67c1                	lui	a5,0x10
20409218:	8f5d                	or	a4,a4,a5
2040921a:	fd842783          	lw	a5,-40(s0)
2040921e:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20409220:	fbc42503          	lw	a0,-68(s0)
20409224:	addff0ef          	jal	ra,20408d00 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20409228:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2040922a:	853e                	mv	a0,a5
2040922c:	40b6                	lw	ra,76(sp)
2040922e:	4426                	lw	s0,72(sp)
20409230:	6161                	addi	sp,sp,80
20409232:	8082                	ret

20409234 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1223
{
20409234:	1141                	addi	sp,sp,-16
20409236:	c622                	sw	s0,12(sp)
20409238:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1224
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2040923a:	100087b7          	lui	a5,0x10008
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1225
}
2040923e:	853e                	mv	a0,a5
20409240:	4432                	lw	s0,12(sp)
20409242:	0141                	addi	sp,sp,16
20409244:	8082                	ret

20409246 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20409246:	7179                	addi	sp,sp,-48
20409248:	d606                	sw	ra,44(sp)
2040924a:	d422                	sw	s0,40(sp)
2040924c:	1800                	addi	s0,sp,48
2040924e:	fca42e23          	sw	a0,-36(s0)
20409252:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20409256:	fdfff0ef          	jal	ra,20409234 <__metal_driver_sifive_fe310_g000_prci_base>
2040925a:	87aa                	mv	a5,a0
2040925c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20409260:	fd842703          	lw	a4,-40(s0)
20409264:	fec42783          	lw	a5,-20(s0)
20409268:	97ba                	add	a5,a5,a4
2040926a:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
2040926c:	853e                	mv	a0,a5
2040926e:	50b2                	lw	ra,44(sp)
20409270:	5422                	lw	s0,40(sp)
20409272:	6145                	addi	sp,sp,48
20409274:	8082                	ret

20409276 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20409276:	7179                	addi	sp,sp,-48
20409278:	d606                	sw	ra,44(sp)
2040927a:	d422                	sw	s0,40(sp)
2040927c:	1800                	addi	s0,sp,48
2040927e:	fca42e23          	sw	a0,-36(s0)
20409282:	fcb42c23          	sw	a1,-40(s0)
20409286:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2040928a:	fabff0ef          	jal	ra,20409234 <__metal_driver_sifive_fe310_g000_prci_base>
2040928e:	87aa                	mv	a5,a0
20409290:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20409294:	fd842703          	lw	a4,-40(s0)
20409298:	fec42783          	lw	a5,-20(s0)
2040929c:	97ba                	add	a5,a5,a4
2040929e:	873e                	mv	a4,a5
204092a0:	fd442783          	lw	a5,-44(s0)
204092a4:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
204092a6:	853e                	mv	a0,a5
204092a8:	50b2                	lw	ra,44(sp)
204092aa:	5422                	lw	s0,40(sp)
204092ac:	6145                	addi	sp,sp,48
204092ae:	8082                	ret

204092b0 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:480
{
204092b0:	1101                	addi	sp,sp,-32
204092b2:	ce22                	sw	s0,28(sp)
204092b4:	1000                	addi	s0,sp,32
204092b6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:481
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204092ba:	fec42703          	lw	a4,-20(s0)
204092be:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
204092c2:	00f71563          	bne	a4,a5,204092cc <__metal_driver_sifive_gpio0_base+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:482
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
204092c6:	100127b7          	lui	a5,0x10012
204092ca:	a011                	j	204092ce <__metal_driver_sifive_gpio0_base+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:485
		return 0;
204092cc:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:487
}
204092ce:	853e                	mv	a0,a5
204092d0:	4472                	lw	s0,28(sp)
204092d2:	6105                	addi	sp,sp,32
204092d4:	8082                	ret

204092d6 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:510
{
204092d6:	1101                	addi	sp,sp,-32
204092d8:	ce22                	sw	s0,28(sp)
204092da:	1000                	addi	s0,sp,32
204092dc:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:511
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204092e0:	fec42703          	lw	a4,-20(s0)
204092e4:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
204092e8:	00f71763          	bne	a4,a5,204092f6 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:512
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
204092ec:	800007b7          	lui	a5,0x80000
204092f0:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffcb38>
204092f4:	a011                	j	204092f8 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:515
		return 0;
204092f6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:517
}
204092f8:	853e                	mv	a0,a5
204092fa:	4472                	lw	s0,28(sp)
204092fc:	6105                	addi	sp,sp,32
204092fe:	8082                	ret

20409300 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:520
{
20409300:	1101                	addi	sp,sp,-32
20409302:	ce22                	sw	s0,28(sp)
20409304:	1000                	addi	s0,sp,32
20409306:	fea42623          	sw	a0,-20(s0)
2040930a:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:521
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
2040930e:	fec42703          	lw	a4,-20(s0)
20409312:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409316:	00f71763          	bne	a4,a5,20409324 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:521 (discriminator 1)
2040931a:	fe842783          	lw	a5,-24(s0)
2040931e:	e399                	bnez	a5,20409324 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:522
		return 7;
20409320:	479d                	li	a5,7
20409322:	a269                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20409324:	fec42703          	lw	a4,-20(s0)
20409328:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
2040932c:	00f71963          	bne	a4,a5,2040933e <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:524 (discriminator 1)
20409330:	fe842703          	lw	a4,-24(s0)
20409334:	4785                	li	a5,1
20409336:	00f71463          	bne	a4,a5,2040933e <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:525
		return 8;
2040933a:	47a1                	li	a5,8
2040933c:	aa85                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2040933e:	fec42703          	lw	a4,-20(s0)
20409342:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409346:	00f71963          	bne	a4,a5,20409358 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:527 (discriminator 1)
2040934a:	fe842703          	lw	a4,-24(s0)
2040934e:	4789                	li	a5,2
20409350:	00f71463          	bne	a4,a5,20409358 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:528
		return 9;
20409354:	47a5                	li	a5,9
20409356:	aa99                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20409358:	fec42703          	lw	a4,-20(s0)
2040935c:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409360:	00f71963          	bne	a4,a5,20409372 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:530 (discriminator 1)
20409364:	fe842703          	lw	a4,-24(s0)
20409368:	478d                	li	a5,3
2040936a:	00f71463          	bne	a4,a5,20409372 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:531
		return 10;
2040936e:	47a9                	li	a5,10
20409370:	aa35                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20409372:	fec42703          	lw	a4,-20(s0)
20409376:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
2040937a:	00f71963          	bne	a4,a5,2040938c <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:533 (discriminator 1)
2040937e:	fe842703          	lw	a4,-24(s0)
20409382:	4791                	li	a5,4
20409384:	00f71463          	bne	a4,a5,2040938c <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:534
		return 11;
20409388:	47ad                	li	a5,11
2040938a:	a20d                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
2040938c:	fec42703          	lw	a4,-20(s0)
20409390:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409394:	00f71963          	bne	a4,a5,204093a6 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:536 (discriminator 1)
20409398:	fe842703          	lw	a4,-24(s0)
2040939c:	4795                	li	a5,5
2040939e:	00f71463          	bne	a4,a5,204093a6 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:537
		return 12;
204093a2:	47b1                	li	a5,12
204093a4:	a221                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
204093a6:	fec42703          	lw	a4,-20(s0)
204093aa:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
204093ae:	00f71963          	bne	a4,a5,204093c0 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:539 (discriminator 1)
204093b2:	fe842703          	lw	a4,-24(s0)
204093b6:	4799                	li	a5,6
204093b8:	00f71463          	bne	a4,a5,204093c0 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:540
		return 13;
204093bc:	47b5                	li	a5,13
204093be:	a0fd                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
204093c0:	fec42703          	lw	a4,-20(s0)
204093c4:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
204093c8:	00f71963          	bne	a4,a5,204093da <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:542 (discriminator 1)
204093cc:	fe842703          	lw	a4,-24(s0)
204093d0:	479d                	li	a5,7
204093d2:	00f71463          	bne	a4,a5,204093da <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:543
		return 14;
204093d6:	47b9                	li	a5,14
204093d8:	a8d1                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
204093da:	fec42703          	lw	a4,-20(s0)
204093de:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
204093e2:	00f71963          	bne	a4,a5,204093f4 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:545 (discriminator 1)
204093e6:	fe842703          	lw	a4,-24(s0)
204093ea:	47a1                	li	a5,8
204093ec:	00f71463          	bne	a4,a5,204093f4 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:546
		return 15;
204093f0:	47bd                	li	a5,15
204093f2:	a86d                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
204093f4:	fec42703          	lw	a4,-20(s0)
204093f8:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
204093fc:	00f71963          	bne	a4,a5,2040940e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:548 (discriminator 1)
20409400:	fe842703          	lw	a4,-24(s0)
20409404:	47a5                	li	a5,9
20409406:	00f71463          	bne	a4,a5,2040940e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:549
		return 16;
2040940a:	47c1                	li	a5,16
2040940c:	a045                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
2040940e:	fec42703          	lw	a4,-20(s0)
20409412:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409416:	00f71963          	bne	a4,a5,20409428 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:551 (discriminator 1)
2040941a:	fe842703          	lw	a4,-24(s0)
2040941e:	47a9                	li	a5,10
20409420:	00f71463          	bne	a4,a5,20409428 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:552
		return 17;
20409424:	47c5                	li	a5,17
20409426:	a059                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20409428:	fec42703          	lw	a4,-20(s0)
2040942c:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409430:	00f71963          	bne	a4,a5,20409442 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:554 (discriminator 1)
20409434:	fe842703          	lw	a4,-24(s0)
20409438:	47ad                	li	a5,11
2040943a:	00f71463          	bne	a4,a5,20409442 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:555
		return 18;
2040943e:	47c9                	li	a5,18
20409440:	a0b5                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20409442:	fec42703          	lw	a4,-20(s0)
20409446:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
2040944a:	00f71963          	bne	a4,a5,2040945c <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:557 (discriminator 1)
2040944e:	fe842703          	lw	a4,-24(s0)
20409452:	47b1                	li	a5,12
20409454:	00f71463          	bne	a4,a5,2040945c <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:558
		return 19;
20409458:	47cd                	li	a5,19
2040945a:	a889                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
2040945c:	fec42703          	lw	a4,-20(s0)
20409460:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409464:	00f71963          	bne	a4,a5,20409476 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:560 (discriminator 1)
20409468:	fe842703          	lw	a4,-24(s0)
2040946c:	47b5                	li	a5,13
2040946e:	00f71463          	bne	a4,a5,20409476 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:561
		return 20;
20409472:	47d1                	li	a5,20
20409474:	a825                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:563
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20409476:	fec42703          	lw	a4,-20(s0)
2040947a:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
2040947e:	00f71963          	bne	a4,a5,20409490 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:563 (discriminator 1)
20409482:	fe842703          	lw	a4,-24(s0)
20409486:	47b9                	li	a5,14
20409488:	00f71463          	bne	a4,a5,20409490 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:564
		return 21;
2040948c:	47d5                	li	a5,21
2040948e:	a839                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:566
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20409490:	fec42703          	lw	a4,-20(s0)
20409494:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409498:	00f71963          	bne	a4,a5,204094aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:566 (discriminator 1)
2040949c:	fe842703          	lw	a4,-24(s0)
204094a0:	47bd                	li	a5,15
204094a2:	00f71463          	bne	a4,a5,204094aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:567
		return 22;
204094a6:	47d9                	li	a5,22
204094a8:	a011                	j	204094ac <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:570
		return 0;
204094aa:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:572
}
204094ac:	853e                	mv	a0,a5
204094ae:	4472                	lw	s0,28(sp)
204094b0:	6105                	addi	sp,sp,32
204094b2:	8082                	ret

204094b4 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
204094b4:	7179                	addi	sp,sp,-48
204094b6:	d606                	sw	ra,44(sp)
204094b8:	d422                	sw	s0,40(sp)
204094ba:	1800                	addi	s0,sp,48
204094bc:	fca42e23          	sw	a0,-36(s0)
204094c0:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204094c4:	fdc42503          	lw	a0,-36(s0)
204094c8:	de9ff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
204094cc:	87aa                	mv	a5,a0
204094ce:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
204094d2:	fec42783          	lw	a5,-20(s0)
204094d6:	0791                	addi	a5,a5,4
204094d8:	4398                	lw	a4,0(a5)
204094da:	fd842783          	lw	a5,-40(s0)
204094de:	fec42683          	lw	a3,-20(s0)
204094e2:	0691                	addi	a3,a3,4
204094e4:	8fd9                	or	a5,a5,a4
204094e6:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
204094e8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:20
}
204094ea:	853e                	mv	a0,a5
204094ec:	50b2                	lw	ra,44(sp)
204094ee:	5422                	lw	s0,40(sp)
204094f0:	6145                	addi	sp,sp,48
204094f2:	8082                	ret

204094f4 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
204094f4:	7179                	addi	sp,sp,-48
204094f6:	d606                	sw	ra,44(sp)
204094f8:	d422                	sw	s0,40(sp)
204094fa:	1800                	addi	s0,sp,48
204094fc:	fca42e23          	sw	a0,-36(s0)
20409500:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20409504:	fdc42503          	lw	a0,-36(s0)
20409508:	da9ff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
2040950c:	87aa                	mv	a5,a0
2040950e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20409512:	fec42783          	lw	a5,-20(s0)
20409516:	0791                	addi	a5,a5,4
20409518:	439c                	lw	a5,0(a5)
2040951a:	fd842703          	lw	a4,-40(s0)
2040951e:	fff74713          	not	a4,a4
20409522:	86ba                	mv	a3,a4
20409524:	fec42703          	lw	a4,-20(s0)
20409528:	0711                	addi	a4,a4,4
2040952a:	8ff5                	and	a5,a5,a3
2040952c:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
2040952e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20409530:	853e                	mv	a0,a5
20409532:	50b2                	lw	ra,44(sp)
20409534:	5422                	lw	s0,40(sp)
20409536:	6145                	addi	sp,sp,48
20409538:	8082                	ret

2040953a <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
2040953a:	7179                	addi	sp,sp,-48
2040953c:	d606                	sw	ra,44(sp)
2040953e:	d422                	sw	s0,40(sp)
20409540:	1800                	addi	s0,sp,48
20409542:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20409546:	fdc42503          	lw	a0,-36(s0)
2040954a:	d67ff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
2040954e:	87aa                	mv	a5,a0
20409550:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20409554:	fec42783          	lw	a5,-20(s0)
20409558:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
2040955a:	853e                	mv	a0,a5
2040955c:	50b2                	lw	ra,44(sp)
2040955e:	5422                	lw	s0,40(sp)
20409560:	6145                	addi	sp,sp,48
20409562:	8082                	ret

20409564 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20409564:	7179                	addi	sp,sp,-48
20409566:	d606                	sw	ra,44(sp)
20409568:	d422                	sw	s0,40(sp)
2040956a:	1800                	addi	s0,sp,48
2040956c:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20409570:	fdc42503          	lw	a0,-36(s0)
20409574:	d3dff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
20409578:	87aa                	mv	a5,a0
2040957a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
2040957e:	fec42783          	lw	a5,-20(s0)
20409582:	07b1                	addi	a5,a5,12
20409584:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20409586:	853e                	mv	a0,a5
20409588:	50b2                	lw	ra,44(sp)
2040958a:	5422                	lw	s0,40(sp)
2040958c:	6145                	addi	sp,sp,48
2040958e:	8082                	ret

20409590 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20409590:	7179                	addi	sp,sp,-48
20409592:	d606                	sw	ra,44(sp)
20409594:	d422                	sw	s0,40(sp)
20409596:	1800                	addi	s0,sp,48
20409598:	fca42e23          	sw	a0,-36(s0)
2040959c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204095a0:	fdc42503          	lw	a0,-36(s0)
204095a4:	d0dff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
204095a8:	87aa                	mv	a5,a0
204095aa:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
204095ae:	fec42783          	lw	a5,-20(s0)
204095b2:	07a1                	addi	a5,a5,8
204095b4:	439c                	lw	a5,0(a5)
204095b6:	fd842703          	lw	a4,-40(s0)
204095ba:	fff74713          	not	a4,a4
204095be:	86ba                	mv	a3,a4
204095c0:	fec42703          	lw	a4,-20(s0)
204095c4:	0721                	addi	a4,a4,8
204095c6:	8ff5                	and	a5,a5,a3
204095c8:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
204095ca:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:54
}
204095cc:	853e                	mv	a0,a5
204095ce:	50b2                	lw	ra,44(sp)
204095d0:	5422                	lw	s0,40(sp)
204095d2:	6145                	addi	sp,sp,48
204095d4:	8082                	ret

204095d6 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
204095d6:	7179                	addi	sp,sp,-48
204095d8:	d606                	sw	ra,44(sp)
204095da:	d422                	sw	s0,40(sp)
204095dc:	1800                	addi	s0,sp,48
204095de:	fca42e23          	sw	a0,-36(s0)
204095e2:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204095e6:	fdc42503          	lw	a0,-36(s0)
204095ea:	cc7ff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
204095ee:	87aa                	mv	a5,a0
204095f0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
204095f4:	fec42783          	lw	a5,-20(s0)
204095f8:	07a1                	addi	a5,a5,8
204095fa:	4398                	lw	a4,0(a5)
204095fc:	fd842783          	lw	a5,-40(s0)
20409600:	fec42683          	lw	a3,-20(s0)
20409604:	06a1                	addi	a3,a3,8
20409606:	8fd9                	or	a5,a5,a4
20409608:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
2040960a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64
}
2040960c:	853e                	mv	a0,a5
2040960e:	50b2                	lw	ra,44(sp)
20409610:	5422                	lw	s0,40(sp)
20409612:	6145                	addi	sp,sp,48
20409614:	8082                	ret

20409616 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20409616:	7179                	addi	sp,sp,-48
20409618:	d606                	sw	ra,44(sp)
2040961a:	d422                	sw	s0,40(sp)
2040961c:	1800                	addi	s0,sp,48
2040961e:	fca42e23          	sw	a0,-36(s0)
20409622:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20409626:	fdc42503          	lw	a0,-36(s0)
2040962a:	c87ff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
2040962e:	87aa                	mv	a5,a0
20409630:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20409634:	fec42783          	lw	a5,-20(s0)
20409638:	07b1                	addi	a5,a5,12
2040963a:	4398                	lw	a4,0(a5)
2040963c:	fd842783          	lw	a5,-40(s0)
20409640:	fec42683          	lw	a3,-20(s0)
20409644:	06b1                	addi	a3,a3,12
20409646:	8fd9                	or	a5,a5,a4
20409648:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
2040964a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
}
2040964c:	853e                	mv	a0,a5
2040964e:	50b2                	lw	ra,44(sp)
20409650:	5422                	lw	s0,40(sp)
20409652:	6145                	addi	sp,sp,48
20409654:	8082                	ret

20409656 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20409656:	7179                	addi	sp,sp,-48
20409658:	d606                	sw	ra,44(sp)
2040965a:	d422                	sw	s0,40(sp)
2040965c:	1800                	addi	s0,sp,48
2040965e:	fca42e23          	sw	a0,-36(s0)
20409662:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20409666:	fdc42503          	lw	a0,-36(s0)
2040966a:	c47ff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
2040966e:	87aa                	mv	a5,a0
20409670:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20409674:	fec42783          	lw	a5,-20(s0)
20409678:	07b1                	addi	a5,a5,12
2040967a:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
2040967c:	fd842703          	lw	a4,-40(s0)
20409680:	fff74713          	not	a4,a4
20409684:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20409686:	fec42703          	lw	a4,-20(s0)
2040968a:	0731                	addi	a4,a4,12
2040968c:	8ff5                	and	a5,a5,a3
2040968e:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20409690:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20409692:	853e                	mv	a0,a5
20409694:	50b2                	lw	ra,44(sp)
20409696:	5422                	lw	s0,40(sp)
20409698:	6145                	addi	sp,sp,48
2040969a:	8082                	ret

2040969c <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
2040969c:	7179                	addi	sp,sp,-48
2040969e:	d606                	sw	ra,44(sp)
204096a0:	d422                	sw	s0,40(sp)
204096a2:	1800                	addi	s0,sp,48
204096a4:	fca42e23          	sw	a0,-36(s0)
204096a8:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204096ac:	fdc42503          	lw	a0,-36(s0)
204096b0:	c01ff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
204096b4:	87aa                	mv	a5,a0
204096b6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
204096ba:	fec42783          	lw	a5,-20(s0)
204096be:	07b1                	addi	a5,a5,12
204096c0:	4398                	lw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
204096c2:	fd842783          	lw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
204096c6:	fec42683          	lw	a3,-20(s0)
204096ca:	06b1                	addi	a3,a3,12
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
204096cc:	8fb9                	xor	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
204096ce:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
204096d0:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
}
204096d2:	853e                	mv	a0,a5
204096d4:	50b2                	lw	ra,44(sp)
204096d6:	5422                	lw	s0,40(sp)
204096d8:	6145                	addi	sp,sp,48
204096da:	8082                	ret

204096dc <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
204096dc:	7179                	addi	sp,sp,-48
204096de:	d606                	sw	ra,44(sp)
204096e0:	d422                	sw	s0,40(sp)
204096e2:	1800                	addi	s0,sp,48
204096e4:	fca42e23          	sw	a0,-36(s0)
204096e8:	fcb42c23          	sw	a1,-40(s0)
204096ec:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204096f0:	fdc42503          	lw	a0,-36(s0)
204096f4:	bbdff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
204096f8:	87aa                	mv	a5,a0
204096fa:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
204096fe:	fec42783          	lw	a5,-20(s0)
20409702:	03c78793          	addi	a5,a5,60
20409706:	4398                	lw	a4,0(a5)
20409708:	fd842783          	lw	a5,-40(s0)
2040970c:	fec42683          	lw	a3,-20(s0)
20409710:	03c68693          	addi	a3,a3,60
20409714:	8fd9                	or	a5,a5,a4
20409716:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20409718:	fec42783          	lw	a5,-20(s0)
2040971c:	03878793          	addi	a5,a5,56
20409720:	4398                	lw	a4,0(a5)
20409722:	fd442783          	lw	a5,-44(s0)
20409726:	fec42683          	lw	a3,-20(s0)
2040972a:	03868693          	addi	a3,a3,56
2040972e:	8fd9                	or	a5,a5,a4
20409730:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20409732:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20409734:	853e                	mv	a0,a5
20409736:	50b2                	lw	ra,44(sp)
20409738:	5422                	lw	s0,40(sp)
2040973a:	6145                	addi	sp,sp,48
2040973c:	8082                	ret

2040973e <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
2040973e:	7179                	addi	sp,sp,-48
20409740:	d606                	sw	ra,44(sp)
20409742:	d422                	sw	s0,40(sp)
20409744:	1800                	addi	s0,sp,48
20409746:	fca42e23          	sw	a0,-36(s0)
2040974a:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040974e:	fdc42503          	lw	a0,-36(s0)
20409752:	b5fff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
20409756:	87aa                	mv	a5,a0
20409758:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2040975c:	fec42783          	lw	a5,-20(s0)
20409760:	03878793          	addi	a5,a5,56
20409764:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20409766:	fd842703          	lw	a4,-40(s0)
2040976a:	fff74713          	not	a4,a4
2040976e:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20409770:	fec42703          	lw	a4,-20(s0)
20409774:	03870713          	addi	a4,a4,56
20409778:	8ff5                	and	a5,a5,a3
2040977a:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
2040977c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
}
2040977e:	853e                	mv	a0,a5
20409780:	50b2                	lw	ra,44(sp)
20409782:	5422                	lw	s0,40(sp)
20409784:	6145                	addi	sp,sp,48
20409786:	8082                	ret

20409788 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20409788:	7179                	addi	sp,sp,-48
2040978a:	d606                	sw	ra,44(sp)
2040978c:	d422                	sw	s0,40(sp)
2040978e:	1800                	addi	s0,sp,48
20409790:	fca42e23          	sw	a0,-36(s0)
20409794:	fcb42c23          	sw	a1,-40(s0)
20409798:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040979c:	fdc42503          	lw	a0,-36(s0)
204097a0:	b11ff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
204097a4:	87aa                	mv	a5,a0
204097a6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
204097aa:	fd442703          	lw	a4,-44(s0)
204097ae:	479d                	li	a5,7
204097b0:	1ce7e963          	bltu	a5,a4,20409982 <__metal_driver_sifive_gpio0_config_int+0x1fa>
204097b4:	fd442783          	lw	a5,-44(s0)
204097b8:	00279713          	slli	a4,a5,0x2
204097bc:	800027b7          	lui	a5,0x80002
204097c0:	fa078793          	addi	a5,a5,-96 # 80001fa0 <metal_segment_heap_target_end+0xffffe680>
204097c4:	97ba                	add	a5,a5,a4
204097c6:	439c                	lw	a5,0(a5)
204097c8:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
204097ca:	fec42783          	lw	a5,-20(s0)
204097ce:	07e1                	addi	a5,a5,24
204097d0:	439c                	lw	a5,0(a5)
204097d2:	fd842703          	lw	a4,-40(s0)
204097d6:	fff74713          	not	a4,a4
204097da:	86ba                	mv	a3,a4
204097dc:	fec42703          	lw	a4,-20(s0)
204097e0:	0761                	addi	a4,a4,24
204097e2:	8ff5                	and	a5,a5,a3
204097e4:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
204097e6:	fec42783          	lw	a5,-20(s0)
204097ea:	02078793          	addi	a5,a5,32
204097ee:	439c                	lw	a5,0(a5)
204097f0:	fd842703          	lw	a4,-40(s0)
204097f4:	fff74713          	not	a4,a4
204097f8:	86ba                	mv	a3,a4
204097fa:	fec42703          	lw	a4,-20(s0)
204097fe:	02070713          	addi	a4,a4,32
20409802:	8ff5                	and	a5,a5,a3
20409804:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20409806:	fec42783          	lw	a5,-20(s0)
2040980a:	02878793          	addi	a5,a5,40
2040980e:	439c                	lw	a5,0(a5)
20409810:	fd842703          	lw	a4,-40(s0)
20409814:	fff74713          	not	a4,a4
20409818:	86ba                	mv	a3,a4
2040981a:	fec42703          	lw	a4,-20(s0)
2040981e:	02870713          	addi	a4,a4,40
20409822:	8ff5                	and	a5,a5,a3
20409824:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20409826:	fec42783          	lw	a5,-20(s0)
2040982a:	03078793          	addi	a5,a5,48
2040982e:	439c                	lw	a5,0(a5)
20409830:	fd842703          	lw	a4,-40(s0)
20409834:	fff74713          	not	a4,a4
20409838:	86ba                	mv	a3,a4
2040983a:	fec42703          	lw	a4,-20(s0)
2040983e:	03070713          	addi	a4,a4,48
20409842:	8ff5                	and	a5,a5,a3
20409844:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20409846:	aa35                	j	20409982 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20409848:	fec42783          	lw	a5,-20(s0)
2040984c:	07e1                	addi	a5,a5,24
2040984e:	4398                	lw	a4,0(a5)
20409850:	fd842783          	lw	a5,-40(s0)
20409854:	fec42683          	lw	a3,-20(s0)
20409858:	06e1                	addi	a3,a3,24
2040985a:	8fd9                	or	a5,a5,a4
2040985c:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
2040985e:	a215                	j	20409982 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20409860:	fec42783          	lw	a5,-20(s0)
20409864:	02078793          	addi	a5,a5,32
20409868:	4398                	lw	a4,0(a5)
2040986a:	fd842783          	lw	a5,-40(s0)
2040986e:	fec42683          	lw	a3,-20(s0)
20409872:	02068693          	addi	a3,a3,32
20409876:	8fd9                	or	a5,a5,a4
20409878:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
2040987a:	a221                	j	20409982 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2040987c:	fec42783          	lw	a5,-20(s0)
20409880:	07e1                	addi	a5,a5,24
20409882:	4398                	lw	a4,0(a5)
20409884:	fd842783          	lw	a5,-40(s0)
20409888:	fec42683          	lw	a3,-20(s0)
2040988c:	06e1                	addi	a3,a3,24
2040988e:	8fd9                	or	a5,a5,a4
20409890:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20409892:	fec42783          	lw	a5,-20(s0)
20409896:	02078793          	addi	a5,a5,32
2040989a:	4398                	lw	a4,0(a5)
2040989c:	fd842783          	lw	a5,-40(s0)
204098a0:	fec42683          	lw	a3,-20(s0)
204098a4:	02068693          	addi	a3,a3,32
204098a8:	8fd9                	or	a5,a5,a4
204098aa:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
204098ac:	a8d9                	j	20409982 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204098ae:	fec42783          	lw	a5,-20(s0)
204098b2:	02878793          	addi	a5,a5,40
204098b6:	4398                	lw	a4,0(a5)
204098b8:	fd842783          	lw	a5,-40(s0)
204098bc:	fec42683          	lw	a3,-20(s0)
204098c0:	02868693          	addi	a3,a3,40
204098c4:	8fd9                	or	a5,a5,a4
204098c6:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
204098c8:	a86d                	j	20409982 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204098ca:	fec42783          	lw	a5,-20(s0)
204098ce:	03078793          	addi	a5,a5,48
204098d2:	4398                	lw	a4,0(a5)
204098d4:	fd842783          	lw	a5,-40(s0)
204098d8:	fec42683          	lw	a3,-20(s0)
204098dc:	03068693          	addi	a3,a3,48
204098e0:	8fd9                	or	a5,a5,a4
204098e2:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
204098e4:	a879                	j	20409982 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204098e6:	fec42783          	lw	a5,-20(s0)
204098ea:	02878793          	addi	a5,a5,40
204098ee:	4398                	lw	a4,0(a5)
204098f0:	fd842783          	lw	a5,-40(s0)
204098f4:	fec42683          	lw	a3,-20(s0)
204098f8:	02868693          	addi	a3,a3,40
204098fc:	8fd9                	or	a5,a5,a4
204098fe:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20409900:	fec42783          	lw	a5,-20(s0)
20409904:	03078793          	addi	a5,a5,48
20409908:	4398                	lw	a4,0(a5)
2040990a:	fd842783          	lw	a5,-40(s0)
2040990e:	fec42683          	lw	a3,-20(s0)
20409912:	03068693          	addi	a3,a3,48
20409916:	8fd9                	or	a5,a5,a4
20409918:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
2040991a:	a0a5                	j	20409982 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2040991c:	fec42783          	lw	a5,-20(s0)
20409920:	07e1                	addi	a5,a5,24
20409922:	4398                	lw	a4,0(a5)
20409924:	fd842783          	lw	a5,-40(s0)
20409928:	fec42683          	lw	a3,-20(s0)
2040992c:	06e1                	addi	a3,a3,24
2040992e:	8fd9                	or	a5,a5,a4
20409930:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20409932:	fec42783          	lw	a5,-20(s0)
20409936:	02078793          	addi	a5,a5,32
2040993a:	4398                	lw	a4,0(a5)
2040993c:	fd842783          	lw	a5,-40(s0)
20409940:	fec42683          	lw	a3,-20(s0)
20409944:	02068693          	addi	a3,a3,32
20409948:	8fd9                	or	a5,a5,a4
2040994a:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2040994c:	fec42783          	lw	a5,-20(s0)
20409950:	02878793          	addi	a5,a5,40
20409954:	4398                	lw	a4,0(a5)
20409956:	fd842783          	lw	a5,-40(s0)
2040995a:	fec42683          	lw	a3,-20(s0)
2040995e:	02868693          	addi	a3,a3,40
20409962:	8fd9                	or	a5,a5,a4
20409964:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20409966:	fec42783          	lw	a5,-20(s0)
2040996a:	03078793          	addi	a5,a5,48
2040996e:	4398                	lw	a4,0(a5)
20409970:	fd842783          	lw	a5,-40(s0)
20409974:	fec42683          	lw	a3,-20(s0)
20409978:	03068693          	addi	a3,a3,48
2040997c:	8fd9                	or	a5,a5,a4
2040997e:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20409980:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20409982:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20409984:	853e                	mv	a0,a5
20409986:	50b2                	lw	ra,44(sp)
20409988:	5422                	lw	s0,40(sp)
2040998a:	6145                	addi	sp,sp,48
2040998c:	8082                	ret

2040998e <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
2040998e:	7179                	addi	sp,sp,-48
20409990:	d606                	sw	ra,44(sp)
20409992:	d422                	sw	s0,40(sp)
20409994:	1800                	addi	s0,sp,48
20409996:	fca42e23          	sw	a0,-36(s0)
2040999a:	fcb42c23          	sw	a1,-40(s0)
2040999e:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204099a2:	fdc42503          	lw	a0,-36(s0)
204099a6:	90bff0ef          	jal	ra,204092b0 <__metal_driver_sifive_gpio0_base>
204099aa:	87aa                	mv	a5,a0
204099ac:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
204099b0:	fd442703          	lw	a4,-44(s0)
204099b4:	479d                	li	a5,7
204099b6:	14e7ea63          	bltu	a5,a4,20409b0a <__metal_driver_sifive_gpio0_clear_int+0x17c>
204099ba:	fd442783          	lw	a5,-44(s0)
204099be:	00279713          	slli	a4,a5,0x2
204099c2:	800027b7          	lui	a5,0x80002
204099c6:	fc078793          	addi	a5,a5,-64 # 80001fc0 <metal_segment_heap_target_end+0xffffe6a0>
204099ca:	97ba                	add	a5,a5,a4
204099cc:	439c                	lw	a5,0(a5)
204099ce:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
204099d0:	fec42783          	lw	a5,-20(s0)
204099d4:	07f1                	addi	a5,a5,28
204099d6:	4398                	lw	a4,0(a5)
204099d8:	fd842783          	lw	a5,-40(s0)
204099dc:	fec42683          	lw	a3,-20(s0)
204099e0:	06f1                	addi	a3,a3,28
204099e2:	8fd9                	or	a5,a5,a4
204099e4:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
204099e6:	a215                	j	20409b0a <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204099e8:	fec42783          	lw	a5,-20(s0)
204099ec:	02478793          	addi	a5,a5,36
204099f0:	4398                	lw	a4,0(a5)
204099f2:	fd842783          	lw	a5,-40(s0)
204099f6:	fec42683          	lw	a3,-20(s0)
204099fa:	02468693          	addi	a3,a3,36
204099fe:	8fd9                	or	a5,a5,a4
20409a00:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20409a02:	a221                	j	20409b0a <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20409a04:	fec42783          	lw	a5,-20(s0)
20409a08:	07f1                	addi	a5,a5,28
20409a0a:	4398                	lw	a4,0(a5)
20409a0c:	fd842783          	lw	a5,-40(s0)
20409a10:	fec42683          	lw	a3,-20(s0)
20409a14:	06f1                	addi	a3,a3,28
20409a16:	8fd9                	or	a5,a5,a4
20409a18:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20409a1a:	fec42783          	lw	a5,-20(s0)
20409a1e:	02478793          	addi	a5,a5,36
20409a22:	4398                	lw	a4,0(a5)
20409a24:	fd842783          	lw	a5,-40(s0)
20409a28:	fec42683          	lw	a3,-20(s0)
20409a2c:	02468693          	addi	a3,a3,36
20409a30:	8fd9                	or	a5,a5,a4
20409a32:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20409a34:	a8d9                	j	20409b0a <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20409a36:	fec42783          	lw	a5,-20(s0)
20409a3a:	02c78793          	addi	a5,a5,44
20409a3e:	4398                	lw	a4,0(a5)
20409a40:	fd842783          	lw	a5,-40(s0)
20409a44:	fec42683          	lw	a3,-20(s0)
20409a48:	02c68693          	addi	a3,a3,44
20409a4c:	8fd9                	or	a5,a5,a4
20409a4e:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20409a50:	a86d                	j	20409b0a <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20409a52:	fec42783          	lw	a5,-20(s0)
20409a56:	03478793          	addi	a5,a5,52
20409a5a:	4398                	lw	a4,0(a5)
20409a5c:	fd842783          	lw	a5,-40(s0)
20409a60:	fec42683          	lw	a3,-20(s0)
20409a64:	03468693          	addi	a3,a3,52
20409a68:	8fd9                	or	a5,a5,a4
20409a6a:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20409a6c:	a879                	j	20409b0a <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20409a6e:	fec42783          	lw	a5,-20(s0)
20409a72:	02c78793          	addi	a5,a5,44
20409a76:	4398                	lw	a4,0(a5)
20409a78:	fd842783          	lw	a5,-40(s0)
20409a7c:	fec42683          	lw	a3,-20(s0)
20409a80:	02c68693          	addi	a3,a3,44
20409a84:	8fd9                	or	a5,a5,a4
20409a86:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20409a88:	fec42783          	lw	a5,-20(s0)
20409a8c:	03478793          	addi	a5,a5,52
20409a90:	4398                	lw	a4,0(a5)
20409a92:	fd842783          	lw	a5,-40(s0)
20409a96:	fec42683          	lw	a3,-20(s0)
20409a9a:	03468693          	addi	a3,a3,52
20409a9e:	8fd9                	or	a5,a5,a4
20409aa0:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20409aa2:	a0a5                	j	20409b0a <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20409aa4:	fec42783          	lw	a5,-20(s0)
20409aa8:	07f1                	addi	a5,a5,28
20409aaa:	4398                	lw	a4,0(a5)
20409aac:	fd842783          	lw	a5,-40(s0)
20409ab0:	fec42683          	lw	a3,-20(s0)
20409ab4:	06f1                	addi	a3,a3,28
20409ab6:	8fd9                	or	a5,a5,a4
20409ab8:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20409aba:	fec42783          	lw	a5,-20(s0)
20409abe:	02478793          	addi	a5,a5,36
20409ac2:	4398                	lw	a4,0(a5)
20409ac4:	fd842783          	lw	a5,-40(s0)
20409ac8:	fec42683          	lw	a3,-20(s0)
20409acc:	02468693          	addi	a3,a3,36
20409ad0:	8fd9                	or	a5,a5,a4
20409ad2:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20409ad4:	fec42783          	lw	a5,-20(s0)
20409ad8:	02c78793          	addi	a5,a5,44
20409adc:	4398                	lw	a4,0(a5)
20409ade:	fd842783          	lw	a5,-40(s0)
20409ae2:	fec42683          	lw	a3,-20(s0)
20409ae6:	02c68693          	addi	a3,a3,44
20409aea:	8fd9                	or	a5,a5,a4
20409aec:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20409aee:	fec42783          	lw	a5,-20(s0)
20409af2:	03478793          	addi	a5,a5,52
20409af6:	4398                	lw	a4,0(a5)
20409af8:	fd842783          	lw	a5,-40(s0)
20409afc:	fec42683          	lw	a3,-20(s0)
20409b00:	03468693          	addi	a3,a3,52
20409b04:	8fd9                	or	a5,a5,a4
20409b06:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20409b08:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20409b0a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20409b0c:	853e                	mv	a0,a5
20409b0e:	50b2                	lw	ra,44(sp)
20409b10:	5422                	lw	s0,40(sp)
20409b12:	6145                	addi	sp,sp,48
20409b14:	8082                	ret

20409b16 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20409b16:	1101                	addi	sp,sp,-32
20409b18:	ce06                	sw	ra,28(sp)
20409b1a:	cc22                	sw	s0,24(sp)
20409b1c:	1000                	addi	s0,sp,32
20409b1e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20409b22:	fec42503          	lw	a0,-20(s0)
20409b26:	fb0ff0ef          	jal	ra,204092d6 <__metal_driver_sifive_gpio0_interrupt_parent>
20409b2a:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20409b2c:	853e                	mv	a0,a5
20409b2e:	40f2                	lw	ra,28(sp)
20409b30:	4462                	lw	s0,24(sp)
20409b32:	6105                	addi	sp,sp,32
20409b34:	8082                	ret

20409b36 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20409b36:	7179                	addi	sp,sp,-48
20409b38:	d606                	sw	ra,44(sp)
20409b3a:	d422                	sw	s0,40(sp)
20409b3c:	1800                	addi	s0,sp,48
20409b3e:	fca42e23          	sw	a0,-36(s0)
20409b42:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20409b46:	fd842583          	lw	a1,-40(s0)
20409b4a:	fdc42503          	lw	a0,-36(s0)
20409b4e:	fb2ff0ef          	jal	ra,20409300 <__metal_driver_sifive_gpio0_interrupt_lines>
20409b52:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20409b56:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20409b5a:	853e                	mv	a0,a5
20409b5c:	50b2                	lw	ra,44(sp)
20409b5e:	5422                	lw	s0,40(sp)
20409b60:	6145                	addi	sp,sp,48
20409b62:	8082                	ret

20409b64 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:952
{
20409b64:	1101                	addi	sp,sp,-32
20409b66:	ce22                	sw	s0,28(sp)
20409b68:	1000                	addi	s0,sp,32
20409b6a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:953
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20409b6e:	fec42703          	lw	a4,-20(s0)
20409b72:	800017b7          	lui	a5,0x80001
20409b76:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
20409b7a:	00f71563          	bne	a4,a5,20409b84 <__metal_driver_sifive_uart0_control_base+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:954
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20409b7e:	100137b7          	lui	a5,0x10013
20409b82:	a011                	j	20409b86 <__metal_driver_sifive_uart0_control_base+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:957
		return 0;
20409b84:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:959
}
20409b86:	853e                	mv	a0,a5
20409b88:	4472                	lw	s0,28(sp)
20409b8a:	6105                	addi	sp,sp,32
20409b8c:	8082                	ret

20409b8e <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:982
{
20409b8e:	1101                	addi	sp,sp,-32
20409b90:	ce22                	sw	s0,28(sp)
20409b92:	1000                	addi	s0,sp,32
20409b94:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:983
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20409b98:	fec42703          	lw	a4,-20(s0)
20409b9c:	800017b7          	lui	a5,0x80001
20409ba0:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
20409ba4:	00f71763          	bne	a4,a5,20409bb2 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:984
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20409ba8:	800007b7          	lui	a5,0x80000
20409bac:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffcb38>
20409bb0:	a011                	j	20409bb4 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:987
		return 0;
20409bb2:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:989
}
20409bb4:	853e                	mv	a0,a5
20409bb6:	4472                	lw	s0,28(sp)
20409bb8:	6105                	addi	sp,sp,32
20409bba:	8082                	ret

20409bbc <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:992
{
20409bbc:	1101                	addi	sp,sp,-32
20409bbe:	ce22                	sw	s0,28(sp)
20409bc0:	1000                	addi	s0,sp,32
20409bc2:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:993
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20409bc6:	fec42703          	lw	a4,-20(s0)
20409bca:	800017b7          	lui	a5,0x80001
20409bce:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
20409bd2:	00f71463          	bne	a4,a5,20409bda <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:994
		return 5;
20409bd6:	4795                	li	a5,5
20409bd8:	a011                	j	20409bdc <__metal_driver_sifive_uart0_interrupt_line+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:997
		return 0;
20409bda:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:999
}
20409bdc:	853e                	mv	a0,a5
20409bde:	4472                	lw	s0,28(sp)
20409be0:	6105                	addi	sp,sp,32
20409be2:	8082                	ret

20409be4 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1002
{
20409be4:	1101                	addi	sp,sp,-32
20409be6:	ce22                	sw	s0,28(sp)
20409be8:	1000                	addi	s0,sp,32
20409bea:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1003
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20409bee:	fec42703          	lw	a4,-20(s0)
20409bf2:	800017b7          	lui	a5,0x80001
20409bf6:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
20409bfa:	00f71763          	bne	a4,a5,20409c08 <__metal_driver_sifive_uart0_clock+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1004
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20409bfe:	800017b7          	lui	a5,0x80001
20409c02:	a6878793          	addi	a5,a5,-1432 # 80000a68 <metal_segment_heap_target_end+0xffffd148>
20409c06:	a011                	j	20409c0a <__metal_driver_sifive_uart0_clock+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1007
		return 0;
20409c08:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1009
}
20409c0a:	853e                	mv	a0,a5
20409c0c:	4472                	lw	s0,28(sp)
20409c0e:	6105                	addi	sp,sp,32
20409c10:	8082                	ret

20409c12 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1012
{
20409c12:	1101                	addi	sp,sp,-32
20409c14:	ce22                	sw	s0,28(sp)
20409c16:	1000                	addi	s0,sp,32
20409c18:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1013
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20409c1c:	fec42703          	lw	a4,-20(s0)
20409c20:	800017b7          	lui	a5,0x80001
20409c24:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
20409c28:	00f71563          	bne	a4,a5,20409c32 <__metal_driver_sifive_uart0_pinmux+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1014
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20409c2c:	82c18793          	addi	a5,gp,-2004 # 80000aa4 <__metal_dt_gpio_10012000>
20409c30:	a011                	j	20409c34 <__metal_driver_sifive_uart0_pinmux+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1017
		return 0;
20409c32:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1019
}
20409c34:	853e                	mv	a0,a5
20409c36:	4472                	lw	s0,28(sp)
20409c38:	6105                	addi	sp,sp,32
20409c3a:	8082                	ret

20409c3c <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1022
{
20409c3c:	1101                	addi	sp,sp,-32
20409c3e:	ce22                	sw	s0,28(sp)
20409c40:	1000                	addi	s0,sp,32
20409c42:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1023
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20409c46:	fec42703          	lw	a4,-20(s0)
20409c4a:	800017b7          	lui	a5,0x80001
20409c4e:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
20409c52:	00f71463          	bne	a4,a5,20409c5a <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1024
		return 0;
20409c56:	4781                	li	a5,0
20409c58:	a011                	j	20409c5c <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1027
		return 0;
20409c5a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1029
}
20409c5c:	853e                	mv	a0,a5
20409c5e:	4472                	lw	s0,28(sp)
20409c60:	6105                	addi	sp,sp,32
20409c62:	8082                	ret

20409c64 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1032
{
20409c64:	1101                	addi	sp,sp,-32
20409c66:	ce22                	sw	s0,28(sp)
20409c68:	1000                	addi	s0,sp,32
20409c6a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1033
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20409c6e:	fec42703          	lw	a4,-20(s0)
20409c72:	800017b7          	lui	a5,0x80001
20409c76:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xffffd110>
20409c7a:	00f71563          	bne	a4,a5,20409c84 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1034
		return 196608;
20409c7e:	000307b7          	lui	a5,0x30
20409c82:	a011                	j	20409c86 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1037
		return 0;
20409c84:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1039
}
20409c86:	853e                	mv	a0,a5
20409c88:	4472                	lw	s0,28(sp)
20409c8a:	6105                	addi	sp,sp,32
20409c8c:	8082                	ret

20409c8e <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20409c8e:	1101                	addi	sp,sp,-32
20409c90:	ce06                	sw	ra,28(sp)
20409c92:	cc22                	sw	s0,24(sp)
20409c94:	1000                	addi	s0,sp,32
20409c96:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20409c9a:	fec42503          	lw	a0,-20(s0)
20409c9e:	ef1ff0ef          	jal	ra,20409b8e <__metal_driver_sifive_uart0_interrupt_parent>
20409ca2:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
20409ca4:	853e                	mv	a0,a5
20409ca6:	40f2                	lw	ra,28(sp)
20409ca8:	4462                	lw	s0,24(sp)
20409caa:	6105                	addi	sp,sp,32
20409cac:	8082                	ret

20409cae <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20409cae:	1101                	addi	sp,sp,-32
20409cb0:	ce06                	sw	ra,28(sp)
20409cb2:	cc22                	sw	s0,24(sp)
20409cb4:	1000                	addi	s0,sp,32
20409cb6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20409cba:	fec42503          	lw	a0,-20(s0)
20409cbe:	effff0ef          	jal	ra,20409bbc <__metal_driver_sifive_uart0_interrupt_line>
20409cc2:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43
}
20409cc4:	853e                	mv	a0,a5
20409cc6:	40f2                	lw	ra,28(sp)
20409cc8:	4462                	lw	s0,24(sp)
20409cca:	6105                	addi	sp,sp,32
20409ccc:	8082                	ret

20409cce <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20409cce:	7179                	addi	sp,sp,-48
20409cd0:	d606                	sw	ra,44(sp)
20409cd2:	d422                	sw	s0,40(sp)
20409cd4:	1800                	addi	s0,sp,48
20409cd6:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409cda:	fdc42503          	lw	a0,-36(s0)
20409cde:	e87ff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409ce2:	87aa                	mv	a5,a0
20409ce4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20409ce8:	fec42783          	lw	a5,-20(s0)
20409cec:	07c1                	addi	a5,a5,16
20409cee:	439c                	lw	a5,0(a5)
20409cf0:	fec42703          	lw	a4,-20(s0)
20409cf4:	0741                	addi	a4,a4,16
20409cf6:	0017e793          	ori	a5,a5,1
20409cfa:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20409cfc:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:50
}
20409cfe:	853e                	mv	a0,a5
20409d00:	50b2                	lw	ra,44(sp)
20409d02:	5422                	lw	s0,40(sp)
20409d04:	6145                	addi	sp,sp,48
20409d06:	8082                	ret

20409d08 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20409d08:	7179                	addi	sp,sp,-48
20409d0a:	d606                	sw	ra,44(sp)
20409d0c:	d422                	sw	s0,40(sp)
20409d0e:	1800                	addi	s0,sp,48
20409d10:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409d14:	fdc42503          	lw	a0,-36(s0)
20409d18:	e4dff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409d1c:	87aa                	mv	a5,a0
20409d1e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20409d22:	fec42783          	lw	a5,-20(s0)
20409d26:	07c1                	addi	a5,a5,16
20409d28:	439c                	lw	a5,0(a5)
20409d2a:	fec42703          	lw	a4,-20(s0)
20409d2e:	0741                	addi	a4,a4,16
20409d30:	9bf9                	andi	a5,a5,-2
20409d32:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20409d34:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
}
20409d36:	853e                	mv	a0,a5
20409d38:	50b2                	lw	ra,44(sp)
20409d3a:	5422                	lw	s0,40(sp)
20409d3c:	6145                	addi	sp,sp,48
20409d3e:	8082                	ret

20409d40 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20409d40:	7179                	addi	sp,sp,-48
20409d42:	d606                	sw	ra,44(sp)
20409d44:	d422                	sw	s0,40(sp)
20409d46:	1800                	addi	s0,sp,48
20409d48:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409d4c:	fdc42503          	lw	a0,-36(s0)
20409d50:	e15ff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409d54:	87aa                	mv	a5,a0
20409d56:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20409d5a:	fec42783          	lw	a5,-20(s0)
20409d5e:	07c1                	addi	a5,a5,16
20409d60:	439c                	lw	a5,0(a5)
20409d62:	fec42703          	lw	a4,-20(s0)
20409d66:	0741                	addi	a4,a4,16
20409d68:	0027e793          	ori	a5,a5,2
20409d6c:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20409d6e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:64
}
20409d70:	853e                	mv	a0,a5
20409d72:	50b2                	lw	ra,44(sp)
20409d74:	5422                	lw	s0,40(sp)
20409d76:	6145                	addi	sp,sp,48
20409d78:	8082                	ret

20409d7a <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20409d7a:	7179                	addi	sp,sp,-48
20409d7c:	d606                	sw	ra,44(sp)
20409d7e:	d422                	sw	s0,40(sp)
20409d80:	1800                	addi	s0,sp,48
20409d82:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409d86:	fdc42503          	lw	a0,-36(s0)
20409d8a:	ddbff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409d8e:	87aa                	mv	a5,a0
20409d90:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20409d94:	fec42783          	lw	a5,-20(s0)
20409d98:	07c1                	addi	a5,a5,16
20409d9a:	439c                	lw	a5,0(a5)
20409d9c:	fec42703          	lw	a4,-20(s0)
20409da0:	0741                	addi	a4,a4,16
20409da2:	9bf5                	andi	a5,a5,-3
20409da4:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20409da6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
}
20409da8:	853e                	mv	a0,a5
20409daa:	50b2                	lw	ra,44(sp)
20409dac:	5422                	lw	s0,40(sp)
20409dae:	6145                	addi	sp,sp,48
20409db0:	8082                	ret

20409db2 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20409db2:	7179                	addi	sp,sp,-48
20409db4:	d606                	sw	ra,44(sp)
20409db6:	d422                	sw	s0,40(sp)
20409db8:	1800                	addi	s0,sp,48
20409dba:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409dbe:	fdc42503          	lw	a0,-36(s0)
20409dc2:	da3ff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409dc6:	87aa                	mv	a5,a0
20409dc8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20409dcc:	fec42783          	lw	a5,-20(s0)
20409dd0:	439c                	lw	a5,0(a5)
20409dd2:	83fd                	srli	a5,a5,0x1f
20409dd4:	0ff7f793          	andi	a5,a5,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:77
}
20409dd8:	853e                	mv	a0,a5
20409dda:	50b2                	lw	ra,44(sp)
20409ddc:	5422                	lw	s0,40(sp)
20409dde:	6145                	addi	sp,sp,48
20409de0:	8082                	ret

20409de2 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20409de2:	7179                	addi	sp,sp,-48
20409de4:	d606                	sw	ra,44(sp)
20409de6:	d422                	sw	s0,40(sp)
20409de8:	1800                	addi	s0,sp,48
20409dea:	fca42e23          	sw	a0,-36(s0)
20409dee:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409df2:	fdc42503          	lw	a0,-36(s0)
20409df6:	d6fff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409dfa:	87aa                	mv	a5,a0
20409dfc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20409e00:	fec42783          	lw	a5,-20(s0)
20409e04:	07a1                	addi	a5,a5,8
20409e06:	4398                	lw	a4,0(a5)
20409e08:	fd842783          	lw	a5,-40(s0)
20409e0c:	01079693          	slli	a3,a5,0x10
20409e10:	000707b7          	lui	a5,0x70
20409e14:	8ff5                	and	a5,a5,a3
20409e16:	fec42683          	lw	a3,-20(s0)
20409e1a:	06a1                	addi	a3,a3,8
20409e1c:	8fd9                	or	a5,a5,a4
20409e1e:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20409e20:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
}
20409e22:	853e                	mv	a0,a5
20409e24:	50b2                	lw	ra,44(sp)
20409e26:	5422                	lw	s0,40(sp)
20409e28:	6145                	addi	sp,sp,48
20409e2a:	8082                	ret

20409e2c <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20409e2c:	7179                	addi	sp,sp,-48
20409e2e:	d606                	sw	ra,44(sp)
20409e30:	d422                	sw	s0,40(sp)
20409e32:	1800                	addi	s0,sp,48
20409e34:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409e38:	fdc42503          	lw	a0,-36(s0)
20409e3c:	d29ff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409e40:	87aa                	mv	a5,a0
20409e42:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20409e46:	fec42783          	lw	a5,-20(s0)
20409e4a:	07a1                	addi	a5,a5,8
20409e4c:	439c                	lw	a5,0(a5)
20409e4e:	83c1                	srli	a5,a5,0x10
20409e50:	8b9d                	andi	a5,a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91
}
20409e52:	853e                	mv	a0,a5
20409e54:	50b2                	lw	ra,44(sp)
20409e56:	5422                	lw	s0,40(sp)
20409e58:	6145                	addi	sp,sp,48
20409e5a:	8082                	ret

20409e5c <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20409e5c:	7179                	addi	sp,sp,-48
20409e5e:	d606                	sw	ra,44(sp)
20409e60:	d422                	sw	s0,40(sp)
20409e62:	1800                	addi	s0,sp,48
20409e64:	fca42e23          	sw	a0,-36(s0)
20409e68:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409e6c:	fdc42503          	lw	a0,-36(s0)
20409e70:	cf5ff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409e74:	87aa                	mv	a5,a0
20409e76:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20409e7a:	fec42783          	lw	a5,-20(s0)
20409e7e:	07b1                	addi	a5,a5,12
20409e80:	4398                	lw	a4,0(a5)
20409e82:	fd842783          	lw	a5,-40(s0)
20409e86:	01079693          	slli	a3,a5,0x10
20409e8a:	000707b7          	lui	a5,0x70
20409e8e:	8ff5                	and	a5,a5,a3
20409e90:	fec42683          	lw	a3,-20(s0)
20409e94:	06b1                	addi	a3,a3,12
20409e96:	8fd9                	or	a5,a5,a4
20409e98:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20409e9a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:99
}
20409e9c:	853e                	mv	a0,a5
20409e9e:	50b2                	lw	ra,44(sp)
20409ea0:	5422                	lw	s0,40(sp)
20409ea2:	6145                	addi	sp,sp,48
20409ea4:	8082                	ret

20409ea6 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20409ea6:	7179                	addi	sp,sp,-48
20409ea8:	d606                	sw	ra,44(sp)
20409eaa:	d422                	sw	s0,40(sp)
20409eac:	1800                	addi	s0,sp,48
20409eae:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409eb2:	fdc42503          	lw	a0,-36(s0)
20409eb6:	cafff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409eba:	87aa                	mv	a5,a0
20409ebc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20409ec0:	fec42783          	lw	a5,-20(s0)
20409ec4:	07b1                	addi	a5,a5,12
20409ec6:	439c                	lw	a5,0(a5)
20409ec8:	83c1                	srli	a5,a5,0x10
20409eca:	8b9d                	andi	a5,a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:105
}
20409ecc:	853e                	mv	a0,a5
20409ece:	50b2                	lw	ra,44(sp)
20409ed0:	5422                	lw	s0,40(sp)
20409ed2:	6145                	addi	sp,sp,48
20409ed4:	8082                	ret

20409ed6 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20409ed6:	7179                	addi	sp,sp,-48
20409ed8:	d606                	sw	ra,44(sp)
20409eda:	d422                	sw	s0,40(sp)
20409edc:	1800                	addi	s0,sp,48
20409ede:	fca42e23          	sw	a0,-36(s0)
20409ee2:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409ee6:	fdc42503          	lw	a0,-36(s0)
20409eea:	c7bff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409eee:	87aa                	mv	a5,a0
20409ef0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20409ef4:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20409ef6:	fdc42503          	lw	a0,-36(s0)
20409efa:	eb9ff0ef          	jal	ra,20409db2 <__metal_driver_sifive_uart0_txready>
20409efe:	87aa                	mv	a5,a0
20409f00:	fbfd                	bnez	a5,20409ef6 <__metal_driver_sifive_uart0_putc+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20409f02:	fec42783          	lw	a5,-20(s0)
20409f06:	fd842703          	lw	a4,-40(s0)
20409f0a:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20409f0c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:115
}
20409f0e:	853e                	mv	a0,a5
20409f10:	50b2                	lw	ra,44(sp)
20409f12:	5422                	lw	s0,40(sp)
20409f14:	6145                	addi	sp,sp,48
20409f16:	8082                	ret

20409f18 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20409f18:	7179                	addi	sp,sp,-48
20409f1a:	d606                	sw	ra,44(sp)
20409f1c:	d422                	sw	s0,40(sp)
20409f1e:	1800                	addi	s0,sp,48
20409f20:	fca42e23          	sw	a0,-36(s0)
20409f24:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20409f28:	fdc42503          	lw	a0,-36(s0)
20409f2c:	c39ff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409f30:	87aa                	mv	a5,a0
20409f32:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20409f36:	fec42783          	lw	a5,-20(s0)
20409f3a:	0791                	addi	a5,a5,4
20409f3c:	439c                	lw	a5,0(a5)
20409f3e:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20409f42:	fe842783          	lw	a5,-24(s0)
20409f46:	0007d763          	bgez	a5,20409f54 <__metal_driver_sifive_uart0_getc+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20409f4a:	fd842783          	lw	a5,-40(s0)
20409f4e:	577d                	li	a4,-1
20409f50:	c398                	sw	a4,0(a5)
20409f52:	a801                	j	20409f62 <__metal_driver_sifive_uart0_getc+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20409f54:	fe842783          	lw	a5,-24(s0)
20409f58:	0ff7f713          	andi	a4,a5,255
20409f5c:	fd842783          	lw	a5,-40(s0)
20409f60:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20409f62:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
}
20409f64:	853e                	mv	a0,a5
20409f66:	50b2                	lw	ra,44(sp)
20409f68:	5422                	lw	s0,40(sp)
20409f6a:	6145                	addi	sp,sp,48
20409f6c:	8082                	ret

20409f6e <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20409f6e:	7179                	addi	sp,sp,-48
20409f70:	d622                	sw	s0,44(sp)
20409f72:	1800                	addi	s0,sp,48
20409f74:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20409f78:	fdc42783          	lw	a5,-36(s0)
20409f7c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20409f80:	fec42783          	lw	a5,-20(s0)
20409f84:	43dc                	lw	a5,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
}
20409f86:	853e                	mv	a0,a5
20409f88:	5432                	lw	s0,44(sp)
20409f8a:	6145                	addi	sp,sp,48
20409f8c:	8082                	ret

20409f8e <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20409f8e:	7179                	addi	sp,sp,-48
20409f90:	d606                	sw	ra,44(sp)
20409f92:	d422                	sw	s0,40(sp)
20409f94:	1800                	addi	s0,sp,48
20409f96:	fca42e23          	sw	a0,-36(s0)
20409f9a:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20409f9e:	fdc42783          	lw	a5,-36(s0)
20409fa2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20409fa6:	fdc42503          	lw	a0,-36(s0)
20409faa:	bbbff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
20409fae:	87aa                	mv	a5,a0
20409fb0:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20409fb4:	fdc42503          	lw	a0,-36(s0)
20409fb8:	c2dff0ef          	jal	ra,20409be4 <__metal_driver_sifive_uart0_clock>
20409fbc:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20409fc0:	fd842703          	lw	a4,-40(s0)
20409fc4:	fec42783          	lw	a5,-20(s0)
20409fc8:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20409fca:	fe442783          	lw	a5,-28(s0)
20409fce:	cbb1                	beqz	a5,2040a022 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20409fd0:	fe442783          	lw	a5,-28(s0)
20409fd4:	439c                	lw	a5,0(a5)
20409fd6:	439c                	lw	a5,0(a5)
20409fd8:	fe442503          	lw	a0,-28(s0)
20409fdc:	9782                	jalr	a5
20409fde:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20409fe2:	fe042703          	lw	a4,-32(s0)
20409fe6:	fd842783          	lw	a5,-40(s0)
20409fea:	02f747b3          	div	a5,a4,a5
20409fee:	fff78713          	addi	a4,a5,-1 # 6ffff <__stack_size+0x6efff>
20409ff2:	fe842783          	lw	a5,-24(s0)
20409ff6:	07e1                	addi	a5,a5,24
20409ff8:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20409ffa:	fe842783          	lw	a5,-24(s0)
20409ffe:	07a1                	addi	a5,a5,8
2040a000:	439c                	lw	a5,0(a5)
2040a002:	fe842703          	lw	a4,-24(s0)
2040a006:	0721                	addi	a4,a4,8
2040a008:	0017e793          	ori	a5,a5,1
2040a00c:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
2040a00e:	fe842783          	lw	a5,-24(s0)
2040a012:	07b1                	addi	a5,a5,12
2040a014:	439c                	lw	a5,0(a5)
2040a016:	fe842703          	lw	a4,-24(s0)
2040a01a:	0731                	addi	a4,a4,12
2040a01c:	0017e793          	ori	a5,a5,1
2040a020:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
2040a022:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
}
2040a024:	853e                	mv	a0,a5
2040a026:	50b2                	lw	ra,44(sp)
2040a028:	5422                	lw	s0,40(sp)
2040a02a:	6145                	addi	sp,sp,48
2040a02c:	8082                	ret

2040a02e <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
2040a02e:	7139                	addi	sp,sp,-64
2040a030:	de06                	sw	ra,60(sp)
2040a032:	dc22                	sw	s0,56(sp)
2040a034:	0080                	addi	s0,sp,64
2040a036:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
2040a03a:	fcc42783          	lw	a5,-52(s0)
2040a03e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
2040a042:	fcc42503          	lw	a0,-52(s0)
2040a046:	b1fff0ef          	jal	ra,20409b64 <__metal_driver_sifive_uart0_control_base>
2040a04a:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
2040a04c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2040a050:	fcc42503          	lw	a0,-52(s0)
2040a054:	b91ff0ef          	jal	ra,20409be4 <__metal_driver_sifive_uart0_clock>
2040a058:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
2040a05c:	fe842783          	lw	a5,-24(s0)
2040a060:	07a1                	addi	a5,a5,8
2040a062:	4398                	lw	a4,0(a5)
2040a064:	fe842783          	lw	a5,-24(s0)
2040a068:	07a1                	addi	a5,a5,8
2040a06a:	86be                	mv	a3,a5
2040a06c:	fff907b7          	lui	a5,0xfff90
2040a070:	17fd                	addi	a5,a5,-1
2040a072:	8ff9                	and	a5,a5,a4
2040a074:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
2040a076:	fe842783          	lw	a5,-24(s0)
2040a07a:	07a1                	addi	a5,a5,8
2040a07c:	4398                	lw	a4,0(a5)
2040a07e:	fe842783          	lw	a5,-24(s0)
2040a082:	07a1                	addi	a5,a5,8
2040a084:	86be                	mv	a3,a5
2040a086:	67c1                	lui	a5,0x10
2040a088:	8fd9                	or	a5,a5,a4
2040a08a:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
2040a08c:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
2040a08e:	fe842783          	lw	a5,-24(s0)
2040a092:	07d1                	addi	a5,a5,20
2040a094:	439c                	lw	a5,0(a5)
2040a096:	8b85                	andi	a5,a5,1
2040a098:	dbfd                	beqz	a5,2040a08e <pre_rate_change_callback_func+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2040a09a:	fe842783          	lw	a5,-24(s0)
2040a09e:	07a1                	addi	a5,a5,8
2040a0a0:	439c                	lw	a5,0(a5)
2040a0a2:	8b89                	andi	a5,a5,2
2040a0a4:	c399                	beqz	a5,2040a0aa <pre_rate_change_callback_func+0x7c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
2040a0a6:	47a5                	li	a5,9
2040a0a8:	a011                	j	2040a0ac <pre_rate_change_callback_func+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
2040a0aa:	47a9                	li	a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
2040a0ac:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2040a0b0:	fe442783          	lw	a5,-28(s0)
2040a0b4:	439c                	lw	a5,0(a5)
2040a0b6:	439c                	lw	a5,0(a5)
2040a0b8:	fe442503          	lw	a0,-28(s0)
2040a0bc:	9782                	jalr	a5
2040a0be:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2040a0c2:	fe042703          	lw	a4,-32(s0)
2040a0c6:	fdc42783          	lw	a5,-36(s0)
2040a0ca:	02f707b3          	mul	a5,a4,a5
2040a0ce:	873e                	mv	a4,a5
2040a0d0:	fec42783          	lw	a5,-20(s0)
2040a0d4:	43dc                	lw	a5,4(a5)
2040a0d6:	02f757b3          	divu	a5,a4,a5
2040a0da:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2040a0de:	fc042a23          	sw	zero,-44(s0)
2040a0e2:	a039                	j	2040a0f0 <pre_rate_change_callback_func+0xc2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
2040a0e4:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
2040a0e6:	fd442783          	lw	a5,-44(s0)
2040a0ea:	0785                	addi	a5,a5,1
2040a0ec:	fcf42a23          	sw	a5,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2040a0f0:	fd442783          	lw	a5,-44(s0)
2040a0f4:	fd842703          	lw	a4,-40(s0)
2040a0f8:	fee7c6e3          	blt	a5,a4,2040a0e4 <pre_rate_change_callback_func+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:180
}
2040a0fc:	0001                	nop
2040a0fe:	50f2                	lw	ra,60(sp)
2040a100:	5462                	lw	s0,56(sp)
2040a102:	6121                	addi	sp,sp,64
2040a104:	8082                	ret

2040a106 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
2040a106:	7179                	addi	sp,sp,-48
2040a108:	d606                	sw	ra,44(sp)
2040a10a:	d422                	sw	s0,40(sp)
2040a10c:	1800                	addi	s0,sp,48
2040a10e:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
2040a112:	fdc42783          	lw	a5,-36(s0)
2040a116:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
2040a11a:	fec42703          	lw	a4,-20(s0)
2040a11e:	fec42783          	lw	a5,-20(s0)
2040a122:	43dc                	lw	a5,4(a5)
2040a124:	85be                	mv	a1,a5
2040a126:	853a                	mv	a0,a4
2040a128:	e23fb0ef          	jal	ra,20405f4a <metal_uart_set_baud_rate>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:185
}
2040a12c:	0001                	nop
2040a12e:	50b2                	lw	ra,44(sp)
2040a130:	5422                	lw	s0,40(sp)
2040a132:	6145                	addi	sp,sp,48
2040a134:	8082                	ret

2040a136 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2040a136:	7139                	addi	sp,sp,-64
2040a138:	de06                	sw	ra,60(sp)
2040a13a:	dc22                	sw	s0,56(sp)
2040a13c:	0080                	addi	s0,sp,64
2040a13e:	fca42623          	sw	a0,-52(s0)
2040a142:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2040a146:	fcc42783          	lw	a5,-52(s0)
2040a14a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2040a14e:	fcc42503          	lw	a0,-52(s0)
2040a152:	a93ff0ef          	jal	ra,20409be4 <__metal_driver_sifive_uart0_clock>
2040a156:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
2040a15a:	fcc42503          	lw	a0,-52(s0)
2040a15e:	ab5ff0ef          	jal	ra,20409c12 <__metal_driver_sifive_uart0_pinmux>
2040a162:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2040a166:	fe842783          	lw	a5,-24(s0)
2040a16a:	c7b9                	beqz	a5,2040a1b8 <__metal_driver_sifive_uart0_init+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
2040a16c:	fec42783          	lw	a5,-20(s0)
2040a170:	2040a737          	lui	a4,0x2040a
2040a174:	02e70713          	addi	a4,a4,46 # 2040a02e <pre_rate_change_callback_func>
2040a178:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
2040a17a:	fec42783          	lw	a5,-20(s0)
2040a17e:	fcc42703          	lw	a4,-52(s0)
2040a182:	c7d8                	sw	a4,12(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
2040a184:	fec42783          	lw	a5,-20(s0)
2040a188:	07a1                	addi	a5,a5,8
2040a18a:	85be                	mv	a1,a5
2040a18c:	fe842503          	lw	a0,-24(s0)
2040a190:	2abd                	jal	2040a30e <metal_clock_register_pre_rate_change_callback>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
2040a192:	fec42783          	lw	a5,-20(s0)
2040a196:	2040a737          	lui	a4,0x2040a
2040a19a:	10670713          	addi	a4,a4,262 # 2040a106 <post_rate_change_callback_func>
2040a19e:	cbd8                	sw	a4,20(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
2040a1a0:	fec42783          	lw	a5,-20(s0)
2040a1a4:	fcc42703          	lw	a4,-52(s0)
2040a1a8:	cf98                	sw	a4,24(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
2040a1aa:	fec42783          	lw	a5,-20(s0)
2040a1ae:	07d1                	addi	a5,a5,20
2040a1b0:	85be                	mv	a1,a5
2040a1b2:	fe842503          	lw	a0,-24(s0)
2040a1b6:	2269                	jal	2040a340 <metal_clock_register_post_rate_change_callback>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2040a1b8:	fec42783          	lw	a5,-20(s0)
2040a1bc:	fc842583          	lw	a1,-56(s0)
2040a1c0:	853e                	mv	a0,a5
2040a1c2:	d89fb0ef          	jal	ra,20405f4a <metal_uart_set_baud_rate>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2040a1c6:	fe442783          	lw	a5,-28(s0)
2040a1ca:	cb95                	beqz	a5,2040a1fe <__metal_driver_sifive_uart0_init+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
2040a1cc:	fcc42503          	lw	a0,-52(s0)
2040a1d0:	a6dff0ef          	jal	ra,20409c3c <__metal_driver_sifive_uart0_pinmux_output_selector>
2040a1d4:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2040a1d6:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
2040a1da:	fcc42503          	lw	a0,-52(s0)
2040a1de:	a87ff0ef          	jal	ra,20409c64 <__metal_driver_sifive_uart0_pinmux_source_selector>
2040a1e2:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
2040a1e4:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2040a1e8:	fe442783          	lw	a5,-28(s0)
2040a1ec:	439c                	lw	a5,0(a5)
2040a1ee:	53dc                	lw	a5,36(a5)
2040a1f0:	fdc42603          	lw	a2,-36(s0)
2040a1f4:	fe042583          	lw	a1,-32(s0)
2040a1f8:	fe442503          	lw	a0,-28(s0)
2040a1fc:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
2040a1fe:	0001                	nop
2040a200:	50f2                	lw	ra,60(sp)
2040a202:	5462                	lw	s0,56(sp)
2040a204:	6121                	addi	sp,sp,64
2040a206:	8082                	ret

2040a208 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2040a208:	7179                	addi	sp,sp,-48
2040a20a:	d606                	sw	ra,44(sp)
2040a20c:	d422                	sw	s0,40(sp)
2040a20e:	1800                	addi	s0,sp,48
2040a210:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
2040a214:	fdc42783          	lw	a5,-36(s0)
2040a218:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:52
    while (current) {
2040a21c:	a831                	j	2040a238 <_metal_clock_call_all_callbacks+0x30>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
2040a21e:	fec42783          	lw	a5,-20(s0)
2040a222:	4398                	lw	a4,0(a5)
2040a224:	fec42783          	lw	a5,-20(s0)
2040a228:	43dc                	lw	a5,4(a5)
2040a22a:	853e                	mv	a0,a5
2040a22c:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:54
        current = current->_next;
2040a22e:	fec42783          	lw	a5,-20(s0)
2040a232:	479c                	lw	a5,8(a5)
2040a234:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:52
    while (current) {
2040a238:	fec42783          	lw	a5,-20(s0)
2040a23c:	f3ed                	bnez	a5,2040a21e <_metal_clock_call_all_callbacks+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:56
    }
}
2040a23e:	0001                	nop
2040a240:	50b2                	lw	ra,44(sp)
2040a242:	5422                	lw	s0,40(sp)
2040a244:	6145                	addi	sp,sp,48
2040a246:	8082                	ret

2040a248 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2040a248:	7179                	addi	sp,sp,-48
2040a24a:	d622                	sw	s0,44(sp)
2040a24c:	1800                	addi	s0,sp,48
2040a24e:	fca42e23          	sw	a0,-36(s0)
2040a252:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2040a256:	fd842783          	lw	a5,-40(s0)
2040a25a:	0007a423          	sw	zero,8(a5) # 10008 <__stack_size+0xf008>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:66

    if (!list) {
2040a25e:	fdc42783          	lw	a5,-36(s0)
2040a262:	e781                	bnez	a5,2040a26a <_metal_clock_append_to_callbacks+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:67
        return cb;
2040a264:	fd842783          	lw	a5,-40(s0)
2040a268:	a035                	j	2040a294 <_metal_clock_append_to_callbacks+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
2040a26a:	fdc42783          	lw	a5,-36(s0)
2040a26e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
2040a272:	a031                	j	2040a27e <_metal_clock_append_to_callbacks+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:73
        current = current->_next;
2040a274:	fec42783          	lw	a5,-20(s0)
2040a278:	479c                	lw	a5,8(a5)
2040a27a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
2040a27e:	fec42783          	lw	a5,-20(s0)
2040a282:	479c                	lw	a5,8(a5)
2040a284:	fbe5                	bnez	a5,2040a274 <_metal_clock_append_to_callbacks+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
2040a286:	fec42783          	lw	a5,-20(s0)
2040a28a:	fd842703          	lw	a4,-40(s0)
2040a28e:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:78

    return list;
2040a290:	fdc42783          	lw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:79
}
2040a294:	853e                	mv	a0,a5
2040a296:	5432                	lw	s0,44(sp)
2040a298:	6145                	addi	sp,sp,48
2040a29a:	8082                	ret

2040a29c <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
2040a29c:	1101                	addi	sp,sp,-32
2040a29e:	ce06                	sw	ra,28(sp)
2040a2a0:	cc22                	sw	s0,24(sp)
2040a2a2:	1000                	addi	s0,sp,32
2040a2a4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2040a2a8:	fec42783          	lw	a5,-20(s0)
2040a2ac:	439c                	lw	a5,0(a5)
2040a2ae:	439c                	lw	a5,0(a5)
2040a2b0:	fec42503          	lw	a0,-20(s0)
2040a2b4:	9782                	jalr	a5
2040a2b6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:112
}
2040a2b8:	853e                	mv	a0,a5
2040a2ba:	40f2                	lw	ra,28(sp)
2040a2bc:	4462                	lw	s0,24(sp)
2040a2be:	6105                	addi	sp,sp,32
2040a2c0:	8082                	ret

2040a2c2 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
2040a2c2:	7179                	addi	sp,sp,-48
2040a2c4:	d606                	sw	ra,44(sp)
2040a2c6:	d422                	sw	s0,40(sp)
2040a2c8:	1800                	addi	s0,sp,48
2040a2ca:	fca42e23          	sw	a0,-36(s0)
2040a2ce:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
2040a2d2:	fdc42783          	lw	a5,-36(s0)
2040a2d6:	43dc                	lw	a5,4(a5)
2040a2d8:	853e                	mv	a0,a5
2040a2da:	f2fff0ef          	jal	ra,2040a208 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
2040a2de:	fdc42783          	lw	a5,-36(s0)
2040a2e2:	439c                	lw	a5,0(a5)
2040a2e4:	43dc                	lw	a5,4(a5)
2040a2e6:	fd842583          	lw	a1,-40(s0)
2040a2ea:	fdc42503          	lw	a0,-36(s0)
2040a2ee:	9782                	jalr	a5
2040a2f0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
2040a2f4:	fdc42783          	lw	a5,-36(s0)
2040a2f8:	479c                	lw	a5,8(a5)
2040a2fa:	853e                	mv	a0,a5
2040a2fc:	f0dff0ef          	jal	ra,2040a208 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:135

    return out;
2040a300:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:136
}
2040a304:	853e                	mv	a0,a5
2040a306:	50b2                	lw	ra,44(sp)
2040a308:	5422                	lw	s0,40(sp)
2040a30a:	6145                	addi	sp,sp,48
2040a30c:	8082                	ret

2040a30e <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
2040a30e:	1101                	addi	sp,sp,-32
2040a310:	ce06                	sw	ra,28(sp)
2040a312:	cc22                	sw	s0,24(sp)
2040a314:	1000                	addi	s0,sp,32
2040a316:	fea42623          	sw	a0,-20(s0)
2040a31a:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
2040a31e:	fec42783          	lw	a5,-20(s0)
2040a322:	43dc                	lw	a5,4(a5)
2040a324:	fe842583          	lw	a1,-24(s0)
2040a328:	853e                	mv	a0,a5
2040a32a:	f1fff0ef          	jal	ra,2040a248 <_metal_clock_append_to_callbacks>
2040a32e:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
2040a330:	fec42783          	lw	a5,-20(s0)
2040a334:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:149
}
2040a336:	0001                	nop
2040a338:	40f2                	lw	ra,28(sp)
2040a33a:	4462                	lw	s0,24(sp)
2040a33c:	6105                	addi	sp,sp,32
2040a33e:	8082                	ret

2040a340 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
2040a340:	1101                	addi	sp,sp,-32
2040a342:	ce06                	sw	ra,28(sp)
2040a344:	cc22                	sw	s0,24(sp)
2040a346:	1000                	addi	s0,sp,32
2040a348:	fea42623          	sw	a0,-20(s0)
2040a34c:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
2040a350:	fec42783          	lw	a5,-20(s0)
2040a354:	479c                	lw	a5,8(a5)
2040a356:	fe842583          	lw	a1,-24(s0)
2040a35a:	853e                	mv	a0,a5
2040a35c:	eedff0ef          	jal	ra,2040a248 <_metal_clock_append_to_callbacks>
2040a360:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
2040a362:	fec42783          	lw	a5,-20(s0)
2040a366:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:162
}
2040a368:	0001                	nop
2040a36a:	40f2                	lw	ra,28(sp)
2040a36c:	4462                	lw	s0,24(sp)
2040a36e:	6105                	addi	sp,sp,32
2040a370:	8082                	ret

2040a372 <metal_shutdown>:
metal_shutdown():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
2040a372:	1101                	addi	sp,sp,-32
2040a374:	ce22                	sw	s0,28(sp)
2040a376:	1000                	addi	s0,sp,32
2040a378:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
2040a37c:	0001                	nop
2040a37e:	bffd                	j	2040a37c <metal_shutdown+0xa>

2040a380 <__metal_vector_table>:
IRQ_0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
2040a380:	d58fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a384 <IRQ_1>:
IRQ_1():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
2040a384:	d54fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a388 <IRQ_2>:
IRQ_2():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
2040a388:	d50fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a38c <IRQ_3>:
IRQ_3():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040a38c:	d7afc06f          	j	20406906 <metal_software_interrupt_vector_handler>

2040a390 <IRQ_4>:
IRQ_4():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
2040a390:	d48fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a394 <IRQ_5>:
IRQ_5():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
2040a394:	d44fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a398 <IRQ_6>:
IRQ_6():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
2040a398:	d40fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a39c <IRQ_7>:
IRQ_7():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040a39c:	e5efc06f          	j	204069fa <metal_timer_interrupt_vector_handler>

2040a3a0 <IRQ_8>:
IRQ_8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
2040a3a0:	d38fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a3a4 <IRQ_9>:
IRQ_9():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
2040a3a4:	d34fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a3a8 <IRQ_10>:
IRQ_10():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
2040a3a8:	d30fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a3ac <IRQ_11>:
IRQ_11():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2040a3ac:	d2cfc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a3b0 <IRQ_12>:
IRQ_12():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
2040a3b0:	d28fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a3b4 <IRQ_13>:
IRQ_13():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
2040a3b4:	d24fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a3b8 <IRQ_14>:
IRQ_14():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
2040a3b8:	d20fc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a3bc <IRQ_15>:
IRQ_15():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2040a3bc:	d1cfc06f          	j	204068d8 <metal_interrupt_vector_handler>

2040a3c0 <IRQ_LC0>:
IRQ_LC0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
2040a3c0:	9b7fc06f          	j	20406d76 <metal_lc0_interrupt_vector_handler>

2040a3c4 <IRQ_LC1>:
IRQ_LC1():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
2040a3c4:	a45fc06f          	j	20406e08 <metal_lc1_interrupt_vector_handler>

2040a3c8 <IRQ_LC2>:
IRQ_LC2():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
2040a3c8:	ad3fc06f          	j	20406e9a <metal_lc2_interrupt_vector_handler>

2040a3cc <IRQ_LC3>:
IRQ_LC3():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2040a3cc:	b61fc06f          	j	20406f2c <metal_lc3_interrupt_vector_handler>

2040a3d0 <IRQ_LC4>:
IRQ_LC4():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
2040a3d0:	beffc06f          	j	20406fbe <metal_lc4_interrupt_vector_handler>

2040a3d4 <IRQ_LC5>:
IRQ_LC5():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
2040a3d4:	c7dfc06f          	j	20407050 <metal_lc5_interrupt_vector_handler>

2040a3d8 <IRQ_LC6>:
IRQ_LC6():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
2040a3d8:	d0bfc06f          	j	204070e2 <metal_lc6_interrupt_vector_handler>

2040a3dc <IRQ_LC7>:
IRQ_LC7():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2040a3dc:	d99fc06f          	j	20407174 <metal_lc7_interrupt_vector_handler>

2040a3e0 <IRQ_LC8>:
IRQ_LC8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
2040a3e0:	e27fc06f          	j	20407206 <metal_lc8_interrupt_vector_handler>

2040a3e4 <IRQ_LC9>:
IRQ_LC9():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
2040a3e4:	eb5fc06f          	j	20407298 <metal_lc9_interrupt_vector_handler>

2040a3e8 <IRQ_LC10>:
IRQ_LC10():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
2040a3e8:	f43fc06f          	j	2040732a <metal_lc10_interrupt_vector_handler>

2040a3ec <IRQ_LC11>:
IRQ_LC11():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2040a3ec:	fd1fc06f          	j	204073bc <metal_lc11_interrupt_vector_handler>

2040a3f0 <IRQ_LC12>:
IRQ_LC12():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
2040a3f0:	85efd06f          	j	2040744e <metal_lc12_interrupt_vector_handler>

2040a3f4 <IRQ_LC13>:
IRQ_LC13():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
2040a3f4:	8ecfd06f          	j	204074e0 <metal_lc13_interrupt_vector_handler>

2040a3f8 <IRQ_LC14>:
IRQ_LC14():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
2040a3f8:	97afd06f          	j	20407572 <metal_lc14_interrupt_vector_handler>

2040a3fc <IRQ_LC15>:
IRQ_LC15():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2040a3fc:	a08fd06f          	j	20407604 <metal_lc15_interrupt_vector_handler>

2040a400 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:186
{
2040a400:	1101                	addi	sp,sp,-32
2040a402:	ce22                	sw	s0,28(sp)
2040a404:	1000                	addi	s0,sp,32
2040a406:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:187
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040a40a:	fec42703          	lw	a4,-20(s0)
2040a40e:	800007b7          	lui	a5,0x80000
2040a412:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffc740>
2040a416:	00f71763          	bne	a4,a5,2040a424 <__metal_driver_fixed_clock_rate+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040a41a:	00f427b7          	lui	a5,0xf42
2040a41e:	40078793          	addi	a5,a5,1024 # f42400 <__stack_size+0xf41400>
2040a422:	a825                	j	2040a45a <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:190
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
2040a424:	fec42703          	lw	a4,-20(s0)
2040a428:	800007b7          	lui	a5,0x80000
2040a42c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffc74c>
2040a430:	00f71763          	bne	a4,a5,2040a43e <__metal_driver_fixed_clock_rate+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:191
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
2040a434:	044aa7b7          	lui	a5,0x44aa
2040a438:	20078793          	addi	a5,a5,512 # 44aa200 <__stack_size+0x44a9200>
2040a43c:	a839                	j	2040a45a <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:193
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2040a43e:	fec42703          	lw	a4,-20(s0)
2040a442:	800007b7          	lui	a5,0x80000
2040a446:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffc758>
2040a44a:	00f71763          	bne	a4,a5,2040a458 <__metal_driver_fixed_clock_rate+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:194
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2040a44e:	01e857b7          	lui	a5,0x1e85
2040a452:	80078793          	addi	a5,a5,-2048 # 1e84800 <__stack_size+0x1e83800>
2040a456:	a011                	j	2040a45a <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:197
		return 0;
2040a458:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:199
}
2040a45a:	853e                	mv	a0,a5
2040a45c:	4472                	lw	s0,28(sp)
2040a45e:	6105                	addi	sp,sp,32
2040a460:	8082                	ret

2040a462 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
2040a462:	1101                	addi	sp,sp,-32
2040a464:	ce06                	sw	ra,28(sp)
2040a466:	cc22                	sw	s0,24(sp)
2040a468:	1000                	addi	s0,sp,32
2040a46a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2040a46e:	fec42503          	lw	a0,-20(s0)
2040a472:	f8fff0ef          	jal	ra,2040a400 <__metal_driver_fixed_clock_rate>
2040a476:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
}
2040a478:	853e                	mv	a0,a5
2040a47a:	40f2                	lw	ra,28(sp)
2040a47c:	4462                	lw	s0,24(sp)
2040a47e:	6105                	addi	sp,sp,32
2040a480:	8082                	ret

2040a482 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
2040a482:	1101                	addi	sp,sp,-32
2040a484:	ce06                	sw	ra,28(sp)
2040a486:	cc22                	sw	s0,24(sp)
2040a488:	1000                	addi	s0,sp,32
2040a48a:	fea42623          	sw	a0,-20(s0)
2040a48e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2040a492:	fec42503          	lw	a0,-20(s0)
2040a496:	fcdff0ef          	jal	ra,2040a462 <__metal_driver_fixed_clock_get_rate_hz>
2040a49a:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
}
2040a49c:	853e                	mv	a0,a5
2040a49e:	40f2                	lw	ra,28(sp)
2040a4a0:	4462                	lw	s0,24(sp)
2040a4a2:	6105                	addi	sp,sp,32
2040a4a4:	8082                	ret

2040a4a6 <_exit>:
_exit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
2040a4a6:	1101                	addi	sp,sp,-32
2040a4a8:	ce06                	sw	ra,28(sp)
2040a4aa:	cc22                	sw	s0,24(sp)
2040a4ac:	1000                	addi	s0,sp,32
2040a4ae:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2040a4b2:	fec42503          	lw	a0,-20(s0)
2040a4b6:	ebdff0ef          	jal	ra,2040a372 <metal_shutdown>
