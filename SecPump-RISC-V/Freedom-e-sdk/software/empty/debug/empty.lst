
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/debug/empty.elf:     format de fichier elf32-littleriscv
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/debug/empty.elf
architecture: riscv:rv32, fanions 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
adresse de départ 0x20400000

En-tête de programme:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x000010d8 memsz 0x000010d8 flags rwx
    LOAD off    0x00003000 vaddr 0x80000000 paddr 0x20407d38 align 2**12
         filesz 0x00000ac0 memsz 0x00000ac0 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00003ac0 vaddr 0x80000ac0 paddr 0x80000ac0 align 2**12
         filesz 0x00000000 memsz 0x00000cb0 flags rw-
    LOAD off    0x00003ac0 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004100 vaddr 0x20401100 paddr 0x20401100 align 2**12
         filesz 0x00006c36 memsz 0x00006c36 flags r-x
    LOAD off    0x0000ad36 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections :
Idx Name              Taille    VMA       LMA       Off fich  Algn  Fanions
  0 .init             000002e6  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e8  204002e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002f4  204002f4  000012f4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000d68  20400370  20400370  00001370  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00006c36  20401100  20401100  00004100  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000ac0  80000000  20407d38  00003000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  80000ac0  80000ac0  00003ac0  2**3  ALLOC
  7 .stack            00000400  80000b70  80000b70  00003ac0  2**4  ALLOC
  8 .heap             00000800  80000f70  80000f70  00003ac0  2**3  ALLOC
  9 .debug_info       00026fef  00000000  00000000  0000ad36  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     000031d8  00000000  00000000  00031d25  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000b58  00000000  00000000  00034f00  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000978  00000000  00000000  00035a58  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000b67d  00000000  00000000  000363d0  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        00005226  00000000  00000000  00041a4d  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  00046c73  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  00046c9b  2**0  CONTENTS, READONLY
 17 .debug_frame      00002da0  00000000  00000000  00046cc8  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e8 l    d  .init_array	00000000 .init_array
204002f4 l    d  .ctors	00000000 .ctors
20400370 l    d  .rodata	00000000 .rodata
20401100 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000ac0 l    d  .bss	00000000 .bss
80000b70 l    d  .stack	00000000 .stack
80000f70 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000ca l     F .init	00000000 __metal_memory_scrub
20400138 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400248 l       .init	00000000 _skip_init
20400578 l       .rodata	00000000 argv
2040057c l       .rodata	00000000 envp
20400580 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20406330 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
2040634a l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20406364 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
2040637a l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2040638e l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
204063a0 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
204063b0 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
204063c6 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
204063d8 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20400790 l     O .rodata	00000880 pll_configs
204063ea l     F .text	0000004e get_pll_config_freq
2040664c l     F .text	000000ac find_closest_config
204066f8 l     F .text	000001a4 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
20401698 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20401bc6 l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
204037e0 l     F .text	00000026 __metal_driver_sifive_clint0_control_base
20403806 l     F .text	00000024 __metal_driver_sifive_clint0_num_interrupts
2040382a l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20403866 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
204039c6 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20403efc l     F .text	00000024 __metal_driver_cpu_hartid
20403f20 l     F .text	0000002a __metal_driver_cpu_timebase
20403f4a l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20403f74 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20405886 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
204058b0 l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
204058da l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20405902 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
2040592a l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2040594c l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20406a7a l     F .text	00000026 __metal_driver_sifive_gpio0_base
20406aa0 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20406aca l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
2040732e l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20407358 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20407386 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
204073ae l     F .text	0000002e __metal_driver_sifive_uart0_clock
204073dc l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20407406 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
2040742e l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
204077f8 l     F .text	000000d8 pre_rate_change_callback_func
204078d0 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 refill.c
204022d8 l     F .text	00000014 lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strtol.c
20402fde l     F .text	0000012c _strtol_l.isra.0
00000000 l    df *ABS*	00000000 strtoul.c
2040310c l     F .text	0000011c _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000a80 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000ad4 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
80000acc l     O .bss	00000004 init_done.1531
80000ad0 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20406148 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20406162 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20406178 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
2040618c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20406244 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
2040625e l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20406274 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20406288 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20406a02 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20407c00 l       .text	00000000 IRQ_0
20407c04 l       .text	00000000 IRQ_1
20407c08 l       .text	00000000 IRQ_2
20407c0c l       .text	00000000 IRQ_3
20407c10 l       .text	00000000 IRQ_4
20407c14 l       .text	00000000 IRQ_5
20407c18 l       .text	00000000 IRQ_6
20407c1c l       .text	00000000 IRQ_7
20407c20 l       .text	00000000 IRQ_8
20407c24 l       .text	00000000 IRQ_9
20407c28 l       .text	00000000 IRQ_10
20407c2c l       .text	00000000 IRQ_11
20407c30 l       .text	00000000 IRQ_12
20407c34 l       .text	00000000 IRQ_13
20407c38 l       .text	00000000 IRQ_14
20407c3c l       .text	00000000 IRQ_15
20407c40 l       .text	00000000 IRQ_LC0
20407c44 l       .text	00000000 IRQ_LC1
20407c48 l       .text	00000000 IRQ_LC2
20407c4c l       .text	00000000 IRQ_LC3
20407c50 l       .text	00000000 IRQ_LC4
20407c54 l       .text	00000000 IRQ_LC5
20407c58 l       .text	00000000 IRQ_LC6
20407c5c l       .text	00000000 IRQ_LC7
20407c60 l       .text	00000000 IRQ_LC8
20407c64 l       .text	00000000 IRQ_LC9
20407c68 l       .text	00000000 IRQ_LC10
20407c6c l       .text	00000000 IRQ_LC11
20407c70 l       .text	00000000 IRQ_LC12
20407c74 l       .text	00000000 IRQ_LC13
20407c78 l       .text	00000000 IRQ_LC14
20407c7c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20407c80 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002f4 l       .init_array	00000000 metal_constructors_end
204002f8 l       .init_array	00000000 __fini_array_end
204002f8 l       .init_array	00000000 metal_destructors_end
204002f8 l       .init_array	00000000 metal_destructors_start
204002f8 l       .init_array	00000000 __fini_array_start
204002e8 l       .init_array	00000000 __init_array_end
204002e8 l       .init_array	00000000 __preinit_array_end
204002e8 l       .init_array	00000000 __init_array_start
204002e8 l       .init_array	00000000 metal_constructors_start
204002e8 l       .init_array	00000000 __preinit_array_start
2040322a g     F .text	00000014 _malloc_usable_size_r
20402c70 g     F .text	000000e0 _scanf_chars
20401098 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
204027de g     F .text	0000002a _isatty_r
204047be  w    F .text	00000092 metal_lc4_interrupt_vector_handler
204011ca g     F .text	000000da _puts_r
20402808 g     F .text	0000002e _lseek_r
20407a66 g     F .text	00000026 metal_clock_get_rate_hz
20407758 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20403ba2 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
204075ac g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
2040472c  w    F .text	00000092 metal_lc3_interrupt_vector_handler
20404f7e g     F .text	00000064 __metal_valid_interrupt_id
20401186 g     F .text	00000044 printf
204002f0 g     O .init_array	00000004 _use_hfxosc_ptr
204053fc g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80001278 g       .data	00000000 __global_pointer$
204002f4 g     F .ctors	00000024 metal_tty_init
20407a12 g     F .text	00000054 _metal_clock_append_to_callbacks
204059a6 g     F .text	00000046 __metal_plic0_complete_interrupt
204051ce g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
204002ec g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
2040257c g     F .text	00000036 __sseek
2040174e g     F .text	0000006a __sinit
204012f6 g     F .text	000000c0 __swbuf_r
80000ac0 g       .data	00000000 __tls_base
2040170a g     F .text	00000044 __sfmoreglue
20402868 g     F .text	00000002 __malloc_unlock
20407b62 g     F .text	0000002a metal_cpu_get
80000a30 g     O .data	00000020 __metal_dt_serial_10013000
20406f08 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
2040058c g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000b64 g       .bss	00000000 metal_segment_bss_target_end
20403896 g     F .text	0000009a __metal_clint0_mtime_get
204057fa g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20407670 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20406cbe g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
204033f0 g     F .text	0000000c __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
2040757c g     F .text	00000030 __metal_driver_sifive_uart0_txready
2040750a g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
2040014a g     F .init	0000000e __metal_synchronize_harts
80000ac0 g       .data	00000000 metal_segment_bss_target_start
20403930 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
204027b2 g     F .text	0000002c _fstat_r
20407158 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000b60 g     O .bss	00000004 errno
204064dc g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
20402d50 g     F .text	00000262 _scanf_i
00000400 g       *ABS*	00000000 __stack_size
20407ad8 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20404a98  w    F .text	00000092 metal_lc9_interrupt_vector_handler
204000d6  w    F .init	00000000 __metal_before_start
20402282 g     F .text	00000056 _vfiscanf_r
2040370a  w    F .text	00000014 metal_init_run
2040072c g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
204006e8 g     O .rodata	00000044 __metal_driver_vtable_cpu
204037b2 g     F .text	0000002e metal_uart_set_baud_rate
20407900 g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20402850 g     F .text	00000016 memcpy
20405488 g     F .text	00000072 __metal_driver_cpu_mcycle_get
20401010 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000f70 g       .heap	00000000 metal_segment_heap_target_start
20401700 g     F .text	0000000a _cleanup_r
80000a90 g     O .data	00000008 __metal_dt_cpu_0
20404a06  w    F .text	00000092 metal_lc8_interrupt_vector_handler
2040689c g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
204060ac g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
204012a4 g     F .text	0000000e puts
20404ce0  w    F .text	00000092 metal_lc13_interrupt_vector_handler
20402282 g     F .text	00000056 _vfscanf_r
204012b2 g     F .text	00000044 iscanf
20404102 g     F .text	00000018 __metal_default_exception_handler
20403260 g     F .text	00000026 _fstat
20403ec8 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20405418 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20403f98 g     F .text	0000002c __metal_driver_cpu_get
20400684 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20403ff6 g     F .text	00000018 __metal_interrupt_global_disable
20406120 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20404974  w    F .text	00000092 metal_lc7_interrupt_vector_handler
20404b2a  w    F .text	00000092 metal_lc10_interrupt_vector_handler
20402444 g     F .text	0000002a _sbrk_r
20405ecc g     F .text	00000050 __metal_driver_riscv_plic0_disable
2040509e g     F .text	0000004e __metal_exception_register
2040361a g     F .text	00000078 metal_init
20402fb2 g     F .text	0000002c _read_r
2040561c g     F .text	00000016 __metal_driver_cpu_timer_controller_interrupt
20406da0 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20401674 g     F .text	00000024 fflush
204041ee g     F .text	00000064 __metal_default_sw_handler
20407b0a g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20407458 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20403286 g     F .text	00000020 _isatty
20406e66 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20407498 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
80000ab8 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000a7c g     O .data	00000004 _global_impure_ptr
20404252  w    F .text	0000008e metal_timer_interrupt_vector_handler
2040286a g     F .text	00000058 _realloc_r
20403460 g     F .text	0000006a __libc_init_array
20406de0 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20404bbc  w    F .text	00000092 metal_lc11_interrupt_vector_handler
2040630e g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
204053a4 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
204032fa g     F .text	0000007e _sbrk
20406d5a g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
204079d2 g     F .text	00000040 _metal_clock_call_all_callbacks
204002c4 g     F .init	00000002 _init
20404058 g     F .text	0000001a __metal_interrupt_timer_disable
20406f52 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
204056d2 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
2040105c g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
204074d2 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20406ea6 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20403428 g     F .text	00000038 __libc_fini_array
80000a68 g     O .data	0000000c __metal_dt_clock_4
204072e0 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20403692 g     F .text	00000078 metal_fini
2040565c g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20405866 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
204040aa g     F .text	0000002c __metal_interrupt_local_enable
20403e94 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20403732 g     F .text	00000026 metal_tty_putc
20405ba4 g     F .text	00000018 __metal_plic0_default_handler
20403378  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20405f1c g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
204042e0 g     F .text	00000016 __metal_default_beu_handler
204003b8 g     O .rodata	00000020 __sf_fake_stderr
2040408e g     F .text	0000001c __metal_interrupt_external_disable
20407478 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
2040546c g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
204050ec g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20401bf0 g     F .text	00000042 __sfputs_r
204057b4 g     F .text	00000046 __metal_driver_cpu_exception_register
2040400e g     F .text	00000018 __metal_interrupt_software_enable
20404608  w    F .text	00000092 metal_lc1_interrupt_vector_handler
20402836 g     F .text	0000001a memchr
20401a2c g     F .text	000000b0 _free_r
80000ac8 g     O .bss	00000004 _global_atexit
20405a6c g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20404e96 g     F .text	00000050 __metal_controller_interrupt_vector_mode
20403552 g     F .text	000000c8 __call_exitprocs
80000f70 g       .stack	00000000 _sp
204002e8 g     O .init_array	00000004 _metal_tty_init_ptr
20400158 g     F .init	00000000 _start
2040619e g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
204032a6 g     F .text	0000002a _lseek
20405794 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20405828 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20404072 g     F .text	0000001c __metal_interrupt_external_enable
204034ca g     F .text	00000088 __register_exitproc
204076a0 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20405c62 g     F .text	00000158 __metal_driver_riscv_plic0_init
20405e7c g     F .text	00000050 __metal_driver_riscv_plic0_enable
20406d2e g     F .text	0000002c __metal_driver_sifive_gpio0_output
204048e2  w    F .text	00000092 metal_lc6_interrupt_vector_handler
20403fc4 g     F .text	0000001a __metal_myhart_id
20407300 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20403228 g     F .text	00000002 _strtoul_r
20404160  w    F .text	0000008e metal_software_interrupt_vector_handler
204053d0 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20402788 g     F .text	0000002a _close_r
20407738 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20403a84 g     F .text	000000da __metal_driver_riscv_clint0_register
80000a88 g     O .data	00000008 __metal_dt_clint_2000000
204013b6 g     F .text	00000110 __swsetup_r
204017b8 g     F .text	0000009e __sfp
20407a8c g     F .text	0000004c metal_clock_set_rate_hz
204024fc g     F .text	00000032 __sread
20406c7e g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002c6  w    F .init	00000000 secondary_main
20404132  w    F .text	0000002e metal_interrupt_vector_handler
20402866 g     F .text	00000002 __malloc_lock
20407544 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401610 g     F .text	00000064 _fflush_r
20405a32 g     F .text	0000003a __metal_plic0_get_threshold
20406a14 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
204003d8 g     O .rodata	00000020 __sf_fake_stdin
20404fe2 g     F .text	000000bc __metal_local_interrupt_enable
20403d5e g     F .text	00000136 __metal_driver_riscv_clint0_command_request
20401a1c g     F .text	00000010 memset
20404850  w    F .text	00000092 metal_lc5_interrupt_vector_handler
20401100 g     F .text	00000086 main
80000ac0 g       .data	00000000 metal_segment_data_target_end
20407626 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
80000aa0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20405670 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20405734 g     F .text	00000060 __metal_driver_cpu_get_msip
20407ba6 g     F .text	0000000e metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20405846 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
2040596a g     F .text	0000003c __metal_plic0_claim_interrupt
204075f6 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
204025b2 g     F .text	00000006 __sclose
20404c4e  w    F .text	00000092 metal_lc12_interrupt_vector_handler
20400092 g     F .init	00000000 metal_mem_scrub
2040310a g     F .text	00000002 _strtol_r
20401adc g     F .text	000000ea _malloc_r
20403b86 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
204025b8 g     F .text	00000088 __submore
20401856 g     F .text	00000062 _fwalk
80000a9c g     O .data	00000004 __metal_dt_prci_10008000
204054fa g     F .text	00000046 __metal_driver_cpu_timebase_get
20406010 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20407b8c g     F .text	0000001a metal_cpu_get_current_hartid
2040629a g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20407c00 g       .text	00000000 __metal_vector_table
204010d8 g       *ABS*	00000000 metal_segment_itim_source_start
80000a84  w    O .data	00000004 __metal_cpu_table
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002c4 g     F .init	00000002 _fini
20401186 g     F .text	00000044 iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20401ed2 g     F .text	000003b0 __svfiscanf_r
20405ace g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20400344 g     F .ctors	0000002a use_hfxosc
20403fde g     F .text	00000018 __metal_interrupt_global_enable
204033e6 g     F .text	0000000a atexit
2040275a g     F .text	0000002e _write_r
204012b2 g     F .text	00000044 scanf
2040403e g     F .text	0000001a __metal_interrupt_timer_enable
204076e2 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20403cac g     F .text	000000b2 __metal_driver_riscv_clint0_disable
204028c2 g     F .text	0000010c _printf_common
80000a78 g     O .data	00000004 _impure_ptr
204055a6 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
204014c6 g     F .text	0000014a __sflush_r
20405f4c g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20406438 g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
204022ec g     F .text	00000158 __srefill_r
20406a42 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20407ce2 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20403bfa g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20407d38 g       *ABS*	00000000 metal_segment_data_source_start
2040013c g       .init	00000000 early_trap_vector
80001770 g       .heap	00000000 metal_segment_heap_target_end
20404ee6 g     F .text	00000098 __metal_controller_interrupt_vector
80000a5c g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20401924 g     F .text	0000005a __swhatbuf_r
20406e20 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
204042f6 g     F .text	00000066 __metal_default_timer_handler
20403378 g     F .text	0000006e _write
20405bbc g     F .text	000000a6 __metal_plic0_handler
2040469a  w    F .text	00000092 metal_lc2_interrupt_vector_handler
20404e04  w    F .text	00000092 metal_lc15_interrupt_vector_handler
20407b3c g     F .text	00000026 metal_cpu_interrupt_controller
2040252e g     F .text	0000004e __swrite
204033fc g     F .text	0000002c exit
20401c32 g     F .text	000002a0 _vfiprintf_r
204018b8 g     F .text	0000006c _fwalk_reent
20407d00 g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
204010d8 g       *ABS*	00000000 metal_segment_lim_source_start
204003f8 g     O .rodata	00000020 __sf_fake_stdout
2040246e g     F .text	0000008e __sccl
80000a98 g     O .data	00000004 __metal_dt_gpio_10012000
2040411a g     F .text	00000018 __metal_default_interrupt_handler
2040042c g     O .rodata	00000101 _ctype_
20403784 g     F .text	0000002e metal_uart_putc
204032d0 g     F .text	0000002a _read
2040371e  w    F .text	00000014 metal_fini_run
20406d04 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20404380 g     F .text	0000017c __metal_exception_handler
20404576  w    F .text	00000092 metal_lc0_interrupt_vector_handler
20407d22 g     F .text	00000014 _exit
20405540 g     F .text	00000066 __metal_driver_cpu_mtime_get
2040197e g     F .text	0000009e __smakebuf_r
20403b5e g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
204029ce g     F .text	000002a2 _printf_i
80000ac4 g     O .bss	00000004 __malloc_sbrk_start
20404d72  w    F .text	00000092 metal_lc14_interrupt_vector_handler
80000aa8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
204039fc g     F .text	00000088 __metal_driver_riscv_clint0_init
80000ac0 g     O .bss	00000004 __malloc_free_list
20400318 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20401c32 g     F .text	000002a0 _vfprintf_r
20401ed2 g     F .text	000003b0 __svfscanf_r
20405632 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20405b02 g     F .text	000000a2 __metal_plic0_enable
20402640 g     F .text	0000011a _ungetc_r
20400090  w      .init	00000000 __register_frame_info
20406222 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20405646 g     F .text	00000016 __metal_driver_cpu_sw_controller_interrupt
204040d6 g     F .text	0000002c __metal_interrupt_local_disable
20404026 g     F .text	00000018 __metal_interrupt_software_disable
20403758 g     F .text	0000002c metal_uart_init
80000a50 g     O .data	0000000c __metal_dt_clock_3
204059ec g     F .text	00000046 __metal_plic0_set_threshold
20405f74 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
2040323e g     F .text	00000022 _close
80000ab0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20405dba g     F .text	000000c2 __metal_driver_riscv_plic0_register



Déassemblage de la section .init :

20400000 <_enter>:
_enter():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	27818193          	addi	gp,gp,632 # 80001278 <__global_pointer$>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11c28293          	addi	t0,t0,284 # 2040013c <early_trap_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	dfc00117          	auipc	sp,0xdfc00
20400030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400034:	00011463          	bnez	sp,2040003c <_enter+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:56
    la sp, _sp
20400038:	cf818113          	addi	sp,gp,-776 # 80000f70 <_sp>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2040003c:	f1402573          	csrr	a0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:60
    li t0, 0
20400040:	4281                	li	t0,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:61
    la t1, __stack_size
20400042:	40000313          	li	t1,1024
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400046:	ff017113          	andi	sp,sp,-16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2040004a:	00a28563          	beq	t0,a0,20400054 <_enter+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004e:	911a                	add	sp,sp,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20400050:	0285                	addi	t0,t0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:67
    j 1b
20400052:	bfd5                	j	20400046 <_enter+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400054:	00000097          	auipc	ra,0x0
20400058:	08208093          	addi	ra,ra,130 # 204000d6 <__metal_before_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:77
    beqz ra, 1f
2040005c:	00008363          	beqz	ra,20400062 <_enter+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:78
    jalr ra
20400060:	9082                	jalr	ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400062:	f1402573          	csrr	a0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:85
    li a1, 0
20400066:	4581                	li	a1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:86
    li a2, 0
20400068:	4601                	li	a2,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:87
    call _start
2040006a:	20fd                	jal	20400158 <_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2040006c:	dfc00097          	auipc	ra,0xdfc00
20400070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:93
    beqz ra, 1f
20400074:	00008363          	beqz	ra,2040007a <_enter+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:94
    jalr ra
20400078:	9082                	jalr	ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2040007a:	00000297          	auipc	t0,0x0
2040007e:	00c28293          	addi	t0,t0,12 # 20400086 <_enter+0x86>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20400082:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20400086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:103
     j 1b
2040008a:	bff5                	j	20400086 <_enter+0x86>
2040008c:	0000                	unimp
	...

20400090 <__register_frame_info>:
__register_frame_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400090:	8082                	ret

20400092 <metal_mem_scrub>:
metal_mem_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
20400092:	46a1                	li	a3,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20400094:	3006b373          	csrrc	t1,mstatus,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400098:	00400293          	li	t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
2040009c:	0055c563          	blt	a1,t0,204000a6 <metal_mem_scrub+0x14>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
204000a0:	00357613          	andi	a2,a0,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
204000a4:	ca11                	beqz	a2,204000b8 <metal_mem_scrub+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
204000a6:	00050023          	sb	zero,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000aa:	0505                	addi	a0,a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000ac:	15fd                	addi	a1,a1,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000ae:	feb047e3          	bgtz	a1,2040009c <metal_mem_scrub+0xa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000b2:	30031073          	csrw	mstatus,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:39
    ret
204000b6:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000b8:	00052023          	sw	zero,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000bc:	0511                	addi	a0,a0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000be:	15f1                	addi	a1,a1,-4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000c0:	fcb04ee3          	bgtz	a1,2040009c <metal_mem_scrub+0xa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000c4:	30031073          	csrw	mstatus,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:46
    ret
204000c8:	8082                	ret

204000ca <__metal_memory_scrub>:
__metal_memory_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000ca:	00032023          	sw	zero,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000ce:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000d0:	fe734de3          	blt	t1,t2,204000ca <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000d4:	8082                	ret

204000d6 <__metal_before_start>:
__metal_before_start():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000d6:	8406                	mv	s0,ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000d8:	dfc00297          	auipc	t0,0xdfc00
204000dc:	f2828293          	addi	t0,t0,-216 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000e0:	04028c63          	beqz	t0,20400138 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000e4:	dfc00297          	auipc	t0,0xdfc00
204000e8:	f1c28293          	addi	t0,t0,-228 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000ec:	f14027f3          	csrr	a5,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000f0:	46a1                	li	a3,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000f2:	3006b073          	csrc	mstatus,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000f6:	830a                	mv	t1,sp
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000f8:	dfc00397          	auipc	t2,0xdfc00
204000fc:	30838393          	addi	t2,t2,776 # 400 <__stack_size>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20400100:	938a                	add	t2,t2,sp
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
20400102:	00730363          	beq	t1,t2,20400108 <__metal_before_start+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20400106:	37d1                	jal	204000ca <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20400108:	02579863          	bne	a5,t0,20400138 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
2040010c:	5fc00317          	auipc	t1,0x5fc00
20400110:	ef430313          	addi	t1,t1,-268 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
20400114:	5fc01397          	auipc	t2,0x5fc01
20400118:	9ac38393          	addi	t2,t2,-1620 # 80000ac0 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
2040011c:	00730363          	beq	t1,t2,20400122 <__metal_before_start+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400120:	376d                	jal	204000ca <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20400122:	5fc00317          	auipc	t1,0x5fc00
20400126:	ede30313          	addi	t1,t1,-290 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
2040012a:	5fc00397          	auipc	t2,0x5fc00
2040012e:	ed638393          	addi	t2,t2,-298 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20400132:	00730363          	beq	t1,t2,20400138 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20400136:	3f51                	jal	204000ca <__metal_memory_scrub>

20400138 <skip_scrub>:
skip_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20400138:	80a2                	mv	ra,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:130
    ret
2040013a:	8082                	ret

2040013c <early_trap_vector>:
early_trap_vector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
2040013c:	342022f3          	csrr	t0,mcause
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400140:	34102373          	csrr	t1,mepc
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:66
    csrr t2, mtval
20400144:	343023f3          	csrr	t2,mtval
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:67
    j early_trap_vector
20400148:	bfd5                	j	2040013c <early_trap_vector>

2040014a <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
2040014a:	1141                	addi	sp,sp,-16
2040014c:	c622                	sw	s0,12(sp)
2040014e:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400150:	0001                	nop
20400152:	4432                	lw	s0,12(sp)
20400154:	0141                	addi	sp,sp,16
20400156:	8082                	ret

20400158 <_start>:
_start():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400158:	8406                	mv	s0,ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
2040015a:	5fc01197          	auipc	gp,0x5fc01
2040015e:	11e18193          	addi	gp,gp,286 # 80001278 <__global_pointer$>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20400162:	00000293          	li	t0,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20400166:	0e551163          	bne	a0,t0,20400248 <_skip_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2040016a:	00008297          	auipc	t0,0x8
2040016e:	bce28293          	addi	t0,t0,-1074 # 20407d38 <metal_segment_data_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
20400172:	5fc00317          	auipc	t1,0x5fc00
20400176:	e8e30313          	addi	t1,t1,-370 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
2040017a:	5fc01397          	auipc	t2,0x5fc01
2040017e:	94638393          	addi	t2,t2,-1722 # 80000ac0 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
20400182:	00628c63          	beq	t0,t1,2040019a <_start+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20400186:	00735a63          	bge	t1,t2,2040019a <_start+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2040018a:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2040018e:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400190:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20400194:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20400196:	fe734ae3          	blt	t1,t2,2040018a <_start+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
2040019a:	00001297          	auipc	t0,0x1
2040019e:	f3e28293          	addi	t0,t0,-194 # 204010d8 <metal_segment_itim_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
204001a2:	5fc00317          	auipc	t1,0x5fc00
204001a6:	e5e30313          	addi	t1,t1,-418 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001aa:	5fc00397          	auipc	t2,0x5fc00
204001ae:	e5638393          	addi	t2,t2,-426 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001b2:	00628c63          	beq	t0,t1,204001ca <_start+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001b6:	00735a63          	bge	t1,t2,204001ca <_start+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001ba:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001be:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001c0:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001c4:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001c6:	fe734ae3          	blt	t1,t2,204001ba <_start+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001ca:	0000100f          	fence.i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001ce:	00001297          	auipc	t0,0x1
204001d2:	f0a28293          	addi	t0,t0,-246 # 204010d8 <metal_segment_itim_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001d6:	5fc00317          	auipc	t1,0x5fc00
204001da:	e2a30313          	addi	t1,t1,-470 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001de:	5fc00397          	auipc	t2,0x5fc00
204001e2:	e2238393          	addi	t2,t2,-478 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001e6:	00628c63          	beq	t0,t1,204001fe <_start+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001ea:	00735a63          	bge	t1,t2,204001fe <_start+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001ee:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001f2:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001f4:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f8:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001fa:	fe734ae3          	blt	t1,t2,204001ee <_start+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001fe:	0000100f          	fence.i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20400202:	5fc01317          	auipc	t1,0x5fc01
20400206:	8be30313          	addi	t1,t1,-1858 # 80000ac0 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
2040020a:	8ec18393          	addi	t2,gp,-1812 # 80000b64 <metal_segment_bss_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2040020e:	00735763          	bge	t1,t2,2040021c <_start+0xc4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20400212:	00032023          	sw	zero,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20400216:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400218:	fe734de3          	blt	t1,t2,20400212 <_start+0xba>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
2040021c:	5fc01217          	auipc	tp,0x5fc01
20400220:	8a420213          	addi	tp,tp,-1884 # 80000ac0 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400224:	c211                	beqz	a2,20400228 <_start+0xd0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  jalr a2
20400226:	9602                	jalr	a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400228:	00003517          	auipc	a0,0x3
2040022c:	20050513          	addi	a0,a0,512 # 20403428 <__libc_fini_array>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:172
  call atexit
20400230:	1b6030ef          	jal	ra,204033e6 <atexit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20400234:	22c030ef          	jal	ra,20403460 <__libc_init_array>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400238:	00003517          	auipc	a0,0x3
2040023c:	4e650513          	addi	a0,a0,1254 # 2040371e <metal_fini_run>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  call atexit
20400240:	1a6030ef          	jal	ra,204033e6 <atexit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20400244:	4c6030ef          	jal	ra,2040370a <metal_init_run>

20400248 <_skip_init>:
_skip_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400248:	3709                	jal	2040014a <__metal_synchronize_harts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
2040024a:	56fd                	li	a3,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
2040024c:	3046b073          	csrc	mie,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20400250:	3446b073          	csrc	mip,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20400254:	301027f3          	csrr	a5,misa
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400258:	00042737          	lui	a4,0x42
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
2040025c:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2040025e:	c709                	beqz	a4,20400268 <_skip_init+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20400260:	3036b073          	csrc	mideleg,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20400264:	3026b073          	csrc	medeleg,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400268:	00040737          	lui	a4,0x40
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
2040026c:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2040026e:	c319                	beqz	a4,20400274 <_skip_init+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20400270:	1806b073          	csrc	satp,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20400274:	00010737          	lui	a4,0x10
20400278:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
2040027c:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2040027e:	cb89                	beqz	a5,20400290 <_skip_init+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20400280:	300027f3          	csrr	a5,mstatus
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20400284:	6709                	lui	a4,0x2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20400286:	8fd9                	or	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20400288:	30079073          	csrw	mstatus,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
2040028c:	00305073          	csrwi	fcsr,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20400290:	301027f3          	csrr	a5,misa
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
20400294:	00200737          	lui	a4,0x200
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20400298:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
2040029a:	c799                	beqz	a5,204002a8 <_skip_init+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
2040029c:	300027f3          	csrr	a5,mstatus
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
204002a0:	2007e793          	ori	a5,a5,512
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
204002a4:	30079073          	csrw	mstatus,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
204002a8:	4505                	li	a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002aa:	00000597          	auipc	a1,0x0
204002ae:	2ce58593          	addi	a1,a1,718 # 20400578 <argv>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002b2:	00000617          	auipc	a2,0x0
204002b6:	2ca60613          	addi	a2,a2,714 # 2040057c <envp>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002ba:	2031                	jal	204002c6 <secondary_main>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002bc:	140030ef          	jal	ra,204033fc <exit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002c0:	80a2                	mv	ra,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:248
  ret
204002c2:	8082                	ret

204002c4 <_fini>:
_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002c4:	8082                	ret

204002c6 <secondary_main>:
secondary_main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002c6:	1141                	addi	sp,sp,-16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002c8:	c206                	sw	ra,4(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002ca:	f14022f3          	csrr	t0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002ce:	00000313          	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002d2:	00628563          	beq	t0,t1,204002dc <secondary_main+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002d6:	10500073          	wfi
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:282
  j 1b
204002da:	bff5                	j	204002d6 <secondary_main+0x10>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:284
2:
  call main
204002dc:	625000ef          	jal	ra,20401100 <main>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002e0:	4092                	lw	ra,4(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002e2:	0141                	addi	sp,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:291
  ret
204002e4:	8082                	ret

Déassemblage de la section .ctors :

204002f4 <metal_tty_init>:
metal_tty_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002f4:	1141                	addi	sp,sp,-16
204002f6:	c606                	sw	ra,12(sp)
204002f8:	c422                	sw	s0,8(sp)
204002fa:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002fc:	67f1                	lui	a5,0x1c
204002fe:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20400302:	800017b7          	lui	a5,0x80001
20400306:	a3078513          	addi	a0,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
2040030a:	44e030ef          	jal	ra,20403758 <metal_uart_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:30
}
2040030e:	0001                	nop
20400310:	40b2                	lw	ra,12(sp)
20400312:	4422                	lw	s0,8(sp)
20400314:	0141                	addi	sp,sp,16
20400316:	8082                	ret

20400318 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400318:	1101                	addi	sp,sp,-32
2040031a:	ce06                	sw	ra,28(sp)
2040031c:	cc22                	sw	s0,24(sp)
2040031e:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400320:	090060ef          	jal	ra,204063b0 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400324:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400328:	fec42783          	lw	a5,-20(s0)
2040032c:	c799                	beqz	a5,2040033a <metal_sifive_fe310_g000_pll_init+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2040032e:	800017b7          	lui	a5,0x80001
20400332:	a6878513          	addi	a0,a5,-1432 # 80000a68 <metal_segment_heap_target_end+0xfffff2f8>
20400336:	102060ef          	jal	ra,20406438 <__metal_driver_sifive_fe310_g000_pll_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
2040033a:	0001                	nop
2040033c:	40f2                	lw	ra,28(sp)
2040033e:	4462                	lw	s0,24(sp)
20400340:	6105                	addi	sp,sp,32
20400342:	8082                	ret

20400344 <use_hfxosc>:
use_hfxosc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20400344:	1101                	addi	sp,sp,-32
20400346:	ce06                	sw	ra,28(sp)
20400348:	cc22                	sw	s0,24(sp)
2040034a:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2040034c:	064060ef          	jal	ra,204063b0 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400350:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20400354:	fec42583          	lw	a1,-20(s0)
20400358:	800017b7          	lui	a5,0x80001
2040035c:	a6878513          	addi	a0,a5,-1432 # 80000a68 <metal_segment_heap_target_end+0xfffff2f8>
20400360:	72c070ef          	jal	ra,20407a8c <metal_clock_set_rate_hz>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20400364:	0001                	nop
20400366:	40f2                	lw	ra,28(sp)
20400368:	4462                	lw	s0,24(sp)
2040036a:	6105                	addi	sp,sp,32
2040036c:	8082                	ret

Déassemblage de la section .text :

20401100 <main>:
main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:17
    return -1;
  }
  return 0;
}

int main(int argc, char **argv) {
20401100:	711d                	addi	sp,sp,-96
20401102:	ce86                	sw	ra,92(sp)
20401104:	cca2                	sw	s0,88(sp)
20401106:	1080                	addi	s0,sp,96
20401108:	faa42623          	sw	a0,-84(s0)
2040110c:	fab42423          	sw	a1,-88(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:18
  uint32_t i = 0;
20401110:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:23
  uint32_t *reg;

  char buffer[50];

  printf("uart-test start\n");
20401114:	204007b7          	lui	a5,0x20400
20401118:	37078513          	addi	a0,a5,880 # 20400370 <use_hfxosc+0x2c>
2040111c:	2261                	jal	204012a4 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:25

  reg = (uint32_t *)(METAL_SIFIVE_UART0_0_BASE_ADDRESS +
2040111e:	100137b7          	lui	a5,0x10013
20401122:	07a1                	addi	a5,a5,8
20401124:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:27
                     METAL_SIFIVE_UART0_TXCTRL);
  printf("reg txctrl: %x, %p\n", *reg, reg);
20401128:	fe842783          	lw	a5,-24(s0)
2040112c:	439c                	lw	a5,0(a5)
2040112e:	fe842603          	lw	a2,-24(s0)
20401132:	85be                	mv	a1,a5
20401134:	204007b7          	lui	a5,0x20400
20401138:	38078513          	addi	a0,a5,896 # 20400380 <use_hfxosc+0x3c>
2040113c:	20a9                	jal	20401186 <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:28
  reg = (uint32_t *)(METAL_SIFIVE_UART0_0_BASE_ADDRESS +
2040113e:	100137b7          	lui	a5,0x10013
20401142:	07b1                	addi	a5,a5,12
20401144:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:30
                     METAL_SIFIVE_UART0_RXCTRL);
  printf("reg rxctrl: %x, %p\n", *reg, reg);
20401148:	fe842783          	lw	a5,-24(s0)
2040114c:	439c                	lw	a5,0(a5)
2040114e:	fe842603          	lw	a2,-24(s0)
20401152:	85be                	mv	a1,a5
20401154:	204007b7          	lui	a5,0x20400
20401158:	39478513          	addi	a0,a5,916 # 20400394 <use_hfxosc+0x50>
2040115c:	202d                	jal	20401186 <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:31
  int ch=3;
2040115e:	478d                	li	a5,3
20401160:	faf42823          	sw	a5,-80(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:36 (discriminator 1)


  while (1) {

		printf("Hello:%d", ch);
20401164:	fb042783          	lw	a5,-80(s0)
20401168:	85be                	mv	a1,a5
2040116a:	204007b7          	lui	a5,0x20400
2040116e:	3a878513          	addi	a0,a5,936 # 204003a8 <use_hfxosc+0x64>
20401172:	2811                	jal	20401186 <iprintf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:37 (discriminator 1)
		scanf("%d", &ch);
20401174:	fb040793          	addi	a5,s0,-80
20401178:	85be                	mv	a1,a5
2040117a:	204007b7          	lui	a5,0x20400
2040117e:	3b478513          	addi	a0,a5,948 # 204003b4 <use_hfxosc+0x70>
20401182:	2a05                	jal	204012b2 <iscanf>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/empty/main.c:36 (discriminator 1)
		printf("Hello:%d", ch);
20401184:	b7c5                	j	20401164 <main+0x64>

20401186 <iprintf>:
printf():
20401186:	7139                	addi	sp,sp,-64
20401188:	da3e                	sw	a5,52(sp)
2040118a:	d22e                	sw	a1,36(sp)
2040118c:	d432                	sw	a2,40(sp)
2040118e:	d636                	sw	a3,44(sp)
20401190:	d83a                	sw	a4,48(sp)
20401192:	dc42                	sw	a6,56(sp)
20401194:	de46                	sw	a7,60(sp)
20401196:	5fc00797          	auipc	a5,0x5fc00
2040119a:	8e278793          	addi	a5,a5,-1822 # 80000a78 <_impure_ptr>
2040119e:	cc22                	sw	s0,24(sp)
204011a0:	4380                	lw	s0,0(a5)
204011a2:	ca26                	sw	s1,20(sp)
204011a4:	ce06                	sw	ra,28(sp)
204011a6:	84aa                	mv	s1,a0
204011a8:	c409                	beqz	s0,204011b2 <iprintf+0x2c>
204011aa:	4c1c                	lw	a5,24(s0)
204011ac:	e399                	bnez	a5,204011b2 <iprintf+0x2c>
204011ae:	8522                	mv	a0,s0
204011b0:	2b79                	jal	2040174e <__sinit>
204011b2:	440c                	lw	a1,8(s0)
204011b4:	1054                	addi	a3,sp,36
204011b6:	8626                	mv	a2,s1
204011b8:	8522                	mv	a0,s0
204011ba:	c636                	sw	a3,12(sp)
204011bc:	277000ef          	jal	ra,20401c32 <_vfiprintf_r>
204011c0:	40f2                	lw	ra,28(sp)
204011c2:	4462                	lw	s0,24(sp)
204011c4:	44d2                	lw	s1,20(sp)
204011c6:	6121                	addi	sp,sp,64
204011c8:	8082                	ret

204011ca <_puts_r>:
_puts_r():
204011ca:	1101                	addi	sp,sp,-32
204011cc:	ca26                	sw	s1,20(sp)
204011ce:	c84a                	sw	s2,16(sp)
204011d0:	ce06                	sw	ra,28(sp)
204011d2:	cc22                	sw	s0,24(sp)
204011d4:	c64e                	sw	s3,12(sp)
204011d6:	c452                	sw	s4,8(sp)
204011d8:	84aa                	mv	s1,a0
204011da:	892e                	mv	s2,a1
204011dc:	c501                	beqz	a0,204011e4 <_puts_r+0x1a>
204011de:	4d1c                	lw	a5,24(a0)
204011e0:	e391                	bnez	a5,204011e4 <_puts_r+0x1a>
204011e2:	23b5                	jal	2040174e <__sinit>
204011e4:	4c9c                	lw	a5,24(s1)
204011e6:	4480                	lw	s0,8(s1)
204011e8:	e399                	bnez	a5,204011ee <_puts_r+0x24>
204011ea:	8526                	mv	a0,s1
204011ec:	238d                	jal	2040174e <__sinit>
204011ee:	fffff797          	auipc	a5,0xfffff
204011f2:	1ea78793          	addi	a5,a5,490 # 204003d8 <__sf_fake_stdin>
204011f6:	02f41c63          	bne	s0,a5,2040122e <_puts_r+0x64>
204011fa:	40c0                	lw	s0,4(s1)
204011fc:	00c45783          	lhu	a5,12(s0)
20401200:	8ba1                	andi	a5,a5,8
20401202:	c7b1                	beqz	a5,2040124e <_puts_r+0x84>
20401204:	481c                	lw	a5,16(s0)
20401206:	c7a1                	beqz	a5,2040124e <_puts_r+0x84>
20401208:	59fd                	li	s3,-1
2040120a:	4a29                	li	s4,10
2040120c:	441c                	lw	a5,8(s0)
2040120e:	00094583          	lbu	a1,0(s2)
20401212:	17fd                	addi	a5,a5,-1
20401214:	e9b1                	bnez	a1,20401268 <_puts_r+0x9e>
20401216:	c41c                	sw	a5,8(s0)
20401218:	0607de63          	bgez	a5,20401294 <_puts_r+0xca>
2040121c:	8622                	mv	a2,s0
2040121e:	45a9                	li	a1,10
20401220:	8526                	mv	a0,s1
20401222:	28d1                	jal	204012f6 <__swbuf_r>
20401224:	57fd                	li	a5,-1
20401226:	02f50863          	beq	a0,a5,20401256 <_puts_r+0x8c>
2040122a:	4529                	li	a0,10
2040122c:	a035                	j	20401258 <_puts_r+0x8e>
2040122e:	fffff797          	auipc	a5,0xfffff
20401232:	1ca78793          	addi	a5,a5,458 # 204003f8 <__sf_fake_stdout>
20401236:	00f41463          	bne	s0,a5,2040123e <_puts_r+0x74>
2040123a:	4480                	lw	s0,8(s1)
2040123c:	b7c1                	j	204011fc <_puts_r+0x32>
2040123e:	fffff797          	auipc	a5,0xfffff
20401242:	17a78793          	addi	a5,a5,378 # 204003b8 <__sf_fake_stderr>
20401246:	faf41be3          	bne	s0,a5,204011fc <_puts_r+0x32>
2040124a:	44c0                	lw	s0,12(s1)
2040124c:	bf45                	j	204011fc <_puts_r+0x32>
2040124e:	85a2                	mv	a1,s0
20401250:	8526                	mv	a0,s1
20401252:	2295                	jal	204013b6 <__swsetup_r>
20401254:	d955                	beqz	a0,20401208 <_puts_r+0x3e>
20401256:	557d                	li	a0,-1
20401258:	40f2                	lw	ra,28(sp)
2040125a:	4462                	lw	s0,24(sp)
2040125c:	44d2                	lw	s1,20(sp)
2040125e:	4942                	lw	s2,16(sp)
20401260:	49b2                	lw	s3,12(sp)
20401262:	4a22                	lw	s4,8(sp)
20401264:	6105                	addi	sp,sp,32
20401266:	8082                	ret
20401268:	c41c                	sw	a5,8(s0)
2040126a:	0905                	addi	s2,s2,1
2040126c:	0007d763          	bgez	a5,2040127a <_puts_r+0xb0>
20401270:	4c18                	lw	a4,24(s0)
20401272:	00e7cb63          	blt	a5,a4,20401288 <_puts_r+0xbe>
20401276:	01458963          	beq	a1,s4,20401288 <_puts_r+0xbe>
2040127a:	401c                	lw	a5,0(s0)
2040127c:	00178713          	addi	a4,a5,1
20401280:	c018                	sw	a4,0(s0)
20401282:	00b78023          	sb	a1,0(a5)
20401286:	b759                	j	2040120c <_puts_r+0x42>
20401288:	8622                	mv	a2,s0
2040128a:	8526                	mv	a0,s1
2040128c:	20ad                	jal	204012f6 <__swbuf_r>
2040128e:	f7351fe3          	bne	a0,s3,2040120c <_puts_r+0x42>
20401292:	b7d1                	j	20401256 <_puts_r+0x8c>
20401294:	401c                	lw	a5,0(s0)
20401296:	00178713          	addi	a4,a5,1
2040129a:	c018                	sw	a4,0(s0)
2040129c:	4729                	li	a4,10
2040129e:	00e78023          	sb	a4,0(a5)
204012a2:	b761                	j	2040122a <_puts_r+0x60>

204012a4 <puts>:
puts():
204012a4:	5fbff797          	auipc	a5,0x5fbff
204012a8:	7d478793          	addi	a5,a5,2004 # 80000a78 <_impure_ptr>
204012ac:	85aa                	mv	a1,a0
204012ae:	4388                	lw	a0,0(a5)
204012b0:	bf29                	j	204011ca <_puts_r>

204012b2 <iscanf>:
iscanf():
204012b2:	7139                	addi	sp,sp,-64
204012b4:	da3e                	sw	a5,52(sp)
204012b6:	d22e                	sw	a1,36(sp)
204012b8:	d432                	sw	a2,40(sp)
204012ba:	d636                	sw	a3,44(sp)
204012bc:	d83a                	sw	a4,48(sp)
204012be:	dc42                	sw	a6,56(sp)
204012c0:	de46                	sw	a7,60(sp)
204012c2:	5fbff797          	auipc	a5,0x5fbff
204012c6:	7b678793          	addi	a5,a5,1974 # 80000a78 <_impure_ptr>
204012ca:	cc22                	sw	s0,24(sp)
204012cc:	4380                	lw	s0,0(a5)
204012ce:	ca26                	sw	s1,20(sp)
204012d0:	ce06                	sw	ra,28(sp)
204012d2:	84aa                	mv	s1,a0
204012d4:	c409                	beqz	s0,204012de <iscanf+0x2c>
204012d6:	4c1c                	lw	a5,24(s0)
204012d8:	e399                	bnez	a5,204012de <iscanf+0x2c>
204012da:	8522                	mv	a0,s0
204012dc:	298d                	jal	2040174e <__sinit>
204012de:	404c                	lw	a1,4(s0)
204012e0:	1054                	addi	a3,sp,36
204012e2:	8626                	mv	a2,s1
204012e4:	8522                	mv	a0,s0
204012e6:	c636                	sw	a3,12(sp)
204012e8:	79b000ef          	jal	ra,20402282 <_vfiscanf_r>
204012ec:	40f2                	lw	ra,28(sp)
204012ee:	4462                	lw	s0,24(sp)
204012f0:	44d2                	lw	s1,20(sp)
204012f2:	6121                	addi	sp,sp,64
204012f4:	8082                	ret

204012f6 <__swbuf_r>:
__swbuf_r():
204012f6:	1101                	addi	sp,sp,-32
204012f8:	cc22                	sw	s0,24(sp)
204012fa:	ca26                	sw	s1,20(sp)
204012fc:	c84a                	sw	s2,16(sp)
204012fe:	ce06                	sw	ra,28(sp)
20401300:	c64e                	sw	s3,12(sp)
20401302:	84aa                	mv	s1,a0
20401304:	892e                	mv	s2,a1
20401306:	8432                	mv	s0,a2
20401308:	c501                	beqz	a0,20401310 <__swbuf_r+0x1a>
2040130a:	4d1c                	lw	a5,24(a0)
2040130c:	e391                	bnez	a5,20401310 <__swbuf_r+0x1a>
2040130e:	2181                	jal	2040174e <__sinit>
20401310:	fffff797          	auipc	a5,0xfffff
20401314:	0c878793          	addi	a5,a5,200 # 204003d8 <__sf_fake_stdin>
20401318:	06f41963          	bne	s0,a5,2040138a <__swbuf_r+0x94>
2040131c:	40c0                	lw	s0,4(s1)
2040131e:	4c1c                	lw	a5,24(s0)
20401320:	c41c                	sw	a5,8(s0)
20401322:	00c45783          	lhu	a5,12(s0)
20401326:	8ba1                	andi	a5,a5,8
20401328:	c3c9                	beqz	a5,204013aa <__swbuf_r+0xb4>
2040132a:	481c                	lw	a5,16(s0)
2040132c:	cfbd                	beqz	a5,204013aa <__swbuf_r+0xb4>
2040132e:	481c                	lw	a5,16(s0)
20401330:	4008                	lw	a0,0(s0)
20401332:	0ff97993          	andi	s3,s2,255
20401336:	0ff97913          	andi	s2,s2,255
2040133a:	8d1d                	sub	a0,a0,a5
2040133c:	485c                	lw	a5,20(s0)
2040133e:	00f54663          	blt	a0,a5,2040134a <__swbuf_r+0x54>
20401342:	85a2                	mv	a1,s0
20401344:	8526                	mv	a0,s1
20401346:	24e9                	jal	20401610 <_fflush_r>
20401348:	e52d                	bnez	a0,204013b2 <__swbuf_r+0xbc>
2040134a:	441c                	lw	a5,8(s0)
2040134c:	0505                	addi	a0,a0,1
2040134e:	17fd                	addi	a5,a5,-1
20401350:	c41c                	sw	a5,8(s0)
20401352:	401c                	lw	a5,0(s0)
20401354:	00178713          	addi	a4,a5,1
20401358:	c018                	sw	a4,0(s0)
2040135a:	01378023          	sb	s3,0(a5)
2040135e:	485c                	lw	a5,20(s0)
20401360:	00a78963          	beq	a5,a0,20401372 <__swbuf_r+0x7c>
20401364:	00c45783          	lhu	a5,12(s0)
20401368:	8b85                	andi	a5,a5,1
2040136a:	cb81                	beqz	a5,2040137a <__swbuf_r+0x84>
2040136c:	47a9                	li	a5,10
2040136e:	00f91663          	bne	s2,a5,2040137a <__swbuf_r+0x84>
20401372:	85a2                	mv	a1,s0
20401374:	8526                	mv	a0,s1
20401376:	2c69                	jal	20401610 <_fflush_r>
20401378:	ed0d                	bnez	a0,204013b2 <__swbuf_r+0xbc>
2040137a:	40f2                	lw	ra,28(sp)
2040137c:	4462                	lw	s0,24(sp)
2040137e:	854a                	mv	a0,s2
20401380:	44d2                	lw	s1,20(sp)
20401382:	4942                	lw	s2,16(sp)
20401384:	49b2                	lw	s3,12(sp)
20401386:	6105                	addi	sp,sp,32
20401388:	8082                	ret
2040138a:	fffff797          	auipc	a5,0xfffff
2040138e:	06e78793          	addi	a5,a5,110 # 204003f8 <__sf_fake_stdout>
20401392:	00f41463          	bne	s0,a5,2040139a <__swbuf_r+0xa4>
20401396:	4480                	lw	s0,8(s1)
20401398:	b759                	j	2040131e <__swbuf_r+0x28>
2040139a:	fffff797          	auipc	a5,0xfffff
2040139e:	01e78793          	addi	a5,a5,30 # 204003b8 <__sf_fake_stderr>
204013a2:	f6f41ee3          	bne	s0,a5,2040131e <__swbuf_r+0x28>
204013a6:	44c0                	lw	s0,12(s1)
204013a8:	bf9d                	j	2040131e <__swbuf_r+0x28>
204013aa:	85a2                	mv	a1,s0
204013ac:	8526                	mv	a0,s1
204013ae:	2021                	jal	204013b6 <__swsetup_r>
204013b0:	dd3d                	beqz	a0,2040132e <__swbuf_r+0x38>
204013b2:	597d                	li	s2,-1
204013b4:	b7d9                	j	2040137a <__swbuf_r+0x84>

204013b6 <__swsetup_r>:
__swsetup_r():
204013b6:	1141                	addi	sp,sp,-16
204013b8:	5fbff797          	auipc	a5,0x5fbff
204013bc:	6c078793          	addi	a5,a5,1728 # 80000a78 <_impure_ptr>
204013c0:	c226                	sw	s1,4(sp)
204013c2:	4384                	lw	s1,0(a5)
204013c4:	c422                	sw	s0,8(sp)
204013c6:	c04a                	sw	s2,0(sp)
204013c8:	c606                	sw	ra,12(sp)
204013ca:	892a                	mv	s2,a0
204013cc:	842e                	mv	s0,a1
204013ce:	c489                	beqz	s1,204013d8 <__swsetup_r+0x22>
204013d0:	4c9c                	lw	a5,24(s1)
204013d2:	e399                	bnez	a5,204013d8 <__swsetup_r+0x22>
204013d4:	8526                	mv	a0,s1
204013d6:	2ea5                	jal	2040174e <__sinit>
204013d8:	fffff797          	auipc	a5,0xfffff
204013dc:	00078793          	mv	a5,a5
204013e0:	02f41c63          	bne	s0,a5,20401418 <__swsetup_r+0x62>
204013e4:	40c0                	lw	s0,4(s1)
204013e6:	00c41703          	lh	a4,12(s0)
204013ea:	01071793          	slli	a5,a4,0x10
204013ee:	83c1                	srli	a5,a5,0x10
204013f0:	0087f693          	andi	a3,a5,8
204013f4:	eeb5                	bnez	a3,20401470 <__swsetup_r+0xba>
204013f6:	0107f693          	andi	a3,a5,16
204013fa:	ee9d                	bnez	a3,20401438 <__swsetup_r+0x82>
204013fc:	47a5                	li	a5,9
204013fe:	00f92023          	sw	a5,0(s2)
20401402:	04076713          	ori	a4,a4,64
20401406:	00e41623          	sh	a4,12(s0)
2040140a:	557d                	li	a0,-1
2040140c:	40b2                	lw	ra,12(sp)
2040140e:	4422                	lw	s0,8(sp)
20401410:	4492                	lw	s1,4(sp)
20401412:	4902                	lw	s2,0(sp)
20401414:	0141                	addi	sp,sp,16
20401416:	8082                	ret
20401418:	fffff797          	auipc	a5,0xfffff
2040141c:	fe078793          	addi	a5,a5,-32 # 204003f8 <__sf_fake_stdout>
20401420:	00f41463          	bne	s0,a5,20401428 <__swsetup_r+0x72>
20401424:	4480                	lw	s0,8(s1)
20401426:	b7c1                	j	204013e6 <__swsetup_r+0x30>
20401428:	fffff797          	auipc	a5,0xfffff
2040142c:	f9078793          	addi	a5,a5,-112 # 204003b8 <__sf_fake_stderr>
20401430:	faf41be3          	bne	s0,a5,204013e6 <__swsetup_r+0x30>
20401434:	44c0                	lw	s0,12(s1)
20401436:	bf45                	j	204013e6 <__swsetup_r+0x30>
20401438:	8b91                	andi	a5,a5,4
2040143a:	c78d                	beqz	a5,20401464 <__swsetup_r+0xae>
2040143c:	584c                	lw	a1,52(s0)
2040143e:	c989                	beqz	a1,20401450 <__swsetup_r+0x9a>
20401440:	04440793          	addi	a5,s0,68
20401444:	00f58463          	beq	a1,a5,2040144c <__swsetup_r+0x96>
20401448:	854a                	mv	a0,s2
2040144a:	23cd                	jal	20401a2c <_free_r>
2040144c:	02042a23          	sw	zero,52(s0)
20401450:	00c45783          	lhu	a5,12(s0)
20401454:	00042223          	sw	zero,4(s0)
20401458:	fdb7f793          	andi	a5,a5,-37
2040145c:	00f41623          	sh	a5,12(s0)
20401460:	481c                	lw	a5,16(s0)
20401462:	c01c                	sw	a5,0(s0)
20401464:	00c45783          	lhu	a5,12(s0)
20401468:	0087e793          	ori	a5,a5,8
2040146c:	00f41623          	sh	a5,12(s0)
20401470:	481c                	lw	a5,16(s0)
20401472:	ef81                	bnez	a5,2040148a <__swsetup_r+0xd4>
20401474:	00c45783          	lhu	a5,12(s0)
20401478:	20000713          	li	a4,512
2040147c:	2807f793          	andi	a5,a5,640
20401480:	00e78563          	beq	a5,a4,2040148a <__swsetup_r+0xd4>
20401484:	85a2                	mv	a1,s0
20401486:	854a                	mv	a0,s2
20401488:	29dd                	jal	2040197e <__smakebuf_r>
2040148a:	00c45783          	lhu	a5,12(s0)
2040148e:	0017f713          	andi	a4,a5,1
20401492:	c705                	beqz	a4,204014ba <__swsetup_r+0x104>
20401494:	485c                	lw	a5,20(s0)
20401496:	00042423          	sw	zero,8(s0)
2040149a:	40f007b3          	neg	a5,a5
2040149e:	cc1c                	sw	a5,24(s0)
204014a0:	481c                	lw	a5,16(s0)
204014a2:	4501                	li	a0,0
204014a4:	f7a5                	bnez	a5,2040140c <__swsetup_r+0x56>
204014a6:	00c41783          	lh	a5,12(s0)
204014aa:	0807f713          	andi	a4,a5,128
204014ae:	df39                	beqz	a4,2040140c <__swsetup_r+0x56>
204014b0:	0407e793          	ori	a5,a5,64
204014b4:	00f41623          	sh	a5,12(s0)
204014b8:	bf89                	j	2040140a <__swsetup_r+0x54>
204014ba:	8b89                	andi	a5,a5,2
204014bc:	4701                	li	a4,0
204014be:	e391                	bnez	a5,204014c2 <__swsetup_r+0x10c>
204014c0:	4858                	lw	a4,20(s0)
204014c2:	c418                	sw	a4,8(s0)
204014c4:	bff1                	j	204014a0 <__swsetup_r+0xea>

204014c6 <__sflush_r>:
__sflush_r():
204014c6:	00c5d783          	lhu	a5,12(a1)
204014ca:	1101                	addi	sp,sp,-32
204014cc:	cc22                	sw	s0,24(sp)
204014ce:	ca26                	sw	s1,20(sp)
204014d0:	ce06                	sw	ra,28(sp)
204014d2:	c84a                	sw	s2,16(sp)
204014d4:	c64e                	sw	s3,12(sp)
204014d6:	0087f713          	andi	a4,a5,8
204014da:	84aa                	mv	s1,a0
204014dc:	842e                	mv	s0,a1
204014de:	e765                	bnez	a4,204015c6 <__sflush_r+0x100>
204014e0:	41d8                	lw	a4,4(a1)
204014e2:	00e04763          	bgtz	a4,204014f0 <__sflush_r+0x2a>
204014e6:	41b8                	lw	a4,64(a1)
204014e8:	00e04463          	bgtz	a4,204014f0 <__sflush_r+0x2a>
204014ec:	4501                	li	a0,0
204014ee:	a0c1                	j	204015ae <__sflush_r+0xe8>
204014f0:	5458                	lw	a4,44(s0)
204014f2:	df6d                	beqz	a4,204014ec <__sflush_r+0x26>
204014f4:	0004a903          	lw	s2,0(s1)
204014f8:	01379693          	slli	a3,a5,0x13
204014fc:	0004a023          	sw	zero,0(s1)
20401500:	0606de63          	bgez	a3,2040157c <__sflush_r+0xb6>
20401504:	4868                	lw	a0,84(s0)
20401506:	00c45783          	lhu	a5,12(s0)
2040150a:	8b91                	andi	a5,a5,4
2040150c:	c799                	beqz	a5,2040151a <__sflush_r+0x54>
2040150e:	405c                	lw	a5,4(s0)
20401510:	8d1d                	sub	a0,a0,a5
20401512:	585c                	lw	a5,52(s0)
20401514:	c399                	beqz	a5,2040151a <__sflush_r+0x54>
20401516:	403c                	lw	a5,64(s0)
20401518:	8d1d                	sub	a0,a0,a5
2040151a:	545c                	lw	a5,44(s0)
2040151c:	500c                	lw	a1,32(s0)
2040151e:	862a                	mv	a2,a0
20401520:	4681                	li	a3,0
20401522:	8526                	mv	a0,s1
20401524:	9782                	jalr	a5
20401526:	57fd                	li	a5,-1
20401528:	00c45703          	lhu	a4,12(s0)
2040152c:	00f51d63          	bne	a0,a5,20401546 <__sflush_r+0x80>
20401530:	4094                	lw	a3,0(s1)
20401532:	47f5                	li	a5,29
20401534:	08d7e463          	bltu	a5,a3,204015bc <__sflush_r+0xf6>
20401538:	204007b7          	lui	a5,0x20400
2040153c:	0785                	addi	a5,a5,1
2040153e:	00d7d7b3          	srl	a5,a5,a3
20401542:	8b85                	andi	a5,a5,1
20401544:	cfa5                	beqz	a5,204015bc <__sflush_r+0xf6>
20401546:	481c                	lw	a5,16(s0)
20401548:	00042223          	sw	zero,4(s0)
2040154c:	c01c                	sw	a5,0(s0)
2040154e:	01371793          	slli	a5,a4,0x13
20401552:	0007d863          	bgez	a5,20401562 <__sflush_r+0x9c>
20401556:	57fd                	li	a5,-1
20401558:	00f51463          	bne	a0,a5,20401560 <__sflush_r+0x9a>
2040155c:	409c                	lw	a5,0(s1)
2040155e:	e391                	bnez	a5,20401562 <__sflush_r+0x9c>
20401560:	c868                	sw	a0,84(s0)
20401562:	584c                	lw	a1,52(s0)
20401564:	0124a023          	sw	s2,0(s1)
20401568:	d1d1                	beqz	a1,204014ec <__sflush_r+0x26>
2040156a:	04440793          	addi	a5,s0,68
2040156e:	00f58463          	beq	a1,a5,20401576 <__sflush_r+0xb0>
20401572:	8526                	mv	a0,s1
20401574:	2965                	jal	20401a2c <_free_r>
20401576:	02042a23          	sw	zero,52(s0)
2040157a:	bf8d                	j	204014ec <__sflush_r+0x26>
2040157c:	500c                	lw	a1,32(s0)
2040157e:	4685                	li	a3,1
20401580:	4601                	li	a2,0
20401582:	8526                	mv	a0,s1
20401584:	9702                	jalr	a4
20401586:	57fd                	li	a5,-1
20401588:	f6f51fe3          	bne	a0,a5,20401506 <__sflush_r+0x40>
2040158c:	409c                	lw	a5,0(s1)
2040158e:	dfa5                	beqz	a5,20401506 <__sflush_r+0x40>
20401590:	4775                	li	a4,29
20401592:	00e78563          	beq	a5,a4,2040159c <__sflush_r+0xd6>
20401596:	4759                	li	a4,22
20401598:	00e79563          	bne	a5,a4,204015a2 <__sflush_r+0xdc>
2040159c:	0124a023          	sw	s2,0(s1)
204015a0:	b7b1                	j	204014ec <__sflush_r+0x26>
204015a2:	00c45783          	lhu	a5,12(s0)
204015a6:	0407e793          	ori	a5,a5,64
204015aa:	00f41623          	sh	a5,12(s0)
204015ae:	40f2                	lw	ra,28(sp)
204015b0:	4462                	lw	s0,24(sp)
204015b2:	44d2                	lw	s1,20(sp)
204015b4:	4942                	lw	s2,16(sp)
204015b6:	49b2                	lw	s3,12(sp)
204015b8:	6105                	addi	sp,sp,32
204015ba:	8082                	ret
204015bc:	04076713          	ori	a4,a4,64
204015c0:	00e41623          	sh	a4,12(s0)
204015c4:	b7ed                	j	204015ae <__sflush_r+0xe8>
204015c6:	0105a983          	lw	s3,16(a1)
204015ca:	f20981e3          	beqz	s3,204014ec <__sflush_r+0x26>
204015ce:	0005a903          	lw	s2,0(a1)
204015d2:	8b8d                	andi	a5,a5,3
204015d4:	0135a023          	sw	s3,0(a1)
204015d8:	41390933          	sub	s2,s2,s3
204015dc:	4701                	li	a4,0
204015de:	e391                	bnez	a5,204015e2 <__sflush_r+0x11c>
204015e0:	49d8                	lw	a4,20(a1)
204015e2:	c418                	sw	a4,8(s0)
204015e4:	f12054e3          	blez	s2,204014ec <__sflush_r+0x26>
204015e8:	541c                	lw	a5,40(s0)
204015ea:	500c                	lw	a1,32(s0)
204015ec:	86ca                	mv	a3,s2
204015ee:	864e                	mv	a2,s3
204015f0:	8526                	mv	a0,s1
204015f2:	9782                	jalr	a5
204015f4:	00a04a63          	bgtz	a0,20401608 <__sflush_r+0x142>
204015f8:	00c45783          	lhu	a5,12(s0)
204015fc:	557d                	li	a0,-1
204015fe:	0407e793          	ori	a5,a5,64
20401602:	00f41623          	sh	a5,12(s0)
20401606:	b765                	j	204015ae <__sflush_r+0xe8>
20401608:	99aa                	add	s3,s3,a0
2040160a:	40a90933          	sub	s2,s2,a0
2040160e:	bfd9                	j	204015e4 <__sflush_r+0x11e>

20401610 <_fflush_r>:
_fflush_r():
20401610:	499c                	lw	a5,16(a1)
20401612:	cfb9                	beqz	a5,20401670 <_fflush_r+0x60>
20401614:	1101                	addi	sp,sp,-32
20401616:	cc22                	sw	s0,24(sp)
20401618:	ce06                	sw	ra,28(sp)
2040161a:	842a                	mv	s0,a0
2040161c:	c511                	beqz	a0,20401628 <_fflush_r+0x18>
2040161e:	4d1c                	lw	a5,24(a0)
20401620:	e781                	bnez	a5,20401628 <_fflush_r+0x18>
20401622:	c62e                	sw	a1,12(sp)
20401624:	222d                	jal	2040174e <__sinit>
20401626:	45b2                	lw	a1,12(sp)
20401628:	fffff797          	auipc	a5,0xfffff
2040162c:	db078793          	addi	a5,a5,-592 # 204003d8 <__sf_fake_stdin>
20401630:	00f59b63          	bne	a1,a5,20401646 <_fflush_r+0x36>
20401634:	404c                	lw	a1,4(s0)
20401636:	00c59783          	lh	a5,12(a1)
2040163a:	c795                	beqz	a5,20401666 <_fflush_r+0x56>
2040163c:	8522                	mv	a0,s0
2040163e:	4462                	lw	s0,24(sp)
20401640:	40f2                	lw	ra,28(sp)
20401642:	6105                	addi	sp,sp,32
20401644:	b549                	j	204014c6 <__sflush_r>
20401646:	fffff797          	auipc	a5,0xfffff
2040164a:	db278793          	addi	a5,a5,-590 # 204003f8 <__sf_fake_stdout>
2040164e:	00f59463          	bne	a1,a5,20401656 <_fflush_r+0x46>
20401652:	440c                	lw	a1,8(s0)
20401654:	b7cd                	j	20401636 <_fflush_r+0x26>
20401656:	fffff797          	auipc	a5,0xfffff
2040165a:	d6278793          	addi	a5,a5,-670 # 204003b8 <__sf_fake_stderr>
2040165e:	fcf59ce3          	bne	a1,a5,20401636 <_fflush_r+0x26>
20401662:	444c                	lw	a1,12(s0)
20401664:	bfc9                	j	20401636 <_fflush_r+0x26>
20401666:	40f2                	lw	ra,28(sp)
20401668:	4462                	lw	s0,24(sp)
2040166a:	4501                	li	a0,0
2040166c:	6105                	addi	sp,sp,32
2040166e:	8082                	ret
20401670:	4501                	li	a0,0
20401672:	8082                	ret

20401674 <fflush>:
fflush():
20401674:	85aa                	mv	a1,a0
20401676:	e919                	bnez	a0,2040168c <fflush+0x18>
20401678:	5fbff797          	auipc	a5,0x5fbff
2040167c:	40478793          	addi	a5,a5,1028 # 80000a7c <_global_impure_ptr>
20401680:	4388                	lw	a0,0(a5)
20401682:	00000597          	auipc	a1,0x0
20401686:	f8e58593          	addi	a1,a1,-114 # 20401610 <_fflush_r>
2040168a:	a43d                	j	204018b8 <_fwalk_reent>
2040168c:	5fbff797          	auipc	a5,0x5fbff
20401690:	3ec78793          	addi	a5,a5,1004 # 80000a78 <_impure_ptr>
20401694:	4388                	lw	a0,0(a5)
20401696:	bfad                	j	20401610 <_fflush_r>

20401698 <std>:
std():
20401698:	1141                	addi	sp,sp,-16
2040169a:	c422                	sw	s0,8(sp)
2040169c:	c606                	sw	ra,12(sp)
2040169e:	842a                	mv	s0,a0
204016a0:	00b51623          	sh	a1,12(a0)
204016a4:	00c51723          	sh	a2,14(a0)
204016a8:	00052023          	sw	zero,0(a0)
204016ac:	00052223          	sw	zero,4(a0)
204016b0:	00052423          	sw	zero,8(a0)
204016b4:	06052223          	sw	zero,100(a0)
204016b8:	00052823          	sw	zero,16(a0)
204016bc:	00052a23          	sw	zero,20(a0)
204016c0:	00052c23          	sw	zero,24(a0)
204016c4:	4621                	li	a2,8
204016c6:	4581                	li	a1,0
204016c8:	05c50513          	addi	a0,a0,92
204016cc:	2e81                	jal	20401a1c <memset>
204016ce:	00001797          	auipc	a5,0x1
204016d2:	e2e78793          	addi	a5,a5,-466 # 204024fc <__sread>
204016d6:	d05c                	sw	a5,36(s0)
204016d8:	00001797          	auipc	a5,0x1
204016dc:	e5678793          	addi	a5,a5,-426 # 2040252e <__swrite>
204016e0:	d41c                	sw	a5,40(s0)
204016e2:	00001797          	auipc	a5,0x1
204016e6:	e9a78793          	addi	a5,a5,-358 # 2040257c <__sseek>
204016ea:	d45c                	sw	a5,44(s0)
204016ec:	00001797          	auipc	a5,0x1
204016f0:	ec678793          	addi	a5,a5,-314 # 204025b2 <__sclose>
204016f4:	d000                	sw	s0,32(s0)
204016f6:	d81c                	sw	a5,48(s0)
204016f8:	40b2                	lw	ra,12(sp)
204016fa:	4422                	lw	s0,8(sp)
204016fc:	0141                	addi	sp,sp,16
204016fe:	8082                	ret

20401700 <_cleanup_r>:
_cleanup_r():
20401700:	00000597          	auipc	a1,0x0
20401704:	f1058593          	addi	a1,a1,-240 # 20401610 <_fflush_r>
20401708:	aa45                	j	204018b8 <_fwalk_reent>

2040170a <__sfmoreglue>:
__sfmoreglue():
2040170a:	1141                	addi	sp,sp,-16
2040170c:	c226                	sw	s1,4(sp)
2040170e:	06800613          	li	a2,104
20401712:	fff58493          	addi	s1,a1,-1
20401716:	02c484b3          	mul	s1,s1,a2
2040171a:	c04a                	sw	s2,0(sp)
2040171c:	892e                	mv	s2,a1
2040171e:	c422                	sw	s0,8(sp)
20401720:	c606                	sw	ra,12(sp)
20401722:	07448593          	addi	a1,s1,116
20401726:	2e5d                	jal	20401adc <_malloc_r>
20401728:	842a                	mv	s0,a0
2040172a:	c919                	beqz	a0,20401740 <__sfmoreglue+0x36>
2040172c:	00052023          	sw	zero,0(a0)
20401730:	01252223          	sw	s2,4(a0)
20401734:	0531                	addi	a0,a0,12
20401736:	c408                	sw	a0,8(s0)
20401738:	06848613          	addi	a2,s1,104
2040173c:	4581                	li	a1,0
2040173e:	2cf9                	jal	20401a1c <memset>
20401740:	8522                	mv	a0,s0
20401742:	40b2                	lw	ra,12(sp)
20401744:	4422                	lw	s0,8(sp)
20401746:	4492                	lw	s1,4(sp)
20401748:	4902                	lw	s2,0(sp)
2040174a:	0141                	addi	sp,sp,16
2040174c:	8082                	ret

2040174e <__sinit>:
__sinit():
2040174e:	4d1c                	lw	a5,24(a0)
20401750:	e3bd                	bnez	a5,204017b6 <__sinit+0x68>
20401752:	1141                	addi	sp,sp,-16
20401754:	c606                	sw	ra,12(sp)
20401756:	c422                	sw	s0,8(sp)
20401758:	00000797          	auipc	a5,0x0
2040175c:	fa878793          	addi	a5,a5,-88 # 20401700 <_cleanup_r>
20401760:	d51c                	sw	a5,40(a0)
20401762:	5fbff797          	auipc	a5,0x5fbff
20401766:	31a78793          	addi	a5,a5,794 # 80000a7c <_global_impure_ptr>
2040176a:	439c                	lw	a5,0(a5)
2040176c:	04052423          	sw	zero,72(a0)
20401770:	04052623          	sw	zero,76(a0)
20401774:	04052823          	sw	zero,80(a0)
20401778:	00f51463          	bne	a0,a5,20401780 <__sinit+0x32>
2040177c:	4785                	li	a5,1
2040177e:	cd1c                	sw	a5,24(a0)
20401780:	842a                	mv	s0,a0
20401782:	281d                	jal	204017b8 <__sfp>
20401784:	c048                	sw	a0,4(s0)
20401786:	8522                	mv	a0,s0
20401788:	2805                	jal	204017b8 <__sfp>
2040178a:	c408                	sw	a0,8(s0)
2040178c:	8522                	mv	a0,s0
2040178e:	202d                	jal	204017b8 <__sfp>
20401790:	c448                	sw	a0,12(s0)
20401792:	4048                	lw	a0,4(s0)
20401794:	4601                	li	a2,0
20401796:	4591                	li	a1,4
20401798:	3701                	jal	20401698 <std>
2040179a:	4408                	lw	a0,8(s0)
2040179c:	4605                	li	a2,1
2040179e:	45a5                	li	a1,9
204017a0:	3de5                	jal	20401698 <std>
204017a2:	4448                	lw	a0,12(s0)
204017a4:	4609                	li	a2,2
204017a6:	45c9                	li	a1,18
204017a8:	3dc5                	jal	20401698 <std>
204017aa:	4785                	li	a5,1
204017ac:	cc1c                	sw	a5,24(s0)
204017ae:	40b2                	lw	ra,12(sp)
204017b0:	4422                	lw	s0,8(sp)
204017b2:	0141                	addi	sp,sp,16
204017b4:	8082                	ret
204017b6:	8082                	ret

204017b8 <__sfp>:
__sfp():
204017b8:	1141                	addi	sp,sp,-16
204017ba:	5fbff797          	auipc	a5,0x5fbff
204017be:	2c278793          	addi	a5,a5,706 # 80000a7c <_global_impure_ptr>
204017c2:	c226                	sw	s1,4(sp)
204017c4:	4384                	lw	s1,0(a5)
204017c6:	c04a                	sw	s2,0(sp)
204017c8:	c606                	sw	ra,12(sp)
204017ca:	4c9c                	lw	a5,24(s1)
204017cc:	c422                	sw	s0,8(sp)
204017ce:	892a                	mv	s2,a0
204017d0:	e399                	bnez	a5,204017d6 <__sfp+0x1e>
204017d2:	8526                	mv	a0,s1
204017d4:	3fad                	jal	2040174e <__sinit>
204017d6:	04848493          	addi	s1,s1,72
204017da:	4480                	lw	s0,8(s1)
204017dc:	40dc                	lw	a5,4(s1)
204017de:	17fd                	addi	a5,a5,-1
204017e0:	0007d663          	bgez	a5,204017ec <__sfp+0x34>
204017e4:	409c                	lw	a5,0(s1)
204017e6:	cfb1                	beqz	a5,20401842 <__sfp+0x8a>
204017e8:	4084                	lw	s1,0(s1)
204017ea:	bfc5                	j	204017da <__sfp+0x22>
204017ec:	00c41703          	lh	a4,12(s0)
204017f0:	e731                	bnez	a4,2040183c <__sfp+0x84>
204017f2:	77c1                	lui	a5,0xffff0
204017f4:	0785                	addi	a5,a5,1
204017f6:	06042223          	sw	zero,100(s0)
204017fa:	00042023          	sw	zero,0(s0)
204017fe:	00042223          	sw	zero,4(s0)
20401802:	00042423          	sw	zero,8(s0)
20401806:	c45c                	sw	a5,12(s0)
20401808:	00042823          	sw	zero,16(s0)
2040180c:	00042a23          	sw	zero,20(s0)
20401810:	00042c23          	sw	zero,24(s0)
20401814:	4621                	li	a2,8
20401816:	4581                	li	a1,0
20401818:	05c40513          	addi	a0,s0,92
2040181c:	2401                	jal	20401a1c <memset>
2040181e:	02042a23          	sw	zero,52(s0)
20401822:	02042c23          	sw	zero,56(s0)
20401826:	04042423          	sw	zero,72(s0)
2040182a:	04042623          	sw	zero,76(s0)
2040182e:	8522                	mv	a0,s0
20401830:	40b2                	lw	ra,12(sp)
20401832:	4422                	lw	s0,8(sp)
20401834:	4492                	lw	s1,4(sp)
20401836:	4902                	lw	s2,0(sp)
20401838:	0141                	addi	sp,sp,16
2040183a:	8082                	ret
2040183c:	06840413          	addi	s0,s0,104
20401840:	bf79                	j	204017de <__sfp+0x26>
20401842:	4591                	li	a1,4
20401844:	854a                	mv	a0,s2
20401846:	35d1                	jal	2040170a <__sfmoreglue>
20401848:	c088                	sw	a0,0(s1)
2040184a:	842a                	mv	s0,a0
2040184c:	fd51                	bnez	a0,204017e8 <__sfp+0x30>
2040184e:	47b1                	li	a5,12
20401850:	00f92023          	sw	a5,0(s2)
20401854:	bfe9                	j	2040182e <__sfp+0x76>

20401856 <_fwalk>:
_fwalk():
20401856:	7179                	addi	sp,sp,-48
20401858:	d422                	sw	s0,40(sp)
2040185a:	d04a                	sw	s2,32(sp)
2040185c:	cc52                	sw	s4,24(sp)
2040185e:	ca56                	sw	s5,20(sp)
20401860:	d606                	sw	ra,44(sp)
20401862:	d226                	sw	s1,36(sp)
20401864:	ce4e                	sw	s3,28(sp)
20401866:	04850413          	addi	s0,a0,72
2040186a:	4901                	li	s2,0
2040186c:	4a05                	li	s4,1
2040186e:	5afd                	li	s5,-1
20401870:	e819                	bnez	s0,20401886 <_fwalk+0x30>
20401872:	50b2                	lw	ra,44(sp)
20401874:	5422                	lw	s0,40(sp)
20401876:	854a                	mv	a0,s2
20401878:	5492                	lw	s1,36(sp)
2040187a:	5902                	lw	s2,32(sp)
2040187c:	49f2                	lw	s3,28(sp)
2040187e:	4a62                	lw	s4,24(sp)
20401880:	4ad2                	lw	s5,20(sp)
20401882:	6145                	addi	sp,sp,48
20401884:	8082                	ret
20401886:	4404                	lw	s1,8(s0)
20401888:	00442983          	lw	s3,4(s0)
2040188c:	19fd                	addi	s3,s3,-1
2040188e:	0009d463          	bgez	s3,20401896 <_fwalk+0x40>
20401892:	4000                	lw	s0,0(s0)
20401894:	bff1                	j	20401870 <_fwalk+0x1a>
20401896:	00c4d783          	lhu	a5,12(s1)
2040189a:	00fa7c63          	bgeu	s4,a5,204018b2 <_fwalk+0x5c>
2040189e:	00e49783          	lh	a5,14(s1)
204018a2:	01578863          	beq	a5,s5,204018b2 <_fwalk+0x5c>
204018a6:	8526                	mv	a0,s1
204018a8:	c62e                	sw	a1,12(sp)
204018aa:	9582                	jalr	a1
204018ac:	45b2                	lw	a1,12(sp)
204018ae:	00a96933          	or	s2,s2,a0
204018b2:	06848493          	addi	s1,s1,104
204018b6:	bfd9                	j	2040188c <_fwalk+0x36>

204018b8 <_fwalk_reent>:
_fwalk_reent():
204018b8:	7179                	addi	sp,sp,-48
204018ba:	d422                	sw	s0,40(sp)
204018bc:	d04a                	sw	s2,32(sp)
204018be:	cc52                	sw	s4,24(sp)
204018c0:	ca56                	sw	s5,20(sp)
204018c2:	c85a                	sw	s6,16(sp)
204018c4:	c65e                	sw	s7,12(sp)
204018c6:	d606                	sw	ra,44(sp)
204018c8:	d226                	sw	s1,36(sp)
204018ca:	ce4e                	sw	s3,28(sp)
204018cc:	8a2a                	mv	s4,a0
204018ce:	8aae                	mv	s5,a1
204018d0:	04850413          	addi	s0,a0,72
204018d4:	4901                	li	s2,0
204018d6:	4b05                	li	s6,1
204018d8:	5bfd                	li	s7,-1
204018da:	ec09                	bnez	s0,204018f4 <_fwalk_reent+0x3c>
204018dc:	50b2                	lw	ra,44(sp)
204018de:	5422                	lw	s0,40(sp)
204018e0:	854a                	mv	a0,s2
204018e2:	5492                	lw	s1,36(sp)
204018e4:	5902                	lw	s2,32(sp)
204018e6:	49f2                	lw	s3,28(sp)
204018e8:	4a62                	lw	s4,24(sp)
204018ea:	4ad2                	lw	s5,20(sp)
204018ec:	4b42                	lw	s6,16(sp)
204018ee:	4bb2                	lw	s7,12(sp)
204018f0:	6145                	addi	sp,sp,48
204018f2:	8082                	ret
204018f4:	4404                	lw	s1,8(s0)
204018f6:	00442983          	lw	s3,4(s0)
204018fa:	19fd                	addi	s3,s3,-1
204018fc:	0009d463          	bgez	s3,20401904 <_fwalk_reent+0x4c>
20401900:	4000                	lw	s0,0(s0)
20401902:	bfe1                	j	204018da <_fwalk_reent+0x22>
20401904:	00c4d783          	lhu	a5,12(s1)
20401908:	00fb7b63          	bgeu	s6,a5,2040191e <_fwalk_reent+0x66>
2040190c:	00e49783          	lh	a5,14(s1)
20401910:	01778763          	beq	a5,s7,2040191e <_fwalk_reent+0x66>
20401914:	85a6                	mv	a1,s1
20401916:	8552                	mv	a0,s4
20401918:	9a82                	jalr	s5
2040191a:	00a96933          	or	s2,s2,a0
2040191e:	06848493          	addi	s1,s1,104
20401922:	bfe1                	j	204018fa <_fwalk_reent+0x42>

20401924 <__swhatbuf_r>:
__swhatbuf_r():
20401924:	7119                	addi	sp,sp,-128
20401926:	daa6                	sw	s1,116(sp)
20401928:	84ae                	mv	s1,a1
2040192a:	00e59583          	lh	a1,14(a1)
2040192e:	dca2                	sw	s0,120(sp)
20401930:	de86                	sw	ra,124(sp)
20401932:	8432                	mv	s0,a2
20401934:	0005dc63          	bgez	a1,2040194c <__swhatbuf_r+0x28>
20401938:	00c4d783          	lhu	a5,12(s1)
2040193c:	0006a023          	sw	zero,0(a3)
20401940:	0807f793          	andi	a5,a5,128
20401944:	e785                	bnez	a5,2040196c <__swhatbuf_r+0x48>
20401946:	40000793          	li	a5,1024
2040194a:	a01d                	j	20401970 <__swhatbuf_r+0x4c>
2040194c:	0830                	addi	a2,sp,24
2040194e:	c636                	sw	a3,12(sp)
20401950:	663000ef          	jal	ra,204027b2 <_fstat_r>
20401954:	46b2                	lw	a3,12(sp)
20401956:	fe0541e3          	bltz	a0,20401938 <__swhatbuf_r+0x14>
2040195a:	4772                	lw	a4,28(sp)
2040195c:	67bd                	lui	a5,0xf
2040195e:	8ff9                	and	a5,a5,a4
20401960:	7779                	lui	a4,0xffffe
20401962:	97ba                	add	a5,a5,a4
20401964:	0017b793          	seqz	a5,a5
20401968:	c29c                	sw	a5,0(a3)
2040196a:	bff1                	j	20401946 <__swhatbuf_r+0x22>
2040196c:	04000793          	li	a5,64
20401970:	c01c                	sw	a5,0(s0)
20401972:	50f6                	lw	ra,124(sp)
20401974:	5466                	lw	s0,120(sp)
20401976:	54d6                	lw	s1,116(sp)
20401978:	4501                	li	a0,0
2040197a:	6109                	addi	sp,sp,128
2040197c:	8082                	ret

2040197e <__smakebuf_r>:
__smakebuf_r():
2040197e:	00c5d783          	lhu	a5,12(a1)
20401982:	1101                	addi	sp,sp,-32
20401984:	cc22                	sw	s0,24(sp)
20401986:	ce06                	sw	ra,28(sp)
20401988:	ca26                	sw	s1,20(sp)
2040198a:	c84a                	sw	s2,16(sp)
2040198c:	8b89                	andi	a5,a5,2
2040198e:	842e                	mv	s0,a1
20401990:	cf89                	beqz	a5,204019aa <__smakebuf_r+0x2c>
20401992:	04740793          	addi	a5,s0,71
20401996:	c01c                	sw	a5,0(s0)
20401998:	c81c                	sw	a5,16(s0)
2040199a:	4785                	li	a5,1
2040199c:	c85c                	sw	a5,20(s0)
2040199e:	40f2                	lw	ra,28(sp)
204019a0:	4462                	lw	s0,24(sp)
204019a2:	44d2                	lw	s1,20(sp)
204019a4:	4942                	lw	s2,16(sp)
204019a6:	6105                	addi	sp,sp,32
204019a8:	8082                	ret
204019aa:	0074                	addi	a3,sp,12
204019ac:	0030                	addi	a2,sp,8
204019ae:	84aa                	mv	s1,a0
204019b0:	3f95                	jal	20401924 <__swhatbuf_r>
204019b2:	45a2                	lw	a1,8(sp)
204019b4:	892a                	mv	s2,a0
204019b6:	8526                	mv	a0,s1
204019b8:	2215                	jal	20401adc <_malloc_r>
204019ba:	ed01                	bnez	a0,204019d2 <__smakebuf_r+0x54>
204019bc:	00c41783          	lh	a5,12(s0)
204019c0:	2007f713          	andi	a4,a5,512
204019c4:	ff69                	bnez	a4,2040199e <__smakebuf_r+0x20>
204019c6:	9bf1                	andi	a5,a5,-4
204019c8:	0027e793          	ori	a5,a5,2
204019cc:	00f41623          	sh	a5,12(s0)
204019d0:	b7c9                	j	20401992 <__smakebuf_r+0x14>
204019d2:	00000797          	auipc	a5,0x0
204019d6:	d2e78793          	addi	a5,a5,-722 # 20401700 <_cleanup_r>
204019da:	d49c                	sw	a5,40(s1)
204019dc:	00c45783          	lhu	a5,12(s0)
204019e0:	c008                	sw	a0,0(s0)
204019e2:	c808                	sw	a0,16(s0)
204019e4:	0807e793          	ori	a5,a5,128
204019e8:	00f41623          	sh	a5,12(s0)
204019ec:	47a2                	lw	a5,8(sp)
204019ee:	c85c                	sw	a5,20(s0)
204019f0:	47b2                	lw	a5,12(sp)
204019f2:	cf91                	beqz	a5,20401a0e <__smakebuf_r+0x90>
204019f4:	00e41583          	lh	a1,14(s0)
204019f8:	8526                	mv	a0,s1
204019fa:	5e5000ef          	jal	ra,204027de <_isatty_r>
204019fe:	c901                	beqz	a0,20401a0e <__smakebuf_r+0x90>
20401a00:	00c45783          	lhu	a5,12(s0)
20401a04:	9bf1                	andi	a5,a5,-4
20401a06:	0017e793          	ori	a5,a5,1
20401a0a:	00f41623          	sh	a5,12(s0)
20401a0e:	00c45783          	lhu	a5,12(s0)
20401a12:	00f96933          	or	s2,s2,a5
20401a16:	01241623          	sh	s2,12(s0)
20401a1a:	b751                	j	2040199e <__smakebuf_r+0x20>

20401a1c <memset>:
memset():
20401a1c:	832a                	mv	t1,a0
20401a1e:	c611                	beqz	a2,20401a2a <memset+0xe>
20401a20:	00b30023          	sb	a1,0(t1)
20401a24:	167d                	addi	a2,a2,-1
20401a26:	0305                	addi	t1,t1,1
20401a28:	fe65                	bnez	a2,20401a20 <memset+0x4>
20401a2a:	8082                	ret

20401a2c <_free_r>:
_free_r():
20401a2c:	c5dd                	beqz	a1,20401ada <_free_r+0xae>
20401a2e:	ffc5a783          	lw	a5,-4(a1)
20401a32:	1141                	addi	sp,sp,-16
20401a34:	c422                	sw	s0,8(sp)
20401a36:	c606                	sw	ra,12(sp)
20401a38:	c226                	sw	s1,4(sp)
20401a3a:	ffc58413          	addi	s0,a1,-4
20401a3e:	0007d363          	bgez	a5,20401a44 <_free_r+0x18>
20401a42:	943e                	add	s0,s0,a5
20401a44:	84aa                	mv	s1,a0
20401a46:	621000ef          	jal	ra,20402866 <__malloc_lock>
20401a4a:	5fbff797          	auipc	a5,0x5fbff
20401a4e:	07678793          	addi	a5,a5,118 # 80000ac0 <__tls_base>
20401a52:	439c                	lw	a5,0(a5)
20401a54:	ef91                	bnez	a5,20401a70 <_free_r+0x44>
20401a56:	00042223          	sw	zero,4(s0)
20401a5a:	5fbff797          	auipc	a5,0x5fbff
20401a5e:	0687a323          	sw	s0,102(a5) # 80000ac0 <__tls_base>
20401a62:	4422                	lw	s0,8(sp)
20401a64:	40b2                	lw	ra,12(sp)
20401a66:	8526                	mv	a0,s1
20401a68:	4492                	lw	s1,4(sp)
20401a6a:	0141                	addi	sp,sp,16
20401a6c:	5fd0006f          	j	20402868 <__malloc_unlock>
20401a70:	00f47e63          	bgeu	s0,a5,20401a8c <_free_r+0x60>
20401a74:	4014                	lw	a3,0(s0)
20401a76:	00d40733          	add	a4,s0,a3
20401a7a:	00e79663          	bne	a5,a4,20401a86 <_free_r+0x5a>
20401a7e:	4398                	lw	a4,0(a5)
20401a80:	43dc                	lw	a5,4(a5)
20401a82:	9736                	add	a4,a4,a3
20401a84:	c018                	sw	a4,0(s0)
20401a86:	c05c                	sw	a5,4(s0)
20401a88:	bfc9                	j	20401a5a <_free_r+0x2e>
20401a8a:	87ba                	mv	a5,a4
20401a8c:	43d8                	lw	a4,4(a5)
20401a8e:	c319                	beqz	a4,20401a94 <_free_r+0x68>
20401a90:	fee47de3          	bgeu	s0,a4,20401a8a <_free_r+0x5e>
20401a94:	4394                	lw	a3,0(a5)
20401a96:	00d78633          	add	a2,a5,a3
20401a9a:	00861f63          	bne	a2,s0,20401ab8 <_free_r+0x8c>
20401a9e:	4010                	lw	a2,0(s0)
20401aa0:	96b2                	add	a3,a3,a2
20401aa2:	c394                	sw	a3,0(a5)
20401aa4:	00d78633          	add	a2,a5,a3
20401aa8:	fac71de3          	bne	a4,a2,20401a62 <_free_r+0x36>
20401aac:	4310                	lw	a2,0(a4)
20401aae:	4358                	lw	a4,4(a4)
20401ab0:	96b2                	add	a3,a3,a2
20401ab2:	c394                	sw	a3,0(a5)
20401ab4:	c3d8                	sw	a4,4(a5)
20401ab6:	b775                	j	20401a62 <_free_r+0x36>
20401ab8:	00c47563          	bgeu	s0,a2,20401ac2 <_free_r+0x96>
20401abc:	47b1                	li	a5,12
20401abe:	c09c                	sw	a5,0(s1)
20401ac0:	b74d                	j	20401a62 <_free_r+0x36>
20401ac2:	4010                	lw	a2,0(s0)
20401ac4:	00c406b3          	add	a3,s0,a2
20401ac8:	00d71663          	bne	a4,a3,20401ad4 <_free_r+0xa8>
20401acc:	4314                	lw	a3,0(a4)
20401ace:	4358                	lw	a4,4(a4)
20401ad0:	96b2                	add	a3,a3,a2
20401ad2:	c014                	sw	a3,0(s0)
20401ad4:	c058                	sw	a4,4(s0)
20401ad6:	c3c0                	sw	s0,4(a5)
20401ad8:	b769                	j	20401a62 <_free_r+0x36>
20401ada:	8082                	ret

20401adc <_malloc_r>:
_malloc_r():
20401adc:	1101                	addi	sp,sp,-32
20401ade:	ca26                	sw	s1,20(sp)
20401ae0:	00358493          	addi	s1,a1,3
20401ae4:	98f1                	andi	s1,s1,-4
20401ae6:	ce06                	sw	ra,28(sp)
20401ae8:	cc22                	sw	s0,24(sp)
20401aea:	c84a                	sw	s2,16(sp)
20401aec:	c64e                	sw	s3,12(sp)
20401aee:	04a1                	addi	s1,s1,8
20401af0:	47b1                	li	a5,12
20401af2:	04f4fb63          	bgeu	s1,a5,20401b48 <_malloc_r+0x6c>
20401af6:	44b1                	li	s1,12
20401af8:	04b4ea63          	bltu	s1,a1,20401b4c <_malloc_r+0x70>
20401afc:	892a                	mv	s2,a0
20401afe:	569000ef          	jal	ra,20402866 <__malloc_lock>
20401b02:	5fbff797          	auipc	a5,0x5fbff
20401b06:	fbe78793          	addi	a5,a5,-66 # 80000ac0 <__tls_base>
20401b0a:	4398                	lw	a4,0(a5)
20401b0c:	843a                	mv	s0,a4
20401b0e:	e829                	bnez	s0,20401b60 <_malloc_r+0x84>
20401b10:	5fbff797          	auipc	a5,0x5fbff
20401b14:	fb478793          	addi	a5,a5,-76 # 80000ac4 <__malloc_sbrk_start>
20401b18:	439c                	lw	a5,0(a5)
20401b1a:	eb89                	bnez	a5,20401b2c <_malloc_r+0x50>
20401b1c:	4581                	li	a1,0
20401b1e:	854a                	mv	a0,s2
20401b20:	125000ef          	jal	ra,20402444 <_sbrk_r>
20401b24:	5fbff797          	auipc	a5,0x5fbff
20401b28:	faa7a023          	sw	a0,-96(a5) # 80000ac4 <__malloc_sbrk_start>
20401b2c:	85a6                	mv	a1,s1
20401b2e:	854a                	mv	a0,s2
20401b30:	115000ef          	jal	ra,20402444 <_sbrk_r>
20401b34:	59fd                	li	s3,-1
20401b36:	07351b63          	bne	a0,s3,20401bac <_malloc_r+0xd0>
20401b3a:	47b1                	li	a5,12
20401b3c:	00f92023          	sw	a5,0(s2)
20401b40:	854a                	mv	a0,s2
20401b42:	527000ef          	jal	ra,20402868 <__malloc_unlock>
20401b46:	a029                	j	20401b50 <_malloc_r+0x74>
20401b48:	fa04d8e3          	bgez	s1,20401af8 <_malloc_r+0x1c>
20401b4c:	47b1                	li	a5,12
20401b4e:	c11c                	sw	a5,0(a0)
20401b50:	4501                	li	a0,0
20401b52:	40f2                	lw	ra,28(sp)
20401b54:	4462                	lw	s0,24(sp)
20401b56:	44d2                	lw	s1,20(sp)
20401b58:	4942                	lw	s2,16(sp)
20401b5a:	49b2                	lw	s3,12(sp)
20401b5c:	6105                	addi	sp,sp,32
20401b5e:	8082                	ret
20401b60:	401c                	lw	a5,0(s0)
20401b62:	8f85                	sub	a5,a5,s1
20401b64:	0407c163          	bltz	a5,20401ba6 <_malloc_r+0xca>
20401b68:	46ad                	li	a3,11
20401b6a:	00f6f663          	bgeu	a3,a5,20401b76 <_malloc_r+0x9a>
20401b6e:	c01c                	sw	a5,0(s0)
20401b70:	943e                	add	s0,s0,a5
20401b72:	c004                	sw	s1,0(s0)
20401b74:	a801                	j	20401b84 <_malloc_r+0xa8>
20401b76:	405c                	lw	a5,4(s0)
20401b78:	02871563          	bne	a4,s0,20401ba2 <_malloc_r+0xc6>
20401b7c:	5fbff717          	auipc	a4,0x5fbff
20401b80:	f4f72223          	sw	a5,-188(a4) # 80000ac0 <__tls_base>
20401b84:	854a                	mv	a0,s2
20401b86:	4e3000ef          	jal	ra,20402868 <__malloc_unlock>
20401b8a:	00b40513          	addi	a0,s0,11
20401b8e:	00440793          	addi	a5,s0,4
20401b92:	9961                	andi	a0,a0,-8
20401b94:	40f50733          	sub	a4,a0,a5
20401b98:	df4d                	beqz	a4,20401b52 <_malloc_r+0x76>
20401b9a:	943a                	add	s0,s0,a4
20401b9c:	8f89                	sub	a5,a5,a0
20401b9e:	c01c                	sw	a5,0(s0)
20401ba0:	bf4d                	j	20401b52 <_malloc_r+0x76>
20401ba2:	c35c                	sw	a5,4(a4)
20401ba4:	b7c5                	j	20401b84 <_malloc_r+0xa8>
20401ba6:	8722                	mv	a4,s0
20401ba8:	4040                	lw	s0,4(s0)
20401baa:	b795                	j	20401b0e <_malloc_r+0x32>
20401bac:	00350413          	addi	s0,a0,3
20401bb0:	9871                	andi	s0,s0,-4
20401bb2:	fc8500e3          	beq	a0,s0,20401b72 <_malloc_r+0x96>
20401bb6:	40a405b3          	sub	a1,s0,a0
20401bba:	854a                	mv	a0,s2
20401bbc:	089000ef          	jal	ra,20402444 <_sbrk_r>
20401bc0:	fb3519e3          	bne	a0,s3,20401b72 <_malloc_r+0x96>
20401bc4:	bf9d                	j	20401b3a <_malloc_r+0x5e>

20401bc6 <__sfputc_r>:
__sfputc_r():
20401bc6:	461c                	lw	a5,8(a2)
20401bc8:	17fd                	addi	a5,a5,-1
20401bca:	c61c                	sw	a5,8(a2)
20401bcc:	0007da63          	bgez	a5,20401be0 <__sfputc_r+0x1a>
20401bd0:	4e18                	lw	a4,24(a2)
20401bd2:	00e7c563          	blt	a5,a4,20401bdc <__sfputc_r+0x16>
20401bd6:	47a9                	li	a5,10
20401bd8:	00f59463          	bne	a1,a5,20401be0 <__sfputc_r+0x1a>
20401bdc:	f1aff06f          	j	204012f6 <__swbuf_r>
20401be0:	421c                	lw	a5,0(a2)
20401be2:	852e                	mv	a0,a1
20401be4:	00178713          	addi	a4,a5,1
20401be8:	c218                	sw	a4,0(a2)
20401bea:	00b78023          	sb	a1,0(a5)
20401bee:	8082                	ret

20401bf0 <__sfputs_r>:
__sfputs_r():
20401bf0:	1101                	addi	sp,sp,-32
20401bf2:	cc22                	sw	s0,24(sp)
20401bf4:	ca26                	sw	s1,20(sp)
20401bf6:	c84a                	sw	s2,16(sp)
20401bf8:	c64e                	sw	s3,12(sp)
20401bfa:	c452                	sw	s4,8(sp)
20401bfc:	ce06                	sw	ra,28(sp)
20401bfe:	892a                	mv	s2,a0
20401c00:	89ae                	mv	s3,a1
20401c02:	8432                	mv	s0,a2
20401c04:	00d604b3          	add	s1,a2,a3
20401c08:	5a7d                	li	s4,-1
20401c0a:	00941463          	bne	s0,s1,20401c12 <__sfputs_r+0x22>
20401c0e:	4501                	li	a0,0
20401c10:	a809                	j	20401c22 <__sfputs_r+0x32>
20401c12:	00044583          	lbu	a1,0(s0)
20401c16:	864e                	mv	a2,s3
20401c18:	854a                	mv	a0,s2
20401c1a:	3775                	jal	20401bc6 <__sfputc_r>
20401c1c:	0405                	addi	s0,s0,1
20401c1e:	ff4516e3          	bne	a0,s4,20401c0a <__sfputs_r+0x1a>
20401c22:	40f2                	lw	ra,28(sp)
20401c24:	4462                	lw	s0,24(sp)
20401c26:	44d2                	lw	s1,20(sp)
20401c28:	4942                	lw	s2,16(sp)
20401c2a:	49b2                	lw	s3,12(sp)
20401c2c:	4a22                	lw	s4,8(sp)
20401c2e:	6105                	addi	sp,sp,32
20401c30:	8082                	ret

20401c32 <_vfiprintf_r>:
_vfiprintf_r():
20401c32:	7135                	addi	sp,sp,-160
20401c34:	cd22                	sw	s0,152(sp)
20401c36:	cb26                	sw	s1,148(sp)
20401c38:	c94a                	sw	s2,144(sp)
20401c3a:	c74e                	sw	s3,140(sp)
20401c3c:	cf06                	sw	ra,156(sp)
20401c3e:	c552                	sw	s4,136(sp)
20401c40:	c356                	sw	s5,132(sp)
20401c42:	c15a                	sw	s6,128(sp)
20401c44:	dede                	sw	s7,124(sp)
20401c46:	dce2                	sw	s8,120(sp)
20401c48:	dae6                	sw	s9,116(sp)
20401c4a:	89aa                	mv	s3,a0
20401c4c:	84ae                	mv	s1,a1
20401c4e:	8932                	mv	s2,a2
20401c50:	8436                	mv	s0,a3
20401c52:	c501                	beqz	a0,20401c5a <_vfiprintf_r+0x28>
20401c54:	4d1c                	lw	a5,24(a0)
20401c56:	e391                	bnez	a5,20401c5a <_vfiprintf_r+0x28>
20401c58:	3cdd                	jal	2040174e <__sinit>
20401c5a:	ffffe797          	auipc	a5,0xffffe
20401c5e:	77e78793          	addi	a5,a5,1918 # 204003d8 <__sf_fake_stdin>
20401c62:	0cf49c63          	bne	s1,a5,20401d3a <_vfiprintf_r+0x108>
20401c66:	0049a483          	lw	s1,4(s3)
20401c6a:	00c4d783          	lhu	a5,12(s1)
20401c6e:	8ba1                	andi	a5,a5,8
20401c70:	c7fd                	beqz	a5,20401d5e <_vfiprintf_r+0x12c>
20401c72:	489c                	lw	a5,16(s1)
20401c74:	c7ed                	beqz	a5,20401d5e <_vfiprintf_r+0x12c>
20401c76:	02000793          	li	a5,32
20401c7a:	02f104a3          	sb	a5,41(sp)
20401c7e:	03000793          	li	a5,48
20401c82:	d202                	sw	zero,36(sp)
20401c84:	02f10523          	sb	a5,42(sp)
20401c88:	c622                	sw	s0,12(sp)
20401c8a:	02500b93          	li	s7,37
20401c8e:	ffffea97          	auipc	s5,0xffffe
20401c92:	78aa8a93          	addi	s5,s5,1930 # 20400418 <__sf_fake_stdout+0x20>
20401c96:	4c05                	li	s8,1
20401c98:	4b29                	li	s6,10
20401c9a:	844a                	mv	s0,s2
20401c9c:	00044783          	lbu	a5,0(s0)
20401ca0:	c399                	beqz	a5,20401ca6 <_vfiprintf_r+0x74>
20401ca2:	0f779163          	bne	a5,s7,20401d84 <_vfiprintf_r+0x152>
20401ca6:	41240cb3          	sub	s9,s0,s2
20401caa:	000c8d63          	beqz	s9,20401cc4 <_vfiprintf_r+0x92>
20401cae:	86e6                	mv	a3,s9
20401cb0:	864a                	mv	a2,s2
20401cb2:	85a6                	mv	a1,s1
20401cb4:	854e                	mv	a0,s3
20401cb6:	3f2d                	jal	20401bf0 <__sfputs_r>
20401cb8:	57fd                	li	a5,-1
20401cba:	1ef50963          	beq	a0,a5,20401eac <_vfiprintf_r+0x27a>
20401cbe:	5692                	lw	a3,36(sp)
20401cc0:	96e6                	add	a3,a3,s9
20401cc2:	d236                	sw	a3,36(sp)
20401cc4:	00044783          	lbu	a5,0(s0)
20401cc8:	1e078263          	beqz	a5,20401eac <_vfiprintf_r+0x27a>
20401ccc:	57fd                	li	a5,-1
20401cce:	00140913          	addi	s2,s0,1
20401cd2:	c802                	sw	zero,16(sp)
20401cd4:	ce02                	sw	zero,28(sp)
20401cd6:	ca3e                	sw	a5,20(sp)
20401cd8:	cc02                	sw	zero,24(sp)
20401cda:	040109a3          	sb	zero,83(sp)
20401cde:	d482                	sw	zero,104(sp)
20401ce0:	00094583          	lbu	a1,0(s2)
20401ce4:	4615                	li	a2,5
20401ce6:	8556                	mv	a0,s5
20401ce8:	34f000ef          	jal	ra,20402836 <memchr>
20401cec:	00190413          	addi	s0,s2,1
20401cf0:	47c2                	lw	a5,16(sp)
20401cf2:	e959                	bnez	a0,20401d88 <_vfiprintf_r+0x156>
20401cf4:	0107f713          	andi	a4,a5,16
20401cf8:	c709                	beqz	a4,20401d02 <_vfiprintf_r+0xd0>
20401cfa:	02000713          	li	a4,32
20401cfe:	04e109a3          	sb	a4,83(sp)
20401d02:	0087f713          	andi	a4,a5,8
20401d06:	c709                	beqz	a4,20401d10 <_vfiprintf_r+0xde>
20401d08:	02b00713          	li	a4,43
20401d0c:	04e109a3          	sb	a4,83(sp)
20401d10:	00094683          	lbu	a3,0(s2)
20401d14:	02a00713          	li	a4,42
20401d18:	08e68063          	beq	a3,a4,20401d98 <_vfiprintf_r+0x166>
20401d1c:	47f2                	lw	a5,28(sp)
20401d1e:	844a                	mv	s0,s2
20401d20:	4681                	li	a3,0
20401d22:	4625                	li	a2,9
20401d24:	00044703          	lbu	a4,0(s0)
20401d28:	00140593          	addi	a1,s0,1
20401d2c:	fd070713          	addi	a4,a4,-48
20401d30:	0ae67963          	bgeu	a2,a4,20401de2 <_vfiprintf_r+0x1b0>
20401d34:	cab5                	beqz	a3,20401da8 <_vfiprintf_r+0x176>
20401d36:	ce3e                	sw	a5,28(sp)
20401d38:	a885                	j	20401da8 <_vfiprintf_r+0x176>
20401d3a:	ffffe797          	auipc	a5,0xffffe
20401d3e:	6be78793          	addi	a5,a5,1726 # 204003f8 <__sf_fake_stdout>
20401d42:	00f49563          	bne	s1,a5,20401d4c <_vfiprintf_r+0x11a>
20401d46:	0089a483          	lw	s1,8(s3)
20401d4a:	b705                	j	20401c6a <_vfiprintf_r+0x38>
20401d4c:	ffffe797          	auipc	a5,0xffffe
20401d50:	66c78793          	addi	a5,a5,1644 # 204003b8 <__sf_fake_stderr>
20401d54:	f0f49be3          	bne	s1,a5,20401c6a <_vfiprintf_r+0x38>
20401d58:	00c9a483          	lw	s1,12(s3)
20401d5c:	b739                	j	20401c6a <_vfiprintf_r+0x38>
20401d5e:	85a6                	mv	a1,s1
20401d60:	854e                	mv	a0,s3
20401d62:	e54ff0ef          	jal	ra,204013b6 <__swsetup_r>
20401d66:	d901                	beqz	a0,20401c76 <_vfiprintf_r+0x44>
20401d68:	557d                	li	a0,-1
20401d6a:	40fa                	lw	ra,156(sp)
20401d6c:	446a                	lw	s0,152(sp)
20401d6e:	44da                	lw	s1,148(sp)
20401d70:	494a                	lw	s2,144(sp)
20401d72:	49ba                	lw	s3,140(sp)
20401d74:	4a2a                	lw	s4,136(sp)
20401d76:	4a9a                	lw	s5,132(sp)
20401d78:	4b0a                	lw	s6,128(sp)
20401d7a:	5bf6                	lw	s7,124(sp)
20401d7c:	5c66                	lw	s8,120(sp)
20401d7e:	5cd6                	lw	s9,116(sp)
20401d80:	610d                	addi	sp,sp,160
20401d82:	8082                	ret
20401d84:	0405                	addi	s0,s0,1
20401d86:	bf19                	j	20401c9c <_vfiprintf_r+0x6a>
20401d88:	41550533          	sub	a0,a0,s5
20401d8c:	00ac1533          	sll	a0,s8,a0
20401d90:	8fc9                	or	a5,a5,a0
20401d92:	c83e                	sw	a5,16(sp)
20401d94:	8922                	mv	s2,s0
20401d96:	b7a9                	j	20401ce0 <_vfiprintf_r+0xae>
20401d98:	4732                	lw	a4,12(sp)
20401d9a:	00470693          	addi	a3,a4,4
20401d9e:	4318                	lw	a4,0(a4)
20401da0:	c636                	sw	a3,12(sp)
20401da2:	02074963          	bltz	a4,20401dd4 <_vfiprintf_r+0x1a2>
20401da6:	ce3a                	sw	a4,28(sp)
20401da8:	00044703          	lbu	a4,0(s0)
20401dac:	02e00793          	li	a5,46
20401db0:	04f71f63          	bne	a4,a5,20401e0e <_vfiprintf_r+0x1dc>
20401db4:	00144703          	lbu	a4,1(s0)
20401db8:	02a00793          	li	a5,42
20401dbc:	02f71b63          	bne	a4,a5,20401df2 <_vfiprintf_r+0x1c0>
20401dc0:	47b2                	lw	a5,12(sp)
20401dc2:	0409                	addi	s0,s0,2
20401dc4:	00478713          	addi	a4,a5,4
20401dc8:	439c                	lw	a5,0(a5)
20401dca:	c63a                	sw	a4,12(sp)
20401dcc:	0207c163          	bltz	a5,20401dee <_vfiprintf_r+0x1bc>
20401dd0:	ca3e                	sw	a5,20(sp)
20401dd2:	a835                	j	20401e0e <_vfiprintf_r+0x1dc>
20401dd4:	40e00733          	neg	a4,a4
20401dd8:	0027e793          	ori	a5,a5,2
20401ddc:	ce3a                	sw	a4,28(sp)
20401dde:	c83e                	sw	a5,16(sp)
20401de0:	b7e1                	j	20401da8 <_vfiprintf_r+0x176>
20401de2:	036787b3          	mul	a5,a5,s6
20401de6:	4685                	li	a3,1
20401de8:	842e                	mv	s0,a1
20401dea:	97ba                	add	a5,a5,a4
20401dec:	bf25                	j	20401d24 <_vfiprintf_r+0xf2>
20401dee:	57fd                	li	a5,-1
20401df0:	b7c5                	j	20401dd0 <_vfiprintf_r+0x19e>
20401df2:	0405                	addi	s0,s0,1
20401df4:	ca02                	sw	zero,20(sp)
20401df6:	4681                	li	a3,0
20401df8:	4781                	li	a5,0
20401dfa:	4625                	li	a2,9
20401dfc:	00044703          	lbu	a4,0(s0)
20401e00:	00140593          	addi	a1,s0,1
20401e04:	fd070713          	addi	a4,a4,-48
20401e08:	06e67863          	bgeu	a2,a4,20401e78 <_vfiprintf_r+0x246>
20401e0c:	f2f1                	bnez	a3,20401dd0 <_vfiprintf_r+0x19e>
20401e0e:	00044583          	lbu	a1,0(s0)
20401e12:	460d                	li	a2,3
20401e14:	ffffe517          	auipc	a0,0xffffe
20401e18:	60c50513          	addi	a0,a0,1548 # 20400420 <__sf_fake_stdout+0x28>
20401e1c:	21b000ef          	jal	ra,20402836 <memchr>
20401e20:	cd11                	beqz	a0,20401e3c <_vfiprintf_r+0x20a>
20401e22:	ffffe797          	auipc	a5,0xffffe
20401e26:	5fe78793          	addi	a5,a5,1534 # 20400420 <__sf_fake_stdout+0x28>
20401e2a:	8d1d                	sub	a0,a0,a5
20401e2c:	04000793          	li	a5,64
20401e30:	00a797b3          	sll	a5,a5,a0
20401e34:	4542                	lw	a0,16(sp)
20401e36:	0405                	addi	s0,s0,1
20401e38:	8d5d                	or	a0,a0,a5
20401e3a:	c82a                	sw	a0,16(sp)
20401e3c:	00044583          	lbu	a1,0(s0)
20401e40:	4619                	li	a2,6
20401e42:	ffffe517          	auipc	a0,0xffffe
20401e46:	5e250513          	addi	a0,a0,1506 # 20400424 <__sf_fake_stdout+0x2c>
20401e4a:	00140913          	addi	s2,s0,1
20401e4e:	02b10423          	sb	a1,40(sp)
20401e52:	1e5000ef          	jal	ra,20402836 <memchr>
20401e56:	c13d                	beqz	a0,20401ebc <_vfiprintf_r+0x28a>
20401e58:	dfbfe797          	auipc	a5,0xdfbfe
20401e5c:	1a878793          	addi	a5,a5,424 # 0 <__metal_boot_hart>
20401e60:	e795                	bnez	a5,20401e8c <_vfiprintf_r+0x25a>
20401e62:	4742                	lw	a4,16(sp)
20401e64:	47b2                	lw	a5,12(sp)
20401e66:	10077713          	andi	a4,a4,256
20401e6a:	cf09                	beqz	a4,20401e84 <_vfiprintf_r+0x252>
20401e6c:	0791                	addi	a5,a5,4
20401e6e:	c63e                	sw	a5,12(sp)
20401e70:	5792                	lw	a5,36(sp)
20401e72:	97d2                	add	a5,a5,s4
20401e74:	d23e                	sw	a5,36(sp)
20401e76:	b515                	j	20401c9a <_vfiprintf_r+0x68>
20401e78:	036787b3          	mul	a5,a5,s6
20401e7c:	4685                	li	a3,1
20401e7e:	842e                	mv	s0,a1
20401e80:	97ba                	add	a5,a5,a4
20401e82:	bfad                	j	20401dfc <_vfiprintf_r+0x1ca>
20401e84:	079d                	addi	a5,a5,7
20401e86:	9be1                	andi	a5,a5,-8
20401e88:	07a1                	addi	a5,a5,8
20401e8a:	b7d5                	j	20401e6e <_vfiprintf_r+0x23c>
20401e8c:	0078                	addi	a4,sp,12
20401e8e:	00000697          	auipc	a3,0x0
20401e92:	d6268693          	addi	a3,a3,-670 # 20401bf0 <__sfputs_r>
20401e96:	8626                	mv	a2,s1
20401e98:	080c                	addi	a1,sp,16
20401e9a:	854e                	mv	a0,s3
20401e9c:	00000097          	auipc	ra,0x0
20401ea0:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20401ea4:	57fd                	li	a5,-1
20401ea6:	8a2a                	mv	s4,a0
20401ea8:	fcf514e3          	bne	a0,a5,20401e70 <_vfiprintf_r+0x23e>
20401eac:	00c4d783          	lhu	a5,12(s1)
20401eb0:	0407f793          	andi	a5,a5,64
20401eb4:	ea079ae3          	bnez	a5,20401d68 <_vfiprintf_r+0x136>
20401eb8:	5512                	lw	a0,36(sp)
20401eba:	bd45                	j	20401d6a <_vfiprintf_r+0x138>
20401ebc:	0078                	addi	a4,sp,12
20401ebe:	00000697          	auipc	a3,0x0
20401ec2:	d3268693          	addi	a3,a3,-718 # 20401bf0 <__sfputs_r>
20401ec6:	8626                	mv	a2,s1
20401ec8:	080c                	addi	a1,sp,16
20401eca:	854e                	mv	a0,s3
20401ecc:	303000ef          	jal	ra,204029ce <_printf_i>
20401ed0:	bfd1                	j	20401ea4 <_vfiprintf_r+0x272>

20401ed2 <__svfiscanf_r>:
__svfiscanf_r():
20401ed2:	d4010113          	addi	sp,sp,-704
20401ed6:	00000797          	auipc	a5,0x0
20401eda:	76a78793          	addi	a5,a5,1898 # 20402640 <_ungetc_r>
20401ede:	2b312623          	sw	s3,684(sp)
20401ee2:	28f12423          	sw	a5,648(sp)
20401ee6:	00c10993          	addi	s3,sp,12
20401eea:	00000797          	auipc	a5,0x0
20401eee:	40278793          	addi	a5,a5,1026 # 204022ec <__srefill_r>
20401ef2:	2a812c23          	sw	s0,696(sp)
20401ef6:	2a912a23          	sw	s1,692(sp)
20401efa:	2b212823          	sw	s2,688(sp)
20401efe:	2b412423          	sw	s4,680(sp)
20401f02:	2b512223          	sw	s5,676(sp)
20401f06:	2b612023          	sw	s6,672(sp)
20401f0a:	29712e23          	sw	s7,668(sp)
20401f0e:	2a112e23          	sw	ra,700(sp)
20401f12:	29812c23          	sw	s8,664(sp)
20401f16:	29912a23          	sw	s9,660(sp)
20401f1a:	29a12823          	sw	s10,656(sp)
20401f1e:	84aa                	mv	s1,a0
20401f20:	842e                	mv	s0,a1
20401f22:	10012c23          	sw	zero,280(sp)
20401f26:	10012e23          	sw	zero,284(sp)
20401f2a:	13312023          	sw	s3,288(sp)
20401f2e:	28f12623          	sw	a5,652(sp)
20401f32:	c436                	sw	a3,8(sp)
20401f34:	ffffe917          	auipc	s2,0xffffe
20401f38:	4f990913          	addi	s2,s2,1273 # 2040042d <_ctype_+0x1>
20401f3c:	02500a13          	li	s4,37
20401f40:	02a00a93          	li	s5,42
20401f44:	4b25                	li	s6,9
20401f46:	dfbfeb97          	auipc	s7,0xdfbfe
20401f4a:	0bab8b93          	addi	s7,s7,186 # 0 <__metal_boot_hart>
20401f4e:	00064d03          	lbu	s10,0(a2)
20401f52:	320d0563          	beqz	s10,2040227c <__svfiscanf_r+0x3aa>
20401f56:	012d07b3          	add	a5,s10,s2
20401f5a:	0007c783          	lbu	a5,0(a5)
20401f5e:	00160c13          	addi	s8,a2,1
20401f62:	8ba1                	andi	a5,a5,8
20401f64:	c3a1                	beqz	a5,20401fa4 <__svfiscanf_r+0xd2>
20401f66:	405c                	lw	a5,4(s0)
20401f68:	02f05763          	blez	a5,20401f96 <__svfiscanf_r+0xc4>
20401f6c:	401c                	lw	a5,0(s0)
20401f6e:	0007c703          	lbu	a4,0(a5)
20401f72:	974a                	add	a4,a4,s2
20401f74:	00074703          	lbu	a4,0(a4)
20401f78:	8b21                	andi	a4,a4,8
20401f7a:	e319                	bnez	a4,20401f80 <__svfiscanf_r+0xae>
20401f7c:	8662                	mv	a2,s8
20401f7e:	bfc1                	j	20401f4e <__svfiscanf_r+0x7c>
20401f80:	11c12703          	lw	a4,284(sp)
20401f84:	0785                	addi	a5,a5,1
20401f86:	c01c                	sw	a5,0(s0)
20401f88:	0705                	addi	a4,a4,1
20401f8a:	10e12e23          	sw	a4,284(sp)
20401f8e:	4058                	lw	a4,4(s0)
20401f90:	177d                	addi	a4,a4,-1
20401f92:	c058                	sw	a4,4(s0)
20401f94:	bfc9                	j	20401f66 <__svfiscanf_r+0x94>
20401f96:	28c12783          	lw	a5,652(sp)
20401f9a:	85a2                	mv	a1,s0
20401f9c:	8526                	mv	a0,s1
20401f9e:	9782                	jalr	a5
20401fa0:	d571                	beqz	a0,20401f6c <__svfiscanf_r+0x9a>
20401fa2:	bfe9                	j	20401f7c <__svfiscanf_r+0xaa>
20401fa4:	194d1263          	bne	s10,s4,20402128 <__svfiscanf_r+0x256>
20401fa8:	10012a23          	sw	zero,276(sp)
20401fac:	10012623          	sw	zero,268(sp)
20401fb0:	00164783          	lbu	a5,1(a2)
20401fb4:	01579763          	bne	a5,s5,20401fc2 <__svfiscanf_r+0xf0>
20401fb8:	47c1                	li	a5,16
20401fba:	10f12623          	sw	a5,268(sp)
20401fbe:	00260c13          	addi	s8,a2,2
20401fc2:	8ce2                	mv	s9,s8
20401fc4:	4729                	li	a4,10
20401fc6:	000cc583          	lbu	a1,0(s9)
20401fca:	001c8c13          	addi	s8,s9,1
20401fce:	fd058793          	addi	a5,a1,-48
20401fd2:	06fb7763          	bgeu	s6,a5,20402040 <__svfiscanf_r+0x16e>
20401fd6:	460d                	li	a2,3
20401fd8:	ffffe517          	auipc	a0,0xffffe
20401fdc:	44850513          	addi	a0,a0,1096 # 20400420 <__sf_fake_stdout+0x28>
20401fe0:	057000ef          	jal	ra,20402836 <memchr>
20401fe4:	cd19                	beqz	a0,20402002 <__svfiscanf_r+0x130>
20401fe6:	ffffe797          	auipc	a5,0xffffe
20401fea:	43a78793          	addi	a5,a5,1082 # 20400420 <__sf_fake_stdout+0x28>
20401fee:	8d1d                	sub	a0,a0,a5
20401ff0:	4785                	li	a5,1
20401ff2:	00a797b3          	sll	a5,a5,a0
20401ff6:	10c12503          	lw	a0,268(sp)
20401ffa:	8ce2                	mv	s9,s8
20401ffc:	8d5d                	or	a0,a0,a5
20401ffe:	10a12623          	sw	a0,268(sp)
20402002:	000cc783          	lbu	a5,0(s9)
20402006:	06700713          	li	a4,103
2040200a:	001c8c13          	addi	s8,s9,1
2040200e:	0cf76b63          	bltu	a4,a5,204020e4 <__svfiscanf_r+0x212>
20402012:	06500713          	li	a4,101
20402016:	1ae7ff63          	bgeu	a5,a4,204021d4 <__svfiscanf_r+0x302>
2040201a:	04700713          	li	a4,71
2040201e:	02f76c63          	bltu	a4,a5,20402056 <__svfiscanf_r+0x184>
20402022:	04500713          	li	a4,69
20402026:	1ae7f763          	bgeu	a5,a4,204021d4 <__svfiscanf_r+0x302>
2040202a:	12078b63          	beqz	a5,20402160 <__svfiscanf_r+0x28e>
2040202e:	0f478d63          	beq	a5,s4,20402128 <__svfiscanf_r+0x256>
20402032:	478d                	li	a5,3
20402034:	12f12223          	sw	a5,292(sp)
20402038:	47a9                	li	a5,10
2040203a:	10f12823          	sw	a5,272(sp)
2040203e:	a0b1                	j	2040208a <__svfiscanf_r+0x1b8>
20402040:	11412783          	lw	a5,276(sp)
20402044:	8ce2                	mv	s9,s8
20402046:	02f707b3          	mul	a5,a4,a5
2040204a:	fd078793          	addi	a5,a5,-48
2040204e:	97ae                	add	a5,a5,a1
20402050:	10f12a23          	sw	a5,276(sp)
20402054:	bf8d                	j	20401fc6 <__svfiscanf_r+0xf4>
20402056:	05b00713          	li	a4,91
2040205a:	12e78163          	beq	a5,a4,2040217c <__svfiscanf_r+0x2aa>
2040205e:	06f76963          	bltu	a4,a5,204020d0 <__svfiscanf_r+0x1fe>
20402062:	05800713          	li	a4,88
20402066:	fce796e3          	bne	a5,a4,20402032 <__svfiscanf_r+0x160>
2040206a:	10c12703          	lw	a4,268(sp)
2040206e:	20076713          	ori	a4,a4,512
20402072:	10e12623          	sw	a4,268(sp)
20402076:	4741                	li	a4,16
20402078:	10e12823          	sw	a4,272(sp)
2040207c:	06e00713          	li	a4,110
20402080:	00f737b3          	sltu	a5,a4,a5
20402084:	078d                	addi	a5,a5,3
20402086:	12f12223          	sw	a5,292(sp)
2040208a:	405c                	lw	a5,4(s0)
2040208c:	14f05663          	blez	a5,204021d8 <__svfiscanf_r+0x306>
20402090:	10c12783          	lw	a5,268(sp)
20402094:	0407f793          	andi	a5,a5,64
20402098:	eb91                	bnez	a5,204020ac <__svfiscanf_r+0x1da>
2040209a:	401c                	lw	a5,0(s0)
2040209c:	0007c703          	lbu	a4,0(a5)
204020a0:	974a                	add	a4,a4,s2
204020a2:	00074703          	lbu	a4,0(a4)
204020a6:	8b21                	andi	a4,a4,8
204020a8:	14071063          	bnez	a4,204021e8 <__svfiscanf_r+0x316>
204020ac:	12412783          	lw	a5,292(sp)
204020b0:	4709                	li	a4,2
204020b2:	16f74063          	blt	a4,a5,20402212 <__svfiscanf_r+0x340>
204020b6:	0034                	addi	a3,sp,8
204020b8:	8622                	mv	a2,s0
204020ba:	026c                	addi	a1,sp,268
204020bc:	8526                	mv	a0,s1
204020be:	3b3000ef          	jal	ra,20402c70 <_scanf_chars>
204020c2:	4785                	li	a5,1
204020c4:	1af50c63          	beq	a0,a5,2040227c <__svfiscanf_r+0x3aa>
204020c8:	4789                	li	a5,2
204020ca:	eaf519e3          	bne	a0,a5,20401f7c <__svfiscanf_r+0xaa>
204020ce:	a071                	j	2040215a <__svfiscanf_r+0x288>
204020d0:	06300713          	li	a4,99
204020d4:	0ce78063          	beq	a5,a4,20402194 <__svfiscanf_r+0x2c2>
204020d8:	06400713          	li	a4,100
204020dc:	f4e79be3          	bne	a5,a4,20402032 <__svfiscanf_r+0x160>
204020e0:	4729                	li	a4,10
204020e2:	bf59                	j	20402078 <__svfiscanf_r+0x1a6>
204020e4:	07000713          	li	a4,112
204020e8:	06e78e63          	beq	a5,a4,20402164 <__svfiscanf_r+0x292>
204020ec:	02f76063          	bltu	a4,a5,2040210c <__svfiscanf_r+0x23a>
204020f0:	06e00713          	li	a4,110
204020f4:	0ae78963          	beq	a5,a4,204021a6 <__svfiscanf_r+0x2d4>
204020f8:	06f76d63          	bltu	a4,a5,20402172 <__svfiscanf_r+0x2a0>
204020fc:	06900713          	li	a4,105
20402100:	f2e799e3          	bne	a5,a4,20402032 <__svfiscanf_r+0x160>
20402104:	10012823          	sw	zero,272(sp)
20402108:	478d                	li	a5,3
2040210a:	bfb5                	j	20402086 <__svfiscanf_r+0x1b4>
2040210c:	07500713          	li	a4,117
20402110:	fce788e3          	beq	a5,a4,204020e0 <__svfiscanf_r+0x20e>
20402114:	07800713          	li	a4,120
20402118:	f4e789e3          	beq	a5,a4,2040206a <__svfiscanf_r+0x198>
2040211c:	07300713          	li	a4,115
20402120:	f0e799e3          	bne	a5,a4,20402032 <__svfiscanf_r+0x160>
20402124:	4789                	li	a5,2
20402126:	b785                	j	20402086 <__svfiscanf_r+0x1b4>
20402128:	405c                	lw	a5,4(s0)
2040212a:	02f05263          	blez	a5,2040214e <__svfiscanf_r+0x27c>
2040212e:	401c                	lw	a5,0(s0)
20402130:	0007c703          	lbu	a4,0(a5)
20402134:	15a71463          	bne	a4,s10,2040227c <__svfiscanf_r+0x3aa>
20402138:	0785                	addi	a5,a5,1
2040213a:	4058                	lw	a4,4(s0)
2040213c:	c01c                	sw	a5,0(s0)
2040213e:	11c12783          	lw	a5,284(sp)
20402142:	177d                	addi	a4,a4,-1
20402144:	c058                	sw	a4,4(s0)
20402146:	0785                	addi	a5,a5,1
20402148:	10f12e23          	sw	a5,284(sp)
2040214c:	bd05                	j	20401f7c <__svfiscanf_r+0xaa>
2040214e:	28c12783          	lw	a5,652(sp)
20402152:	85a2                	mv	a1,s0
20402154:	8526                	mv	a0,s1
20402156:	9782                	jalr	a5
20402158:	d979                	beqz	a0,2040212e <__svfiscanf_r+0x25c>
2040215a:	11812503          	lw	a0,280(sp)
2040215e:	ed79                	bnez	a0,2040223c <__svfiscanf_r+0x36a>
20402160:	557d                	li	a0,-1
20402162:	a0d5                	j	20402246 <__svfiscanf_r+0x374>
20402164:	10c12703          	lw	a4,268(sp)
20402168:	02076713          	ori	a4,a4,32
2040216c:	10e12623          	sw	a4,268(sp)
20402170:	bded                	j	2040206a <__svfiscanf_r+0x198>
20402172:	47a1                	li	a5,8
20402174:	10f12823          	sw	a5,272(sp)
20402178:	4791                	li	a5,4
2040217a:	b731                	j	20402086 <__svfiscanf_r+0x1b4>
2040217c:	85e2                	mv	a1,s8
2040217e:	854e                	mv	a0,s3
20402180:	24fd                	jal	2040246e <__sccl>
20402182:	10c12783          	lw	a5,268(sp)
20402186:	8c2a                	mv	s8,a0
20402188:	0407e793          	ori	a5,a5,64
2040218c:	10f12623          	sw	a5,268(sp)
20402190:	4785                	li	a5,1
20402192:	bdd5                	j	20402086 <__svfiscanf_r+0x1b4>
20402194:	10c12783          	lw	a5,268(sp)
20402198:	12012223          	sw	zero,292(sp)
2040219c:	0407e793          	ori	a5,a5,64
204021a0:	10f12623          	sw	a5,268(sp)
204021a4:	b5dd                	j	2040208a <__svfiscanf_r+0x1b8>
204021a6:	10c12783          	lw	a5,268(sp)
204021aa:	0107f713          	andi	a4,a5,16
204021ae:	dc0717e3          	bnez	a4,20401f7c <__svfiscanf_r+0xaa>
204021b2:	4722                	lw	a4,8(sp)
204021b4:	0017f593          	andi	a1,a5,1
204021b8:	11c12683          	lw	a3,284(sp)
204021bc:	00470613          	addi	a2,a4,4
204021c0:	c591                	beqz	a1,204021cc <__svfiscanf_r+0x2fa>
204021c2:	c432                	sw	a2,8(sp)
204021c4:	431c                	lw	a5,0(a4)
204021c6:	00d79023          	sh	a3,0(a5)
204021ca:	bb4d                	j	20401f7c <__svfiscanf_r+0xaa>
204021cc:	c432                	sw	a2,8(sp)
204021ce:	431c                	lw	a5,0(a4)
204021d0:	c394                	sw	a3,0(a5)
204021d2:	b36d                	j	20401f7c <__svfiscanf_r+0xaa>
204021d4:	4795                	li	a5,5
204021d6:	bd45                	j	20402086 <__svfiscanf_r+0x1b4>
204021d8:	28c12783          	lw	a5,652(sp)
204021dc:	85a2                	mv	a1,s0
204021de:	8526                	mv	a0,s1
204021e0:	9782                	jalr	a5
204021e2:	ea0507e3          	beqz	a0,20402090 <__svfiscanf_r+0x1be>
204021e6:	bf95                	j	2040215a <__svfiscanf_r+0x288>
204021e8:	11c12703          	lw	a4,284(sp)
204021ec:	0705                	addi	a4,a4,1
204021ee:	10e12e23          	sw	a4,284(sp)
204021f2:	4058                	lw	a4,4(s0)
204021f4:	177d                	addi	a4,a4,-1
204021f6:	c058                	sw	a4,4(s0)
204021f8:	00e05563          	blez	a4,20402202 <__svfiscanf_r+0x330>
204021fc:	0785                	addi	a5,a5,1
204021fe:	c01c                	sw	a5,0(s0)
20402200:	bd69                	j	2040209a <__svfiscanf_r+0x1c8>
20402202:	28c12783          	lw	a5,652(sp)
20402206:	85a2                	mv	a1,s0
20402208:	8526                	mv	a0,s1
2040220a:	9782                	jalr	a5
2040220c:	e80507e3          	beqz	a0,2040209a <__svfiscanf_r+0x1c8>
20402210:	b7a9                	j	2040215a <__svfiscanf_r+0x288>
20402212:	4711                	li	a4,4
20402214:	00f74963          	blt	a4,a5,20402226 <__svfiscanf_r+0x354>
20402218:	0034                	addi	a3,sp,8
2040221a:	8622                	mv	a2,s0
2040221c:	026c                	addi	a1,sp,268
2040221e:	8526                	mv	a0,s1
20402220:	331000ef          	jal	ra,20402d50 <_scanf_i>
20402224:	bd79                	j	204020c2 <__svfiscanf_r+0x1f0>
20402226:	d40b8be3          	beqz	s7,20401f7c <__svfiscanf_r+0xaa>
2040222a:	0034                	addi	a3,sp,8
2040222c:	8622                	mv	a2,s0
2040222e:	026c                	addi	a1,sp,268
20402230:	8526                	mv	a0,s1
20402232:	00000097          	auipc	ra,0x0
20402236:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
2040223a:	b561                	j	204020c2 <__svfiscanf_r+0x1f0>
2040223c:	00c45783          	lhu	a5,12(s0)
20402240:	0407f793          	andi	a5,a5,64
20402244:	ff91                	bnez	a5,20402160 <__svfiscanf_r+0x28e>
20402246:	2bc12083          	lw	ra,700(sp)
2040224a:	2b812403          	lw	s0,696(sp)
2040224e:	2b412483          	lw	s1,692(sp)
20402252:	2b012903          	lw	s2,688(sp)
20402256:	2ac12983          	lw	s3,684(sp)
2040225a:	2a812a03          	lw	s4,680(sp)
2040225e:	2a412a83          	lw	s5,676(sp)
20402262:	2a012b03          	lw	s6,672(sp)
20402266:	29c12b83          	lw	s7,668(sp)
2040226a:	29812c03          	lw	s8,664(sp)
2040226e:	29412c83          	lw	s9,660(sp)
20402272:	29012d03          	lw	s10,656(sp)
20402276:	2c010113          	addi	sp,sp,704
2040227a:	8082                	ret
2040227c:	11812503          	lw	a0,280(sp)
20402280:	b7d9                	j	20402246 <__svfiscanf_r+0x374>

20402282 <_vfiscanf_r>:
_vfiscanf_r():
20402282:	1101                	addi	sp,sp,-32
20402284:	cc22                	sw	s0,24(sp)
20402286:	ce06                	sw	ra,28(sp)
20402288:	842a                	mv	s0,a0
2040228a:	c919                	beqz	a0,204022a0 <_vfiscanf_r+0x1e>
2040228c:	4d1c                	lw	a5,24(a0)
2040228e:	eb89                	bnez	a5,204022a0 <_vfiscanf_r+0x1e>
20402290:	c636                	sw	a3,12(sp)
20402292:	c432                	sw	a2,8(sp)
20402294:	c22e                	sw	a1,4(sp)
20402296:	cb8ff0ef          	jal	ra,2040174e <__sinit>
2040229a:	46b2                	lw	a3,12(sp)
2040229c:	4622                	lw	a2,8(sp)
2040229e:	4592                	lw	a1,4(sp)
204022a0:	ffffe797          	auipc	a5,0xffffe
204022a4:	13878793          	addi	a5,a5,312 # 204003d8 <__sf_fake_stdin>
204022a8:	00f59863          	bne	a1,a5,204022b8 <_vfiscanf_r+0x36>
204022ac:	404c                	lw	a1,4(s0)
204022ae:	8522                	mv	a0,s0
204022b0:	4462                	lw	s0,24(sp)
204022b2:	40f2                	lw	ra,28(sp)
204022b4:	6105                	addi	sp,sp,32
204022b6:	b931                	j	20401ed2 <__svfiscanf_r>
204022b8:	ffffe797          	auipc	a5,0xffffe
204022bc:	14078793          	addi	a5,a5,320 # 204003f8 <__sf_fake_stdout>
204022c0:	00f59463          	bne	a1,a5,204022c8 <_vfiscanf_r+0x46>
204022c4:	440c                	lw	a1,8(s0)
204022c6:	b7e5                	j	204022ae <_vfiscanf_r+0x2c>
204022c8:	ffffe797          	auipc	a5,0xffffe
204022cc:	0f078793          	addi	a5,a5,240 # 204003b8 <__sf_fake_stderr>
204022d0:	fcf59fe3          	bne	a1,a5,204022ae <_vfiscanf_r+0x2c>
204022d4:	444c                	lw	a1,12(s0)
204022d6:	bfe1                	j	204022ae <_vfiscanf_r+0x2c>

204022d8 <lflush>:
lflush():
204022d8:	00c55783          	lhu	a5,12(a0)
204022dc:	4725                	li	a4,9
204022de:	8ba5                	andi	a5,a5,9
204022e0:	00e79463          	bne	a5,a4,204022e8 <lflush+0x10>
204022e4:	b90ff06f          	j	20401674 <fflush>
204022e8:	4501                	li	a0,0
204022ea:	8082                	ret

204022ec <__srefill_r>:
__srefill_r():
204022ec:	1101                	addi	sp,sp,-32
204022ee:	cc22                	sw	s0,24(sp)
204022f0:	ca26                	sw	s1,20(sp)
204022f2:	ce06                	sw	ra,28(sp)
204022f4:	c84a                	sw	s2,16(sp)
204022f6:	c64e                	sw	s3,12(sp)
204022f8:	84aa                	mv	s1,a0
204022fa:	842e                	mv	s0,a1
204022fc:	c509                	beqz	a0,20402306 <__srefill_r+0x1a>
204022fe:	4d1c                	lw	a5,24(a0)
20402300:	e399                	bnez	a5,20402306 <__srefill_r+0x1a>
20402302:	c4cff0ef          	jal	ra,2040174e <__sinit>
20402306:	ffffe797          	auipc	a5,0xffffe
2040230a:	0d278793          	addi	a5,a5,210 # 204003d8 <__sf_fake_stdin>
2040230e:	00f41f63          	bne	s0,a5,2040232c <__srefill_r+0x40>
20402312:	40c0                	lw	s0,4(s1)
20402314:	00c41703          	lh	a4,12(s0)
20402318:	00042223          	sw	zero,4(s0)
2040231c:	01071793          	slli	a5,a4,0x10
20402320:	83c1                	srli	a5,a5,0x10
20402322:	0207f693          	andi	a3,a5,32
20402326:	c29d                	beqz	a3,2040234c <__srefill_r+0x60>
20402328:	57fd                	li	a5,-1
2040232a:	a201                	j	2040242a <__srefill_r+0x13e>
2040232c:	ffffe797          	auipc	a5,0xffffe
20402330:	0cc78793          	addi	a5,a5,204 # 204003f8 <__sf_fake_stdout>
20402334:	00f41463          	bne	s0,a5,2040233c <__srefill_r+0x50>
20402338:	4480                	lw	s0,8(s1)
2040233a:	bfe9                	j	20402314 <__srefill_r+0x28>
2040233c:	ffffe797          	auipc	a5,0xffffe
20402340:	07c78793          	addi	a5,a5,124 # 204003b8 <__sf_fake_stderr>
20402344:	fcf418e3          	bne	s0,a5,20402314 <__srefill_r+0x28>
20402348:	44c0                	lw	s0,12(s1)
2040234a:	b7e9                	j	20402314 <__srefill_r+0x28>
2040234c:	0047f693          	andi	a3,a5,4
20402350:	eec5                	bnez	a3,20402408 <__srefill_r+0x11c>
20402352:	0107f693          	andi	a3,a5,16
20402356:	ea81                	bnez	a3,20402366 <__srefill_r+0x7a>
20402358:	47a5                	li	a5,9
2040235a:	c09c                	sw	a5,0(s1)
2040235c:	04076713          	ori	a4,a4,64
20402360:	00e41623          	sh	a4,12(s0)
20402364:	b7d1                	j	20402328 <__srefill_r+0x3c>
20402366:	8ba1                	andi	a5,a5,8
20402368:	cf99                	beqz	a5,20402386 <__srefill_r+0x9a>
2040236a:	85a2                	mv	a1,s0
2040236c:	8526                	mv	a0,s1
2040236e:	aa2ff0ef          	jal	ra,20401610 <_fflush_r>
20402372:	f95d                	bnez	a0,20402328 <__srefill_r+0x3c>
20402374:	00c45783          	lhu	a5,12(s0)
20402378:	00042423          	sw	zero,8(s0)
2040237c:	00042c23          	sw	zero,24(s0)
20402380:	9bdd                	andi	a5,a5,-9
20402382:	00f41623          	sh	a5,12(s0)
20402386:	00c45783          	lhu	a5,12(s0)
2040238a:	0047e793          	ori	a5,a5,4
2040238e:	00f41623          	sh	a5,12(s0)
20402392:	481c                	lw	a5,16(s0)
20402394:	e789                	bnez	a5,2040239e <__srefill_r+0xb2>
20402396:	85a2                	mv	a1,s0
20402398:	8526                	mv	a0,s1
2040239a:	de4ff0ef          	jal	ra,2040197e <__smakebuf_r>
2040239e:	00c41983          	lh	s3,12(s0)
204023a2:	01099913          	slli	s2,s3,0x10
204023a6:	01095913          	srli	s2,s2,0x10
204023aa:	00397793          	andi	a5,s2,3
204023ae:	cb95                	beqz	a5,204023e2 <__srefill_r+0xf6>
204023b0:	4785                	li	a5,1
204023b2:	00f41623          	sh	a5,12(s0)
204023b6:	5fbfe797          	auipc	a5,0x5fbfe
204023ba:	6c678793          	addi	a5,a5,1734 # 80000a7c <_global_impure_ptr>
204023be:	4388                	lw	a0,0(a5)
204023c0:	00000597          	auipc	a1,0x0
204023c4:	f1858593          	addi	a1,a1,-232 # 204022d8 <lflush>
204023c8:	00997913          	andi	s2,s2,9
204023cc:	c8aff0ef          	jal	ra,20401856 <_fwalk>
204023d0:	47a5                	li	a5,9
204023d2:	01341623          	sh	s3,12(s0)
204023d6:	00f91663          	bne	s2,a5,204023e2 <__srefill_r+0xf6>
204023da:	85a2                	mv	a1,s0
204023dc:	8526                	mv	a0,s1
204023de:	8e8ff0ef          	jal	ra,204014c6 <__sflush_r>
204023e2:	4810                	lw	a2,16(s0)
204023e4:	505c                	lw	a5,36(s0)
204023e6:	4854                	lw	a3,20(s0)
204023e8:	500c                	lw	a1,32(s0)
204023ea:	c010                	sw	a2,0(s0)
204023ec:	8526                	mv	a0,s1
204023ee:	9782                	jalr	a5
204023f0:	c048                	sw	a0,4(s0)
204023f2:	4781                	li	a5,0
204023f4:	02a04b63          	bgtz	a0,2040242a <__srefill_r+0x13e>
204023f8:	00c41783          	lh	a5,12(s0)
204023fc:	ed1d                	bnez	a0,2040243a <__srefill_r+0x14e>
204023fe:	0207e793          	ori	a5,a5,32
20402402:	00f41623          	sh	a5,12(s0)
20402406:	b70d                	j	20402328 <__srefill_r+0x3c>
20402408:	584c                	lw	a1,52(s0)
2040240a:	d5c1                	beqz	a1,20402392 <__srefill_r+0xa6>
2040240c:	04440793          	addi	a5,s0,68
20402410:	00f58563          	beq	a1,a5,2040241a <__srefill_r+0x12e>
20402414:	8526                	mv	a0,s1
20402416:	e16ff0ef          	jal	ra,20401a2c <_free_r>
2040241a:	403c                	lw	a5,64(s0)
2040241c:	02042a23          	sw	zero,52(s0)
20402420:	c05c                	sw	a5,4(s0)
20402422:	dba5                	beqz	a5,20402392 <__srefill_r+0xa6>
20402424:	5c5c                	lw	a5,60(s0)
20402426:	c01c                	sw	a5,0(s0)
20402428:	4781                	li	a5,0
2040242a:	40f2                	lw	ra,28(sp)
2040242c:	4462                	lw	s0,24(sp)
2040242e:	44d2                	lw	s1,20(sp)
20402430:	4942                	lw	s2,16(sp)
20402432:	49b2                	lw	s3,12(sp)
20402434:	853e                	mv	a0,a5
20402436:	6105                	addi	sp,sp,32
20402438:	8082                	ret
2040243a:	00042223          	sw	zero,4(s0)
2040243e:	0407e793          	ori	a5,a5,64
20402442:	b7c1                	j	20402402 <__srefill_r+0x116>

20402444 <_sbrk_r>:
_sbrk_r():
20402444:	1141                	addi	sp,sp,-16
20402446:	c422                	sw	s0,8(sp)
20402448:	842a                	mv	s0,a0
2040244a:	852e                	mv	a0,a1
2040244c:	8e01a423          	sw	zero,-1816(gp) # 80000b60 <errno>
20402450:	c606                	sw	ra,12(sp)
20402452:	6a9000ef          	jal	ra,204032fa <_sbrk>
20402456:	57fd                	li	a5,-1
20402458:	00f51763          	bne	a0,a5,20402466 <_sbrk_r+0x22>
2040245c:	8e818793          	addi	a5,gp,-1816 # 80000b60 <errno>
20402460:	439c                	lw	a5,0(a5)
20402462:	c391                	beqz	a5,20402466 <_sbrk_r+0x22>
20402464:	c01c                	sw	a5,0(s0)
20402466:	40b2                	lw	ra,12(sp)
20402468:	4422                	lw	s0,8(sp)
2040246a:	0141                	addi	sp,sp,16
2040246c:	8082                	ret

2040246e <__sccl>:
__sccl():
2040246e:	0005c783          	lbu	a5,0(a1)
20402472:	05e00713          	li	a4,94
20402476:	04e78863          	beq	a5,a4,204024c6 <__sccl+0x58>
2040247a:	00158713          	addi	a4,a1,1
2040247e:	4681                	li	a3,0
20402480:	4601                	li	a2,0
20402482:	10000593          	li	a1,256
20402486:	00c50833          	add	a6,a0,a2
2040248a:	00d80023          	sb	a3,0(a6)
2040248e:	0605                	addi	a2,a2,1
20402490:	feb61be3          	bne	a2,a1,20402486 <__sccl+0x18>
20402494:	fff70613          	addi	a2,a4,-1
20402498:	c78d                	beqz	a5,204024c2 <__sccl+0x54>
2040249a:	0016c693          	xori	a3,a3,1
2040249e:	02d00893          	li	a7,45
204024a2:	05d00813          	li	a6,93
204024a6:	00f50633          	add	a2,a0,a5
204024aa:	00d60023          	sb	a3,0(a2)
204024ae:	00074583          	lbu	a1,0(a4)
204024b2:	00170613          	addi	a2,a4,1
204024b6:	03158463          	beq	a1,a7,204024de <__sccl+0x70>
204024ba:	01058463          	beq	a1,a6,204024c2 <__sccl+0x54>
204024be:	e991                	bnez	a1,204024d2 <__sccl+0x64>
204024c0:	863a                	mv	a2,a4
204024c2:	8532                	mv	a0,a2
204024c4:	8082                	ret
204024c6:	00258713          	addi	a4,a1,2
204024ca:	0015c783          	lbu	a5,1(a1)
204024ce:	4685                	li	a3,1
204024d0:	bf45                	j	20402480 <__sccl+0x12>
204024d2:	87ae                	mv	a5,a1
204024d4:	8732                	mv	a4,a2
204024d6:	bfc1                	j	204024a6 <__sccl+0x38>
204024d8:	02d00793          	li	a5,45
204024dc:	bfe5                	j	204024d4 <__sccl+0x66>
204024de:	00174583          	lbu	a1,1(a4)
204024e2:	ff058be3          	beq	a1,a6,204024d8 <__sccl+0x6a>
204024e6:	fef5c9e3          	blt	a1,a5,204024d8 <__sccl+0x6a>
204024ea:	0709                	addi	a4,a4,2
204024ec:	0785                	addi	a5,a5,1
204024ee:	00f50633          	add	a2,a0,a5
204024f2:	00d60023          	sb	a3,0(a2)
204024f6:	feb7cbe3          	blt	a5,a1,204024ec <__sccl+0x7e>
204024fa:	bf55                	j	204024ae <__sccl+0x40>

204024fc <__sread>:
__sread():
204024fc:	1141                	addi	sp,sp,-16
204024fe:	c422                	sw	s0,8(sp)
20402500:	842e                	mv	s0,a1
20402502:	00e59583          	lh	a1,14(a1)
20402506:	c606                	sw	ra,12(sp)
20402508:	2ab000ef          	jal	ra,20402fb2 <_read_r>
2040250c:	00054963          	bltz	a0,2040251e <__sread+0x22>
20402510:	487c                	lw	a5,84(s0)
20402512:	97aa                	add	a5,a5,a0
20402514:	c87c                	sw	a5,84(s0)
20402516:	40b2                	lw	ra,12(sp)
20402518:	4422                	lw	s0,8(sp)
2040251a:	0141                	addi	sp,sp,16
2040251c:	8082                	ret
2040251e:	00c45783          	lhu	a5,12(s0)
20402522:	777d                	lui	a4,0xfffff
20402524:	177d                	addi	a4,a4,-1
20402526:	8ff9                	and	a5,a5,a4
20402528:	00f41623          	sh	a5,12(s0)
2040252c:	b7ed                	j	20402516 <__sread+0x1a>

2040252e <__swrite>:
__swrite():
2040252e:	00c5d783          	lhu	a5,12(a1)
20402532:	1101                	addi	sp,sp,-32
20402534:	cc22                	sw	s0,24(sp)
20402536:	ca26                	sw	s1,20(sp)
20402538:	c84a                	sw	s2,16(sp)
2040253a:	c64e                	sw	s3,12(sp)
2040253c:	ce06                	sw	ra,28(sp)
2040253e:	1007f793          	andi	a5,a5,256
20402542:	84aa                	mv	s1,a0
20402544:	842e                	mv	s0,a1
20402546:	8932                	mv	s2,a2
20402548:	89b6                	mv	s3,a3
2040254a:	c791                	beqz	a5,20402556 <__swrite+0x28>
2040254c:	00e59583          	lh	a1,14(a1)
20402550:	4689                	li	a3,2
20402552:	4601                	li	a2,0
20402554:	2c55                	jal	20402808 <_lseek_r>
20402556:	00c45783          	lhu	a5,12(s0)
2040255a:	777d                	lui	a4,0xfffff
2040255c:	177d                	addi	a4,a4,-1
2040255e:	8ff9                	and	a5,a5,a4
20402560:	00f41623          	sh	a5,12(s0)
20402564:	00e41583          	lh	a1,14(s0)
20402568:	4462                	lw	s0,24(sp)
2040256a:	40f2                	lw	ra,28(sp)
2040256c:	86ce                	mv	a3,s3
2040256e:	864a                	mv	a2,s2
20402570:	49b2                	lw	s3,12(sp)
20402572:	4942                	lw	s2,16(sp)
20402574:	8526                	mv	a0,s1
20402576:	44d2                	lw	s1,20(sp)
20402578:	6105                	addi	sp,sp,32
2040257a:	a2c5                	j	2040275a <_write_r>

2040257c <__sseek>:
__sseek():
2040257c:	1141                	addi	sp,sp,-16
2040257e:	c422                	sw	s0,8(sp)
20402580:	842e                	mv	s0,a1
20402582:	00e59583          	lh	a1,14(a1)
20402586:	c606                	sw	ra,12(sp)
20402588:	2441                	jal	20402808 <_lseek_r>
2040258a:	57fd                	li	a5,-1
2040258c:	00c45703          	lhu	a4,12(s0)
20402590:	00f51b63          	bne	a0,a5,204025a6 <__sseek+0x2a>
20402594:	77fd                	lui	a5,0xfffff
20402596:	17fd                	addi	a5,a5,-1
20402598:	8ff9                	and	a5,a5,a4
2040259a:	00f41623          	sh	a5,12(s0)
2040259e:	40b2                	lw	ra,12(sp)
204025a0:	4422                	lw	s0,8(sp)
204025a2:	0141                	addi	sp,sp,16
204025a4:	8082                	ret
204025a6:	6785                	lui	a5,0x1
204025a8:	8fd9                	or	a5,a5,a4
204025aa:	00f41623          	sh	a5,12(s0)
204025ae:	c868                	sw	a0,84(s0)
204025b0:	b7fd                	j	2040259e <__sseek+0x22>

204025b2 <__sclose>:
__sclose():
204025b2:	00e59583          	lh	a1,14(a1)
204025b6:	aac9                	j	20402788 <_close_r>

204025b8 <__submore>:
__submore():
204025b8:	1101                	addi	sp,sp,-32
204025ba:	cc22                	sw	s0,24(sp)
204025bc:	842e                	mv	s0,a1
204025be:	59cc                	lw	a1,52(a1)
204025c0:	ce06                	sw	ra,28(sp)
204025c2:	ca26                	sw	s1,20(sp)
204025c4:	c84a                	sw	s2,16(sp)
204025c6:	c64e                	sw	s3,12(sp)
204025c8:	c452                	sw	s4,8(sp)
204025ca:	04440793          	addi	a5,s0,68
204025ce:	04f59563          	bne	a1,a5,20402618 <__submore+0x60>
204025d2:	40000593          	li	a1,1024
204025d6:	d06ff0ef          	jal	ra,20401adc <_malloc_r>
204025da:	e911                	bnez	a0,204025ee <__submore+0x36>
204025dc:	557d                	li	a0,-1
204025de:	40f2                	lw	ra,28(sp)
204025e0:	4462                	lw	s0,24(sp)
204025e2:	44d2                	lw	s1,20(sp)
204025e4:	4942                	lw	s2,16(sp)
204025e6:	49b2                	lw	s3,12(sp)
204025e8:	4a22                	lw	s4,8(sp)
204025ea:	6105                	addi	sp,sp,32
204025ec:	8082                	ret
204025ee:	40000793          	li	a5,1024
204025f2:	dc1c                	sw	a5,56(s0)
204025f4:	04644783          	lbu	a5,70(s0)
204025f8:	d848                	sw	a0,52(s0)
204025fa:	3fd50513          	addi	a0,a0,1021
204025fe:	00f50123          	sb	a5,2(a0)
20402602:	04544783          	lbu	a5,69(s0)
20402606:	00f500a3          	sb	a5,1(a0)
2040260a:	04444783          	lbu	a5,68(s0)
2040260e:	00f50023          	sb	a5,0(a0)
20402612:	c008                	sw	a0,0(s0)
20402614:	4501                	li	a0,0
20402616:	b7e1                	j	204025de <__submore+0x26>
20402618:	03842903          	lw	s2,56(s0)
2040261c:	00191993          	slli	s3,s2,0x1
20402620:	864e                	mv	a2,s3
20402622:	24a1                	jal	2040286a <_realloc_r>
20402624:	84aa                	mv	s1,a0
20402626:	d95d                	beqz	a0,204025dc <__submore+0x24>
20402628:	01250a33          	add	s4,a0,s2
2040262c:	85aa                	mv	a1,a0
2040262e:	864a                	mv	a2,s2
20402630:	8552                	mv	a0,s4
20402632:	2c39                	jal	20402850 <memcpy>
20402634:	01442023          	sw	s4,0(s0)
20402638:	d844                	sw	s1,52(s0)
2040263a:	03342c23          	sw	s3,56(s0)
2040263e:	bfd9                	j	20402614 <__submore+0x5c>

20402640 <_ungetc_r>:
_ungetc_r():
20402640:	1101                	addi	sp,sp,-32
20402642:	ce06                	sw	ra,28(sp)
20402644:	cc22                	sw	s0,24(sp)
20402646:	ca26                	sw	s1,20(sp)
20402648:	c84a                	sw	s2,16(sp)
2040264a:	c64e                	sw	s3,12(sp)
2040264c:	57fd                	li	a5,-1
2040264e:	00f59b63          	bne	a1,a5,20402664 <_ungetc_r+0x24>
20402652:	54fd                	li	s1,-1
20402654:	40f2                	lw	ra,28(sp)
20402656:	4462                	lw	s0,24(sp)
20402658:	8526                	mv	a0,s1
2040265a:	4942                	lw	s2,16(sp)
2040265c:	44d2                	lw	s1,20(sp)
2040265e:	49b2                	lw	s3,12(sp)
20402660:	6105                	addi	sp,sp,32
20402662:	8082                	ret
20402664:	892a                	mv	s2,a0
20402666:	84ae                	mv	s1,a1
20402668:	8432                	mv	s0,a2
2040266a:	c509                	beqz	a0,20402674 <_ungetc_r+0x34>
2040266c:	4d1c                	lw	a5,24(a0)
2040266e:	e399                	bnez	a5,20402674 <_ungetc_r+0x34>
20402670:	8deff0ef          	jal	ra,2040174e <__sinit>
20402674:	ffffe797          	auipc	a5,0xffffe
20402678:	d6478793          	addi	a5,a5,-668 # 204003d8 <__sf_fake_stdin>
2040267c:	06f41c63          	bne	s0,a5,204026f4 <_ungetc_r+0xb4>
20402680:	00492403          	lw	s0,4(s2)
20402684:	00c41783          	lh	a5,12(s0)
20402688:	fdf7f793          	andi	a5,a5,-33
2040268c:	00f41623          	sh	a5,12(s0)
20402690:	07c2                	slli	a5,a5,0x10
20402692:	83c1                	srli	a5,a5,0x10
20402694:	0047f713          	andi	a4,a5,4
20402698:	eb15                	bnez	a4,204026cc <_ungetc_r+0x8c>
2040269a:	0107f713          	andi	a4,a5,16
2040269e:	db55                	beqz	a4,20402652 <_ungetc_r+0x12>
204026a0:	8ba1                	andi	a5,a5,8
204026a2:	cf99                	beqz	a5,204026c0 <_ungetc_r+0x80>
204026a4:	85a2                	mv	a1,s0
204026a6:	854a                	mv	a0,s2
204026a8:	f69fe0ef          	jal	ra,20401610 <_fflush_r>
204026ac:	f15d                	bnez	a0,20402652 <_ungetc_r+0x12>
204026ae:	00c45783          	lhu	a5,12(s0)
204026b2:	00042423          	sw	zero,8(s0)
204026b6:	00042c23          	sw	zero,24(s0)
204026ba:	9bdd                	andi	a5,a5,-9
204026bc:	00f41623          	sh	a5,12(s0)
204026c0:	00c45783          	lhu	a5,12(s0)
204026c4:	0047e793          	ori	a5,a5,4
204026c8:	00f41623          	sh	a5,12(s0)
204026cc:	585c                	lw	a5,52(s0)
204026ce:	0ff4f993          	andi	s3,s1,255
204026d2:	4058                	lw	a4,4(s0)
204026d4:	0ff4f493          	andi	s1,s1,255
204026d8:	c7a9                	beqz	a5,20402722 <_ungetc_r+0xe2>
204026da:	5c1c                	lw	a5,56(s0)
204026dc:	02f75e63          	bge	a4,a5,20402718 <_ungetc_r+0xd8>
204026e0:	401c                	lw	a5,0(s0)
204026e2:	fff78713          	addi	a4,a5,-1
204026e6:	c018                	sw	a4,0(s0)
204026e8:	ff378fa3          	sb	s3,-1(a5)
204026ec:	405c                	lw	a5,4(s0)
204026ee:	0785                	addi	a5,a5,1
204026f0:	c05c                	sw	a5,4(s0)
204026f2:	b78d                	j	20402654 <_ungetc_r+0x14>
204026f4:	ffffe797          	auipc	a5,0xffffe
204026f8:	d0478793          	addi	a5,a5,-764 # 204003f8 <__sf_fake_stdout>
204026fc:	00f41563          	bne	s0,a5,20402706 <_ungetc_r+0xc6>
20402700:	00892403          	lw	s0,8(s2)
20402704:	b741                	j	20402684 <_ungetc_r+0x44>
20402706:	ffffe797          	auipc	a5,0xffffe
2040270a:	cb278793          	addi	a5,a5,-846 # 204003b8 <__sf_fake_stderr>
2040270e:	f6f41be3          	bne	s0,a5,20402684 <_ungetc_r+0x44>
20402712:	00c92403          	lw	s0,12(s2)
20402716:	b7bd                	j	20402684 <_ungetc_r+0x44>
20402718:	85a2                	mv	a1,s0
2040271a:	854a                	mv	a0,s2
2040271c:	3d71                	jal	204025b8 <__submore>
2040271e:	d169                	beqz	a0,204026e0 <_ungetc_r+0xa0>
20402720:	bf0d                	j	20402652 <_ungetc_r+0x12>
20402722:	4814                	lw	a3,16(s0)
20402724:	401c                	lw	a5,0(s0)
20402726:	ce81                	beqz	a3,2040273e <_ungetc_r+0xfe>
20402728:	00f6fb63          	bgeu	a3,a5,2040273e <_ungetc_r+0xfe>
2040272c:	fff7c683          	lbu	a3,-1(a5)
20402730:	00969763          	bne	a3,s1,2040273e <_ungetc_r+0xfe>
20402734:	17fd                	addi	a5,a5,-1
20402736:	0705                	addi	a4,a4,1
20402738:	c01c                	sw	a5,0(s0)
2040273a:	c058                	sw	a4,4(s0)
2040273c:	bf21                	j	20402654 <_ungetc_r+0x14>
2040273e:	dc5c                	sw	a5,60(s0)
20402740:	04440793          	addi	a5,s0,68
20402744:	d85c                	sw	a5,52(s0)
20402746:	478d                	li	a5,3
20402748:	dc1c                	sw	a5,56(s0)
2040274a:	04640793          	addi	a5,s0,70
2040274e:	c01c                	sw	a5,0(s0)
20402750:	c038                	sw	a4,64(s0)
20402752:	05340323          	sb	s3,70(s0)
20402756:	4785                	li	a5,1
20402758:	bf61                	j	204026f0 <_ungetc_r+0xb0>

2040275a <_write_r>:
_write_r():
2040275a:	1141                	addi	sp,sp,-16
2040275c:	c422                	sw	s0,8(sp)
2040275e:	842a                	mv	s0,a0
20402760:	852e                	mv	a0,a1
20402762:	85b2                	mv	a1,a2
20402764:	8636                	mv	a2,a3
20402766:	8e01a423          	sw	zero,-1816(gp) # 80000b60 <errno>
2040276a:	c606                	sw	ra,12(sp)
2040276c:	40d000ef          	jal	ra,20403378 <_write>
20402770:	57fd                	li	a5,-1
20402772:	00f51763          	bne	a0,a5,20402780 <_write_r+0x26>
20402776:	8e818793          	addi	a5,gp,-1816 # 80000b60 <errno>
2040277a:	439c                	lw	a5,0(a5)
2040277c:	c391                	beqz	a5,20402780 <_write_r+0x26>
2040277e:	c01c                	sw	a5,0(s0)
20402780:	40b2                	lw	ra,12(sp)
20402782:	4422                	lw	s0,8(sp)
20402784:	0141                	addi	sp,sp,16
20402786:	8082                	ret

20402788 <_close_r>:
_close_r():
20402788:	1141                	addi	sp,sp,-16
2040278a:	c422                	sw	s0,8(sp)
2040278c:	842a                	mv	s0,a0
2040278e:	852e                	mv	a0,a1
20402790:	8e01a423          	sw	zero,-1816(gp) # 80000b60 <errno>
20402794:	c606                	sw	ra,12(sp)
20402796:	2a9000ef          	jal	ra,2040323e <_close>
2040279a:	57fd                	li	a5,-1
2040279c:	00f51763          	bne	a0,a5,204027aa <_close_r+0x22>
204027a0:	8e818793          	addi	a5,gp,-1816 # 80000b60 <errno>
204027a4:	439c                	lw	a5,0(a5)
204027a6:	c391                	beqz	a5,204027aa <_close_r+0x22>
204027a8:	c01c                	sw	a5,0(s0)
204027aa:	40b2                	lw	ra,12(sp)
204027ac:	4422                	lw	s0,8(sp)
204027ae:	0141                	addi	sp,sp,16
204027b0:	8082                	ret

204027b2 <_fstat_r>:
_fstat_r():
204027b2:	1141                	addi	sp,sp,-16
204027b4:	c422                	sw	s0,8(sp)
204027b6:	842a                	mv	s0,a0
204027b8:	852e                	mv	a0,a1
204027ba:	85b2                	mv	a1,a2
204027bc:	8e01a423          	sw	zero,-1816(gp) # 80000b60 <errno>
204027c0:	c606                	sw	ra,12(sp)
204027c2:	29f000ef          	jal	ra,20403260 <_fstat>
204027c6:	57fd                	li	a5,-1
204027c8:	00f51763          	bne	a0,a5,204027d6 <_fstat_r+0x24>
204027cc:	8e818793          	addi	a5,gp,-1816 # 80000b60 <errno>
204027d0:	439c                	lw	a5,0(a5)
204027d2:	c391                	beqz	a5,204027d6 <_fstat_r+0x24>
204027d4:	c01c                	sw	a5,0(s0)
204027d6:	40b2                	lw	ra,12(sp)
204027d8:	4422                	lw	s0,8(sp)
204027da:	0141                	addi	sp,sp,16
204027dc:	8082                	ret

204027de <_isatty_r>:
_isatty_r():
204027de:	1141                	addi	sp,sp,-16
204027e0:	c422                	sw	s0,8(sp)
204027e2:	842a                	mv	s0,a0
204027e4:	852e                	mv	a0,a1
204027e6:	8e01a423          	sw	zero,-1816(gp) # 80000b60 <errno>
204027ea:	c606                	sw	ra,12(sp)
204027ec:	29b000ef          	jal	ra,20403286 <_isatty>
204027f0:	57fd                	li	a5,-1
204027f2:	00f51763          	bne	a0,a5,20402800 <_isatty_r+0x22>
204027f6:	8e818793          	addi	a5,gp,-1816 # 80000b60 <errno>
204027fa:	439c                	lw	a5,0(a5)
204027fc:	c391                	beqz	a5,20402800 <_isatty_r+0x22>
204027fe:	c01c                	sw	a5,0(s0)
20402800:	40b2                	lw	ra,12(sp)
20402802:	4422                	lw	s0,8(sp)
20402804:	0141                	addi	sp,sp,16
20402806:	8082                	ret

20402808 <_lseek_r>:
_lseek_r():
20402808:	1141                	addi	sp,sp,-16
2040280a:	c422                	sw	s0,8(sp)
2040280c:	842a                	mv	s0,a0
2040280e:	852e                	mv	a0,a1
20402810:	85b2                	mv	a1,a2
20402812:	8636                	mv	a2,a3
20402814:	8e01a423          	sw	zero,-1816(gp) # 80000b60 <errno>
20402818:	c606                	sw	ra,12(sp)
2040281a:	28d000ef          	jal	ra,204032a6 <_lseek>
2040281e:	57fd                	li	a5,-1
20402820:	00f51763          	bne	a0,a5,2040282e <_lseek_r+0x26>
20402824:	8e818793          	addi	a5,gp,-1816 # 80000b60 <errno>
20402828:	439c                	lw	a5,0(a5)
2040282a:	c391                	beqz	a5,2040282e <_lseek_r+0x26>
2040282c:	c01c                	sw	a5,0(s0)
2040282e:	40b2                	lw	ra,12(sp)
20402830:	4422                	lw	s0,8(sp)
20402832:	0141                	addi	sp,sp,16
20402834:	8082                	ret

20402836 <memchr>:
memchr():
20402836:	0ff5f593          	andi	a1,a1,255
2040283a:	962a                	add	a2,a2,a0
2040283c:	00c51463          	bne	a0,a2,20402844 <memchr+0xe>
20402840:	4501                	li	a0,0
20402842:	8082                	ret
20402844:	00054783          	lbu	a5,0(a0)
20402848:	feb78de3          	beq	a5,a1,20402842 <memchr+0xc>
2040284c:	0505                	addi	a0,a0,1
2040284e:	b7fd                	j	2040283c <memchr+0x6>

20402850 <memcpy>:
memcpy():
20402850:	832a                	mv	t1,a0
20402852:	ca09                	beqz	a2,20402864 <memcpy+0x14>
20402854:	00058383          	lb	t2,0(a1)
20402858:	00730023          	sb	t2,0(t1)
2040285c:	167d                	addi	a2,a2,-1
2040285e:	0305                	addi	t1,t1,1
20402860:	0585                	addi	a1,a1,1
20402862:	fa6d                	bnez	a2,20402854 <memcpy+0x4>
20402864:	8082                	ret

20402866 <__malloc_lock>:
__malloc_lock():
20402866:	8082                	ret

20402868 <__malloc_unlock>:
__malloc_unlock():
20402868:	8082                	ret

2040286a <_realloc_r>:
_realloc_r():
2040286a:	e581                	bnez	a1,20402872 <_realloc_r+0x8>
2040286c:	85b2                	mv	a1,a2
2040286e:	a6eff06f          	j	20401adc <_malloc_r>
20402872:	1101                	addi	sp,sp,-32
20402874:	cc22                	sw	s0,24(sp)
20402876:	ce06                	sw	ra,28(sp)
20402878:	ca26                	sw	s1,20(sp)
2040287a:	c84a                	sw	s2,16(sp)
2040287c:	c64e                	sw	s3,12(sp)
2040287e:	8432                	mv	s0,a2
20402880:	ee01                	bnez	a2,20402898 <_realloc_r+0x2e>
20402882:	9aaff0ef          	jal	ra,20401a2c <_free_r>
20402886:	4901                	li	s2,0
20402888:	40f2                	lw	ra,28(sp)
2040288a:	4462                	lw	s0,24(sp)
2040288c:	854a                	mv	a0,s2
2040288e:	44d2                	lw	s1,20(sp)
20402890:	4942                	lw	s2,16(sp)
20402892:	49b2                	lw	s3,12(sp)
20402894:	6105                	addi	sp,sp,32
20402896:	8082                	ret
20402898:	84ae                	mv	s1,a1
2040289a:	89aa                	mv	s3,a0
2040289c:	18f000ef          	jal	ra,2040322a <_malloc_usable_size_r>
204028a0:	8926                	mv	s2,s1
204028a2:	fe8573e3          	bgeu	a0,s0,20402888 <_realloc_r+0x1e>
204028a6:	85a2                	mv	a1,s0
204028a8:	854e                	mv	a0,s3
204028aa:	a32ff0ef          	jal	ra,20401adc <_malloc_r>
204028ae:	892a                	mv	s2,a0
204028b0:	dd61                	beqz	a0,20402888 <_realloc_r+0x1e>
204028b2:	85a6                	mv	a1,s1
204028b4:	8622                	mv	a2,s0
204028b6:	3f69                	jal	20402850 <memcpy>
204028b8:	85a6                	mv	a1,s1
204028ba:	854e                	mv	a0,s3
204028bc:	970ff0ef          	jal	ra,20401a2c <_free_r>
204028c0:	b7e1                	j	20402888 <_realloc_r+0x1e>

204028c2 <_printf_common>:
_printf_common():
204028c2:	7179                	addi	sp,sp,-48
204028c4:	ca56                	sw	s5,20(sp)
204028c6:	499c                	lw	a5,16(a1)
204028c8:	8aba                	mv	s5,a4
204028ca:	4598                	lw	a4,8(a1)
204028cc:	d422                	sw	s0,40(sp)
204028ce:	d226                	sw	s1,36(sp)
204028d0:	ce4e                	sw	s3,28(sp)
204028d2:	cc52                	sw	s4,24(sp)
204028d4:	d606                	sw	ra,44(sp)
204028d6:	d04a                	sw	s2,32(sp)
204028d8:	c85a                	sw	s6,16(sp)
204028da:	c65e                	sw	s7,12(sp)
204028dc:	89aa                	mv	s3,a0
204028de:	842e                	mv	s0,a1
204028e0:	84b2                	mv	s1,a2
204028e2:	8a36                	mv	s4,a3
204028e4:	00e7d363          	bge	a5,a4,204028ea <_printf_common+0x28>
204028e8:	87ba                	mv	a5,a4
204028ea:	c09c                	sw	a5,0(s1)
204028ec:	04344703          	lbu	a4,67(s0)
204028f0:	c319                	beqz	a4,204028f6 <_printf_common+0x34>
204028f2:	0785                	addi	a5,a5,1
204028f4:	c09c                	sw	a5,0(s1)
204028f6:	401c                	lw	a5,0(s0)
204028f8:	0207f793          	andi	a5,a5,32
204028fc:	c781                	beqz	a5,20402904 <_printf_common+0x42>
204028fe:	409c                	lw	a5,0(s1)
20402900:	0789                	addi	a5,a5,2
20402902:	c09c                	sw	a5,0(s1)
20402904:	00042903          	lw	s2,0(s0)
20402908:	00697913          	andi	s2,s2,6
2040290c:	00091a63          	bnez	s2,20402920 <_printf_common+0x5e>
20402910:	01940b13          	addi	s6,s0,25
20402914:	5bfd                	li	s7,-1
20402916:	445c                	lw	a5,12(s0)
20402918:	4098                	lw	a4,0(s1)
2040291a:	8f99                	sub	a5,a5,a4
2040291c:	04f94c63          	blt	s2,a5,20402974 <_printf_common+0xb2>
20402920:	401c                	lw	a5,0(s0)
20402922:	04344683          	lbu	a3,67(s0)
20402926:	0207f793          	andi	a5,a5,32
2040292a:	00d036b3          	snez	a3,a3
2040292e:	eba5                	bnez	a5,2040299e <_printf_common+0xdc>
20402930:	04340613          	addi	a2,s0,67
20402934:	85d2                	mv	a1,s4
20402936:	854e                	mv	a0,s3
20402938:	9a82                	jalr	s5
2040293a:	57fd                	li	a5,-1
2040293c:	04f50363          	beq	a0,a5,20402982 <_printf_common+0xc0>
20402940:	401c                	lw	a5,0(s0)
20402942:	4611                	li	a2,4
20402944:	4098                	lw	a4,0(s1)
20402946:	8b99                	andi	a5,a5,6
20402948:	4454                	lw	a3,12(s0)
2040294a:	4481                	li	s1,0
2040294c:	00c79763          	bne	a5,a2,2040295a <_printf_common+0x98>
20402950:	40e684b3          	sub	s1,a3,a4
20402954:	0004d363          	bgez	s1,2040295a <_printf_common+0x98>
20402958:	4481                	li	s1,0
2040295a:	441c                	lw	a5,8(s0)
2040295c:	4818                	lw	a4,16(s0)
2040295e:	00f75463          	bge	a4,a5,20402966 <_printf_common+0xa4>
20402962:	8f99                	sub	a5,a5,a4
20402964:	94be                	add	s1,s1,a5
20402966:	4901                	li	s2,0
20402968:	0469                	addi	s0,s0,26
2040296a:	5b7d                	li	s6,-1
2040296c:	05249863          	bne	s1,s2,204029bc <_printf_common+0xfa>
20402970:	4501                	li	a0,0
20402972:	a809                	j	20402984 <_printf_common+0xc2>
20402974:	4685                	li	a3,1
20402976:	865a                	mv	a2,s6
20402978:	85d2                	mv	a1,s4
2040297a:	854e                	mv	a0,s3
2040297c:	9a82                	jalr	s5
2040297e:	01751e63          	bne	a0,s7,2040299a <_printf_common+0xd8>
20402982:	557d                	li	a0,-1
20402984:	50b2                	lw	ra,44(sp)
20402986:	5422                	lw	s0,40(sp)
20402988:	5492                	lw	s1,36(sp)
2040298a:	5902                	lw	s2,32(sp)
2040298c:	49f2                	lw	s3,28(sp)
2040298e:	4a62                	lw	s4,24(sp)
20402990:	4ad2                	lw	s5,20(sp)
20402992:	4b42                	lw	s6,16(sp)
20402994:	4bb2                	lw	s7,12(sp)
20402996:	6145                	addi	sp,sp,48
20402998:	8082                	ret
2040299a:	0905                	addi	s2,s2,1
2040299c:	bfad                	j	20402916 <_printf_common+0x54>
2040299e:	00d40733          	add	a4,s0,a3
204029a2:	03000613          	li	a2,48
204029a6:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffd8d3>
204029aa:	04544703          	lbu	a4,69(s0)
204029ae:	00168793          	addi	a5,a3,1
204029b2:	97a2                	add	a5,a5,s0
204029b4:	0689                	addi	a3,a3,2
204029b6:	04e781a3          	sb	a4,67(a5)
204029ba:	bf9d                	j	20402930 <_printf_common+0x6e>
204029bc:	4685                	li	a3,1
204029be:	8622                	mv	a2,s0
204029c0:	85d2                	mv	a1,s4
204029c2:	854e                	mv	a0,s3
204029c4:	9a82                	jalr	s5
204029c6:	fb650ee3          	beq	a0,s6,20402982 <_printf_common+0xc0>
204029ca:	0905                	addi	s2,s2,1
204029cc:	b745                	j	2040296c <_printf_common+0xaa>

204029ce <_printf_i>:
_printf_i():
204029ce:	7179                	addi	sp,sp,-48
204029d0:	d422                	sw	s0,40(sp)
204029d2:	d226                	sw	s1,36(sp)
204029d4:	d04a                	sw	s2,32(sp)
204029d6:	ce4e                	sw	s3,28(sp)
204029d8:	d606                	sw	ra,44(sp)
204029da:	cc52                	sw	s4,24(sp)
204029dc:	ca56                	sw	s5,20(sp)
204029de:	c85a                	sw	s6,16(sp)
204029e0:	89b6                	mv	s3,a3
204029e2:	0185c683          	lbu	a3,24(a1)
204029e6:	06e00793          	li	a5,110
204029ea:	8932                	mv	s2,a2
204029ec:	84aa                	mv	s1,a0
204029ee:	842e                	mv	s0,a1
204029f0:	04358613          	addi	a2,a1,67
204029f4:	1ef68063          	beq	a3,a5,20402bd4 <_printf_i+0x206>
204029f8:	06d7e263          	bltu	a5,a3,20402a5c <_printf_i+0x8e>
204029fc:	06300793          	li	a5,99
20402a00:	0af68263          	beq	a3,a5,20402aa4 <_printf_i+0xd6>
20402a04:	00d7ed63          	bltu	a5,a3,20402a1e <_printf_i+0x50>
20402a08:	1e068a63          	beqz	a3,20402bfc <_printf_i+0x22e>
20402a0c:	05800793          	li	a5,88
20402a10:	16f68663          	beq	a3,a5,20402b7c <_printf_i+0x1ae>
20402a14:	04240a93          	addi	s5,s0,66
20402a18:	04d40123          	sb	a3,66(s0)
20402a1c:	a869                	j	20402ab6 <_printf_i+0xe8>
20402a1e:	06400793          	li	a5,100
20402a22:	00f68663          	beq	a3,a5,20402a2e <_printf_i+0x60>
20402a26:	06900793          	li	a5,105
20402a2a:	fef695e3          	bne	a3,a5,20402a14 <_printf_i+0x46>
20402a2e:	401c                	lw	a5,0(s0)
20402a30:	4308                	lw	a0,0(a4)
20402a32:	0807f693          	andi	a3,a5,128
20402a36:	00450593          	addi	a1,a0,4
20402a3a:	c2c1                	beqz	a3,20402aba <_printf_i+0xec>
20402a3c:	411c                	lw	a5,0(a0)
20402a3e:	c30c                	sw	a1,0(a4)
20402a40:	0007d863          	bgez	a5,20402a50 <_printf_i+0x82>
20402a44:	02d00713          	li	a4,45
20402a48:	40f007b3          	neg	a5,a5
20402a4c:	04e401a3          	sb	a4,67(s0)
20402a50:	ffffe697          	auipc	a3,0xffffe
20402a54:	ae068693          	addi	a3,a3,-1312 # 20400530 <_ctype_+0x104>
20402a58:	4729                	li	a4,10
20402a5a:	a065                	j	20402b02 <_printf_i+0x134>
20402a5c:	07300793          	li	a5,115
20402a60:	1af68263          	beq	a3,a5,20402c04 <_printf_i+0x236>
20402a64:	00d7ef63          	bltu	a5,a3,20402a82 <_printf_i+0xb4>
20402a68:	06f00793          	li	a5,111
20402a6c:	04f68f63          	beq	a3,a5,20402aca <_printf_i+0xfc>
20402a70:	07000793          	li	a5,112
20402a74:	faf690e3          	bne	a3,a5,20402a14 <_printf_i+0x46>
20402a78:	419c                	lw	a5,0(a1)
20402a7a:	0207e793          	ori	a5,a5,32
20402a7e:	c19c                	sw	a5,0(a1)
20402a80:	a809                	j	20402a92 <_printf_i+0xc4>
20402a82:	07500793          	li	a5,117
20402a86:	04f68263          	beq	a3,a5,20402aca <_printf_i+0xfc>
20402a8a:	07800793          	li	a5,120
20402a8e:	f8f693e3          	bne	a3,a5,20402a14 <_printf_i+0x46>
20402a92:	07800793          	li	a5,120
20402a96:	04f402a3          	sb	a5,69(s0)
20402a9a:	ffffe697          	auipc	a3,0xffffe
20402a9e:	aaa68693          	addi	a3,a3,-1366 # 20400544 <_ctype_+0x118>
20402aa2:	a0dd                	j	20402b88 <_printf_i+0x1ba>
20402aa4:	431c                	lw	a5,0(a4)
20402aa6:	04258a93          	addi	s5,a1,66
20402aaa:	00478693          	addi	a3,a5,4
20402aae:	439c                	lw	a5,0(a5)
20402ab0:	c314                	sw	a3,0(a4)
20402ab2:	04f58123          	sb	a5,66(a1)
20402ab6:	4785                	li	a5,1
20402ab8:	a2ad                	j	20402c22 <_printf_i+0x254>
20402aba:	0407f693          	andi	a3,a5,64
20402abe:	411c                	lw	a5,0(a0)
20402ac0:	c30c                	sw	a1,0(a4)
20402ac2:	debd                	beqz	a3,20402a40 <_printf_i+0x72>
20402ac4:	07c2                	slli	a5,a5,0x10
20402ac6:	87c1                	srai	a5,a5,0x10
20402ac8:	bfa5                	j	20402a40 <_printf_i+0x72>
20402aca:	400c                	lw	a1,0(s0)
20402acc:	431c                	lw	a5,0(a4)
20402ace:	0805f813          	andi	a6,a1,128
20402ad2:	00478513          	addi	a0,a5,4
20402ad6:	00080563          	beqz	a6,20402ae0 <_printf_i+0x112>
20402ada:	c308                	sw	a0,0(a4)
20402adc:	439c                	lw	a5,0(a5)
20402ade:	a039                	j	20402aec <_printf_i+0x11e>
20402ae0:	0405f593          	andi	a1,a1,64
20402ae4:	c308                	sw	a0,0(a4)
20402ae6:	d9fd                	beqz	a1,20402adc <_printf_i+0x10e>
20402ae8:	0007d783          	lhu	a5,0(a5)
20402aec:	06f00713          	li	a4,111
20402af0:	0ce68a63          	beq	a3,a4,20402bc4 <_printf_i+0x1f6>
20402af4:	ffffe697          	auipc	a3,0xffffe
20402af8:	a3c68693          	addi	a3,a3,-1476 # 20400530 <_ctype_+0x104>
20402afc:	4729                	li	a4,10
20402afe:	040401a3          	sb	zero,67(s0)
20402b02:	404c                	lw	a1,4(s0)
20402b04:	c40c                	sw	a1,8(s0)
20402b06:	0005c563          	bltz	a1,20402b10 <_printf_i+0x142>
20402b0a:	4008                	lw	a0,0(s0)
20402b0c:	996d                	andi	a0,a0,-5
20402b0e:	c008                	sw	a0,0(s0)
20402b10:	e399                	bnez	a5,20402b16 <_printf_i+0x148>
20402b12:	8ab2                	mv	s5,a2
20402b14:	cd91                	beqz	a1,20402b30 <_printf_i+0x162>
20402b16:	8ab2                	mv	s5,a2
20402b18:	02e7f5b3          	remu	a1,a5,a4
20402b1c:	1afd                	addi	s5,s5,-1
20402b1e:	95b6                	add	a1,a1,a3
20402b20:	0005c583          	lbu	a1,0(a1)
20402b24:	00ba8023          	sb	a1,0(s5)
20402b28:	02e7d5b3          	divu	a1,a5,a4
20402b2c:	0ae7f263          	bgeu	a5,a4,20402bd0 <_printf_i+0x202>
20402b30:	47a1                	li	a5,8
20402b32:	00f71e63          	bne	a4,a5,20402b4e <_printf_i+0x180>
20402b36:	401c                	lw	a5,0(s0)
20402b38:	8b85                	andi	a5,a5,1
20402b3a:	cb91                	beqz	a5,20402b4e <_printf_i+0x180>
20402b3c:	4058                	lw	a4,4(s0)
20402b3e:	481c                	lw	a5,16(s0)
20402b40:	00e7c763          	blt	a5,a4,20402b4e <_printf_i+0x180>
20402b44:	03000793          	li	a5,48
20402b48:	fefa8fa3          	sb	a5,-1(s5)
20402b4c:	1afd                	addi	s5,s5,-1
20402b4e:	41560633          	sub	a2,a2,s5
20402b52:	c810                	sw	a2,16(s0)
20402b54:	874e                	mv	a4,s3
20402b56:	86ca                	mv	a3,s2
20402b58:	0070                	addi	a2,sp,12
20402b5a:	85a2                	mv	a1,s0
20402b5c:	8526                	mv	a0,s1
20402b5e:	3395                	jal	204028c2 <_printf_common>
20402b60:	5a7d                	li	s4,-1
20402b62:	0d451463          	bne	a0,s4,20402c2a <_printf_i+0x25c>
20402b66:	557d                	li	a0,-1
20402b68:	50b2                	lw	ra,44(sp)
20402b6a:	5422                	lw	s0,40(sp)
20402b6c:	5492                	lw	s1,36(sp)
20402b6e:	5902                	lw	s2,32(sp)
20402b70:	49f2                	lw	s3,28(sp)
20402b72:	4a62                	lw	s4,24(sp)
20402b74:	4ad2                	lw	s5,20(sp)
20402b76:	4b42                	lw	s6,16(sp)
20402b78:	6145                	addi	sp,sp,48
20402b7a:	8082                	ret
20402b7c:	04d582a3          	sb	a3,69(a1)
20402b80:	ffffe697          	auipc	a3,0xffffe
20402b84:	9b068693          	addi	a3,a3,-1616 # 20400530 <_ctype_+0x104>
20402b88:	400c                	lw	a1,0(s0)
20402b8a:	4308                	lw	a0,0(a4)
20402b8c:	0805f813          	andi	a6,a1,128
20402b90:	411c                	lw	a5,0(a0)
20402b92:	0511                	addi	a0,a0,4
20402b94:	02080063          	beqz	a6,20402bb4 <_printf_i+0x1e6>
20402b98:	c308                	sw	a0,0(a4)
20402b9a:	0015f713          	andi	a4,a1,1
20402b9e:	c701                	beqz	a4,20402ba6 <_printf_i+0x1d8>
20402ba0:	0205e593          	ori	a1,a1,32
20402ba4:	c00c                	sw	a1,0(s0)
20402ba6:	4741                	li	a4,16
20402ba8:	fbb9                	bnez	a5,20402afe <_printf_i+0x130>
20402baa:	400c                	lw	a1,0(s0)
20402bac:	fdf5f593          	andi	a1,a1,-33
20402bb0:	c00c                	sw	a1,0(s0)
20402bb2:	b7b1                	j	20402afe <_printf_i+0x130>
20402bb4:	0405f813          	andi	a6,a1,64
20402bb8:	c308                	sw	a0,0(a4)
20402bba:	fe0800e3          	beqz	a6,20402b9a <_printf_i+0x1cc>
20402bbe:	07c2                	slli	a5,a5,0x10
20402bc0:	83c1                	srli	a5,a5,0x10
20402bc2:	bfe1                	j	20402b9a <_printf_i+0x1cc>
20402bc4:	ffffe697          	auipc	a3,0xffffe
20402bc8:	96c68693          	addi	a3,a3,-1684 # 20400530 <_ctype_+0x104>
20402bcc:	4721                	li	a4,8
20402bce:	bf05                	j	20402afe <_printf_i+0x130>
20402bd0:	87ae                	mv	a5,a1
20402bd2:	b799                	j	20402b18 <_printf_i+0x14a>
20402bd4:	4194                	lw	a3,0(a1)
20402bd6:	431c                	lw	a5,0(a4)
20402bd8:	49cc                	lw	a1,20(a1)
20402bda:	0806f813          	andi	a6,a3,128
20402bde:	00478513          	addi	a0,a5,4
20402be2:	00080663          	beqz	a6,20402bee <_printf_i+0x220>
20402be6:	c308                	sw	a0,0(a4)
20402be8:	439c                	lw	a5,0(a5)
20402bea:	c38c                	sw	a1,0(a5)
20402bec:	a801                	j	20402bfc <_printf_i+0x22e>
20402bee:	c308                	sw	a0,0(a4)
20402bf0:	0406f693          	andi	a3,a3,64
20402bf4:	439c                	lw	a5,0(a5)
20402bf6:	daf5                	beqz	a3,20402bea <_printf_i+0x21c>
20402bf8:	00b79023          	sh	a1,0(a5)
20402bfc:	00042823          	sw	zero,16(s0)
20402c00:	8ab2                	mv	s5,a2
20402c02:	bf89                	j	20402b54 <_printf_i+0x186>
20402c04:	431c                	lw	a5,0(a4)
20402c06:	41d0                	lw	a2,4(a1)
20402c08:	4581                	li	a1,0
20402c0a:	00478693          	addi	a3,a5,4
20402c0e:	c314                	sw	a3,0(a4)
20402c10:	0007aa83          	lw	s5,0(a5)
20402c14:	8556                	mv	a0,s5
20402c16:	3105                	jal	20402836 <memchr>
20402c18:	c501                	beqz	a0,20402c20 <_printf_i+0x252>
20402c1a:	41550533          	sub	a0,a0,s5
20402c1e:	c048                	sw	a0,4(s0)
20402c20:	405c                	lw	a5,4(s0)
20402c22:	c81c                	sw	a5,16(s0)
20402c24:	040401a3          	sb	zero,67(s0)
20402c28:	b735                	j	20402b54 <_printf_i+0x186>
20402c2a:	4814                	lw	a3,16(s0)
20402c2c:	8656                	mv	a2,s5
20402c2e:	85ca                	mv	a1,s2
20402c30:	8526                	mv	a0,s1
20402c32:	9982                	jalr	s3
20402c34:	f34509e3          	beq	a0,s4,20402b66 <_printf_i+0x198>
20402c38:	401c                	lw	a5,0(s0)
20402c3a:	8b89                	andi	a5,a5,2
20402c3c:	e78d                	bnez	a5,20402c66 <_printf_i+0x298>
20402c3e:	47b2                	lw	a5,12(sp)
20402c40:	4448                	lw	a0,12(s0)
20402c42:	f2f553e3          	bge	a0,a5,20402b68 <_printf_i+0x19a>
20402c46:	853e                	mv	a0,a5
20402c48:	b705                	j	20402b68 <_printf_i+0x19a>
20402c4a:	4685                	li	a3,1
20402c4c:	8656                	mv	a2,s5
20402c4e:	85ca                	mv	a1,s2
20402c50:	8526                	mv	a0,s1
20402c52:	9982                	jalr	s3
20402c54:	f16509e3          	beq	a0,s6,20402b66 <_printf_i+0x198>
20402c58:	0a05                	addi	s4,s4,1
20402c5a:	445c                	lw	a5,12(s0)
20402c5c:	4732                	lw	a4,12(sp)
20402c5e:	8f99                	sub	a5,a5,a4
20402c60:	fefa45e3          	blt	s4,a5,20402c4a <_printf_i+0x27c>
20402c64:	bfe9                	j	20402c3e <_printf_i+0x270>
20402c66:	4a01                	li	s4,0
20402c68:	01940a93          	addi	s5,s0,25
20402c6c:	5b7d                	li	s6,-1
20402c6e:	b7f5                	j	20402c5a <_printf_i+0x28c>

20402c70 <_scanf_chars>:
_scanf_chars():
20402c70:	459c                	lw	a5,8(a1)
20402c72:	7179                	addi	sp,sp,-48
20402c74:	d422                	sw	s0,40(sp)
20402c76:	ce4e                	sw	s3,28(sp)
20402c78:	d606                	sw	ra,44(sp)
20402c7a:	d226                	sw	s1,36(sp)
20402c7c:	d04a                	sw	s2,32(sp)
20402c7e:	cc52                	sw	s4,24(sp)
20402c80:	ca56                	sw	s5,20(sp)
20402c82:	c85a                	sw	s6,16(sp)
20402c84:	89aa                	mv	s3,a0
20402c86:	842e                	mv	s0,a1
20402c88:	e791                	bnez	a5,20402c94 <_scanf_chars+0x24>
20402c8a:	4d98                	lw	a4,24(a1)
20402c8c:	4785                	li	a5,1
20402c8e:	c311                	beqz	a4,20402c92 <_scanf_chars+0x22>
20402c90:	57fd                	li	a5,-1
20402c92:	c41c                	sw	a5,8(s0)
20402c94:	401c                	lw	a5,0(s0)
20402c96:	8bc1                	andi	a5,a5,16
20402c98:	e799                	bnez	a5,20402ca6 <_scanf_chars+0x36>
20402c9a:	429c                	lw	a5,0(a3)
20402c9c:	00478713          	addi	a4,a5,4
20402ca0:	c298                	sw	a4,0(a3)
20402ca2:	0007a903          	lw	s2,0(a5)
20402ca6:	4481                	li	s1,0
20402ca8:	4a85                	li	s5,1
20402caa:	4b09                	li	s6,2
20402cac:	ffffda17          	auipc	s4,0xffffd
20402cb0:	781a0a13          	addi	s4,s4,1921 # 2040042d <_ctype_+0x1>
20402cb4:	4c08                	lw	a0,24(s0)
20402cb6:	c121                	beqz	a0,20402cf6 <_scanf_chars+0x86>
20402cb8:	03551563          	bne	a0,s5,20402ce2 <_scanf_chars+0x72>
20402cbc:	421c                	lw	a5,0(a2)
20402cbe:	0007c703          	lbu	a4,0(a5)
20402cc2:	485c                	lw	a5,20(s0)
20402cc4:	97ba                	add	a5,a5,a4
20402cc6:	0007c783          	lbu	a5,0(a5)
20402cca:	e795                	bnez	a5,20402cf6 <_scanf_chars+0x86>
20402ccc:	e0bd                	bnez	s1,20402d32 <_scanf_chars+0xc2>
20402cce:	50b2                	lw	ra,44(sp)
20402cd0:	5422                	lw	s0,40(sp)
20402cd2:	5492                	lw	s1,36(sp)
20402cd4:	5902                	lw	s2,32(sp)
20402cd6:	49f2                	lw	s3,28(sp)
20402cd8:	4a62                	lw	s4,24(sp)
20402cda:	4ad2                	lw	s5,20(sp)
20402cdc:	4b42                	lw	s6,16(sp)
20402cde:	6145                	addi	sp,sp,48
20402ce0:	8082                	ret
20402ce2:	05651863          	bne	a0,s6,20402d32 <_scanf_chars+0xc2>
20402ce6:	421c                	lw	a5,0(a2)
20402ce8:	0007c783          	lbu	a5,0(a5)
20402cec:	97d2                	add	a5,a5,s4
20402cee:	0007c783          	lbu	a5,0(a5)
20402cf2:	8ba1                	andi	a5,a5,8
20402cf4:	ef9d                	bnez	a5,20402d32 <_scanf_chars+0xc2>
20402cf6:	401c                	lw	a5,0(s0)
20402cf8:	0485                	addi	s1,s1,1
20402cfa:	8bc1                	andi	a5,a5,16
20402cfc:	e799                	bnez	a5,20402d0a <_scanf_chars+0x9a>
20402cfe:	421c                	lw	a5,0(a2)
20402d00:	0905                	addi	s2,s2,1
20402d02:	0007c783          	lbu	a5,0(a5)
20402d06:	fef90fa3          	sb	a5,-1(s2)
20402d0a:	4218                	lw	a4,0(a2)
20402d0c:	425c                	lw	a5,4(a2)
20402d0e:	0705                	addi	a4,a4,1
20402d10:	c218                	sw	a4,0(a2)
20402d12:	4418                	lw	a4,8(s0)
20402d14:	17fd                	addi	a5,a5,-1
20402d16:	c25c                	sw	a5,4(a2)
20402d18:	177d                	addi	a4,a4,-1
20402d1a:	c418                	sw	a4,8(s0)
20402d1c:	cb19                	beqz	a4,20402d32 <_scanf_chars+0xc2>
20402d1e:	f8f04be3          	bgtz	a5,20402cb4 <_scanf_chars+0x44>
20402d22:	18042783          	lw	a5,384(s0)
20402d26:	85b2                	mv	a1,a2
20402d28:	854e                	mv	a0,s3
20402d2a:	c632                	sw	a2,12(sp)
20402d2c:	9782                	jalr	a5
20402d2e:	4632                	lw	a2,12(sp)
20402d30:	d151                	beqz	a0,20402cb4 <_scanf_chars+0x44>
20402d32:	401c                	lw	a5,0(s0)
20402d34:	8bc1                	andi	a5,a5,16
20402d36:	eb81                	bnez	a5,20402d46 <_scanf_chars+0xd6>
20402d38:	445c                	lw	a5,12(s0)
20402d3a:	0785                	addi	a5,a5,1
20402d3c:	c45c                	sw	a5,12(s0)
20402d3e:	4c1c                	lw	a5,24(s0)
20402d40:	c399                	beqz	a5,20402d46 <_scanf_chars+0xd6>
20402d42:	00090023          	sb	zero,0(s2)
20402d46:	481c                	lw	a5,16(s0)
20402d48:	4501                	li	a0,0
20402d4a:	94be                	add	s1,s1,a5
20402d4c:	c804                	sw	s1,16(s0)
20402d4e:	b741                	j	20402cce <_scanf_chars+0x5e>

20402d50 <_scanf_i>:
_scanf_i():
20402d50:	715d                	addi	sp,sp,-80
20402d52:	ffffe797          	auipc	a5,0xffffe
20402d56:	81a78793          	addi	a5,a5,-2022 # 2040056c <_ctype_+0x140>
20402d5a:	c0ca                	sw	s2,64(sp)
20402d5c:	c23e                	sw	a5,4(sp)
20402d5e:	8936                	mv	s2,a3
20402d60:	ffffe797          	auipc	a5,0xffffe
20402d64:	81078793          	addi	a5,a5,-2032 # 20400570 <_ctype_+0x144>
20402d68:	4d94                	lw	a3,24(a1)
20402d6a:	c43e                	sw	a5,8(sp)
20402d6c:	ffffe797          	auipc	a5,0xffffe
20402d70:	80878793          	addi	a5,a5,-2040 # 20400574 <_ctype_+0x148>
20402d74:	c4a2                	sw	s0,72(sp)
20402d76:	de4e                	sw	s3,60(sp)
20402d78:	d85a                	sw	s6,48(sp)
20402d7a:	ce6e                	sw	s11,28(sp)
20402d7c:	c63e                	sw	a5,12(sp)
20402d7e:	c686                	sw	ra,76(sp)
20402d80:	c2a6                	sw	s1,68(sp)
20402d82:	dc52                	sw	s4,56(sp)
20402d84:	da56                	sw	s5,52(sp)
20402d86:	d65e                	sw	s7,44(sp)
20402d88:	d462                	sw	s8,40(sp)
20402d8a:	d266                	sw	s9,36(sp)
20402d8c:	d06a                	sw	s10,32(sp)
20402d8e:	478d                	li	a5,3
20402d90:	89aa                	mv	s3,a0
20402d92:	842e                	mv	s0,a1
20402d94:	8db2                	mv	s11,a2
20402d96:	00000b17          	auipc	s6,0x0
20402d9a:	492b0b13          	addi	s6,s6,1170 # 20403228 <_strtoul_r>
20402d9e:	00f69663          	bne	a3,a5,20402daa <_scanf_i+0x5a>
20402da2:	00000b17          	auipc	s6,0x0
20402da6:	368b0b13          	addi	s6,s6,872 # 2040310a <_strtol_r>
20402daa:	441c                	lw	a5,8(s0)
20402dac:	15c00693          	li	a3,348
20402db0:	4a01                	li	s4,0
20402db2:	fff78613          	addi	a2,a5,-1
20402db6:	00c6f763          	bgeu	a3,a2,20402dc4 <_scanf_i+0x74>
20402dba:	ea378a13          	addi	s4,a5,-349
20402dbe:	15d00793          	li	a5,349
20402dc2:	c41c                	sw	a5,8(s0)
20402dc4:	401c                	lw	a5,0(s0)
20402dc6:	6685                	lui	a3,0x1
20402dc8:	d0068693          	addi	a3,a3,-768 # d00 <__heap_size+0x500>
20402dcc:	01c40493          	addi	s1,s0,28
20402dd0:	8fd5                	or	a5,a5,a3
20402dd2:	c01c                	sw	a5,0(s0)
20402dd4:	00410c13          	addi	s8,sp,4
20402dd8:	8aa6                	mv	s5,s1
20402dda:	4b81                	li	s7,0
20402ddc:	20000c93          	li	s9,512
20402de0:	000da783          	lw	a5,0(s11)
20402de4:	000c2503          	lw	a0,0(s8)
20402de8:	4609                	li	a2,2
20402dea:	0007c583          	lbu	a1,0(a5)
20402dee:	34a1                	jal	20402836 <memchr>
20402df0:	c125                	beqz	a0,20402e50 <_scanf_i+0x100>
20402df2:	4785                	li	a5,1
20402df4:	0efb9163          	bne	s7,a5,20402ed6 <_scanf_i+0x186>
20402df8:	405c                	lw	a5,4(s0)
20402dfa:	e799                	bnez	a5,20402e08 <_scanf_i+0xb8>
20402dfc:	401c                	lw	a5,0(s0)
20402dfe:	4721                	li	a4,8
20402e00:	c058                	sw	a4,4(s0)
20402e02:	2007e793          	ori	a5,a5,512
20402e06:	c01c                	sw	a5,0(s0)
20402e08:	401c                	lw	a5,0(s0)
20402e0a:	aff7f793          	andi	a5,a5,-1281
20402e0e:	c01c                	sw	a5,0(s0)
20402e10:	441c                	lw	a5,8(s0)
20402e12:	fff78613          	addi	a2,a5,-1
20402e16:	c410                	sw	a2,8(s0)
20402e18:	cf85                	beqz	a5,20402e50 <_scanf_i+0x100>
20402e1a:	000da603          	lw	a2,0(s11)
20402e1e:	001a8d13          	addi	s10,s5,1
20402e22:	00160793          	addi	a5,a2,1
20402e26:	00fda023          	sw	a5,0(s11)
20402e2a:	00064603          	lbu	a2,0(a2)
20402e2e:	00ca8023          	sb	a2,0(s5)
20402e32:	004da603          	lw	a2,4(s11)
20402e36:	8aea                	mv	s5,s10
20402e38:	167d                	addi	a2,a2,-1
20402e3a:	00cda223          	sw	a2,4(s11)
20402e3e:	00c04963          	bgtz	a2,20402e50 <_scanf_i+0x100>
20402e42:	18042603          	lw	a2,384(s0)
20402e46:	85ee                	mv	a1,s11
20402e48:	854e                	mv	a0,s3
20402e4a:	9602                	jalr	a2
20402e4c:	10051b63          	bnez	a0,20402f62 <_scanf_i+0x212>
20402e50:	0b85                	addi	s7,s7,1
20402e52:	478d                	li	a5,3
20402e54:	0c11                	addi	s8,s8,4
20402e56:	f8fb95e3          	bne	s7,a5,20402de0 <_scanf_i+0x90>
20402e5a:	405c                	lw	a5,4(s0)
20402e5c:	e399                	bnez	a5,20402e62 <_scanf_i+0x112>
20402e5e:	47a9                	li	a5,10
20402e60:	c05c                	sw	a5,4(s0)
20402e62:	405c                	lw	a5,4(s0)
20402e64:	4848                	lw	a0,20(s0)
20402e66:	ffffd597          	auipc	a1,0xffffd
20402e6a:	70258593          	addi	a1,a1,1794 # 20400568 <_ctype_+0x13c>
20402e6e:	8d9d                	sub	a1,a1,a5
20402e70:	7bfd                	lui	s7,0xfffff
20402e72:	6c05                	lui	s8,0x1
20402e74:	8d56                	mv	s10,s5
20402e76:	df8ff0ef          	jal	ra,2040246e <__sccl>
20402e7a:	4a81                	li	s5,0
20402e7c:	03000c93          	li	s9,48
20402e80:	6ffb8b93          	addi	s7,s7,1791 # fffff6ff <metal_segment_heap_target_end+0x7fffdf8f>
20402e84:	800c0c13          	addi	s8,s8,-2048 # 800 <__heap_size>
20402e88:	4414                	lw	a3,8(s0)
20402e8a:	4010                	lw	a2,0(s0)
20402e8c:	c2c9                	beqz	a3,20402f0e <_scanf_i+0x1be>
20402e8e:	000da503          	lw	a0,0(s11)
20402e92:	484c                	lw	a1,20(s0)
20402e94:	00054803          	lbu	a6,0(a0)
20402e98:	95c2                	add	a1,a1,a6
20402e9a:	0005c583          	lbu	a1,0(a1)
20402e9e:	c9a5                	beqz	a1,20402f0e <_scanf_i+0x1be>
20402ea0:	05981863          	bne	a6,s9,20402ef0 <_scanf_i+0x1a0>
20402ea4:	018675b3          	and	a1,a2,s8
20402ea8:	c5a1                	beqz	a1,20402ef0 <_scanf_i+0x1a0>
20402eaa:	0a85                	addi	s5,s5,1
20402eac:	000a0563          	beqz	s4,20402eb6 <_scanf_i+0x166>
20402eb0:	0685                	addi	a3,a3,1
20402eb2:	1a7d                	addi	s4,s4,-1
20402eb4:	c414                	sw	a3,8(s0)
20402eb6:	004da683          	lw	a3,4(s11)
20402eba:	16fd                	addi	a3,a3,-1
20402ebc:	00dda223          	sw	a3,4(s11)
20402ec0:	04d05163          	blez	a3,20402f02 <_scanf_i+0x1b2>
20402ec4:	000da683          	lw	a3,0(s11)
20402ec8:	0685                	addi	a3,a3,1
20402eca:	00dda023          	sw	a3,0(s11)
20402ece:	4414                	lw	a3,8(s0)
20402ed0:	16fd                	addi	a3,a3,-1
20402ed2:	c414                	sw	a3,8(s0)
20402ed4:	bf55                	j	20402e88 <_scanf_i+0x138>
20402ed6:	4789                	li	a5,2
20402ed8:	f2fb9ce3          	bne	s7,a5,20402e10 <_scanf_i+0xc0>
20402edc:	401c                	lw	a5,0(s0)
20402ede:	6007f613          	andi	a2,a5,1536
20402ee2:	f79617e3          	bne	a2,s9,20402e50 <_scanf_i+0x100>
20402ee6:	4741                	li	a4,16
20402ee8:	c058                	sw	a4,4(s0)
20402eea:	1007e793          	ori	a5,a5,256
20402eee:	b705                	j	20402e0e <_scanf_i+0xbe>
20402ef0:	01767633          	and	a2,a2,s7
20402ef4:	c010                	sw	a2,0(s0)
20402ef6:	00054683          	lbu	a3,0(a0)
20402efa:	0d05                	addi	s10,s10,1
20402efc:	fedd0fa3          	sb	a3,-1(s10)
20402f00:	bf5d                	j	20402eb6 <_scanf_i+0x166>
20402f02:	18042683          	lw	a3,384(s0)
20402f06:	85ee                	mv	a1,s11
20402f08:	854e                	mv	a0,s3
20402f0a:	9682                	jalr	a3
20402f0c:	d169                	beqz	a0,20402ece <_scanf_i+0x17e>
20402f0e:	4014                	lw	a3,0(s0)
20402f10:	1006f693          	andi	a3,a3,256
20402f14:	c285                	beqz	a3,20402f34 <_scanf_i+0x1e4>
20402f16:	01a4fc63          	bgeu	s1,s10,20402f2e <_scanf_i+0x1de>
20402f1a:	fffd4583          	lbu	a1,-1(s10)
20402f1e:	17c42683          	lw	a3,380(s0)
20402f22:	fffd0a13          	addi	s4,s10,-1
20402f26:	866e                	mv	a2,s11
20402f28:	854e                	mv	a0,s3
20402f2a:	9682                	jalr	a3
20402f2c:	8d52                	mv	s10,s4
20402f2e:	4505                	li	a0,1
20402f30:	049d0f63          	beq	s10,s1,20402f8e <_scanf_i+0x23e>
20402f34:	4018                	lw	a4,0(s0)
20402f36:	8b41                	andi	a4,a4,16
20402f38:	e721                	bnez	a4,20402f80 <_scanf_i+0x230>
20402f3a:	000d0023          	sb	zero,0(s10)
20402f3e:	4054                	lw	a3,4(s0)
20402f40:	4601                	li	a2,0
20402f42:	85a6                	mv	a1,s1
20402f44:	854e                	mv	a0,s3
20402f46:	9b02                	jalr	s6
20402f48:	4014                	lw	a3,0(s0)
20402f4a:	00092703          	lw	a4,0(s2)
20402f4e:	0206f613          	andi	a2,a3,32
20402f52:	ca11                	beqz	a2,20402f66 <_scanf_i+0x216>
20402f54:	00470693          	addi	a3,a4,4
20402f58:	00d92023          	sw	a3,0(s2)
20402f5c:	4318                	lw	a4,0(a4)
20402f5e:	c308                	sw	a0,0(a4)
20402f60:	a829                	j	20402f7a <_scanf_i+0x22a>
20402f62:	4a81                	li	s5,0
20402f64:	b76d                	j	20402f0e <_scanf_i+0x1be>
20402f66:	0016f593          	andi	a1,a3,1
20402f6a:	00470613          	addi	a2,a4,4
20402f6e:	cd9d                	beqz	a1,20402fac <_scanf_i+0x25c>
20402f70:	00c92023          	sw	a2,0(s2)
20402f74:	4318                	lw	a4,0(a4)
20402f76:	00a71023          	sh	a0,0(a4)
20402f7a:	4458                	lw	a4,12(s0)
20402f7c:	0705                	addi	a4,a4,1
20402f7e:	c458                	sw	a4,12(s0)
20402f80:	481c                	lw	a5,16(s0)
20402f82:	409d04b3          	sub	s1,s10,s1
20402f86:	94d6                	add	s1,s1,s5
20402f88:	94be                	add	s1,s1,a5
20402f8a:	c804                	sw	s1,16(s0)
20402f8c:	4501                	li	a0,0
20402f8e:	40b6                	lw	ra,76(sp)
20402f90:	4426                	lw	s0,72(sp)
20402f92:	4496                	lw	s1,68(sp)
20402f94:	4906                	lw	s2,64(sp)
20402f96:	59f2                	lw	s3,60(sp)
20402f98:	5a62                	lw	s4,56(sp)
20402f9a:	5ad2                	lw	s5,52(sp)
20402f9c:	5b42                	lw	s6,48(sp)
20402f9e:	5bb2                	lw	s7,44(sp)
20402fa0:	5c22                	lw	s8,40(sp)
20402fa2:	5c92                	lw	s9,36(sp)
20402fa4:	5d02                	lw	s10,32(sp)
20402fa6:	4df2                	lw	s11,28(sp)
20402fa8:	6161                	addi	sp,sp,80
20402faa:	8082                	ret
20402fac:	00c92023          	sw	a2,0(s2)
20402fb0:	b775                	j	20402f5c <_scanf_i+0x20c>

20402fb2 <_read_r>:
_read_r():
20402fb2:	1141                	addi	sp,sp,-16
20402fb4:	c422                	sw	s0,8(sp)
20402fb6:	842a                	mv	s0,a0
20402fb8:	852e                	mv	a0,a1
20402fba:	85b2                	mv	a1,a2
20402fbc:	8636                	mv	a2,a3
20402fbe:	8e01a423          	sw	zero,-1816(gp) # 80000b60 <errno>
20402fc2:	c606                	sw	ra,12(sp)
20402fc4:	2631                	jal	204032d0 <_read>
20402fc6:	57fd                	li	a5,-1
20402fc8:	00f51763          	bne	a0,a5,20402fd6 <_read_r+0x24>
20402fcc:	8e818793          	addi	a5,gp,-1816 # 80000b60 <errno>
20402fd0:	439c                	lw	a5,0(a5)
20402fd2:	c391                	beqz	a5,20402fd6 <_read_r+0x24>
20402fd4:	c01c                	sw	a5,0(s0)
20402fd6:	40b2                	lw	ra,12(sp)
20402fd8:	4422                	lw	s0,8(sp)
20402fda:	0141                	addi	sp,sp,16
20402fdc:	8082                	ret

20402fde <_strtol_l.isra.0>:
_strtol_l.isra.0():
20402fde:	1141                	addi	sp,sp,-16
20402fe0:	c622                	sw	s0,12(sp)
20402fe2:	8faa                	mv	t6,a0
20402fe4:	882e                	mv	a6,a1
20402fe6:	ffffd317          	auipc	t1,0xffffd
20402fea:	44730313          	addi	t1,t1,1095 # 2040042d <_ctype_+0x1>
20402fee:	00180713          	addi	a4,a6,1
20402ff2:	fff74783          	lbu	a5,-1(a4)
20402ff6:	00678533          	add	a0,a5,t1
20402ffa:	00054883          	lbu	a7,0(a0)
20402ffe:	0088f893          	andi	a7,a7,8
20403002:	08089763          	bnez	a7,20403090 <_strtol_l.isra.0+0xb2>
20403006:	02d00513          	li	a0,45
2040300a:	08a79563          	bne	a5,a0,20403094 <_strtol_l.isra.0+0xb6>
2040300e:	00074783          	lbu	a5,0(a4)
20403012:	4e05                	li	t3,1
20403014:	00280713          	addi	a4,a6,2
20403018:	c2fd                	beqz	a3,204030fe <_strtol_l.isra.0+0x120>
2040301a:	4541                	li	a0,16
2040301c:	02a69263          	bne	a3,a0,20403040 <_strtol_l.isra.0+0x62>
20403020:	03000513          	li	a0,48
20403024:	00a79e63          	bne	a5,a0,20403040 <_strtol_l.isra.0+0x62>
20403028:	00074783          	lbu	a5,0(a4)
2040302c:	05800513          	li	a0,88
20403030:	0df7f793          	andi	a5,a5,223
20403034:	0ca79063          	bne	a5,a0,204030f4 <_strtol_l.isra.0+0x116>
20403038:	00174783          	lbu	a5,1(a4)
2040303c:	46c1                	li	a3,16
2040303e:	0709                	addi	a4,a4,2
20403040:	80000337          	lui	t1,0x80000
20403044:	000e1463          	bnez	t3,2040304c <_strtol_l.isra.0+0x6e>
20403048:	fff34313          	not	t1,t1
2040304c:	02d372b3          	remu	t0,t1,a3
20403050:	4881                	li	a7,0
20403052:	4501                	li	a0,0
20403054:	43a5                	li	t2,9
20403056:	4f65                	li	t5,25
20403058:	547d                	li	s0,-1
2040305a:	02d35eb3          	divu	t4,t1,a3
2040305e:	fd078813          	addi	a6,a5,-48
20403062:	0503e463          	bltu	t2,a6,204030aa <_strtol_l.isra.0+0xcc>
20403066:	87c2                	mv	a5,a6
20403068:	04d7df63          	bge	a5,a3,204030c6 <_strtol_l.isra.0+0xe8>
2040306c:	00888e63          	beq	a7,s0,20403088 <_strtol_l.isra.0+0xaa>
20403070:	58fd                	li	a7,-1
20403072:	00aeeb63          	bltu	t4,a0,20403088 <_strtol_l.isra.0+0xaa>
20403076:	00ae9463          	bne	t4,a0,2040307e <_strtol_l.isra.0+0xa0>
2040307a:	00f2c763          	blt	t0,a5,20403088 <_strtol_l.isra.0+0xaa>
2040307e:	4885                	li	a7,1
20403080:	02a68833          	mul	a6,a3,a0
20403084:	01078533          	add	a0,a5,a6
20403088:	0705                	addi	a4,a4,1
2040308a:	fff74783          	lbu	a5,-1(a4)
2040308e:	bfc1                	j	2040305e <_strtol_l.isra.0+0x80>
20403090:	883a                	mv	a6,a4
20403092:	bfb1                	j	20402fee <_strtol_l.isra.0+0x10>
20403094:	02b00513          	li	a0,43
20403098:	00a78463          	beq	a5,a0,204030a0 <_strtol_l.isra.0+0xc2>
2040309c:	4e01                	li	t3,0
2040309e:	bfad                	j	20403018 <_strtol_l.isra.0+0x3a>
204030a0:	00074783          	lbu	a5,0(a4)
204030a4:	00280713          	addi	a4,a6,2
204030a8:	bfd5                	j	2040309c <_strtol_l.isra.0+0xbe>
204030aa:	fbf78813          	addi	a6,a5,-65
204030ae:	010f6563          	bltu	t5,a6,204030b8 <_strtol_l.isra.0+0xda>
204030b2:	fc978793          	addi	a5,a5,-55
204030b6:	bf4d                	j	20403068 <_strtol_l.isra.0+0x8a>
204030b8:	f9f78813          	addi	a6,a5,-97
204030bc:	010f6563          	bltu	t5,a6,204030c6 <_strtol_l.isra.0+0xe8>
204030c0:	fa978793          	addi	a5,a5,-87
204030c4:	b755                	j	20403068 <_strtol_l.isra.0+0x8a>
204030c6:	57fd                	li	a5,-1
204030c8:	00f89b63          	bne	a7,a5,204030de <_strtol_l.isra.0+0x100>
204030cc:	02200793          	li	a5,34
204030d0:	00ffa023          	sw	a5,0(t6)
204030d4:	851a                	mv	a0,t1
204030d6:	ea19                	bnez	a2,204030ec <_strtol_l.isra.0+0x10e>
204030d8:	4432                	lw	s0,12(sp)
204030da:	0141                	addi	sp,sp,16
204030dc:	8082                	ret
204030de:	000e0463          	beqz	t3,204030e6 <_strtol_l.isra.0+0x108>
204030e2:	40a00533          	neg	a0,a0
204030e6:	da6d                	beqz	a2,204030d8 <_strtol_l.isra.0+0xfa>
204030e8:	00088463          	beqz	a7,204030f0 <_strtol_l.isra.0+0x112>
204030ec:	fff70593          	addi	a1,a4,-1
204030f0:	c20c                	sw	a1,0(a2)
204030f2:	b7dd                	j	204030d8 <_strtol_l.isra.0+0xfa>
204030f4:	03000793          	li	a5,48
204030f8:	f6a1                	bnez	a3,20403040 <_strtol_l.isra.0+0x62>
204030fa:	46a1                	li	a3,8
204030fc:	b791                	j	20403040 <_strtol_l.isra.0+0x62>
204030fe:	03000513          	li	a0,48
20403102:	f2a783e3          	beq	a5,a0,20403028 <_strtol_l.isra.0+0x4a>
20403106:	46a9                	li	a3,10
20403108:	bf25                	j	20403040 <_strtol_l.isra.0+0x62>

2040310a <_strtol_r>:
_strtol_r():
2040310a:	bdd1                	j	20402fde <_strtol_l.isra.0>

2040310c <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
2040310c:	8faa                	mv	t6,a0
2040310e:	882e                	mv	a6,a1
20403110:	ffffd317          	auipc	t1,0xffffd
20403114:	31d30313          	addi	t1,t1,797 # 2040042d <_ctype_+0x1>
20403118:	00180713          	addi	a4,a6,1
2040311c:	fff74783          	lbu	a5,-1(a4)
20403120:	00678533          	add	a0,a5,t1
20403124:	00054883          	lbu	a7,0(a0)
20403128:	0088f893          	andi	a7,a7,8
2040312c:	08089163          	bnez	a7,204031ae <_strtoul_l.isra.0+0xa2>
20403130:	02d00513          	li	a0,45
20403134:	06a79f63          	bne	a5,a0,204031b2 <_strtoul_l.isra.0+0xa6>
20403138:	00074783          	lbu	a5,0(a4)
2040313c:	4e05                	li	t3,1
2040313e:	00280713          	addi	a4,a6,2
20403142:	cee1                	beqz	a3,2040321a <_strtoul_l.isra.0+0x10e>
20403144:	4541                	li	a0,16
20403146:	02a69263          	bne	a3,a0,2040316a <_strtoul_l.isra.0+0x5e>
2040314a:	03000513          	li	a0,48
2040314e:	00a79e63          	bne	a5,a0,2040316a <_strtoul_l.isra.0+0x5e>
20403152:	00074783          	lbu	a5,0(a4)
20403156:	05800513          	li	a0,88
2040315a:	0df7f793          	andi	a5,a5,223
2040315e:	0aa79963          	bne	a5,a0,20403210 <_strtoul_l.isra.0+0x104>
20403162:	00174783          	lbu	a5,1(a4)
20403166:	46c1                	li	a3,16
20403168:	0709                	addi	a4,a4,2
2040316a:	587d                	li	a6,-1
2040316c:	02d85eb3          	divu	t4,a6,a3
20403170:	4881                	li	a7,0
20403172:	4501                	li	a0,0
20403174:	42a5                	li	t0,9
20403176:	4f65                	li	t5,25
20403178:	02d87333          	remu	t1,a6,a3
2040317c:	fd078813          	addi	a6,a5,-48
20403180:	0502e463          	bltu	t0,a6,204031c8 <_strtoul_l.isra.0+0xbc>
20403184:	87c2                	mv	a5,a6
20403186:	06d7d163          	bge	a5,a3,204031e8 <_strtoul_l.isra.0+0xdc>
2040318a:	0408cd63          	bltz	a7,204031e4 <_strtoul_l.isra.0+0xd8>
2040318e:	58fd                	li	a7,-1
20403190:	00aeeb63          	bltu	t4,a0,204031a6 <_strtoul_l.isra.0+0x9a>
20403194:	00ae9463          	bne	t4,a0,2040319c <_strtoul_l.isra.0+0x90>
20403198:	00f34763          	blt	t1,a5,204031a6 <_strtoul_l.isra.0+0x9a>
2040319c:	4885                	li	a7,1
2040319e:	02a68833          	mul	a6,a3,a0
204031a2:	01078533          	add	a0,a5,a6
204031a6:	0705                	addi	a4,a4,1
204031a8:	fff74783          	lbu	a5,-1(a4)
204031ac:	bfc1                	j	2040317c <_strtoul_l.isra.0+0x70>
204031ae:	883a                	mv	a6,a4
204031b0:	b7a5                	j	20403118 <_strtoul_l.isra.0+0xc>
204031b2:	02b00513          	li	a0,43
204031b6:	00a78463          	beq	a5,a0,204031be <_strtoul_l.isra.0+0xb2>
204031ba:	4e01                	li	t3,0
204031bc:	b759                	j	20403142 <_strtoul_l.isra.0+0x36>
204031be:	00074783          	lbu	a5,0(a4)
204031c2:	00280713          	addi	a4,a6,2
204031c6:	bfd5                	j	204031ba <_strtoul_l.isra.0+0xae>
204031c8:	fbf78813          	addi	a6,a5,-65
204031cc:	010f6563          	bltu	t5,a6,204031d6 <_strtoul_l.isra.0+0xca>
204031d0:	fc978793          	addi	a5,a5,-55
204031d4:	bf4d                	j	20403186 <_strtoul_l.isra.0+0x7a>
204031d6:	f9f78813          	addi	a6,a5,-97
204031da:	010f6763          	bltu	t5,a6,204031e8 <_strtoul_l.isra.0+0xdc>
204031de:	fa978793          	addi	a5,a5,-87
204031e2:	b755                	j	20403186 <_strtoul_l.isra.0+0x7a>
204031e4:	58fd                	li	a7,-1
204031e6:	b7c1                	j	204031a6 <_strtoul_l.isra.0+0x9a>
204031e8:	0008d963          	bgez	a7,204031fa <_strtoul_l.isra.0+0xee>
204031ec:	02200793          	li	a5,34
204031f0:	00ffa023          	sw	a5,0(t6)
204031f4:	557d                	li	a0,-1
204031f6:	ea09                	bnez	a2,20403208 <_strtoul_l.isra.0+0xfc>
204031f8:	8082                	ret
204031fa:	000e0463          	beqz	t3,20403202 <_strtoul_l.isra.0+0xf6>
204031fe:	40a00533          	neg	a0,a0
20403202:	c215                	beqz	a2,20403226 <_strtoul_l.isra.0+0x11a>
20403204:	00088463          	beqz	a7,2040320c <_strtoul_l.isra.0+0x100>
20403208:	fff70593          	addi	a1,a4,-1
2040320c:	c20c                	sw	a1,0(a2)
2040320e:	8082                	ret
20403210:	03000793          	li	a5,48
20403214:	fab9                	bnez	a3,2040316a <_strtoul_l.isra.0+0x5e>
20403216:	46a1                	li	a3,8
20403218:	bf89                	j	2040316a <_strtoul_l.isra.0+0x5e>
2040321a:	03000513          	li	a0,48
2040321e:	f2a78ae3          	beq	a5,a0,20403152 <_strtoul_l.isra.0+0x46>
20403222:	46a9                	li	a3,10
20403224:	b799                	j	2040316a <_strtoul_l.isra.0+0x5e>
20403226:	8082                	ret

20403228 <_strtoul_r>:
_strtoul_r():
20403228:	b5d5                	j	2040310c <_strtoul_l.isra.0>

2040322a <_malloc_usable_size_r>:
_malloc_usable_size_r():
2040322a:	ffc5a783          	lw	a5,-4(a1)
2040322e:	ffc78513          	addi	a0,a5,-4
20403232:	0007d563          	bgez	a5,2040323c <_malloc_usable_size_r+0x12>
20403236:	95aa                	add	a1,a1,a0
20403238:	419c                	lw	a5,0(a1)
2040323a:	953e                	add	a0,a0,a5
2040323c:	8082                	ret

2040323e <_close>:
_close():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
2040323e:	1101                	addi	sp,sp,-32
20403240:	ce06                	sw	ra,28(sp)
20403242:	cc22                	sw	s0,24(sp)
20403244:	1000                	addi	s0,sp,32
20403246:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
2040324a:	225d                	jal	204033f0 <__errno>
2040324c:	872a                	mv	a4,a0
2040324e:	05800793          	li	a5,88
20403252:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:5
    return -1;
20403254:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:6
}
20403256:	853e                	mv	a0,a5
20403258:	40f2                	lw	ra,28(sp)
2040325a:	4462                	lw	s0,24(sp)
2040325c:	6105                	addi	sp,sp,32
2040325e:	8082                	ret

20403260 <_fstat>:
_fstat():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20403260:	1101                	addi	sp,sp,-32
20403262:	ce06                	sw	ra,28(sp)
20403264:	cc22                	sw	s0,24(sp)
20403266:	1000                	addi	s0,sp,32
20403268:	fea42623          	sw	a0,-20(s0)
2040326c:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20403270:	2241                	jal	204033f0 <__errno>
20403272:	872a                	mv	a4,a0
20403274:	fa800793          	li	a5,-88
20403278:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:6
    return -1;
2040327a:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:7
}
2040327c:	853e                	mv	a0,a5
2040327e:	40f2                	lw	ra,28(sp)
20403280:	4462                	lw	s0,24(sp)
20403282:	6105                	addi	sp,sp,32
20403284:	8082                	ret

20403286 <_isatty>:
_isatty():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20403286:	1101                	addi	sp,sp,-32
20403288:	ce22                	sw	s0,28(sp)
2040328a:	1000                	addi	s0,sp,32
2040328c:	fea42623          	sw	a0,-20(s0)
20403290:	fec42783          	lw	a5,-20(s0)
20403294:	17fd                	addi	a5,a5,-1
20403296:	0017b793          	seqz	a5,a5
2040329a:	0ff7f793          	andi	a5,a5,255
2040329e:	853e                	mv	a0,a5
204032a0:	4472                	lw	s0,28(sp)
204032a2:	6105                	addi	sp,sp,32
204032a4:	8082                	ret

204032a6 <_lseek>:
_lseek():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
204032a6:	1101                	addi	sp,sp,-32
204032a8:	ce06                	sw	ra,28(sp)
204032aa:	cc22                	sw	s0,24(sp)
204032ac:	1000                	addi	s0,sp,32
204032ae:	fea42623          	sw	a0,-20(s0)
204032b2:	feb42423          	sw	a1,-24(s0)
204032b6:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
204032ba:	2a1d                	jal	204033f0 <__errno>
204032bc:	872a                	mv	a4,a0
204032be:	05800793          	li	a5,88
204032c2:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:6
    return -1;
204032c4:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:7
}
204032c6:	853e                	mv	a0,a5
204032c8:	40f2                	lw	ra,28(sp)
204032ca:	4462                	lw	s0,24(sp)
204032cc:	6105                	addi	sp,sp,32
204032ce:	8082                	ret

204032d0 <_read>:
_read():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
204032d0:	1101                	addi	sp,sp,-32
204032d2:	ce06                	sw	ra,28(sp)
204032d4:	cc22                	sw	s0,24(sp)
204032d6:	1000                	addi	s0,sp,32
204032d8:	fea42623          	sw	a0,-20(s0)
204032dc:	feb42423          	sw	a1,-24(s0)
204032e0:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
204032e4:	2231                	jal	204033f0 <__errno>
204032e6:	872a                	mv	a4,a0
204032e8:	05800793          	li	a5,88
204032ec:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:6
    return -1;
204032ee:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:7
}
204032f0:	853e                	mv	a0,a5
204032f2:	40f2                	lw	ra,28(sp)
204032f4:	4462                	lw	s0,24(sp)
204032f6:	6105                	addi	sp,sp,32
204032f8:	8082                	ret

204032fa <_sbrk>:
_sbrk():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
204032fa:	7179                	addi	sp,sp,-48
204032fc:	d606                	sw	ra,44(sp)
204032fe:	d422                	sw	s0,40(sp)
20403300:	1800                	addi	s0,sp,48
20403302:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20403306:	800017b7          	lui	a5,0x80001
2040330a:	a807a783          	lw	a5,-1408(a5) # 80000a80 <metal_segment_heap_target_end+0xfffff310>
2040330e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20403312:	cf818713          	addi	a4,gp,-776 # 80000f70 <_sp>
20403316:	4f818793          	addi	a5,gp,1272 # 80001770 <metal_segment_heap_target_end>
2040331a:	00f71463          	bne	a4,a5,20403322 <_sbrk+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
2040331e:	57fd                	li	a5,-1
20403320:	a0b9                	j	2040336e <_sbrk+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20403322:	800017b7          	lui	a5,0x80001
20403326:	a807a703          	lw	a4,-1408(a5) # 80000a80 <metal_segment_heap_target_end+0xfffff310>
2040332a:	fdc42783          	lw	a5,-36(s0)
2040332e:	973e                	add	a4,a4,a5
20403330:	4f818793          	addi	a5,gp,1272 # 80001770 <metal_segment_heap_target_end>
20403334:	02f77663          	bgeu	a4,a5,20403360 <_sbrk+0x66>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20403338:	800017b7          	lui	a5,0x80001
2040333c:	a807a703          	lw	a4,-1408(a5) # 80000a80 <metal_segment_heap_target_end+0xfffff310>
20403340:	fdc42783          	lw	a5,-36(s0)
20403344:	973e                	add	a4,a4,a5
20403346:	800017b7          	lui	a5,0x80001
2040334a:	a8e7a023          	sw	a4,-1408(a5) # 80000a80 <metal_segment_heap_target_end+0xfffff310>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
2040334e:	fdc42583          	lw	a1,-36(s0)
20403352:	fec42503          	lw	a0,-20(s0)
20403356:	d3dfc0ef          	jal	ra,20400092 <metal_mem_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:42

    return old;
2040335a:	fec42783          	lw	a5,-20(s0)
2040335e:	a801                	j	2040336e <_sbrk+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20403360:	800017b7          	lui	a5,0x80001
20403364:	4f818713          	addi	a4,gp,1272 # 80001770 <metal_segment_heap_target_end>
20403368:	a8e7a023          	sw	a4,-1408(a5) # 80000a80 <metal_segment_heap_target_end+0xfffff310>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
2040336c:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:43
}
2040336e:	853e                	mv	a0,a5
20403370:	50b2                	lw	ra,44(sp)
20403372:	5422                	lw	s0,40(sp)
20403374:	6145                	addi	sp,sp,48
20403376:	8082                	ret

20403378 <_write>:
_write():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20403378:	7179                	addi	sp,sp,-48
2040337a:	d606                	sw	ra,44(sp)
2040337c:	d422                	sw	s0,40(sp)
2040337e:	1800                	addi	s0,sp,48
20403380:	fca42e23          	sw	a0,-36(s0)
20403384:	fcb42c23          	sw	a1,-40(s0)
20403388:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
2040338c:	fdc42703          	lw	a4,-36(s0)
20403390:	4785                	li	a5,1
20403392:	00f70963          	beq	a4,a5,204033a4 <_write+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20403396:	28a9                	jal	204033f0 <__errno>
20403398:	872a                	mv	a4,a0
2040339a:	05800793          	li	a5,88
2040339e:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
        return -1;
204033a0:	57fd                	li	a5,-1
204033a2:	a82d                	j	204033dc <_write+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
204033a4:	fd842783          	lw	a5,-40(s0)
204033a8:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
204033ac:	fe042623          	sw	zero,-20(s0)
204033b0:	a839                	j	204033ce <_write+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
204033b2:	fe842703          	lw	a4,-24(s0)
204033b6:	fec42783          	lw	a5,-20(s0)
204033ba:	97ba                	add	a5,a5,a4
204033bc:	0007c783          	lbu	a5,0(a5)
204033c0:	853e                	mv	a0,a5
204033c2:	2e85                	jal	20403732 <metal_tty_putc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
204033c4:	fec42783          	lw	a5,-20(s0)
204033c8:	0785                	addi	a5,a5,1
204033ca:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
204033ce:	fec42703          	lw	a4,-20(s0)
204033d2:	fd442783          	lw	a5,-44(s0)
204033d6:	fcf76ee3          	bltu	a4,a5,204033b2 <_write+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
    return 0;
204033da:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:17
}
204033dc:	853e                	mv	a0,a5
204033de:	50b2                	lw	ra,44(sp)
204033e0:	5422                	lw	s0,40(sp)
204033e2:	6145                	addi	sp,sp,48
204033e4:	8082                	ret

204033e6 <atexit>:
atexit():
204033e6:	85aa                	mv	a1,a0
204033e8:	4681                	li	a3,0
204033ea:	4601                	li	a2,0
204033ec:	4501                	li	a0,0
204033ee:	a8f1                	j	204034ca <__register_exitproc>

204033f0 <__errno>:
__errno():
204033f0:	5fbfd797          	auipc	a5,0x5fbfd
204033f4:	68878793          	addi	a5,a5,1672 # 80000a78 <_impure_ptr>
204033f8:	4388                	lw	a0,0(a5)
204033fa:	8082                	ret

204033fc <exit>:
exit():
204033fc:	1141                	addi	sp,sp,-16
204033fe:	c422                	sw	s0,8(sp)
20403400:	c606                	sw	ra,12(sp)
20403402:	00000797          	auipc	a5,0x0
20403406:	15078793          	addi	a5,a5,336 # 20403552 <__call_exitprocs>
2040340a:	842a                	mv	s0,a0
2040340c:	c399                	beqz	a5,20403412 <exit+0x16>
2040340e:	4581                	li	a1,0
20403410:	2289                	jal	20403552 <__call_exitprocs>
20403412:	5fbfd797          	auipc	a5,0x5fbfd
20403416:	66a78793          	addi	a5,a5,1642 # 80000a7c <_global_impure_ptr>
2040341a:	4388                	lw	a0,0(a5)
2040341c:	551c                	lw	a5,40(a0)
2040341e:	c391                	beqz	a5,20403422 <exit+0x26>
20403420:	9782                	jalr	a5
20403422:	8522                	mv	a0,s0
20403424:	0ff040ef          	jal	ra,20407d22 <_exit>

20403428 <__libc_fini_array>:
__libc_fini_array():
20403428:	1141                	addi	sp,sp,-16
2040342a:	ffffd797          	auipc	a5,0xffffd
2040342e:	ece78793          	addi	a5,a5,-306 # 204002f8 <__fini_array_end>
20403432:	c422                	sw	s0,8(sp)
20403434:	ffffd417          	auipc	s0,0xffffd
20403438:	ec440413          	addi	s0,s0,-316 # 204002f8 <__fini_array_end>
2040343c:	8c1d                	sub	s0,s0,a5
2040343e:	c226                	sw	s1,4(sp)
20403440:	c606                	sw	ra,12(sp)
20403442:	8409                	srai	s0,s0,0x2
20403444:	84be                	mv	s1,a5
20403446:	e411                	bnez	s0,20403452 <__libc_fini_array+0x2a>
20403448:	40b2                	lw	ra,12(sp)
2040344a:	4422                	lw	s0,8(sp)
2040344c:	4492                	lw	s1,4(sp)
2040344e:	0141                	addi	sp,sp,16
20403450:	8082                	ret
20403452:	147d                	addi	s0,s0,-1
20403454:	00241793          	slli	a5,s0,0x2
20403458:	97a6                	add	a5,a5,s1
2040345a:	439c                	lw	a5,0(a5)
2040345c:	9782                	jalr	a5
2040345e:	b7e5                	j	20403446 <__libc_fini_array+0x1e>

20403460 <__libc_init_array>:
__libc_init_array():
20403460:	1141                	addi	sp,sp,-16
20403462:	ffffd797          	auipc	a5,0xffffd
20403466:	e8678793          	addi	a5,a5,-378 # 204002e8 <_metal_tty_init_ptr>
2040346a:	c422                	sw	s0,8(sp)
2040346c:	ffffd417          	auipc	s0,0xffffd
20403470:	e7c40413          	addi	s0,s0,-388 # 204002e8 <_metal_tty_init_ptr>
20403474:	8c1d                	sub	s0,s0,a5
20403476:	c226                	sw	s1,4(sp)
20403478:	c04a                	sw	s2,0(sp)
2040347a:	c606                	sw	ra,12(sp)
2040347c:	8409                	srai	s0,s0,0x2
2040347e:	4481                	li	s1,0
20403480:	893e                	mv	s2,a5
20403482:	02849663          	bne	s1,s0,204034ae <__libc_init_array+0x4e>
20403486:	ffffd797          	auipc	a5,0xffffd
2040348a:	e6278793          	addi	a5,a5,-414 # 204002e8 <_metal_tty_init_ptr>
2040348e:	ffffd417          	auipc	s0,0xffffd
20403492:	e5a40413          	addi	s0,s0,-422 # 204002e8 <_metal_tty_init_ptr>
20403496:	8c1d                	sub	s0,s0,a5
20403498:	8409                	srai	s0,s0,0x2
2040349a:	4481                	li	s1,0
2040349c:	893e                	mv	s2,a5
2040349e:	00849f63          	bne	s1,s0,204034bc <__libc_init_array+0x5c>
204034a2:	40b2                	lw	ra,12(sp)
204034a4:	4422                	lw	s0,8(sp)
204034a6:	4492                	lw	s1,4(sp)
204034a8:	4902                	lw	s2,0(sp)
204034aa:	0141                	addi	sp,sp,16
204034ac:	8082                	ret
204034ae:	00249793          	slli	a5,s1,0x2
204034b2:	97ca                	add	a5,a5,s2
204034b4:	439c                	lw	a5,0(a5)
204034b6:	0485                	addi	s1,s1,1
204034b8:	9782                	jalr	a5
204034ba:	b7e1                	j	20403482 <__libc_init_array+0x22>
204034bc:	00249793          	slli	a5,s1,0x2
204034c0:	97ca                	add	a5,a5,s2
204034c2:	439c                	lw	a5,0(a5)
204034c4:	0485                	addi	s1,s1,1
204034c6:	9782                	jalr	a5
204034c8:	bfd9                	j	2040349e <__libc_init_array+0x3e>

204034ca <__register_exitproc>:
__register_exitproc():
204034ca:	5fbfd797          	auipc	a5,0x5fbfd
204034ce:	5fe78793          	addi	a5,a5,1534 # 80000ac8 <_global_atexit>
204034d2:	439c                	lw	a5,0(a5)
204034d4:	8e2a                	mv	t3,a0
204034d6:	e39d                	bnez	a5,204034fc <__register_exitproc+0x32>
204034d8:	5fbfd717          	auipc	a4,0x5fbfd
204034dc:	5fc70713          	addi	a4,a4,1532 # 80000ad4 <_global_atexit0>
204034e0:	5fbfd797          	auipc	a5,0x5fbfd
204034e4:	5ee7a423          	sw	a4,1512(a5) # 80000ac8 <_global_atexit>
204034e8:	dfbfd517          	auipc	a0,0xdfbfd
204034ec:	b1850513          	addi	a0,a0,-1256 # 0 <__metal_boot_hart>
204034f0:	87ba                	mv	a5,a4
204034f2:	c509                	beqz	a0,204034fc <__register_exitproc+0x32>
204034f4:	411c                	lw	a5,0(a0)
204034f6:	8ef1a223          	sw	a5,-1820(gp) # 80000b5c <_global_atexit0+0x88>
204034fa:	87ba                	mv	a5,a4
204034fc:	43d8                	lw	a4,4(a5)
204034fe:	487d                	li	a6,31
20403500:	557d                	li	a0,-1
20403502:	04e84763          	blt	a6,a4,20403550 <__register_exitproc+0x86>
20403506:	020e0e63          	beqz	t3,20403542 <__register_exitproc+0x78>
2040350a:	0887a803          	lw	a6,136(a5)
2040350e:	04080163          	beqz	a6,20403550 <__register_exitproc+0x86>
20403512:	00271893          	slli	a7,a4,0x2
20403516:	98c2                	add	a7,a7,a6
20403518:	00c8a023          	sw	a2,0(a7)
2040351c:	10082303          	lw	t1,256(a6)
20403520:	4605                	li	a2,1
20403522:	00e61633          	sll	a2,a2,a4
20403526:	00c36333          	or	t1,t1,a2
2040352a:	10682023          	sw	t1,256(a6)
2040352e:	08d8a023          	sw	a3,128(a7)
20403532:	4689                	li	a3,2
20403534:	00de1763          	bne	t3,a3,20403542 <__register_exitproc+0x78>
20403538:	10482683          	lw	a3,260(a6)
2040353c:	8e55                	or	a2,a2,a3
2040353e:	10c82223          	sw	a2,260(a6)
20403542:	00170693          	addi	a3,a4,1
20403546:	070a                	slli	a4,a4,0x2
20403548:	c3d4                	sw	a3,4(a5)
2040354a:	97ba                	add	a5,a5,a4
2040354c:	c78c                	sw	a1,8(a5)
2040354e:	4501                	li	a0,0
20403550:	8082                	ret

20403552 <__call_exitprocs>:
__call_exitprocs():
20403552:	7179                	addi	sp,sp,-48
20403554:	cc52                	sw	s4,24(sp)
20403556:	ca56                	sw	s5,20(sp)
20403558:	c85a                	sw	s6,16(sp)
2040355a:	c65e                	sw	s7,12(sp)
2040355c:	d606                	sw	ra,44(sp)
2040355e:	d422                	sw	s0,40(sp)
20403560:	d226                	sw	s1,36(sp)
20403562:	d04a                	sw	s2,32(sp)
20403564:	ce4e                	sw	s3,28(sp)
20403566:	c462                	sw	s8,8(sp)
20403568:	8b2a                	mv	s6,a0
2040356a:	8a2e                	mv	s4,a1
2040356c:	5fbfda97          	auipc	s5,0x5fbfd
20403570:	55ca8a93          	addi	s5,s5,1372 # 80000ac8 <_global_atexit>
20403574:	4b85                	li	s7,1
20403576:	000aa403          	lw	s0,0(s5)
2040357a:	c811                	beqz	s0,2040358e <__call_exitprocs+0x3c>
2040357c:	4044                	lw	s1,4(s0)
2040357e:	08842983          	lw	s3,136(s0)
20403582:	fff48913          	addi	s2,s1,-1
20403586:	048a                	slli	s1,s1,0x2
20403588:	94a2                	add	s1,s1,s0
2040358a:	00095e63          	bgez	s2,204035a6 <__call_exitprocs+0x54>
2040358e:	50b2                	lw	ra,44(sp)
20403590:	5422                	lw	s0,40(sp)
20403592:	5492                	lw	s1,36(sp)
20403594:	5902                	lw	s2,32(sp)
20403596:	49f2                	lw	s3,28(sp)
20403598:	4a62                	lw	s4,24(sp)
2040359a:	4ad2                	lw	s5,20(sp)
2040359c:	4b42                	lw	s6,16(sp)
2040359e:	4bb2                	lw	s7,12(sp)
204035a0:	4c22                	lw	s8,8(sp)
204035a2:	6145                	addi	sp,sp,48
204035a4:	8082                	ret
204035a6:	000a0e63          	beqz	s4,204035c2 <__call_exitprocs+0x70>
204035aa:	00099563          	bnez	s3,204035b4 <__call_exitprocs+0x62>
204035ae:	197d                	addi	s2,s2,-1
204035b0:	14f1                	addi	s1,s1,-4
204035b2:	bfe1                	j	2040358a <__call_exitprocs+0x38>
204035b4:	00291793          	slli	a5,s2,0x2
204035b8:	97ce                	add	a5,a5,s3
204035ba:	0807a783          	lw	a5,128(a5)
204035be:	ff4798e3          	bne	a5,s4,204035ae <__call_exitprocs+0x5c>
204035c2:	4058                	lw	a4,4(s0)
204035c4:	40dc                	lw	a5,4(s1)
204035c6:	177d                	addi	a4,a4,-1
204035c8:	03271863          	bne	a4,s2,204035f8 <__call_exitprocs+0xa6>
204035cc:	01242223          	sw	s2,4(s0)
204035d0:	dff9                	beqz	a5,204035ae <__call_exitprocs+0x5c>
204035d2:	00442c03          	lw	s8,4(s0)
204035d6:	00098863          	beqz	s3,204035e6 <__call_exitprocs+0x94>
204035da:	1009a683          	lw	a3,256(s3)
204035de:	012b9733          	sll	a4,s7,s2
204035e2:	8ef9                	and	a3,a3,a4
204035e4:	ee89                	bnez	a3,204035fe <__call_exitprocs+0xac>
204035e6:	9782                	jalr	a5
204035e8:	4058                	lw	a4,4(s0)
204035ea:	000aa783          	lw	a5,0(s5)
204035ee:	f98714e3          	bne	a4,s8,20403576 <__call_exitprocs+0x24>
204035f2:	faf40ee3          	beq	s0,a5,204035ae <__call_exitprocs+0x5c>
204035f6:	b741                	j	20403576 <__call_exitprocs+0x24>
204035f8:	0004a223          	sw	zero,4(s1)
204035fc:	bfd1                	j	204035d0 <__call_exitprocs+0x7e>
204035fe:	00291693          	slli	a3,s2,0x2
20403602:	96ce                	add	a3,a3,s3
20403604:	428c                	lw	a1,0(a3)
20403606:	1049a683          	lw	a3,260(s3)
2040360a:	8f75                	and	a4,a4,a3
2040360c:	e701                	bnez	a4,20403614 <__call_exitprocs+0xc2>
2040360e:	855a                	mv	a0,s6
20403610:	9782                	jalr	a5
20403612:	bfd9                	j	204035e8 <__call_exitprocs+0x96>
20403614:	852e                	mv	a0,a1
20403616:	9782                	jalr	a5
20403618:	bfc1                	j	204035e8 <__call_exitprocs+0x96>

2040361a <metal_init>:
metal_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
2040361a:	1101                	addi	sp,sp,-32
2040361c:	ce06                	sw	ra,28(sp)
2040361e:	cc22                	sw	s0,24(sp)
20403620:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20403622:	800017b7          	lui	a5,0x80001
20403626:	acc7a783          	lw	a5,-1332(a5) # 80000acc <metal_segment_heap_target_end+0xfffff35c>
2040362a:	efa9                	bnez	a5,20403684 <metal_init+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
2040362c:	800017b7          	lui	a5,0x80001
20403630:	4705                	li	a4,1
20403632:	ace7a623          	sw	a4,-1332(a5) # 80000acc <metal_segment_heap_target_end+0xfffff35c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20403636:	204007b7          	lui	a5,0x20400
2040363a:	2f478713          	addi	a4,a5,756 # 204002f4 <metal_constructors_end>
2040363e:	204007b7          	lui	a5,0x20400
20403642:	2e878793          	addi	a5,a5,744 # 204002e8 <_metal_tty_init_ptr>
20403646:	04e7f163          	bgeu	a5,a4,20403688 <metal_init+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
2040364a:	204007b7          	lui	a5,0x20400
2040364e:	2e878793          	addi	a5,a5,744 # 204002e8 <_metal_tty_init_ptr>
20403652:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20403656:	a831                	j	20403672 <metal_init+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20403658:	fec42783          	lw	a5,-20(s0)
2040365c:	439c                	lw	a5,0(a5)
2040365e:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:33

        func();
20403662:	fe842783          	lw	a5,-24(s0)
20403666:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:35

        funcptr += 1;
20403668:	fec42783          	lw	a5,-20(s0)
2040366c:	0791                	addi	a5,a5,4
2040366e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20403672:	fec42703          	lw	a4,-20(s0)
20403676:	204007b7          	lui	a5,0x20400
2040367a:	2f478793          	addi	a5,a5,756 # 204002f4 <metal_constructors_end>
2040367e:	fcf71de3          	bne	a4,a5,20403658 <metal_init+0x3e>
20403682:	a021                	j	2040368a <metal_init+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:21
        return;
20403684:	0001                	nop
20403686:	a011                	j	2040368a <metal_init+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:26
        return;
20403688:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:37
    }
}
2040368a:	40f2                	lw	ra,28(sp)
2040368c:	4462                	lw	s0,24(sp)
2040368e:	6105                	addi	sp,sp,32
20403690:	8082                	ret

20403692 <metal_fini>:
metal_fini():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:39

void metal_fini(void) {
20403692:	1101                	addi	sp,sp,-32
20403694:	ce06                	sw	ra,28(sp)
20403696:	cc22                	sw	s0,24(sp)
20403698:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
2040369a:	800017b7          	lui	a5,0x80001
2040369e:	ad07a783          	lw	a5,-1328(a5) # 80000ad0 <metal_segment_heap_target_end+0xfffff360>
204036a2:	efa9                	bnez	a5,204036fc <metal_fini+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
204036a4:	800017b7          	lui	a5,0x80001
204036a8:	4705                	li	a4,1
204036aa:	ace7a823          	sw	a4,-1328(a5) # 80000ad0 <metal_segment_heap_target_end+0xfffff360>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
204036ae:	204007b7          	lui	a5,0x20400
204036b2:	2f878713          	addi	a4,a5,760 # 204002f8 <__fini_array_end>
204036b6:	204007b7          	lui	a5,0x20400
204036ba:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
204036be:	04e7f163          	bgeu	a5,a4,20403700 <metal_fini+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
204036c2:	204007b7          	lui	a5,0x20400
204036c6:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
204036ca:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
204036ce:	a831                	j	204036ea <metal_fini+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
204036d0:	fec42783          	lw	a5,-20(s0)
204036d4:	439c                	lw	a5,0(a5)
204036d6:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:55

        func();
204036da:	fe842783          	lw	a5,-24(s0)
204036de:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:57

        funcptr += 1;
204036e0:	fec42783          	lw	a5,-20(s0)
204036e4:	0791                	addi	a5,a5,4
204036e6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
204036ea:	fec42703          	lw	a4,-20(s0)
204036ee:	204007b7          	lui	a5,0x20400
204036f2:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
204036f6:	fcf71de3          	bne	a4,a5,204036d0 <metal_fini+0x3e>
204036fa:	a021                	j	20403702 <metal_fini+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:43
        return;
204036fc:	0001                	nop
204036fe:	a011                	j	20403702 <metal_fini+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:48
        return;
20403700:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:59
    }
}
20403702:	40f2                	lw	ra,28(sp)
20403704:	4462                	lw	s0,24(sp)
20403706:	6105                	addi	sp,sp,32
20403708:	8082                	ret

2040370a <metal_init_run>:
metal_init_run():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2040370a:	1141                	addi	sp,sp,-16
2040370c:	c606                	sw	ra,12(sp)
2040370e:	c422                	sw	s0,8(sp)
20403710:	0800                	addi	s0,sp,16
20403712:	3721                	jal	2040361a <metal_init>
20403714:	0001                	nop
20403716:	40b2                	lw	ra,12(sp)
20403718:	4422                	lw	s0,8(sp)
2040371a:	0141                	addi	sp,sp,16
2040371c:	8082                	ret

2040371e <metal_fini_run>:
metal_fini_run():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2040371e:	1141                	addi	sp,sp,-16
20403720:	c606                	sw	ra,12(sp)
20403722:	c422                	sw	s0,8(sp)
20403724:	0800                	addi	s0,sp,16
20403726:	37b5                	jal	20403692 <metal_fini>
20403728:	0001                	nop
2040372a:	40b2                	lw	ra,12(sp)
2040372c:	4422                	lw	s0,8(sp)
2040372e:	0141                	addi	sp,sp,16
20403730:	8082                	ret

20403732 <metal_tty_putc>:
metal_tty_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20403732:	1101                	addi	sp,sp,-32
20403734:	ce06                	sw	ra,28(sp)
20403736:	cc22                	sw	s0,24(sp)
20403738:	1000                	addi	s0,sp,32
2040373a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2040373e:	fec42583          	lw	a1,-20(s0)
20403742:	800017b7          	lui	a5,0x80001
20403746:	a3078513          	addi	a0,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
2040374a:	282d                	jal	20403784 <metal_uart_putc>
2040374c:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:14
}
2040374e:	853e                	mv	a0,a5
20403750:	40f2                	lw	ra,28(sp)
20403752:	4462                	lw	s0,24(sp)
20403754:	6105                	addi	sp,sp,32
20403756:	8082                	ret

20403758 <metal_uart_init>:
metal_uart_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20403758:	1101                	addi	sp,sp,-32
2040375a:	ce06                	sw	ra,28(sp)
2040375c:	cc22                	sw	s0,24(sp)
2040375e:	1000                	addi	s0,sp,32
20403760:	fea42623          	sw	a0,-20(s0)
20403764:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20403768:	fec42783          	lw	a5,-20(s0)
2040376c:	439c                	lw	a5,0(a5)
2040376e:	439c                	lw	a5,0(a5)
20403770:	fe842583          	lw	a1,-24(s0)
20403774:	fec42503          	lw	a0,-20(s0)
20403778:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:61
}
2040377a:	0001                	nop
2040377c:	40f2                	lw	ra,28(sp)
2040377e:	4462                	lw	s0,24(sp)
20403780:	6105                	addi	sp,sp,32
20403782:	8082                	ret

20403784 <metal_uart_putc>:
metal_uart_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20403784:	1101                	addi	sp,sp,-32
20403786:	ce06                	sw	ra,28(sp)
20403788:	cc22                	sw	s0,24(sp)
2040378a:	1000                	addi	s0,sp,32
2040378c:	fea42623          	sw	a0,-20(s0)
20403790:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20403794:	fec42783          	lw	a5,-20(s0)
20403798:	439c                	lw	a5,0(a5)
2040379a:	43dc                	lw	a5,4(a5)
2040379c:	fe842583          	lw	a1,-24(s0)
204037a0:	fec42503          	lw	a0,-20(s0)
204037a4:	9782                	jalr	a5
204037a6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:71
}
204037a8:	853e                	mv	a0,a5
204037aa:	40f2                	lw	ra,28(sp)
204037ac:	4462                	lw	s0,24(sp)
204037ae:	6105                	addi	sp,sp,32
204037b0:	8082                	ret

204037b2 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
204037b2:	1101                	addi	sp,sp,-32
204037b4:	ce06                	sw	ra,28(sp)
204037b6:	cc22                	sw	s0,24(sp)
204037b8:	1000                	addi	s0,sp,32
204037ba:	fea42623          	sw	a0,-20(s0)
204037be:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
204037c2:	fec42783          	lw	a5,-20(s0)
204037c6:	439c                	lw	a5,0(a5)
204037c8:	4bdc                	lw	a5,20(a5)
204037ca:	fe842583          	lw	a1,-24(s0)
204037ce:	fec42503          	lw	a0,-20(s0)
204037d2:	9782                	jalr	a5
204037d4:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:113
}
204037d6:	853e                	mv	a0,a5
204037d8:	40f2                	lw	ra,28(sp)
204037da:	4462                	lw	s0,24(sp)
204037dc:	6105                	addi	sp,sp,32
204037de:	8082                	ret

204037e0 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:208
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
204037e0:	1101                	addi	sp,sp,-32
204037e2:	ce22                	sw	s0,28(sp)
204037e4:	1000                	addi	s0,sp,32
204037e6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:209
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
204037ea:	fec42703          	lw	a4,-20(s0)
204037ee:	81018793          	addi	a5,gp,-2032 # 80000a88 <__metal_dt_clint_2000000>
204037f2:	00f71563          	bne	a4,a5,204037fc <__metal_driver_sifive_clint0_control_base+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:210
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
204037f6:	020007b7          	lui	a5,0x2000
204037fa:	a011                	j	204037fe <__metal_driver_sifive_clint0_control_base+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:213
	}
	else {
		return 0;
204037fc:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:215
	}
}
204037fe:	853e                	mv	a0,a5
20403800:	4472                	lw	s0,28(sp)
20403802:	6105                	addi	sp,sp,32
20403804:	8082                	ret

20403806 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:228
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20403806:	1101                	addi	sp,sp,-32
20403808:	ce22                	sw	s0,28(sp)
2040380a:	1000                	addi	s0,sp,32
2040380c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:229
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20403810:	fec42703          	lw	a4,-20(s0)
20403814:	81018793          	addi	a5,gp,-2032 # 80000a88 <__metal_dt_clint_2000000>
20403818:	00f71463          	bne	a4,a5,20403820 <__metal_driver_sifive_clint0_num_interrupts+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:230
		return METAL_MAX_CLINT_INTERRUPTS;
2040381c:	4789                	li	a5,2
2040381e:	a011                	j	20403822 <__metal_driver_sifive_clint0_num_interrupts+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:233
	}
	else {
		return 0;
20403820:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:235
	}
}
20403822:	853e                	mv	a0,a5
20403824:	4472                	lw	s0,28(sp)
20403826:	6105                	addi	sp,sp,32
20403828:	8082                	ret

2040382a <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:238

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2040382a:	1101                	addi	sp,sp,-32
2040382c:	ce22                	sw	s0,28(sp)
2040382e:	1000                	addi	s0,sp,32
20403830:	fea42623          	sw	a0,-20(s0)
20403834:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:239
	if (idx == 0) {
20403838:	fe842783          	lw	a5,-24(s0)
2040383c:	e791                	bnez	a5,20403848 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:240
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2040383e:	800007b7          	lui	a5,0x80000
20403842:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe918>
20403846:	a821                	j	2040385e <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:242
	}
	else if (idx == 1) {
20403848:	fe842703          	lw	a4,-24(s0)
2040384c:	4785                	li	a5,1
2040384e:	00f71763          	bne	a4,a5,2040385c <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:243
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20403852:	800007b7          	lui	a5,0x80000
20403856:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe918>
2040385a:	a011                	j	2040385e <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:246
	}
	else {
		return NULL;
2040385c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:248
	}
}
2040385e:	853e                	mv	a0,a5
20403860:	4472                	lw	s0,28(sp)
20403862:	6105                	addi	sp,sp,32
20403864:	8082                	ret

20403866 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:251

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20403866:	1101                	addi	sp,sp,-32
20403868:	ce22                	sw	s0,28(sp)
2040386a:	1000                	addi	s0,sp,32
2040386c:	fea42623          	sw	a0,-20(s0)
20403870:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:252
	if (idx == 0) {
20403874:	fe842783          	lw	a5,-24(s0)
20403878:	e399                	bnez	a5,2040387e <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:253
		return 3;
2040387a:	478d                	li	a5,3
2040387c:	a809                	j	2040388e <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:255
	}
	else if (idx == 1) {
2040387e:	fe842703          	lw	a4,-24(s0)
20403882:	4785                	li	a5,1
20403884:	00f71463          	bne	a4,a5,2040388c <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:256
		return 7;
20403888:	479d                	li	a5,7
2040388a:	a011                	j	2040388e <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:259
	}
	else {
		return 0;
2040388c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:261
	}
}
2040388e:	853e                	mv	a0,a5
20403890:	4472                	lw	s0,28(sp)
20403892:	6105                	addi	sp,sp,32
20403894:	8082                	ret

20403896 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20403896:	715d                	addi	sp,sp,-80
20403898:	c686                	sw	ra,76(sp)
2040389a:	c4a2                	sw	s0,72(sp)
2040389c:	c2ca                	sw	s2,68(sp)
2040389e:	c0ce                	sw	s3,64(sp)
204038a0:	de52                	sw	s4,60(sp)
204038a2:	dc56                	sw	s5,56(sp)
204038a4:	da5a                	sw	s6,52(sp)
204038a6:	d85e                	sw	s7,48(sp)
204038a8:	d662                	sw	s8,44(sp)
204038aa:	d466                	sw	s9,40(sp)
204038ac:	0880                	addi	s0,sp,80
204038ae:	faa42e23          	sw	a0,-68(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
204038b2:	fbc42783          	lw	a5,-68(s0)
204038b6:	853e                	mv	a0,a5
204038b8:	3725                	jal	204037e0 <__metal_driver_sifive_clint0_control_base>
204038ba:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
204038be:	fcc42703          	lw	a4,-52(s0)
204038c2:	67b1                	lui	a5,0xc
204038c4:	17f1                	addi	a5,a5,-4
204038c6:	97ba                	add	a5,a5,a4
204038c8:	439c                	lw	a5,0(a5)
204038ca:	fcf42423          	sw	a5,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
204038ce:	fcc42703          	lw	a4,-52(s0)
204038d2:	67b1                	lui	a5,0xc
204038d4:	17e1                	addi	a5,a5,-8
204038d6:	97ba                	add	a5,a5,a4
204038d8:	439c                	lw	a5,0(a5)
204038da:	fcf42223          	sw	a5,-60(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204038de:	fcc42703          	lw	a4,-52(s0)
204038e2:	67b1                	lui	a5,0xc
204038e4:	17f1                	addi	a5,a5,-4
204038e6:	97ba                	add	a5,a5,a4
204038e8:	439c                	lw	a5,0(a5)
204038ea:	fc842703          	lw	a4,-56(s0)
204038ee:	fcf718e3          	bne	a4,a5,204038be <__metal_clint0_mtime_get+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
204038f2:	fc842783          	lw	a5,-56(s0)
204038f6:	8c3e                	mv	s8,a5
204038f8:	4c81                	li	s9,0
204038fa:	000c1993          	slli	s3,s8,0x0
204038fe:	4901                	li	s2,0
20403900:	fc442783          	lw	a5,-60(s0)
20403904:	8a3e                	mv	s4,a5
20403906:	4a81                	li	s5,0
20403908:	01496b33          	or	s6,s2,s4
2040390c:	0159ebb3          	or	s7,s3,s5
20403910:	87da                	mv	a5,s6
20403912:	885e                	mv	a6,s7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30
}
20403914:	853e                	mv	a0,a5
20403916:	85c2                	mv	a1,a6
20403918:	40b6                	lw	ra,76(sp)
2040391a:	4426                	lw	s0,72(sp)
2040391c:	4916                	lw	s2,68(sp)
2040391e:	4986                	lw	s3,64(sp)
20403920:	5a72                	lw	s4,60(sp)
20403922:	5ae2                	lw	s5,56(sp)
20403924:	5b52                	lw	s6,52(sp)
20403926:	5bc2                	lw	s7,48(sp)
20403928:	5c32                	lw	s8,44(sp)
2040392a:	5ca2                	lw	s9,40(sp)
2040392c:	6161                	addi	sp,sp,80
2040392e:	8082                	ret

20403930 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20403930:	7179                	addi	sp,sp,-48
20403932:	d606                	sw	ra,44(sp)
20403934:	d422                	sw	s0,40(sp)
20403936:	d24a                	sw	s2,36(sp)
20403938:	d04e                	sw	s3,32(sp)
2040393a:	1800                	addi	s0,sp,48
2040393c:	fca42e23          	sw	a0,-36(s0)
20403940:	fcb42c23          	sw	a1,-40(s0)
20403944:	fcc42823          	sw	a2,-48(s0)
20403948:	fcd42a23          	sw	a3,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
2040394c:	fdc42783          	lw	a5,-36(s0)
20403950:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20403954:	fec42783          	lw	a5,-20(s0)
20403958:	853e                	mv	a0,a5
2040395a:	3559                	jal	204037e0 <__metal_driver_sifive_clint0_control_base>
2040395c:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20403960:	fd842783          	lw	a5,-40(s0)
20403964:	078e                	slli	a5,a5,0x3
20403966:	873e                	mv	a4,a5
20403968:	fe842783          	lw	a5,-24(s0)
2040396c:	973e                	add	a4,a4,a5
2040396e:	6791                	lui	a5,0x4
20403970:	0791                	addi	a5,a5,4
20403972:	97ba                	add	a5,a5,a4
20403974:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20403976:	57fd                	li	a5,-1
20403978:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2040397a:	fd842783          	lw	a5,-40(s0)
2040397e:	078e                	slli	a5,a5,0x3
20403980:	873e                	mv	a4,a5
20403982:	fe842783          	lw	a5,-24(s0)
20403986:	973e                	add	a4,a4,a5
20403988:	6791                	lui	a5,0x4
2040398a:	97ba                	add	a5,a5,a4
2040398c:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
2040398e:	fd042783          	lw	a5,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20403992:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20403994:	fd442783          	lw	a5,-44(s0)
20403998:	0007d913          	srli	s2,a5,0x0
2040399c:	4981                	li	s3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2040399e:	fd842783          	lw	a5,-40(s0)
204039a2:	078e                	slli	a5,a5,0x3
204039a4:	873e                	mv	a4,a5
204039a6:	fe842783          	lw	a5,-24(s0)
204039aa:	973e                	add	a4,a4,a5
204039ac:	6791                	lui	a5,0x4
204039ae:	0791                	addi	a5,a5,4
204039b0:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
204039b2:	874a                	mv	a4,s2
204039b4:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
204039b6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
204039b8:	853e                	mv	a0,a5
204039ba:	50b2                	lw	ra,44(sp)
204039bc:	5422                	lw	s0,40(sp)
204039be:	5912                	lw	s2,36(sp)
204039c0:	5982                	lw	s3,32(sp)
204039c2:	6145                	addi	sp,sp,48
204039c4:	8082                	ret

204039c6 <_get_cpu_intc>:
_get_cpu_intc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
204039c6:	1101                	addi	sp,sp,-32
204039c8:	ce06                	sw	ra,28(sp)
204039ca:	cc22                	sw	s0,24(sp)
204039cc:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
204039ce:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
204039d2:	f14027f3          	csrr	a5,mhartid
204039d6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
204039da:	fec42783          	lw	a5,-20(s0)
204039de:	853e                	mv	a0,a5
204039e0:	182040ef          	jal	ra,20407b62 <metal_cpu_get>
204039e4:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
204039e8:	fe842503          	lw	a0,-24(s0)
204039ec:	150040ef          	jal	ra,20407b3c <metal_cpu_interrupt_controller>
204039f0:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
}
204039f2:	853e                	mv	a0,a5
204039f4:	40f2                	lw	ra,28(sp)
204039f6:	4462                	lw	s0,24(sp)
204039f8:	6105                	addi	sp,sp,32
204039fa:	8082                	ret

204039fc <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
204039fc:	7139                	addi	sp,sp,-64
204039fe:	de06                	sw	ra,60(sp)
20403a00:	dc22                	sw	s0,56(sp)
20403a02:	0080                	addi	s0,sp,64
20403a04:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403a08:	fcc42503          	lw	a0,-52(s0)
20403a0c:	3bed                	jal	20403806 <__metal_driver_sifive_clint0_num_interrupts>
20403a0e:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20403a12:	fcc42783          	lw	a5,-52(s0)
20403a16:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20403a1a:	fe442783          	lw	a5,-28(s0)
20403a1e:	43dc                	lw	a5,4(a5)
20403a20:	efa9                	bnez	a5,20403a7a <__metal_driver_riscv_clint0_init+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20403a22:	fe042623          	sw	zero,-20(s0)
20403a26:	a081                	j	20403a66 <__metal_driver_riscv_clint0_init+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403a28:	fec42583          	lw	a1,-20(s0)
20403a2c:	fcc42503          	lw	a0,-52(s0)
20403a30:	3bed                	jal	2040382a <__metal_driver_sifive_clint0_interrupt_parents>
20403a32:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403a36:	fec42583          	lw	a1,-20(s0)
20403a3a:	fcc42503          	lw	a0,-52(s0)
20403a3e:	3525                	jal	20403866 <__metal_driver_sifive_clint0_interrupt_lines>
20403a40:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20403a44:	fe042783          	lw	a5,-32(s0)
20403a48:	439c                	lw	a5,0(a5)
20403a4a:	4fdc                	lw	a5,28(a5)
20403a4c:	fcc42683          	lw	a3,-52(s0)
20403a50:	4601                	li	a2,0
20403a52:	fdc42583          	lw	a1,-36(s0)
20403a56:	fe042503          	lw	a0,-32(s0)
20403a5a:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20403a5c:	fec42783          	lw	a5,-20(s0)
20403a60:	0785                	addi	a5,a5,1
20403a62:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20403a66:	fec42703          	lw	a4,-20(s0)
20403a6a:	fe842783          	lw	a5,-24(s0)
20403a6e:	faf74de3          	blt	a4,a5,20403a28 <__metal_driver_riscv_clint0_init+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20403a72:	fe442783          	lw	a5,-28(s0)
20403a76:	4705                	li	a4,1
20403a78:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20403a7a:	0001                	nop
20403a7c:	50f2                	lw	ra,60(sp)
20403a7e:	5462                	lw	s0,56(sp)
20403a80:	6121                	addi	sp,sp,64
20403a82:	8082                	ret

20403a84 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20403a84:	7139                	addi	sp,sp,-64
20403a86:	de06                	sw	ra,60(sp)
20403a88:	dc22                	sw	s0,56(sp)
20403a8a:	0080                	addi	s0,sp,64
20403a8c:	fca42623          	sw	a0,-52(s0)
20403a90:	fcb42423          	sw	a1,-56(s0)
20403a94:	fcc42223          	sw	a2,-60(s0)
20403a98:	fcd42023          	sw	a3,-64(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20403a9c:	57fd                	li	a5,-1
20403a9e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20403aa2:	3f4010ef          	jal	ra,20404e96 <__metal_controller_interrupt_vector_mode>
20403aa6:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20403aaa:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403aae:	3f21                	jal	204039c6 <_get_cpu_intc>
20403ab0:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403ab4:	fcc42503          	lw	a0,-52(s0)
20403ab8:	33b9                	jal	20403806 <__metal_driver_sifive_clint0_num_interrupts>
20403aba:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20403abe:	fe042703          	lw	a4,-32(s0)
20403ac2:	4785                	li	a5,1
20403ac4:	00f70863          	beq	a4,a5,20403ad4 <__metal_driver_riscv_clint0_register+0x50>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20403ac8:	fe042783          	lw	a5,-32(s0)
20403acc:	c781                	beqz	a5,20403ad4 <__metal_driver_riscv_clint0_register+0x50>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20403ace:	fec42783          	lw	a5,-20(s0)
20403ad2:	a049                	j	20403b54 <__metal_driver_riscv_clint0_register+0xd0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20403ad4:	fe042223          	sw	zero,-28(s0)
20403ad8:	a091                	j	20403b1c <__metal_driver_riscv_clint0_register+0x98>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403ada:	fe442583          	lw	a1,-28(s0)
20403ade:	fcc42503          	lw	a0,-52(s0)
20403ae2:	3351                	jal	20403866 <__metal_driver_sifive_clint0_interrupt_lines>
20403ae4:	fca42a23          	sw	a0,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403ae8:	fe442583          	lw	a1,-28(s0)
20403aec:	fcc42503          	lw	a0,-52(s0)
20403af0:	3b2d                	jal	2040382a <__metal_driver_sifive_clint0_interrupt_parents>
20403af2:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20403af6:	fdc42703          	lw	a4,-36(s0)
20403afa:	fe842783          	lw	a5,-24(s0)
20403afe:	00f71863          	bne	a4,a5,20403b0e <__metal_driver_riscv_clint0_register+0x8a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20403b02:	fc842703          	lw	a4,-56(s0)
20403b06:	fd442783          	lw	a5,-44(s0)
20403b0a:	02f70063          	beq	a4,a5,20403b2a <__metal_driver_riscv_clint0_register+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20403b0e:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20403b12:	fe442783          	lw	a5,-28(s0)
20403b16:	0785                	addi	a5,a5,1
20403b18:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20403b1c:	fe442703          	lw	a4,-28(s0)
20403b20:	fd842783          	lw	a5,-40(s0)
20403b24:	faf74be3          	blt	a4,a5,20403ada <__metal_driver_riscv_clint0_register+0x56>
20403b28:	a011                	j	20403b2c <__metal_driver_riscv_clint0_register+0xa8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20403b2a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20403b2c:	fe842783          	lw	a5,-24(s0)
20403b30:	c385                	beqz	a5,20403b50 <__metal_driver_riscv_clint0_register+0xcc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20403b32:	fe842783          	lw	a5,-24(s0)
20403b36:	439c                	lw	a5,0(a5)
20403b38:	4fdc                	lw	a5,28(a5)
20403b3a:	fc042683          	lw	a3,-64(s0)
20403b3e:	fc442603          	lw	a2,-60(s0)
20403b42:	fc842583          	lw	a1,-56(s0)
20403b46:	fe842503          	lw	a0,-24(s0)
20403b4a:	9782                	jalr	a5
20403b4c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20403b50:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
}
20403b54:	853e                	mv	a0,a5
20403b56:	50f2                	lw	ra,60(sp)
20403b58:	5462                	lw	s0,56(sp)
20403b5a:	6121                	addi	sp,sp,64
20403b5c:	8082                	ret

20403b5e <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20403b5e:	7179                	addi	sp,sp,-48
20403b60:	d622                	sw	s0,44(sp)
20403b62:	1800                	addi	s0,sp,48
20403b64:	fca42e23          	sw	a0,-36(s0)
20403b68:	fcb42c23          	sw	a1,-40(s0)
20403b6c:	fcc42a23          	sw	a2,-44(s0)
20403b70:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20403b74:	57fd                	li	a5,-1
20403b76:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20403b7a:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123
}
20403b7e:	853e                	mv	a0,a5
20403b80:	5432                	lw	s0,44(sp)
20403b82:	6145                	addi	sp,sp,48
20403b84:	8082                	ret

20403b86 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20403b86:	1101                	addi	sp,sp,-32
20403b88:	ce06                	sw	ra,28(sp)
20403b8a:	cc22                	sw	s0,24(sp)
20403b8c:	1000                	addi	s0,sp,32
20403b8e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20403b92:	304010ef          	jal	ra,20404e96 <__metal_controller_interrupt_vector_mode>
20403b96:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
}
20403b98:	853e                	mv	a0,a5
20403b9a:	40f2                	lw	ra,28(sp)
20403b9c:	4462                	lw	s0,24(sp)
20403b9e:	6105                	addi	sp,sp,32
20403ba0:	8082                	ret

20403ba2 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20403ba2:	7179                	addi	sp,sp,-48
20403ba4:	d606                	sw	ra,44(sp)
20403ba6:	d422                	sw	s0,40(sp)
20403ba8:	1800                	addi	s0,sp,48
20403baa:	fca42e23          	sw	a0,-36(s0)
20403bae:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20403bb2:	57fd                	li	a5,-1
20403bb4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20403bb8:	3539                	jal	204039c6 <_get_cpu_intc>
20403bba:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20403bbe:	fe842783          	lw	a5,-24(s0)
20403bc2:	c395                	beqz	a5,20403be6 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20403bc4:	fd842703          	lw	a4,-40(s0)
20403bc8:	4785                	li	a5,1
20403bca:	02e7e063          	bltu	a5,a4,20403bea <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20403bce:	fe842783          	lw	a5,-24(s0)
20403bd2:	439c                	lw	a5,0(a5)
20403bd4:	43dc                	lw	a5,4(a5)
20403bd6:	fd842583          	lw	a1,-40(s0)
20403bda:	fe842503          	lw	a0,-24(s0)
20403bde:	9782                	jalr	a5
20403be0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20403be4:	a021                	j	20403bec <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20403be6:	0001                	nop
20403be8:	a011                	j	20403bec <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20403bea:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20403bec:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
}
20403bf0:	853e                	mv	a0,a5
20403bf2:	50b2                	lw	ra,44(sp)
20403bf4:	5422                	lw	s0,40(sp)
20403bf6:	6145                	addi	sp,sp,48
20403bf8:	8082                	ret

20403bfa <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20403bfa:	7139                	addi	sp,sp,-64
20403bfc:	de06                	sw	ra,60(sp)
20403bfe:	dc22                	sw	s0,56(sp)
20403c00:	0080                	addi	s0,sp,64
20403c02:	fca42623          	sw	a0,-52(s0)
20403c06:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20403c0a:	57fd                	li	a5,-1
20403c0c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20403c10:	fc842783          	lw	a5,-56(s0)
20403c14:	c7c9                	beqz	a5,20403c9e <__metal_driver_riscv_clint0_enable+0xa4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20403c16:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403c1a:	3375                	jal	204039c6 <_get_cpu_intc>
20403c1c:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20403c20:	fcc42503          	lw	a0,-52(s0)
20403c24:	36cd                	jal	20403806 <__metal_driver_sifive_clint0_num_interrupts>
20403c26:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20403c2a:	fe042223          	sw	zero,-28(s0)
20403c2e:	a091                	j	20403c72 <__metal_driver_riscv_clint0_enable+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403c30:	fe442583          	lw	a1,-28(s0)
20403c34:	fcc42503          	lw	a0,-52(s0)
20403c38:	313d                	jal	20403866 <__metal_driver_sifive_clint0_interrupt_lines>
20403c3a:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403c3e:	fe442583          	lw	a1,-28(s0)
20403c42:	fcc42503          	lw	a0,-52(s0)
20403c46:	36d5                	jal	2040382a <__metal_driver_sifive_clint0_interrupt_parents>
20403c48:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20403c4c:	fe042703          	lw	a4,-32(s0)
20403c50:	fe842783          	lw	a5,-24(s0)
20403c54:	00f71863          	bne	a4,a5,20403c64 <__metal_driver_riscv_clint0_enable+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20403c58:	fc842703          	lw	a4,-56(s0)
20403c5c:	fd842783          	lw	a5,-40(s0)
20403c60:	02f70063          	beq	a4,a5,20403c80 <__metal_driver_riscv_clint0_enable+0x86>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20403c64:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20403c68:	fe442783          	lw	a5,-28(s0)
20403c6c:	0785                	addi	a5,a5,1
20403c6e:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20403c72:	fe442703          	lw	a4,-28(s0)
20403c76:	fdc42783          	lw	a5,-36(s0)
20403c7a:	faf74be3          	blt	a4,a5,20403c30 <__metal_driver_riscv_clint0_enable+0x36>
20403c7e:	a011                	j	20403c82 <__metal_driver_riscv_clint0_enable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20403c80:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20403c82:	fe842783          	lw	a5,-24(s0)
20403c86:	cf81                	beqz	a5,20403c9e <__metal_driver_riscv_clint0_enable+0xa4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20403c88:	fe842783          	lw	a5,-24(s0)
20403c8c:	439c                	lw	a5,0(a5)
20403c8e:	53dc                	lw	a5,36(a5)
20403c90:	fc842583          	lw	a1,-56(s0)
20403c94:	fe842503          	lw	a0,-24(s0)
20403c98:	9782                	jalr	a5
20403c9a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20403c9e:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:178
}
20403ca2:	853e                	mv	a0,a5
20403ca4:	50f2                	lw	ra,60(sp)
20403ca6:	5462                	lw	s0,56(sp)
20403ca8:	6121                	addi	sp,sp,64
20403caa:	8082                	ret

20403cac <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20403cac:	7139                	addi	sp,sp,-64
20403cae:	de06                	sw	ra,60(sp)
20403cb0:	dc22                	sw	s0,56(sp)
20403cb2:	0080                	addi	s0,sp,64
20403cb4:	fca42623          	sw	a0,-52(s0)
20403cb8:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20403cbc:	57fd                	li	a5,-1
20403cbe:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20403cc2:	fc842783          	lw	a5,-56(s0)
20403cc6:	c7c9                	beqz	a5,20403d50 <__metal_driver_riscv_clint0_disable+0xa4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20403cc8:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403ccc:	39ed                	jal	204039c6 <_get_cpu_intc>
20403cce:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20403cd2:	fcc42503          	lw	a0,-52(s0)
20403cd6:	3e05                	jal	20403806 <__metal_driver_sifive_clint0_num_interrupts>
20403cd8:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20403cdc:	fe042223          	sw	zero,-28(s0)
20403ce0:	a091                	j	20403d24 <__metal_driver_riscv_clint0_disable+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403ce2:	fe442583          	lw	a1,-28(s0)
20403ce6:	fcc42503          	lw	a0,-52(s0)
20403cea:	3eb5                	jal	20403866 <__metal_driver_sifive_clint0_interrupt_lines>
20403cec:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403cf0:	fe442583          	lw	a1,-28(s0)
20403cf4:	fcc42503          	lw	a0,-52(s0)
20403cf8:	3e0d                	jal	2040382a <__metal_driver_sifive_clint0_interrupt_parents>
20403cfa:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20403cfe:	fe042703          	lw	a4,-32(s0)
20403d02:	fe842783          	lw	a5,-24(s0)
20403d06:	00f71863          	bne	a4,a5,20403d16 <__metal_driver_riscv_clint0_disable+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20403d0a:	fc842703          	lw	a4,-56(s0)
20403d0e:	fd842783          	lw	a5,-40(s0)
20403d12:	02f70063          	beq	a4,a5,20403d32 <__metal_driver_riscv_clint0_disable+0x86>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20403d16:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20403d1a:	fe442783          	lw	a5,-28(s0)
20403d1e:	0785                	addi	a5,a5,1
20403d20:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20403d24:	fe442703          	lw	a4,-28(s0)
20403d28:	fdc42783          	lw	a5,-36(s0)
20403d2c:	faf74be3          	blt	a4,a5,20403ce2 <__metal_driver_riscv_clint0_disable+0x36>
20403d30:	a011                	j	20403d34 <__metal_driver_riscv_clint0_disable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20403d32:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20403d34:	fe842783          	lw	a5,-24(s0)
20403d38:	cf81                	beqz	a5,20403d50 <__metal_driver_riscv_clint0_disable+0xa4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20403d3a:	fe842783          	lw	a5,-24(s0)
20403d3e:	439c                	lw	a5,0(a5)
20403d40:	579c                	lw	a5,40(a5)
20403d42:	fc842583          	lw	a1,-56(s0)
20403d46:	fe842503          	lw	a0,-24(s0)
20403d4a:	9782                	jalr	a5
20403d4c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20403d50:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
}
20403d54:	853e                	mv	a0,a5
20403d56:	50f2                	lw	ra,60(sp)
20403d58:	5462                	lw	s0,56(sp)
20403d5a:	6121                	addi	sp,sp,64
20403d5c:	8082                	ret

20403d5e <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20403d5e:	7179                	addi	sp,sp,-48
20403d60:	d606                	sw	ra,44(sp)
20403d62:	d422                	sw	s0,40(sp)
20403d64:	1800                	addi	s0,sp,48
20403d66:	fca42e23          	sw	a0,-36(s0)
20403d6a:	fcb42c23          	sw	a1,-40(s0)
20403d6e:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20403d72:	57fd                	li	a5,-1
20403d74:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20403d78:	fdc42783          	lw	a5,-36(s0)
20403d7c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20403d80:	fdc42503          	lw	a0,-36(s0)
20403d84:	a5dff0ef          	jal	ra,204037e0 <__metal_driver_sifive_clint0_control_base>
20403d88:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20403d8c:	fd842703          	lw	a4,-40(s0)
20403d90:	4789                	li	a5,2
20403d92:	04f70963          	beq	a4,a5,20403de4 <__metal_driver_riscv_clint0_command_request+0x86>
20403d96:	fd842703          	lw	a4,-40(s0)
20403d9a:	4789                	li	a5,2
20403d9c:	00e7c863          	blt	a5,a4,20403dac <__metal_driver_riscv_clint0_command_request+0x4e>
20403da0:	fd842703          	lw	a4,-40(s0)
20403da4:	4785                	li	a5,1
20403da6:	00f70e63          	beq	a4,a5,20403dc2 <__metal_driver_riscv_clint0_command_request+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20403daa:	a8f1                	j	20403e86 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20403dac:	fd842703          	lw	a4,-40(s0)
20403db0:	478d                	li	a5,3
20403db2:	04f70d63          	beq	a4,a5,20403e0c <__metal_driver_riscv_clint0_command_request+0xae>
20403db6:	fd842703          	lw	a4,-40(s0)
20403dba:	4791                	li	a5,4
20403dbc:	08f70963          	beq	a4,a5,20403e4e <__metal_driver_riscv_clint0_command_request+0xf0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20403dc0:	a0d9                	j	20403e86 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20403dc2:	fd442783          	lw	a5,-44(s0)
20403dc6:	cbcd                	beqz	a5,20403e78 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20403dc8:	fe842503          	lw	a0,-24(s0)
20403dcc:	acbff0ef          	jal	ra,20403896 <__metal_clint0_mtime_get>
20403dd0:	87aa                	mv	a5,a0
20403dd2:	882e                	mv	a6,a1
20403dd4:	fd442703          	lw	a4,-44(s0)
20403dd8:	c31c                	sw	a5,0(a4)
20403dda:	01072223          	sw	a6,4(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20403dde:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20403de2:	a859                	j	20403e78 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20403de4:	fd442783          	lw	a5,-44(s0)
20403de8:	cbd1                	beqz	a5,20403e7c <__metal_driver_riscv_clint0_command_request+0x11e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20403dea:	fd442783          	lw	a5,-44(s0)
20403dee:	439c                	lw	a5,0(a5)
20403df0:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20403df4:	fe042783          	lw	a5,-32(s0)
20403df8:	078a                	slli	a5,a5,0x2
20403dfa:	873e                	mv	a4,a5
20403dfc:	fe442783          	lw	a5,-28(s0)
20403e00:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20403e02:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20403e06:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403e0a:	a88d                	j	20403e7c <__metal_driver_riscv_clint0_command_request+0x11e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20403e0c:	fd442783          	lw	a5,-44(s0)
20403e10:	cba5                	beqz	a5,20403e80 <__metal_driver_riscv_clint0_command_request+0x122>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20403e12:	fd442783          	lw	a5,-44(s0)
20403e16:	439c                	lw	a5,0(a5)
20403e18:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20403e1c:	fe042783          	lw	a5,-32(s0)
20403e20:	078a                	slli	a5,a5,0x2
20403e22:	873e                	mv	a4,a5
20403e24:	fe442783          	lw	a5,-28(s0)
20403e28:	97ba                	add	a5,a5,a4
20403e2a:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20403e2c:	4785                	li	a5,1
20403e2e:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20403e30:	0480000f          	fence	o,i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20403e34:	fe042783          	lw	a5,-32(s0)
20403e38:	078a                	slli	a5,a5,0x2
20403e3a:	873e                	mv	a4,a5
20403e3c:	fe442783          	lw	a5,-28(s0)
20403e40:	97ba                	add	a5,a5,a4
20403e42:	439c                	lw	a5,0(a5)
20403e44:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20403e48:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403e4c:	a815                	j	20403e80 <__metal_driver_riscv_clint0_command_request+0x122>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20403e4e:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20403e52:	fd442783          	lw	a5,-44(s0)
20403e56:	c79d                	beqz	a5,20403e84 <__metal_driver_riscv_clint0_command_request+0x126>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20403e58:	fd442783          	lw	a5,-44(s0)
20403e5c:	439c                	lw	a5,0(a5)
20403e5e:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20403e62:	fe042783          	lw	a5,-32(s0)
20403e66:	078a                	slli	a5,a5,0x2
20403e68:	873e                	mv	a4,a5
20403e6a:	fe442783          	lw	a5,-28(s0)
20403e6e:	97ba                	add	a5,a5,a4
20403e70:	439c                	lw	a5,0(a5)
20403e72:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20403e76:	a039                	j	20403e84 <__metal_driver_riscv_clint0_command_request+0x126>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20403e78:	0001                	nop
20403e7a:	a031                	j	20403e86 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403e7c:	0001                	nop
20403e7e:	a021                	j	20403e86 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403e80:	0001                	nop
20403e82:	a011                	j	20403e86 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20403e84:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20403e86:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:267
}
20403e8a:	853e                	mv	a0,a5
20403e8c:	50b2                	lw	ra,44(sp)
20403e8e:	5422                	lw	s0,40(sp)
20403e90:	6145                	addi	sp,sp,48
20403e92:	8082                	ret

20403e94 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20403e94:	7179                	addi	sp,sp,-48
20403e96:	d606                	sw	ra,44(sp)
20403e98:	d422                	sw	s0,40(sp)
20403e9a:	1800                	addi	s0,sp,48
20403e9c:	fca42e23          	sw	a0,-36(s0)
20403ea0:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20403ea4:	4e9030ef          	jal	ra,20407b8c <metal_cpu_get_current_hartid>
20403ea8:	87aa                	mv	a5,a0
20403eaa:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20403eae:	fec40793          	addi	a5,s0,-20
20403eb2:	863e                	mv	a2,a5
20403eb4:	4589                	li	a1,2
20403eb6:	fdc42503          	lw	a0,-36(s0)
20403eba:	3555                	jal	20403d5e <__metal_driver_riscv_clint0_command_request>
20403ebc:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20403ebe:	853e                	mv	a0,a5
20403ec0:	50b2                	lw	ra,44(sp)
20403ec2:	5422                	lw	s0,40(sp)
20403ec4:	6145                	addi	sp,sp,48
20403ec6:	8082                	ret

20403ec8 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20403ec8:	7179                	addi	sp,sp,-48
20403eca:	d606                	sw	ra,44(sp)
20403ecc:	d422                	sw	s0,40(sp)
20403ece:	1800                	addi	s0,sp,48
20403ed0:	fca42e23          	sw	a0,-36(s0)
20403ed4:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20403ed8:	4b5030ef          	jal	ra,20407b8c <metal_cpu_get_current_hartid>
20403edc:	87aa                	mv	a5,a0
20403ede:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20403ee2:	fec40793          	addi	a5,s0,-20
20403ee6:	863e                	mv	a2,a5
20403ee8:	458d                	li	a1,3
20403eea:	fdc42503          	lw	a0,-36(s0)
20403eee:	3d85                	jal	20403d5e <__metal_driver_riscv_clint0_command_request>
20403ef0:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20403ef2:	853e                	mv	a0,a5
20403ef4:	50b2                	lw	ra,44(sp)
20403ef6:	5422                	lw	s0,40(sp)
20403ef8:	6145                	addi	sp,sp,48
20403efa:	8082                	ret

20403efc <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:267



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20403efc:	1101                	addi	sp,sp,-32
20403efe:	ce22                	sw	s0,28(sp)
20403f00:	1000                	addi	s0,sp,32
20403f02:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:268
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403f06:	fec42703          	lw	a4,-20(s0)
20403f0a:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_dt_cpu_0>
20403f0e:	00f71463          	bne	a4,a5,20403f16 <__metal_driver_cpu_hartid+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:269
		return 0;
20403f12:	4781                	li	a5,0
20403f14:	a011                	j	20403f18 <__metal_driver_cpu_hartid+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:272
	}
	else {
		return -1;
20403f16:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:274
	}
}
20403f18:	853e                	mv	a0,a5
20403f1a:	4472                	lw	s0,28(sp)
20403f1c:	6105                	addi	sp,sp,32
20403f1e:	8082                	ret

20403f20 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:277

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20403f20:	1101                	addi	sp,sp,-32
20403f22:	ce22                	sw	s0,28(sp)
20403f24:	1000                	addi	s0,sp,32
20403f26:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:278
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403f2a:	fec42703          	lw	a4,-20(s0)
20403f2e:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_dt_cpu_0>
20403f32:	00f71763          	bne	a4,a5,20403f40 <__metal_driver_cpu_timebase+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:279
		return 1000000;
20403f36:	000f47b7          	lui	a5,0xf4
20403f3a:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20403f3e:	a011                	j	20403f42 <__metal_driver_cpu_timebase+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:282
	}
	else {
		return 0;
20403f40:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:284
	}
}
20403f42:	853e                	mv	a0,a5
20403f44:	4472                	lw	s0,28(sp)
20403f46:	6105                	addi	sp,sp,32
20403f48:	8082                	ret

20403f4a <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:287

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20403f4a:	1101                	addi	sp,sp,-32
20403f4c:	ce22                	sw	s0,28(sp)
20403f4e:	1000                	addi	s0,sp,32
20403f50:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:288
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403f54:	fec42703          	lw	a4,-20(s0)
20403f58:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_dt_cpu_0>
20403f5c:	00f71763          	bne	a4,a5,20403f6a <__metal_driver_cpu_interrupt_controller+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:289
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20403f60:	800007b7          	lui	a5,0x80000
20403f64:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe918>
20403f68:	a011                	j	20403f6c <__metal_driver_cpu_interrupt_controller+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:292
	}
	else {
		return NULL;
20403f6a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:294
	}
}
20403f6c:	853e                	mv	a0,a5
20403f6e:	4472                	lw	s0,28(sp)
20403f70:	6105                	addi	sp,sp,32
20403f72:	8082                	ret

20403f74 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:307
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20403f74:	1101                	addi	sp,sp,-32
20403f76:	ce22                	sw	s0,28(sp)
20403f78:	1000                	addi	s0,sp,32
20403f7a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:308
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403f7e:	fec42703          	lw	a4,-20(s0)
20403f82:	81818793          	addi	a5,gp,-2024 # 80000a90 <__metal_dt_cpu_0>
20403f86:	00f71463          	bne	a4,a5,20403f8e <__metal_driver_cpu_buserror+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:309
		return NULL;
20403f8a:	4781                	li	a5,0
20403f8c:	a011                	j	20403f90 <__metal_driver_cpu_buserror+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:312
	}
	else {
		return NULL;
20403f8e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:314
	}
}
20403f90:	853e                	mv	a0,a5
20403f92:	4472                	lw	s0,28(sp)
20403f94:	6105                	addi	sp,sp,32
20403f96:	8082                	ret

20403f98 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20403f98:	1101                	addi	sp,sp,-32
20403f9a:	ce22                	sw	s0,28(sp)
20403f9c:	1000                	addi	s0,sp,32
20403f9e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20403fa2:	fec42783          	lw	a5,-20(s0)
20403fa6:	00f04a63          	bgtz	a5,20403fba <__metal_driver_cpu_get+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20403faa:	fec42703          	lw	a4,-20(s0)
20403fae:	070a                	slli	a4,a4,0x2
20403fb0:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20403fb4:	97ba                	add	a5,a5,a4
20403fb6:	439c                	lw	a5,0(a5)
20403fb8:	a011                	j	20403fbc <__metal_driver_cpu_get+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20403fba:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:30
}
20403fbc:	853e                	mv	a0,a5
20403fbe:	4472                	lw	s0,28(sp)
20403fc0:	6105                	addi	sp,sp,32
20403fc2:	8082                	ret

20403fc4 <__metal_myhart_id>:
__metal_myhart_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20403fc4:	1101                	addi	sp,sp,-32
20403fc6:	ce22                	sw	s0,28(sp)
20403fc8:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20403fca:	f14027f3          	csrr	a5,mhartid
20403fce:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20403fd2:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
}
20403fd6:	853e                	mv	a0,a5
20403fd8:	4472                	lw	s0,28(sp)
20403fda:	6105                	addi	sp,sp,32
20403fdc:	8082                	ret

20403fde <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20403fde:	1101                	addi	sp,sp,-32
20403fe0:	ce22                	sw	s0,28(sp)
20403fe2:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20403fe4:	47a1                	li	a5,8
20403fe6:	3007a7f3          	csrrs	a5,mstatus,a5
20403fea:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403fee:	0001                	nop
20403ff0:	4472                	lw	s0,28(sp)
20403ff2:	6105                	addi	sp,sp,32
20403ff4:	8082                	ret

20403ff6 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20403ff6:	1101                	addi	sp,sp,-32
20403ff8:	ce22                	sw	s0,28(sp)
20403ffa:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20403ffc:	47a1                	li	a5,8
20403ffe:	3007b7f3          	csrrc	a5,mstatus,a5
20404002:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20404006:	0001                	nop
20404008:	4472                	lw	s0,28(sp)
2040400a:	6105                	addi	sp,sp,32
2040400c:	8082                	ret

2040400e <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
2040400e:	1101                	addi	sp,sp,-32
20404010:	ce22                	sw	s0,28(sp)
20404012:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20404014:	47a1                	li	a5,8
20404016:	3047a7f3          	csrrs	a5,mie,a5
2040401a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2040401e:	0001                	nop
20404020:	4472                	lw	s0,28(sp)
20404022:	6105                	addi	sp,sp,32
20404024:	8082                	ret

20404026 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20404026:	1101                	addi	sp,sp,-32
20404028:	ce22                	sw	s0,28(sp)
2040402a:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2040402c:	47a1                	li	a5,8
2040402e:	3047b7f3          	csrrc	a5,mie,a5
20404032:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20404036:	0001                	nop
20404038:	4472                	lw	s0,28(sp)
2040403a:	6105                	addi	sp,sp,32
2040403c:	8082                	ret

2040403e <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
2040403e:	1101                	addi	sp,sp,-32
20404040:	ce22                	sw	s0,28(sp)
20404042:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20404044:	08000793          	li	a5,128
20404048:	3047a7f3          	csrrs	a5,mie,a5
2040404c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20404050:	0001                	nop
20404052:	4472                	lw	s0,28(sp)
20404054:	6105                	addi	sp,sp,32
20404056:	8082                	ret

20404058 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20404058:	1101                	addi	sp,sp,-32
2040405a:	ce22                	sw	s0,28(sp)
2040405c:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2040405e:	08000793          	li	a5,128
20404062:	3047b7f3          	csrrc	a5,mie,a5
20404066:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
2040406a:	0001                	nop
2040406c:	4472                	lw	s0,28(sp)
2040406e:	6105                	addi	sp,sp,32
20404070:	8082                	ret

20404072 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20404072:	1101                	addi	sp,sp,-32
20404074:	ce22                	sw	s0,28(sp)
20404076:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20404078:	6785                	lui	a5,0x1
2040407a:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
2040407e:	3047a7f3          	csrrs	a5,mie,a5
20404082:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20404086:	0001                	nop
20404088:	4472                	lw	s0,28(sp)
2040408a:	6105                	addi	sp,sp,32
2040408c:	8082                	ret

2040408e <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
2040408e:	1101                	addi	sp,sp,-32
20404090:	ce22                	sw	s0,28(sp)
20404092:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20404094:	6785                	lui	a5,0x1
20404096:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
2040409a:	3047b7f3          	csrrc	a5,mie,a5
2040409e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204040a2:	0001                	nop
204040a4:	4472                	lw	s0,28(sp)
204040a6:	6105                	addi	sp,sp,32
204040a8:	8082                	ret

204040aa <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
204040aa:	7179                	addi	sp,sp,-48
204040ac:	d622                	sw	s0,44(sp)
204040ae:	1800                	addi	s0,sp,48
204040b0:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
204040b4:	fdc42783          	lw	a5,-36(s0)
204040b8:	4705                	li	a4,1
204040ba:	00f717b3          	sll	a5,a4,a5
204040be:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
204040c2:	fec42783          	lw	a5,-20(s0)
204040c6:	3047a7f3          	csrrs	a5,mie,a5
204040ca:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
}
204040ce:	0001                	nop
204040d0:	5432                	lw	s0,44(sp)
204040d2:	6145                	addi	sp,sp,48
204040d4:	8082                	ret

204040d6 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
204040d6:	7179                	addi	sp,sp,-48
204040d8:	d622                	sw	s0,44(sp)
204040da:	1800                	addi	s0,sp,48
204040dc:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
204040e0:	fdc42783          	lw	a5,-36(s0)
204040e4:	4705                	li	a4,1
204040e6:	00f717b3          	sll	a5,a4,a5
204040ea:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
204040ee:	fec42783          	lw	a5,-20(s0)
204040f2:	3047b7f3          	csrrc	a5,mie,a5
204040f6:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
}
204040fa:	0001                	nop
204040fc:	5432                	lw	s0,44(sp)
204040fe:	6145                	addi	sp,sp,48
20404100:	8082                	ret

20404102 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20404102:	1101                	addi	sp,sp,-32
20404104:	ce06                	sw	ra,28(sp)
20404106:	cc22                	sw	s0,24(sp)
20404108:	1000                	addi	s0,sp,32
2040410a:	fea42623          	sw	a0,-20(s0)
2040410e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20404112:	06400513          	li	a0,100
20404116:	291030ef          	jal	ra,20407ba6 <metal_shutdown>

2040411a <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
2040411a:	1101                	addi	sp,sp,-32
2040411c:	ce06                	sw	ra,28(sp)
2040411e:	cc22                	sw	s0,24(sp)
20404120:	1000                	addi	s0,sp,32
20404122:	fea42623          	sw	a0,-20(s0)
20404126:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
2040412a:	0c800513          	li	a0,200
2040412e:	279030ef          	jal	ra,20407ba6 <metal_shutdown>

20404132 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20404132:	715d                	addi	sp,sp,-80
20404134:	c686                	sw	ra,76(sp)
20404136:	c496                	sw	t0,72(sp)
20404138:	c29a                	sw	t1,68(sp)
2040413a:	c09e                	sw	t2,64(sp)
2040413c:	de22                	sw	s0,60(sp)
2040413e:	dc2a                	sw	a0,56(sp)
20404140:	da2e                	sw	a1,52(sp)
20404142:	d832                	sw	a2,48(sp)
20404144:	d636                	sw	a3,44(sp)
20404146:	d43a                	sw	a4,40(sp)
20404148:	d23e                	sw	a5,36(sp)
2040414a:	d042                	sw	a6,32(sp)
2040414c:	ce46                	sw	a7,28(sp)
2040414e:	cc72                	sw	t3,24(sp)
20404150:	ca76                	sw	t4,20(sp)
20404152:	c87a                	sw	t5,16(sp)
20404154:	c67e                	sw	t6,12(sp)
20404156:	0880                	addi	s0,sp,80
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20404158:	12c00513          	li	a0,300
2040415c:	24b030ef          	jal	ra,20407ba6 <metal_shutdown>

20404160 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20404160:	711d                	addi	sp,sp,-96
20404162:	ce86                	sw	ra,92(sp)
20404164:	cc96                	sw	t0,88(sp)
20404166:	ca9a                	sw	t1,84(sp)
20404168:	c89e                	sw	t2,80(sp)
2040416a:	c6a2                	sw	s0,76(sp)
2040416c:	c4aa                	sw	a0,72(sp)
2040416e:	c2ae                	sw	a1,68(sp)
20404170:	c0b2                	sw	a2,64(sp)
20404172:	de36                	sw	a3,60(sp)
20404174:	dc3a                	sw	a4,56(sp)
20404176:	da3e                	sw	a5,52(sp)
20404178:	d842                	sw	a6,48(sp)
2040417a:	d646                	sw	a7,44(sp)
2040417c:	d472                	sw	t3,40(sp)
2040417e:	d276                	sw	t4,36(sp)
20404180:	d07a                	sw	t5,32(sp)
20404182:	ce7e                	sw	t6,28(sp)
20404184:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20404186:	3d3d                	jal	20403fc4 <__metal_myhart_id>
20404188:	872a                	mv	a4,a0
2040418a:	070a                	slli	a4,a4,0x2
2040418c:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404190:	97ba                	add	a5,a5,a4
20404192:	439c                	lw	a5,0(a5)
20404194:	faf42623          	sw	a5,-84(s0)
20404198:	fac42783          	lw	a5,-84(s0)
2040419c:	c785                	beqz	a5,204041c4 <metal_software_interrupt_vector_handler+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
2040419e:	fac42503          	lw	a0,-84(s0)
204041a2:	3365                	jal	20403f4a <__metal_driver_cpu_interrupt_controller>
204041a4:	faa42423          	sw	a0,-88(s0)
204041a8:	fa842783          	lw	a5,-88(s0)
204041ac:	0e07a783          	lw	a5,224(a5)
204041b0:	faf42223          	sw	a5,-92(s0)
204041b4:	fa842783          	lw	a5,-88(s0)
204041b8:	0d87a783          	lw	a5,216(a5)
204041bc:	fa442583          	lw	a1,-92(s0)
204041c0:	450d                	li	a0,3
204041c2:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:130
}
204041c4:	0001                	nop
204041c6:	40f6                	lw	ra,92(sp)
204041c8:	42e6                	lw	t0,88(sp)
204041ca:	4356                	lw	t1,84(sp)
204041cc:	43c6                	lw	t2,80(sp)
204041ce:	4436                	lw	s0,76(sp)
204041d0:	4526                	lw	a0,72(sp)
204041d2:	4596                	lw	a1,68(sp)
204041d4:	4606                	lw	a2,64(sp)
204041d6:	56f2                	lw	a3,60(sp)
204041d8:	5762                	lw	a4,56(sp)
204041da:	57d2                	lw	a5,52(sp)
204041dc:	5842                	lw	a6,48(sp)
204041de:	58b2                	lw	a7,44(sp)
204041e0:	5e22                	lw	t3,40(sp)
204041e2:	5e92                	lw	t4,36(sp)
204041e4:	5f02                	lw	t5,32(sp)
204041e6:	4ff2                	lw	t6,28(sp)
204041e8:	6125                	addi	sp,sp,96
204041ea:	30200073          	mret

204041ee <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
204041ee:	7179                	addi	sp,sp,-48
204041f0:	d606                	sw	ra,44(sp)
204041f2:	d422                	sw	s0,40(sp)
204041f4:	1800                	addi	s0,sp,48
204041f6:	fca42e23          	sw	a0,-36(s0)
204041fa:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204041fe:	33d9                	jal	20403fc4 <__metal_myhart_id>
20404200:	872a                	mv	a4,a0
20404202:	070a                	slli	a4,a4,0x2
20404204:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404208:	97ba                	add	a5,a5,a4
2040420a:	439c                	lw	a5,0(a5)
2040420c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20404210:	342027f3          	csrr	a5,mcause
20404214:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20404218:	fec42783          	lw	a5,-20(s0)
2040421c:	c795                	beqz	a5,20404248 <__metal_default_sw_handler+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040421e:	fec42503          	lw	a0,-20(s0)
20404222:	3325                	jal	20403f4a <__metal_driver_cpu_interrupt_controller>
20404224:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20404228:	fe842783          	lw	a5,-24(s0)
2040422c:	3ff7f793          	andi	a5,a5,1023
20404230:	fe442703          	lw	a4,-28(s0)
20404234:	0e878793          	addi	a5,a5,232
20404238:	078a                	slli	a5,a5,0x2
2040423a:	97ba                	add	a5,a5,a4
2040423c:	439c                	lw	a5,0(a5)
2040423e:	fdc42583          	lw	a1,-36(s0)
20404242:	fec42503          	lw	a0,-20(s0)
20404246:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20404248:	0001                	nop
2040424a:	50b2                	lw	ra,44(sp)
2040424c:	5422                	lw	s0,40(sp)
2040424e:	6145                	addi	sp,sp,48
20404250:	8082                	ret

20404252 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20404252:	711d                	addi	sp,sp,-96
20404254:	ce86                	sw	ra,92(sp)
20404256:	cc96                	sw	t0,88(sp)
20404258:	ca9a                	sw	t1,84(sp)
2040425a:	c89e                	sw	t2,80(sp)
2040425c:	c6a2                	sw	s0,76(sp)
2040425e:	c4aa                	sw	a0,72(sp)
20404260:	c2ae                	sw	a1,68(sp)
20404262:	c0b2                	sw	a2,64(sp)
20404264:	de36                	sw	a3,60(sp)
20404266:	dc3a                	sw	a4,56(sp)
20404268:	da3e                	sw	a5,52(sp)
2040426a:	d842                	sw	a6,48(sp)
2040426c:	d646                	sw	a7,44(sp)
2040426e:	d472                	sw	t3,40(sp)
20404270:	d276                	sw	t4,36(sp)
20404272:	d07a                	sw	t5,32(sp)
20404274:	ce7e                	sw	t6,28(sp)
20404276:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20404278:	33b1                	jal	20403fc4 <__metal_myhart_id>
2040427a:	872a                	mv	a4,a0
2040427c:	070a                	slli	a4,a4,0x2
2040427e:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404282:	97ba                	add	a5,a5,a4
20404284:	439c                	lw	a5,0(a5)
20404286:	faf42623          	sw	a5,-84(s0)
2040428a:	fac42783          	lw	a5,-84(s0)
2040428e:	c785                	beqz	a5,204042b6 <metal_timer_interrupt_vector_handler+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20404290:	fac42503          	lw	a0,-84(s0)
20404294:	395d                	jal	20403f4a <__metal_driver_cpu_interrupt_controller>
20404296:	faa42423          	sw	a0,-88(s0)
2040429a:	fa842783          	lw	a5,-88(s0)
2040429e:	1407a783          	lw	a5,320(a5)
204042a2:	faf42223          	sw	a5,-92(s0)
204042a6:	fa842783          	lw	a5,-88(s0)
204042aa:	1387a783          	lw	a5,312(a5)
204042ae:	fa442583          	lw	a1,-92(s0)
204042b2:	451d                	li	a0,7
204042b4:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:150
}
204042b6:	0001                	nop
204042b8:	40f6                	lw	ra,92(sp)
204042ba:	42e6                	lw	t0,88(sp)
204042bc:	4356                	lw	t1,84(sp)
204042be:	43c6                	lw	t2,80(sp)
204042c0:	4436                	lw	s0,76(sp)
204042c2:	4526                	lw	a0,72(sp)
204042c4:	4596                	lw	a1,68(sp)
204042c6:	4606                	lw	a2,64(sp)
204042c8:	56f2                	lw	a3,60(sp)
204042ca:	5762                	lw	a4,56(sp)
204042cc:	57d2                	lw	a5,52(sp)
204042ce:	5842                	lw	a6,48(sp)
204042d0:	58b2                	lw	a7,44(sp)
204042d2:	5e22                	lw	t3,40(sp)
204042d4:	5e92                	lw	t4,36(sp)
204042d6:	5f02                	lw	t5,32(sp)
204042d8:	4ff2                	lw	t6,28(sp)
204042da:	6125                	addi	sp,sp,96
204042dc:	30200073          	mret

204042e0 <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
204042e0:	1101                	addi	sp,sp,-32
204042e2:	ce22                	sw	s0,28(sp)
204042e4:	1000                	addi	s0,sp,32
204042e6:	fea42623          	sw	a0,-20(s0)
204042ea:	feb42423          	sw	a1,-24(s0)
204042ee:	0001                	nop
204042f0:	4472                	lw	s0,28(sp)
204042f2:	6105                	addi	sp,sp,32
204042f4:	8082                	ret

204042f6 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
204042f6:	7179                	addi	sp,sp,-48
204042f8:	d606                	sw	ra,44(sp)
204042fa:	d422                	sw	s0,40(sp)
204042fc:	1800                	addi	s0,sp,48
204042fe:	fca42e23          	sw	a0,-36(s0)
20404302:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20404306:	397d                	jal	20403fc4 <__metal_myhart_id>
20404308:	87aa                	mv	a5,a0
2040430a:	853e                	mv	a0,a5
2040430c:	3171                	jal	20403f98 <__metal_driver_cpu_get>
2040430e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20404312:	fec42503          	lw	a0,-20(s0)
20404316:	22a010ef          	jal	ra,20405540 <__metal_driver_cpu_mtime_get>
2040431a:	fea42023          	sw	a0,-32(s0)
2040431e:	feb42223          	sw	a1,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20404322:	fe042783          	lw	a5,-32(s0)
20404326:	fe442803          	lw	a6,-28(s0)
2040432a:	45a9                	li	a1,10
2040432c:	4601                	li	a2,0
2040432e:	00b786b3          	add	a3,a5,a1
20404332:	8536                	mv	a0,a3
20404334:	00f53533          	sltu	a0,a0,a5
20404338:	00c80733          	add	a4,a6,a2
2040433c:	00e507b3          	add	a5,a0,a4
20404340:	873e                	mv	a4,a5
20404342:	87b6                	mv	a5,a3
20404344:	883a                	mv	a6,a4
20404346:	85be                	mv	a1,a5
20404348:	8642                	mv	a2,a6
2040434a:	fec42503          	lw	a0,-20(s0)
2040434e:	258010ef          	jal	ra,204055a6 <__metal_driver_cpu_mtimecmp_set>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:160
}
20404352:	0001                	nop
20404354:	50b2                	lw	ra,44(sp)
20404356:	5422                	lw	s0,40(sp)
20404358:	6145                	addi	sp,sp,48
2040435a:	8082                	ret
	...

20404380 <__metal_exception_handler>:
__metal_exception_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20404380:	7119                	addi	sp,sp,-128
20404382:	de86                	sw	ra,124(sp)
20404384:	dc96                	sw	t0,120(sp)
20404386:	da9a                	sw	t1,116(sp)
20404388:	d89e                	sw	t2,112(sp)
2040438a:	d6a2                	sw	s0,108(sp)
2040438c:	d4aa                	sw	a0,104(sp)
2040438e:	d2ae                	sw	a1,100(sp)
20404390:	d0b2                	sw	a2,96(sp)
20404392:	ceb6                	sw	a3,92(sp)
20404394:	ccba                	sw	a4,88(sp)
20404396:	cabe                	sw	a5,84(sp)
20404398:	c8c2                	sw	a6,80(sp)
2040439a:	c6c6                	sw	a7,76(sp)
2040439c:	c4f2                	sw	t3,72(sp)
2040439e:	c2f6                	sw	t4,68(sp)
204043a0:	c0fa                	sw	t5,64(sp)
204043a2:	de7e                	sw	t6,60(sp)
204043a4:	0100                	addi	s0,sp,128
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204043a6:	c1fff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
204043aa:	872a                	mv	a4,a0
204043ac:	070a                	slli	a4,a4,0x2
204043ae:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
204043b2:	97ba                	add	a5,a5,a4
204043b4:	439c                	lw	a5,0(a5)
204043b6:	faf42623          	sw	a5,-84(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
204043ba:	342027f3          	csrr	a5,mcause
204043be:	faf42423          	sw	a5,-88(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
204043c2:	341027f3          	csrr	a5,mepc
204043c6:	faf42223          	sw	a5,-92(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
204043ca:	343027f3          	csrr	a5,mtval
204043ce:	faf42023          	sw	a5,-96(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
204043d2:	305027f3          	csrr	a5,mtvec
204043d6:	f8f42e23          	sw	a5,-100(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
204043da:	fac42783          	lw	a5,-84(s0)
204043de:	cbfd                	beqz	a5,204044d4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204043e0:	fac42503          	lw	a0,-84(s0)
204043e4:	b67ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
204043e8:	f8a42c23          	sw	a0,-104(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
204043ec:	fa842783          	lw	a5,-88(s0)
204043f0:	3ff7f793          	andi	a5,a5,1023
204043f4:	f8f42a23          	sw	a5,-108(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
204043f8:	fa842783          	lw	a5,-88(s0)
204043fc:	0a07de63          	bgez	a5,204044b8 <__metal_exception_handler+0x138>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20404400:	f9442703          	lw	a4,-108(s0)
20404404:	08000793          	li	a5,128
20404408:	02f71263          	bne	a4,a5,2040442c <__metal_exception_handler+0xac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
2040440c:	f9842783          	lw	a5,-104(s0)
20404410:	3987a783          	lw	a5,920(a5)
20404414:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20404418:	f9842783          	lw	a5,-104(s0)
2040441c:	3907a783          	lw	a5,912(a5)
20404420:	f9042583          	lw	a1,-112(s0)
20404424:	f9442503          	lw	a0,-108(s0)
20404428:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
2040442a:	a06d                	j	204044d4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
2040442c:	f9442703          	lw	a4,-108(s0)
20404430:	47ad                	li	a5,11
20404432:	00e7d763          	bge	a5,a4,20404440 <__metal_exception_handler+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20404436:	f9c42783          	lw	a5,-100(s0)
2040443a:	03f7f793          	andi	a5,a5,63
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
2040443e:	ef9d                	bnez	a5,2040447c <__metal_exception_handler+0xfc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20404440:	f9842683          	lw	a3,-104(s0)
20404444:	f9442703          	lw	a4,-108(s0)
20404448:	87ba                	mv	a5,a4
2040444a:	0786                	slli	a5,a5,0x1
2040444c:	97ba                	add	a5,a5,a4
2040444e:	078e                	slli	a5,a5,0x3
20404450:	97b6                	add	a5,a5,a3
20404452:	0987a783          	lw	a5,152(a5)
20404456:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
2040445a:	f9842683          	lw	a3,-104(s0)
2040445e:	f9442703          	lw	a4,-108(s0)
20404462:	87ba                	mv	a5,a4
20404464:	0786                	slli	a5,a5,0x1
20404466:	97ba                	add	a5,a5,a4
20404468:	078e                	slli	a5,a5,0x3
2040446a:	97b6                	add	a5,a5,a3
2040446c:	0907a783          	lw	a5,144(a5)
20404470:	f9042583          	lw	a1,-112(s0)
20404474:	f9442503          	lw	a0,-108(s0)
20404478:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
2040447a:	a8a9                	j	204044d4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
2040447c:	f9c42783          	lw	a5,-100(s0)
20404480:	03f7f713          	andi	a4,a5,63
20404484:	4789                	li	a5,2
20404486:	04f71763          	bne	a4,a5,204044d4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2040448a:	307027f3          	csrr	a5,mtvt
2040448e:	f8f42623          	sw	a5,-116(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404492:	f9842783          	lw	a5,-104(s0)
20404496:	0dc7a783          	lw	a5,220(a5)
2040449a:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
2040449e:	f8c42783          	lw	a5,-116(s0)
204044a2:	439c                	lw	a5,0(a5)
204044a4:	f8f42423          	sw	a5,-120(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
204044a8:	f8842783          	lw	a5,-120(s0)
204044ac:	f9042583          	lw	a1,-112(s0)
204044b0:	f9442503          	lw	a0,-108(s0)
204044b4:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
204044b6:	a839                	j	204044d4 <__metal_exception_handler+0x154>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
204044b8:	f9842703          	lw	a4,-104(s0)
204044bc:	f9442783          	lw	a5,-108(s0)
204044c0:	0e878793          	addi	a5,a5,232
204044c4:	078a                	slli	a5,a5,0x2
204044c6:	97ba                	add	a5,a5,a4
204044c8:	439c                	lw	a5,0(a5)
204044ca:	f9442583          	lw	a1,-108(s0)
204044ce:	fac42503          	lw	a0,-84(s0)
204044d2:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
204044d4:	50f6                	lw	ra,124(sp)
204044d6:	52e6                	lw	t0,120(sp)
204044d8:	5356                	lw	t1,116(sp)
204044da:	53c6                	lw	t2,112(sp)
204044dc:	5436                	lw	s0,108(sp)
204044de:	5526                	lw	a0,104(sp)
204044e0:	5596                	lw	a1,100(sp)
204044e2:	5606                	lw	a2,96(sp)
204044e4:	46f6                	lw	a3,92(sp)
204044e6:	4766                	lw	a4,88(sp)
204044e8:	47d6                	lw	a5,84(sp)
204044ea:	4846                	lw	a6,80(sp)
204044ec:	48b6                	lw	a7,76(sp)
204044ee:	4e26                	lw	t3,72(sp)
204044f0:	4e96                	lw	t4,68(sp)
204044f2:	4f06                	lw	t5,64(sp)
204044f4:	5ff2                	lw	t6,60(sp)
204044f6:	6109                	addi	sp,sp,128
204044f8:	30200073          	mret
	...

20404576 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20404576:	711d                	addi	sp,sp,-96
20404578:	ce86                	sw	ra,92(sp)
2040457a:	cc96                	sw	t0,88(sp)
2040457c:	ca9a                	sw	t1,84(sp)
2040457e:	c89e                	sw	t2,80(sp)
20404580:	c6a2                	sw	s0,76(sp)
20404582:	c4aa                	sw	a0,72(sp)
20404584:	c2ae                	sw	a1,68(sp)
20404586:	c0b2                	sw	a2,64(sp)
20404588:	de36                	sw	a3,60(sp)
2040458a:	dc3a                	sw	a4,56(sp)
2040458c:	da3e                	sw	a5,52(sp)
2040458e:	d842                	sw	a6,48(sp)
20404590:	d646                	sw	a7,44(sp)
20404592:	d472                	sw	t3,40(sp)
20404594:	d276                	sw	t4,36(sp)
20404596:	d07a                	sw	t5,32(sp)
20404598:	ce7e                	sw	t6,28(sp)
2040459a:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2040459c:	a29ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
204045a0:	872a                	mv	a4,a0
204045a2:	070a                	slli	a4,a4,0x2
204045a4:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
204045a8:	97ba                	add	a5,a5,a4
204045aa:	439c                	lw	a5,0(a5)
204045ac:	faf42623          	sw	a5,-84(s0)
204045b0:	fac42783          	lw	a5,-84(s0)
204045b4:	c78d                	beqz	a5,204045de <metal_lc0_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
204045b6:	fac42503          	lw	a0,-84(s0)
204045ba:	991ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
204045be:	faa42423          	sw	a0,-88(s0)
204045c2:	fa842783          	lw	a5,-88(s0)
204045c6:	2187a783          	lw	a5,536(a5)
204045ca:	faf42223          	sw	a5,-92(s0)
204045ce:	fa842783          	lw	a5,-88(s0)
204045d2:	2107a783          	lw	a5,528(a5)
204045d6:	fa442583          	lw	a1,-92(s0)
204045da:	4541                	li	a0,16
204045dc:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
}
204045de:	0001                	nop
204045e0:	40f6                	lw	ra,92(sp)
204045e2:	42e6                	lw	t0,88(sp)
204045e4:	4356                	lw	t1,84(sp)
204045e6:	43c6                	lw	t2,80(sp)
204045e8:	4436                	lw	s0,76(sp)
204045ea:	4526                	lw	a0,72(sp)
204045ec:	4596                	lw	a1,68(sp)
204045ee:	4606                	lw	a2,64(sp)
204045f0:	56f2                	lw	a3,60(sp)
204045f2:	5762                	lw	a4,56(sp)
204045f4:	57d2                	lw	a5,52(sp)
204045f6:	5842                	lw	a6,48(sp)
204045f8:	58b2                	lw	a7,44(sp)
204045fa:	5e22                	lw	t3,40(sp)
204045fc:	5e92                	lw	t4,36(sp)
204045fe:	5f02                	lw	t5,32(sp)
20404600:	4ff2                	lw	t6,28(sp)
20404602:	6125                	addi	sp,sp,96
20404604:	30200073          	mret

20404608 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20404608:	711d                	addi	sp,sp,-96
2040460a:	ce86                	sw	ra,92(sp)
2040460c:	cc96                	sw	t0,88(sp)
2040460e:	ca9a                	sw	t1,84(sp)
20404610:	c89e                	sw	t2,80(sp)
20404612:	c6a2                	sw	s0,76(sp)
20404614:	c4aa                	sw	a0,72(sp)
20404616:	c2ae                	sw	a1,68(sp)
20404618:	c0b2                	sw	a2,64(sp)
2040461a:	de36                	sw	a3,60(sp)
2040461c:	dc3a                	sw	a4,56(sp)
2040461e:	da3e                	sw	a5,52(sp)
20404620:	d842                	sw	a6,48(sp)
20404622:	d646                	sw	a7,44(sp)
20404624:	d472                	sw	t3,40(sp)
20404626:	d276                	sw	t4,36(sp)
20404628:	d07a                	sw	t5,32(sp)
2040462a:	ce7e                	sw	t6,28(sp)
2040462c:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
2040462e:	997ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404632:	872a                	mv	a4,a0
20404634:	070a                	slli	a4,a4,0x2
20404636:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
2040463a:	97ba                	add	a5,a5,a4
2040463c:	439c                	lw	a5,0(a5)
2040463e:	faf42623          	sw	a5,-84(s0)
20404642:	fac42783          	lw	a5,-84(s0)
20404646:	c78d                	beqz	a5,20404670 <metal_lc1_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20404648:	fac42503          	lw	a0,-84(s0)
2040464c:	8ffff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404650:	faa42423          	sw	a0,-88(s0)
20404654:	fa842783          	lw	a5,-88(s0)
20404658:	2307a783          	lw	a5,560(a5)
2040465c:	faf42223          	sw	a5,-92(s0)
20404660:	fa842783          	lw	a5,-88(s0)
20404664:	2287a783          	lw	a5,552(a5)
20404668:	fa442583          	lw	a1,-92(s0)
2040466c:	4545                	li	a0,17
2040466e:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:221
}
20404670:	0001                	nop
20404672:	40f6                	lw	ra,92(sp)
20404674:	42e6                	lw	t0,88(sp)
20404676:	4356                	lw	t1,84(sp)
20404678:	43c6                	lw	t2,80(sp)
2040467a:	4436                	lw	s0,76(sp)
2040467c:	4526                	lw	a0,72(sp)
2040467e:	4596                	lw	a1,68(sp)
20404680:	4606                	lw	a2,64(sp)
20404682:	56f2                	lw	a3,60(sp)
20404684:	5762                	lw	a4,56(sp)
20404686:	57d2                	lw	a5,52(sp)
20404688:	5842                	lw	a6,48(sp)
2040468a:	58b2                	lw	a7,44(sp)
2040468c:	5e22                	lw	t3,40(sp)
2040468e:	5e92                	lw	t4,36(sp)
20404690:	5f02                	lw	t5,32(sp)
20404692:	4ff2                	lw	t6,28(sp)
20404694:	6125                	addi	sp,sp,96
20404696:	30200073          	mret

2040469a <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
2040469a:	711d                	addi	sp,sp,-96
2040469c:	ce86                	sw	ra,92(sp)
2040469e:	cc96                	sw	t0,88(sp)
204046a0:	ca9a                	sw	t1,84(sp)
204046a2:	c89e                	sw	t2,80(sp)
204046a4:	c6a2                	sw	s0,76(sp)
204046a6:	c4aa                	sw	a0,72(sp)
204046a8:	c2ae                	sw	a1,68(sp)
204046aa:	c0b2                	sw	a2,64(sp)
204046ac:	de36                	sw	a3,60(sp)
204046ae:	dc3a                	sw	a4,56(sp)
204046b0:	da3e                	sw	a5,52(sp)
204046b2:	d842                	sw	a6,48(sp)
204046b4:	d646                	sw	a7,44(sp)
204046b6:	d472                	sw	t3,40(sp)
204046b8:	d276                	sw	t4,36(sp)
204046ba:	d07a                	sw	t5,32(sp)
204046bc:	ce7e                	sw	t6,28(sp)
204046be:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
204046c0:	905ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
204046c4:	872a                	mv	a4,a0
204046c6:	070a                	slli	a4,a4,0x2
204046c8:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
204046cc:	97ba                	add	a5,a5,a4
204046ce:	439c                	lw	a5,0(a5)
204046d0:	faf42623          	sw	a5,-84(s0)
204046d4:	fac42783          	lw	a5,-84(s0)
204046d8:	c78d                	beqz	a5,20404702 <metal_lc2_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
204046da:	fac42503          	lw	a0,-84(s0)
204046de:	86dff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
204046e2:	faa42423          	sw	a0,-88(s0)
204046e6:	fa842783          	lw	a5,-88(s0)
204046ea:	2487a783          	lw	a5,584(a5)
204046ee:	faf42223          	sw	a5,-92(s0)
204046f2:	fa842783          	lw	a5,-88(s0)
204046f6:	2407a783          	lw	a5,576(a5)
204046fa:	fa442583          	lw	a1,-92(s0)
204046fe:	4549                	li	a0,18
20404700:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
}
20404702:	0001                	nop
20404704:	40f6                	lw	ra,92(sp)
20404706:	42e6                	lw	t0,88(sp)
20404708:	4356                	lw	t1,84(sp)
2040470a:	43c6                	lw	t2,80(sp)
2040470c:	4436                	lw	s0,76(sp)
2040470e:	4526                	lw	a0,72(sp)
20404710:	4596                	lw	a1,68(sp)
20404712:	4606                	lw	a2,64(sp)
20404714:	56f2                	lw	a3,60(sp)
20404716:	5762                	lw	a4,56(sp)
20404718:	57d2                	lw	a5,52(sp)
2040471a:	5842                	lw	a6,48(sp)
2040471c:	58b2                	lw	a7,44(sp)
2040471e:	5e22                	lw	t3,40(sp)
20404720:	5e92                	lw	t4,36(sp)
20404722:	5f02                	lw	t5,32(sp)
20404724:	4ff2                	lw	t6,28(sp)
20404726:	6125                	addi	sp,sp,96
20404728:	30200073          	mret

2040472c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
2040472c:	711d                	addi	sp,sp,-96
2040472e:	ce86                	sw	ra,92(sp)
20404730:	cc96                	sw	t0,88(sp)
20404732:	ca9a                	sw	t1,84(sp)
20404734:	c89e                	sw	t2,80(sp)
20404736:	c6a2                	sw	s0,76(sp)
20404738:	c4aa                	sw	a0,72(sp)
2040473a:	c2ae                	sw	a1,68(sp)
2040473c:	c0b2                	sw	a2,64(sp)
2040473e:	de36                	sw	a3,60(sp)
20404740:	dc3a                	sw	a4,56(sp)
20404742:	da3e                	sw	a5,52(sp)
20404744:	d842                	sw	a6,48(sp)
20404746:	d646                	sw	a7,44(sp)
20404748:	d472                	sw	t3,40(sp)
2040474a:	d276                	sw	t4,36(sp)
2040474c:	d07a                	sw	t5,32(sp)
2040474e:	ce7e                	sw	t6,28(sp)
20404750:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20404752:	873ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404756:	872a                	mv	a4,a0
20404758:	070a                	slli	a4,a4,0x2
2040475a:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
2040475e:	97ba                	add	a5,a5,a4
20404760:	439c                	lw	a5,0(a5)
20404762:	faf42623          	sw	a5,-84(s0)
20404766:	fac42783          	lw	a5,-84(s0)
2040476a:	c78d                	beqz	a5,20404794 <metal_lc3_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
2040476c:	fac42503          	lw	a0,-84(s0)
20404770:	fdaff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404774:	faa42423          	sw	a0,-88(s0)
20404778:	fa842783          	lw	a5,-88(s0)
2040477c:	2607a783          	lw	a5,608(a5)
20404780:	faf42223          	sw	a5,-92(s0)
20404784:	fa842783          	lw	a5,-88(s0)
20404788:	2587a783          	lw	a5,600(a5)
2040478c:	fa442583          	lw	a1,-92(s0)
20404790:	454d                	li	a0,19
20404792:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:231
}
20404794:	0001                	nop
20404796:	40f6                	lw	ra,92(sp)
20404798:	42e6                	lw	t0,88(sp)
2040479a:	4356                	lw	t1,84(sp)
2040479c:	43c6                	lw	t2,80(sp)
2040479e:	4436                	lw	s0,76(sp)
204047a0:	4526                	lw	a0,72(sp)
204047a2:	4596                	lw	a1,68(sp)
204047a4:	4606                	lw	a2,64(sp)
204047a6:	56f2                	lw	a3,60(sp)
204047a8:	5762                	lw	a4,56(sp)
204047aa:	57d2                	lw	a5,52(sp)
204047ac:	5842                	lw	a6,48(sp)
204047ae:	58b2                	lw	a7,44(sp)
204047b0:	5e22                	lw	t3,40(sp)
204047b2:	5e92                	lw	t4,36(sp)
204047b4:	5f02                	lw	t5,32(sp)
204047b6:	4ff2                	lw	t6,28(sp)
204047b8:	6125                	addi	sp,sp,96
204047ba:	30200073          	mret

204047be <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
204047be:	711d                	addi	sp,sp,-96
204047c0:	ce86                	sw	ra,92(sp)
204047c2:	cc96                	sw	t0,88(sp)
204047c4:	ca9a                	sw	t1,84(sp)
204047c6:	c89e                	sw	t2,80(sp)
204047c8:	c6a2                	sw	s0,76(sp)
204047ca:	c4aa                	sw	a0,72(sp)
204047cc:	c2ae                	sw	a1,68(sp)
204047ce:	c0b2                	sw	a2,64(sp)
204047d0:	de36                	sw	a3,60(sp)
204047d2:	dc3a                	sw	a4,56(sp)
204047d4:	da3e                	sw	a5,52(sp)
204047d6:	d842                	sw	a6,48(sp)
204047d8:	d646                	sw	a7,44(sp)
204047da:	d472                	sw	t3,40(sp)
204047dc:	d276                	sw	t4,36(sp)
204047de:	d07a                	sw	t5,32(sp)
204047e0:	ce7e                	sw	t6,28(sp)
204047e2:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
204047e4:	fe0ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
204047e8:	872a                	mv	a4,a0
204047ea:	070a                	slli	a4,a4,0x2
204047ec:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
204047f0:	97ba                	add	a5,a5,a4
204047f2:	439c                	lw	a5,0(a5)
204047f4:	faf42623          	sw	a5,-84(s0)
204047f8:	fac42783          	lw	a5,-84(s0)
204047fc:	c78d                	beqz	a5,20404826 <metal_lc4_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
204047fe:	fac42503          	lw	a0,-84(s0)
20404802:	f48ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404806:	faa42423          	sw	a0,-88(s0)
2040480a:	fa842783          	lw	a5,-88(s0)
2040480e:	2787a783          	lw	a5,632(a5)
20404812:	faf42223          	sw	a5,-92(s0)
20404816:	fa842783          	lw	a5,-88(s0)
2040481a:	2707a783          	lw	a5,624(a5)
2040481e:	fa442583          	lw	a1,-92(s0)
20404822:	4551                	li	a0,20
20404824:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
}
20404826:	0001                	nop
20404828:	40f6                	lw	ra,92(sp)
2040482a:	42e6                	lw	t0,88(sp)
2040482c:	4356                	lw	t1,84(sp)
2040482e:	43c6                	lw	t2,80(sp)
20404830:	4436                	lw	s0,76(sp)
20404832:	4526                	lw	a0,72(sp)
20404834:	4596                	lw	a1,68(sp)
20404836:	4606                	lw	a2,64(sp)
20404838:	56f2                	lw	a3,60(sp)
2040483a:	5762                	lw	a4,56(sp)
2040483c:	57d2                	lw	a5,52(sp)
2040483e:	5842                	lw	a6,48(sp)
20404840:	58b2                	lw	a7,44(sp)
20404842:	5e22                	lw	t3,40(sp)
20404844:	5e92                	lw	t4,36(sp)
20404846:	5f02                	lw	t5,32(sp)
20404848:	4ff2                	lw	t6,28(sp)
2040484a:	6125                	addi	sp,sp,96
2040484c:	30200073          	mret

20404850 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20404850:	711d                	addi	sp,sp,-96
20404852:	ce86                	sw	ra,92(sp)
20404854:	cc96                	sw	t0,88(sp)
20404856:	ca9a                	sw	t1,84(sp)
20404858:	c89e                	sw	t2,80(sp)
2040485a:	c6a2                	sw	s0,76(sp)
2040485c:	c4aa                	sw	a0,72(sp)
2040485e:	c2ae                	sw	a1,68(sp)
20404860:	c0b2                	sw	a2,64(sp)
20404862:	de36                	sw	a3,60(sp)
20404864:	dc3a                	sw	a4,56(sp)
20404866:	da3e                	sw	a5,52(sp)
20404868:	d842                	sw	a6,48(sp)
2040486a:	d646                	sw	a7,44(sp)
2040486c:	d472                	sw	t3,40(sp)
2040486e:	d276                	sw	t4,36(sp)
20404870:	d07a                	sw	t5,32(sp)
20404872:	ce7e                	sw	t6,28(sp)
20404874:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20404876:	f4eff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
2040487a:	872a                	mv	a4,a0
2040487c:	070a                	slli	a4,a4,0x2
2040487e:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404882:	97ba                	add	a5,a5,a4
20404884:	439c                	lw	a5,0(a5)
20404886:	faf42623          	sw	a5,-84(s0)
2040488a:	fac42783          	lw	a5,-84(s0)
2040488e:	c78d                	beqz	a5,204048b8 <metal_lc5_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20404890:	fac42503          	lw	a0,-84(s0)
20404894:	eb6ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404898:	faa42423          	sw	a0,-88(s0)
2040489c:	fa842783          	lw	a5,-88(s0)
204048a0:	2907a783          	lw	a5,656(a5)
204048a4:	faf42223          	sw	a5,-92(s0)
204048a8:	fa842783          	lw	a5,-88(s0)
204048ac:	2887a783          	lw	a5,648(a5)
204048b0:	fa442583          	lw	a1,-92(s0)
204048b4:	4555                	li	a0,21
204048b6:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
}
204048b8:	0001                	nop
204048ba:	40f6                	lw	ra,92(sp)
204048bc:	42e6                	lw	t0,88(sp)
204048be:	4356                	lw	t1,84(sp)
204048c0:	43c6                	lw	t2,80(sp)
204048c2:	4436                	lw	s0,76(sp)
204048c4:	4526                	lw	a0,72(sp)
204048c6:	4596                	lw	a1,68(sp)
204048c8:	4606                	lw	a2,64(sp)
204048ca:	56f2                	lw	a3,60(sp)
204048cc:	5762                	lw	a4,56(sp)
204048ce:	57d2                	lw	a5,52(sp)
204048d0:	5842                	lw	a6,48(sp)
204048d2:	58b2                	lw	a7,44(sp)
204048d4:	5e22                	lw	t3,40(sp)
204048d6:	5e92                	lw	t4,36(sp)
204048d8:	5f02                	lw	t5,32(sp)
204048da:	4ff2                	lw	t6,28(sp)
204048dc:	6125                	addi	sp,sp,96
204048de:	30200073          	mret

204048e2 <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
204048e2:	711d                	addi	sp,sp,-96
204048e4:	ce86                	sw	ra,92(sp)
204048e6:	cc96                	sw	t0,88(sp)
204048e8:	ca9a                	sw	t1,84(sp)
204048ea:	c89e                	sw	t2,80(sp)
204048ec:	c6a2                	sw	s0,76(sp)
204048ee:	c4aa                	sw	a0,72(sp)
204048f0:	c2ae                	sw	a1,68(sp)
204048f2:	c0b2                	sw	a2,64(sp)
204048f4:	de36                	sw	a3,60(sp)
204048f6:	dc3a                	sw	a4,56(sp)
204048f8:	da3e                	sw	a5,52(sp)
204048fa:	d842                	sw	a6,48(sp)
204048fc:	d646                	sw	a7,44(sp)
204048fe:	d472                	sw	t3,40(sp)
20404900:	d276                	sw	t4,36(sp)
20404902:	d07a                	sw	t5,32(sp)
20404904:	ce7e                	sw	t6,28(sp)
20404906:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20404908:	ebcff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
2040490c:	872a                	mv	a4,a0
2040490e:	070a                	slli	a4,a4,0x2
20404910:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404914:	97ba                	add	a5,a5,a4
20404916:	439c                	lw	a5,0(a5)
20404918:	faf42623          	sw	a5,-84(s0)
2040491c:	fac42783          	lw	a5,-84(s0)
20404920:	c78d                	beqz	a5,2040494a <metal_lc6_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20404922:	fac42503          	lw	a0,-84(s0)
20404926:	e24ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
2040492a:	faa42423          	sw	a0,-88(s0)
2040492e:	fa842783          	lw	a5,-88(s0)
20404932:	2a87a783          	lw	a5,680(a5)
20404936:	faf42223          	sw	a5,-92(s0)
2040493a:	fa842783          	lw	a5,-88(s0)
2040493e:	2a07a783          	lw	a5,672(a5)
20404942:	fa442583          	lw	a1,-92(s0)
20404946:	4559                	li	a0,22
20404948:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:246
}
2040494a:	0001                	nop
2040494c:	40f6                	lw	ra,92(sp)
2040494e:	42e6                	lw	t0,88(sp)
20404950:	4356                	lw	t1,84(sp)
20404952:	43c6                	lw	t2,80(sp)
20404954:	4436                	lw	s0,76(sp)
20404956:	4526                	lw	a0,72(sp)
20404958:	4596                	lw	a1,68(sp)
2040495a:	4606                	lw	a2,64(sp)
2040495c:	56f2                	lw	a3,60(sp)
2040495e:	5762                	lw	a4,56(sp)
20404960:	57d2                	lw	a5,52(sp)
20404962:	5842                	lw	a6,48(sp)
20404964:	58b2                	lw	a7,44(sp)
20404966:	5e22                	lw	t3,40(sp)
20404968:	5e92                	lw	t4,36(sp)
2040496a:	5f02                	lw	t5,32(sp)
2040496c:	4ff2                	lw	t6,28(sp)
2040496e:	6125                	addi	sp,sp,96
20404970:	30200073          	mret

20404974 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20404974:	711d                	addi	sp,sp,-96
20404976:	ce86                	sw	ra,92(sp)
20404978:	cc96                	sw	t0,88(sp)
2040497a:	ca9a                	sw	t1,84(sp)
2040497c:	c89e                	sw	t2,80(sp)
2040497e:	c6a2                	sw	s0,76(sp)
20404980:	c4aa                	sw	a0,72(sp)
20404982:	c2ae                	sw	a1,68(sp)
20404984:	c0b2                	sw	a2,64(sp)
20404986:	de36                	sw	a3,60(sp)
20404988:	dc3a                	sw	a4,56(sp)
2040498a:	da3e                	sw	a5,52(sp)
2040498c:	d842                	sw	a6,48(sp)
2040498e:	d646                	sw	a7,44(sp)
20404990:	d472                	sw	t3,40(sp)
20404992:	d276                	sw	t4,36(sp)
20404994:	d07a                	sw	t5,32(sp)
20404996:	ce7e                	sw	t6,28(sp)
20404998:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2040499a:	e2aff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
2040499e:	872a                	mv	a4,a0
204049a0:	070a                	slli	a4,a4,0x2
204049a2:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
204049a6:	97ba                	add	a5,a5,a4
204049a8:	439c                	lw	a5,0(a5)
204049aa:	faf42623          	sw	a5,-84(s0)
204049ae:	fac42783          	lw	a5,-84(s0)
204049b2:	c78d                	beqz	a5,204049dc <metal_lc7_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
204049b4:	fac42503          	lw	a0,-84(s0)
204049b8:	d92ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
204049bc:	faa42423          	sw	a0,-88(s0)
204049c0:	fa842783          	lw	a5,-88(s0)
204049c4:	2c07a783          	lw	a5,704(a5)
204049c8:	faf42223          	sw	a5,-92(s0)
204049cc:	fa842783          	lw	a5,-88(s0)
204049d0:	2b87a783          	lw	a5,696(a5)
204049d4:	fa442583          	lw	a1,-92(s0)
204049d8:	455d                	li	a0,23
204049da:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:251
}
204049dc:	0001                	nop
204049de:	40f6                	lw	ra,92(sp)
204049e0:	42e6                	lw	t0,88(sp)
204049e2:	4356                	lw	t1,84(sp)
204049e4:	43c6                	lw	t2,80(sp)
204049e6:	4436                	lw	s0,76(sp)
204049e8:	4526                	lw	a0,72(sp)
204049ea:	4596                	lw	a1,68(sp)
204049ec:	4606                	lw	a2,64(sp)
204049ee:	56f2                	lw	a3,60(sp)
204049f0:	5762                	lw	a4,56(sp)
204049f2:	57d2                	lw	a5,52(sp)
204049f4:	5842                	lw	a6,48(sp)
204049f6:	58b2                	lw	a7,44(sp)
204049f8:	5e22                	lw	t3,40(sp)
204049fa:	5e92                	lw	t4,36(sp)
204049fc:	5f02                	lw	t5,32(sp)
204049fe:	4ff2                	lw	t6,28(sp)
20404a00:	6125                	addi	sp,sp,96
20404a02:	30200073          	mret

20404a06 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20404a06:	711d                	addi	sp,sp,-96
20404a08:	ce86                	sw	ra,92(sp)
20404a0a:	cc96                	sw	t0,88(sp)
20404a0c:	ca9a                	sw	t1,84(sp)
20404a0e:	c89e                	sw	t2,80(sp)
20404a10:	c6a2                	sw	s0,76(sp)
20404a12:	c4aa                	sw	a0,72(sp)
20404a14:	c2ae                	sw	a1,68(sp)
20404a16:	c0b2                	sw	a2,64(sp)
20404a18:	de36                	sw	a3,60(sp)
20404a1a:	dc3a                	sw	a4,56(sp)
20404a1c:	da3e                	sw	a5,52(sp)
20404a1e:	d842                	sw	a6,48(sp)
20404a20:	d646                	sw	a7,44(sp)
20404a22:	d472                	sw	t3,40(sp)
20404a24:	d276                	sw	t4,36(sp)
20404a26:	d07a                	sw	t5,32(sp)
20404a28:	ce7e                	sw	t6,28(sp)
20404a2a:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20404a2c:	d98ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404a30:	872a                	mv	a4,a0
20404a32:	070a                	slli	a4,a4,0x2
20404a34:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404a38:	97ba                	add	a5,a5,a4
20404a3a:	439c                	lw	a5,0(a5)
20404a3c:	faf42623          	sw	a5,-84(s0)
20404a40:	fac42783          	lw	a5,-84(s0)
20404a44:	c78d                	beqz	a5,20404a6e <metal_lc8_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20404a46:	fac42503          	lw	a0,-84(s0)
20404a4a:	d00ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404a4e:	faa42423          	sw	a0,-88(s0)
20404a52:	fa842783          	lw	a5,-88(s0)
20404a56:	2d87a783          	lw	a5,728(a5)
20404a5a:	faf42223          	sw	a5,-92(s0)
20404a5e:	fa842783          	lw	a5,-88(s0)
20404a62:	2d07a783          	lw	a5,720(a5)
20404a66:	fa442583          	lw	a1,-92(s0)
20404a6a:	4561                	li	a0,24
20404a6c:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
}
20404a6e:	0001                	nop
20404a70:	40f6                	lw	ra,92(sp)
20404a72:	42e6                	lw	t0,88(sp)
20404a74:	4356                	lw	t1,84(sp)
20404a76:	43c6                	lw	t2,80(sp)
20404a78:	4436                	lw	s0,76(sp)
20404a7a:	4526                	lw	a0,72(sp)
20404a7c:	4596                	lw	a1,68(sp)
20404a7e:	4606                	lw	a2,64(sp)
20404a80:	56f2                	lw	a3,60(sp)
20404a82:	5762                	lw	a4,56(sp)
20404a84:	57d2                	lw	a5,52(sp)
20404a86:	5842                	lw	a6,48(sp)
20404a88:	58b2                	lw	a7,44(sp)
20404a8a:	5e22                	lw	t3,40(sp)
20404a8c:	5e92                	lw	t4,36(sp)
20404a8e:	5f02                	lw	t5,32(sp)
20404a90:	4ff2                	lw	t6,28(sp)
20404a92:	6125                	addi	sp,sp,96
20404a94:	30200073          	mret

20404a98 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20404a98:	711d                	addi	sp,sp,-96
20404a9a:	ce86                	sw	ra,92(sp)
20404a9c:	cc96                	sw	t0,88(sp)
20404a9e:	ca9a                	sw	t1,84(sp)
20404aa0:	c89e                	sw	t2,80(sp)
20404aa2:	c6a2                	sw	s0,76(sp)
20404aa4:	c4aa                	sw	a0,72(sp)
20404aa6:	c2ae                	sw	a1,68(sp)
20404aa8:	c0b2                	sw	a2,64(sp)
20404aaa:	de36                	sw	a3,60(sp)
20404aac:	dc3a                	sw	a4,56(sp)
20404aae:	da3e                	sw	a5,52(sp)
20404ab0:	d842                	sw	a6,48(sp)
20404ab2:	d646                	sw	a7,44(sp)
20404ab4:	d472                	sw	t3,40(sp)
20404ab6:	d276                	sw	t4,36(sp)
20404ab8:	d07a                	sw	t5,32(sp)
20404aba:	ce7e                	sw	t6,28(sp)
20404abc:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20404abe:	d06ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404ac2:	872a                	mv	a4,a0
20404ac4:	070a                	slli	a4,a4,0x2
20404ac6:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404aca:	97ba                	add	a5,a5,a4
20404acc:	439c                	lw	a5,0(a5)
20404ace:	faf42623          	sw	a5,-84(s0)
20404ad2:	fac42783          	lw	a5,-84(s0)
20404ad6:	c78d                	beqz	a5,20404b00 <metal_lc9_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20404ad8:	fac42503          	lw	a0,-84(s0)
20404adc:	c6eff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404ae0:	faa42423          	sw	a0,-88(s0)
20404ae4:	fa842783          	lw	a5,-88(s0)
20404ae8:	2f07a783          	lw	a5,752(a5)
20404aec:	faf42223          	sw	a5,-92(s0)
20404af0:	fa842783          	lw	a5,-88(s0)
20404af4:	2e87a783          	lw	a5,744(a5)
20404af8:	fa442583          	lw	a1,-92(s0)
20404afc:	4565                	li	a0,25
20404afe:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261
}
20404b00:	0001                	nop
20404b02:	40f6                	lw	ra,92(sp)
20404b04:	42e6                	lw	t0,88(sp)
20404b06:	4356                	lw	t1,84(sp)
20404b08:	43c6                	lw	t2,80(sp)
20404b0a:	4436                	lw	s0,76(sp)
20404b0c:	4526                	lw	a0,72(sp)
20404b0e:	4596                	lw	a1,68(sp)
20404b10:	4606                	lw	a2,64(sp)
20404b12:	56f2                	lw	a3,60(sp)
20404b14:	5762                	lw	a4,56(sp)
20404b16:	57d2                	lw	a5,52(sp)
20404b18:	5842                	lw	a6,48(sp)
20404b1a:	58b2                	lw	a7,44(sp)
20404b1c:	5e22                	lw	t3,40(sp)
20404b1e:	5e92                	lw	t4,36(sp)
20404b20:	5f02                	lw	t5,32(sp)
20404b22:	4ff2                	lw	t6,28(sp)
20404b24:	6125                	addi	sp,sp,96
20404b26:	30200073          	mret

20404b2a <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20404b2a:	711d                	addi	sp,sp,-96
20404b2c:	ce86                	sw	ra,92(sp)
20404b2e:	cc96                	sw	t0,88(sp)
20404b30:	ca9a                	sw	t1,84(sp)
20404b32:	c89e                	sw	t2,80(sp)
20404b34:	c6a2                	sw	s0,76(sp)
20404b36:	c4aa                	sw	a0,72(sp)
20404b38:	c2ae                	sw	a1,68(sp)
20404b3a:	c0b2                	sw	a2,64(sp)
20404b3c:	de36                	sw	a3,60(sp)
20404b3e:	dc3a                	sw	a4,56(sp)
20404b40:	da3e                	sw	a5,52(sp)
20404b42:	d842                	sw	a6,48(sp)
20404b44:	d646                	sw	a7,44(sp)
20404b46:	d472                	sw	t3,40(sp)
20404b48:	d276                	sw	t4,36(sp)
20404b4a:	d07a                	sw	t5,32(sp)
20404b4c:	ce7e                	sw	t6,28(sp)
20404b4e:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20404b50:	c74ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404b54:	872a                	mv	a4,a0
20404b56:	070a                	slli	a4,a4,0x2
20404b58:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404b5c:	97ba                	add	a5,a5,a4
20404b5e:	439c                	lw	a5,0(a5)
20404b60:	faf42623          	sw	a5,-84(s0)
20404b64:	fac42783          	lw	a5,-84(s0)
20404b68:	c78d                	beqz	a5,20404b92 <metal_lc10_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20404b6a:	fac42503          	lw	a0,-84(s0)
20404b6e:	bdcff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404b72:	faa42423          	sw	a0,-88(s0)
20404b76:	fa842783          	lw	a5,-88(s0)
20404b7a:	3087a783          	lw	a5,776(a5)
20404b7e:	faf42223          	sw	a5,-92(s0)
20404b82:	fa842783          	lw	a5,-88(s0)
20404b86:	3007a783          	lw	a5,768(a5)
20404b8a:	fa442583          	lw	a1,-92(s0)
20404b8e:	4569                	li	a0,26
20404b90:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:267
}
20404b92:	0001                	nop
20404b94:	40f6                	lw	ra,92(sp)
20404b96:	42e6                	lw	t0,88(sp)
20404b98:	4356                	lw	t1,84(sp)
20404b9a:	43c6                	lw	t2,80(sp)
20404b9c:	4436                	lw	s0,76(sp)
20404b9e:	4526                	lw	a0,72(sp)
20404ba0:	4596                	lw	a1,68(sp)
20404ba2:	4606                	lw	a2,64(sp)
20404ba4:	56f2                	lw	a3,60(sp)
20404ba6:	5762                	lw	a4,56(sp)
20404ba8:	57d2                	lw	a5,52(sp)
20404baa:	5842                	lw	a6,48(sp)
20404bac:	58b2                	lw	a7,44(sp)
20404bae:	5e22                	lw	t3,40(sp)
20404bb0:	5e92                	lw	t4,36(sp)
20404bb2:	5f02                	lw	t5,32(sp)
20404bb4:	4ff2                	lw	t6,28(sp)
20404bb6:	6125                	addi	sp,sp,96
20404bb8:	30200073          	mret

20404bbc <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20404bbc:	711d                	addi	sp,sp,-96
20404bbe:	ce86                	sw	ra,92(sp)
20404bc0:	cc96                	sw	t0,88(sp)
20404bc2:	ca9a                	sw	t1,84(sp)
20404bc4:	c89e                	sw	t2,80(sp)
20404bc6:	c6a2                	sw	s0,76(sp)
20404bc8:	c4aa                	sw	a0,72(sp)
20404bca:	c2ae                	sw	a1,68(sp)
20404bcc:	c0b2                	sw	a2,64(sp)
20404bce:	de36                	sw	a3,60(sp)
20404bd0:	dc3a                	sw	a4,56(sp)
20404bd2:	da3e                	sw	a5,52(sp)
20404bd4:	d842                	sw	a6,48(sp)
20404bd6:	d646                	sw	a7,44(sp)
20404bd8:	d472                	sw	t3,40(sp)
20404bda:	d276                	sw	t4,36(sp)
20404bdc:	d07a                	sw	t5,32(sp)
20404bde:	ce7e                	sw	t6,28(sp)
20404be0:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20404be2:	be2ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404be6:	872a                	mv	a4,a0
20404be8:	070a                	slli	a4,a4,0x2
20404bea:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404bee:	97ba                	add	a5,a5,a4
20404bf0:	439c                	lw	a5,0(a5)
20404bf2:	faf42623          	sw	a5,-84(s0)
20404bf6:	fac42783          	lw	a5,-84(s0)
20404bfa:	c78d                	beqz	a5,20404c24 <metal_lc11_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20404bfc:	fac42503          	lw	a0,-84(s0)
20404c00:	b4aff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404c04:	faa42423          	sw	a0,-88(s0)
20404c08:	fa842783          	lw	a5,-88(s0)
20404c0c:	3207a783          	lw	a5,800(a5)
20404c10:	faf42223          	sw	a5,-92(s0)
20404c14:	fa842783          	lw	a5,-88(s0)
20404c18:	3187a783          	lw	a5,792(a5)
20404c1c:	fa442583          	lw	a1,-92(s0)
20404c20:	456d                	li	a0,27
20404c22:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:273
}
20404c24:	0001                	nop
20404c26:	40f6                	lw	ra,92(sp)
20404c28:	42e6                	lw	t0,88(sp)
20404c2a:	4356                	lw	t1,84(sp)
20404c2c:	43c6                	lw	t2,80(sp)
20404c2e:	4436                	lw	s0,76(sp)
20404c30:	4526                	lw	a0,72(sp)
20404c32:	4596                	lw	a1,68(sp)
20404c34:	4606                	lw	a2,64(sp)
20404c36:	56f2                	lw	a3,60(sp)
20404c38:	5762                	lw	a4,56(sp)
20404c3a:	57d2                	lw	a5,52(sp)
20404c3c:	5842                	lw	a6,48(sp)
20404c3e:	58b2                	lw	a7,44(sp)
20404c40:	5e22                	lw	t3,40(sp)
20404c42:	5e92                	lw	t4,36(sp)
20404c44:	5f02                	lw	t5,32(sp)
20404c46:	4ff2                	lw	t6,28(sp)
20404c48:	6125                	addi	sp,sp,96
20404c4a:	30200073          	mret

20404c4e <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20404c4e:	711d                	addi	sp,sp,-96
20404c50:	ce86                	sw	ra,92(sp)
20404c52:	cc96                	sw	t0,88(sp)
20404c54:	ca9a                	sw	t1,84(sp)
20404c56:	c89e                	sw	t2,80(sp)
20404c58:	c6a2                	sw	s0,76(sp)
20404c5a:	c4aa                	sw	a0,72(sp)
20404c5c:	c2ae                	sw	a1,68(sp)
20404c5e:	c0b2                	sw	a2,64(sp)
20404c60:	de36                	sw	a3,60(sp)
20404c62:	dc3a                	sw	a4,56(sp)
20404c64:	da3e                	sw	a5,52(sp)
20404c66:	d842                	sw	a6,48(sp)
20404c68:	d646                	sw	a7,44(sp)
20404c6a:	d472                	sw	t3,40(sp)
20404c6c:	d276                	sw	t4,36(sp)
20404c6e:	d07a                	sw	t5,32(sp)
20404c70:	ce7e                	sw	t6,28(sp)
20404c72:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20404c74:	b50ff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404c78:	872a                	mv	a4,a0
20404c7a:	070a                	slli	a4,a4,0x2
20404c7c:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404c80:	97ba                	add	a5,a5,a4
20404c82:	439c                	lw	a5,0(a5)
20404c84:	faf42623          	sw	a5,-84(s0)
20404c88:	fac42783          	lw	a5,-84(s0)
20404c8c:	c78d                	beqz	a5,20404cb6 <metal_lc12_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20404c8e:	fac42503          	lw	a0,-84(s0)
20404c92:	ab8ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404c96:	faa42423          	sw	a0,-88(s0)
20404c9a:	fa842783          	lw	a5,-88(s0)
20404c9e:	3387a783          	lw	a5,824(a5)
20404ca2:	faf42223          	sw	a5,-92(s0)
20404ca6:	fa842783          	lw	a5,-88(s0)
20404caa:	3307a783          	lw	a5,816(a5)
20404cae:	fa442583          	lw	a1,-92(s0)
20404cb2:	4571                	li	a0,28
20404cb4:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:279
}
20404cb6:	0001                	nop
20404cb8:	40f6                	lw	ra,92(sp)
20404cba:	42e6                	lw	t0,88(sp)
20404cbc:	4356                	lw	t1,84(sp)
20404cbe:	43c6                	lw	t2,80(sp)
20404cc0:	4436                	lw	s0,76(sp)
20404cc2:	4526                	lw	a0,72(sp)
20404cc4:	4596                	lw	a1,68(sp)
20404cc6:	4606                	lw	a2,64(sp)
20404cc8:	56f2                	lw	a3,60(sp)
20404cca:	5762                	lw	a4,56(sp)
20404ccc:	57d2                	lw	a5,52(sp)
20404cce:	5842                	lw	a6,48(sp)
20404cd0:	58b2                	lw	a7,44(sp)
20404cd2:	5e22                	lw	t3,40(sp)
20404cd4:	5e92                	lw	t4,36(sp)
20404cd6:	5f02                	lw	t5,32(sp)
20404cd8:	4ff2                	lw	t6,28(sp)
20404cda:	6125                	addi	sp,sp,96
20404cdc:	30200073          	mret

20404ce0 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20404ce0:	711d                	addi	sp,sp,-96
20404ce2:	ce86                	sw	ra,92(sp)
20404ce4:	cc96                	sw	t0,88(sp)
20404ce6:	ca9a                	sw	t1,84(sp)
20404ce8:	c89e                	sw	t2,80(sp)
20404cea:	c6a2                	sw	s0,76(sp)
20404cec:	c4aa                	sw	a0,72(sp)
20404cee:	c2ae                	sw	a1,68(sp)
20404cf0:	c0b2                	sw	a2,64(sp)
20404cf2:	de36                	sw	a3,60(sp)
20404cf4:	dc3a                	sw	a4,56(sp)
20404cf6:	da3e                	sw	a5,52(sp)
20404cf8:	d842                	sw	a6,48(sp)
20404cfa:	d646                	sw	a7,44(sp)
20404cfc:	d472                	sw	t3,40(sp)
20404cfe:	d276                	sw	t4,36(sp)
20404d00:	d07a                	sw	t5,32(sp)
20404d02:	ce7e                	sw	t6,28(sp)
20404d04:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20404d06:	abeff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404d0a:	872a                	mv	a4,a0
20404d0c:	070a                	slli	a4,a4,0x2
20404d0e:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404d12:	97ba                	add	a5,a5,a4
20404d14:	439c                	lw	a5,0(a5)
20404d16:	faf42623          	sw	a5,-84(s0)
20404d1a:	fac42783          	lw	a5,-84(s0)
20404d1e:	c78d                	beqz	a5,20404d48 <metal_lc13_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20404d20:	fac42503          	lw	a0,-84(s0)
20404d24:	a26ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404d28:	faa42423          	sw	a0,-88(s0)
20404d2c:	fa842783          	lw	a5,-88(s0)
20404d30:	3507a783          	lw	a5,848(a5)
20404d34:	faf42223          	sw	a5,-92(s0)
20404d38:	fa842783          	lw	a5,-88(s0)
20404d3c:	3487a783          	lw	a5,840(a5)
20404d40:	fa442583          	lw	a1,-92(s0)
20404d44:	4575                	li	a0,29
20404d46:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404d48:	0001                	nop
20404d4a:	40f6                	lw	ra,92(sp)
20404d4c:	42e6                	lw	t0,88(sp)
20404d4e:	4356                	lw	t1,84(sp)
20404d50:	43c6                	lw	t2,80(sp)
20404d52:	4436                	lw	s0,76(sp)
20404d54:	4526                	lw	a0,72(sp)
20404d56:	4596                	lw	a1,68(sp)
20404d58:	4606                	lw	a2,64(sp)
20404d5a:	56f2                	lw	a3,60(sp)
20404d5c:	5762                	lw	a4,56(sp)
20404d5e:	57d2                	lw	a5,52(sp)
20404d60:	5842                	lw	a6,48(sp)
20404d62:	58b2                	lw	a7,44(sp)
20404d64:	5e22                	lw	t3,40(sp)
20404d66:	5e92                	lw	t4,36(sp)
20404d68:	5f02                	lw	t5,32(sp)
20404d6a:	4ff2                	lw	t6,28(sp)
20404d6c:	6125                	addi	sp,sp,96
20404d6e:	30200073          	mret

20404d72 <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20404d72:	711d                	addi	sp,sp,-96
20404d74:	ce86                	sw	ra,92(sp)
20404d76:	cc96                	sw	t0,88(sp)
20404d78:	ca9a                	sw	t1,84(sp)
20404d7a:	c89e                	sw	t2,80(sp)
20404d7c:	c6a2                	sw	s0,76(sp)
20404d7e:	c4aa                	sw	a0,72(sp)
20404d80:	c2ae                	sw	a1,68(sp)
20404d82:	c0b2                	sw	a2,64(sp)
20404d84:	de36                	sw	a3,60(sp)
20404d86:	dc3a                	sw	a4,56(sp)
20404d88:	da3e                	sw	a5,52(sp)
20404d8a:	d842                	sw	a6,48(sp)
20404d8c:	d646                	sw	a7,44(sp)
20404d8e:	d472                	sw	t3,40(sp)
20404d90:	d276                	sw	t4,36(sp)
20404d92:	d07a                	sw	t5,32(sp)
20404d94:	ce7e                	sw	t6,28(sp)
20404d96:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20404d98:	a2cff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404d9c:	872a                	mv	a4,a0
20404d9e:	070a                	slli	a4,a4,0x2
20404da0:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404da4:	97ba                	add	a5,a5,a4
20404da6:	439c                	lw	a5,0(a5)
20404da8:	faf42623          	sw	a5,-84(s0)
20404dac:	fac42783          	lw	a5,-84(s0)
20404db0:	c78d                	beqz	a5,20404dda <metal_lc14_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20404db2:	fac42503          	lw	a0,-84(s0)
20404db6:	994ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404dba:	faa42423          	sw	a0,-88(s0)
20404dbe:	fa842783          	lw	a5,-88(s0)
20404dc2:	3687a783          	lw	a5,872(a5)
20404dc6:	faf42223          	sw	a5,-92(s0)
20404dca:	fa842783          	lw	a5,-88(s0)
20404dce:	3607a783          	lw	a5,864(a5)
20404dd2:	fa442583          	lw	a1,-92(s0)
20404dd6:	4579                	li	a0,30
20404dd8:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:291
}
20404dda:	0001                	nop
20404ddc:	40f6                	lw	ra,92(sp)
20404dde:	42e6                	lw	t0,88(sp)
20404de0:	4356                	lw	t1,84(sp)
20404de2:	43c6                	lw	t2,80(sp)
20404de4:	4436                	lw	s0,76(sp)
20404de6:	4526                	lw	a0,72(sp)
20404de8:	4596                	lw	a1,68(sp)
20404dea:	4606                	lw	a2,64(sp)
20404dec:	56f2                	lw	a3,60(sp)
20404dee:	5762                	lw	a4,56(sp)
20404df0:	57d2                	lw	a5,52(sp)
20404df2:	5842                	lw	a6,48(sp)
20404df4:	58b2                	lw	a7,44(sp)
20404df6:	5e22                	lw	t3,40(sp)
20404df8:	5e92                	lw	t4,36(sp)
20404dfa:	5f02                	lw	t5,32(sp)
20404dfc:	4ff2                	lw	t6,28(sp)
20404dfe:	6125                	addi	sp,sp,96
20404e00:	30200073          	mret

20404e04 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20404e04:	711d                	addi	sp,sp,-96
20404e06:	ce86                	sw	ra,92(sp)
20404e08:	cc96                	sw	t0,88(sp)
20404e0a:	ca9a                	sw	t1,84(sp)
20404e0c:	c89e                	sw	t2,80(sp)
20404e0e:	c6a2                	sw	s0,76(sp)
20404e10:	c4aa                	sw	a0,72(sp)
20404e12:	c2ae                	sw	a1,68(sp)
20404e14:	c0b2                	sw	a2,64(sp)
20404e16:	de36                	sw	a3,60(sp)
20404e18:	dc3a                	sw	a4,56(sp)
20404e1a:	da3e                	sw	a5,52(sp)
20404e1c:	d842                	sw	a6,48(sp)
20404e1e:	d646                	sw	a7,44(sp)
20404e20:	d472                	sw	t3,40(sp)
20404e22:	d276                	sw	t4,36(sp)
20404e24:	d07a                	sw	t5,32(sp)
20404e26:	ce7e                	sw	t6,28(sp)
20404e28:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20404e2a:	99aff0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20404e2e:	872a                	mv	a4,a0
20404e30:	070a                	slli	a4,a4,0x2
20404e32:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20404e36:	97ba                	add	a5,a5,a4
20404e38:	439c                	lw	a5,0(a5)
20404e3a:	faf42623          	sw	a5,-84(s0)
20404e3e:	fac42783          	lw	a5,-84(s0)
20404e42:	c78d                	beqz	a5,20404e6c <metal_lc15_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404e44:	fac42503          	lw	a0,-84(s0)
20404e48:	902ff0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20404e4c:	faa42423          	sw	a0,-88(s0)
20404e50:	fa842783          	lw	a5,-88(s0)
20404e54:	3807a783          	lw	a5,896(a5)
20404e58:	faf42223          	sw	a5,-92(s0)
20404e5c:	fa842783          	lw	a5,-88(s0)
20404e60:	3787a783          	lw	a5,888(a5)
20404e64:	fa442583          	lw	a1,-92(s0)
20404e68:	457d                	li	a0,31
20404e6a:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
}
20404e6c:	0001                	nop
20404e6e:	40f6                	lw	ra,92(sp)
20404e70:	42e6                	lw	t0,88(sp)
20404e72:	4356                	lw	t1,84(sp)
20404e74:	43c6                	lw	t2,80(sp)
20404e76:	4436                	lw	s0,76(sp)
20404e78:	4526                	lw	a0,72(sp)
20404e7a:	4596                	lw	a1,68(sp)
20404e7c:	4606                	lw	a2,64(sp)
20404e7e:	56f2                	lw	a3,60(sp)
20404e80:	5762                	lw	a4,56(sp)
20404e82:	57d2                	lw	a5,52(sp)
20404e84:	5842                	lw	a6,48(sp)
20404e86:	58b2                	lw	a7,44(sp)
20404e88:	5e22                	lw	t3,40(sp)
20404e8a:	5e92                	lw	t4,36(sp)
20404e8c:	5f02                	lw	t5,32(sp)
20404e8e:	4ff2                	lw	t6,28(sp)
20404e90:	6125                	addi	sp,sp,96
20404e92:	30200073          	mret

20404e96 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20404e96:	1101                	addi	sp,sp,-32
20404e98:	ce22                	sw	s0,28(sp)
20404e9a:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404e9c:	305027f3          	csrr	a5,mtvec
20404ea0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20404ea4:	fec42783          	lw	a5,-20(s0)
20404ea8:	03f7f793          	andi	a5,a5,63
20404eac:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20404eb0:	fec42703          	lw	a4,-20(s0)
20404eb4:	4789                	li	a5,2
20404eb6:	00f70d63          	beq	a4,a5,20404ed0 <__metal_controller_interrupt_vector_mode+0x3a>
20404eba:	fec42703          	lw	a4,-20(s0)
20404ebe:	478d                	li	a5,3
20404ec0:	00f70a63          	beq	a4,a5,20404ed4 <__metal_controller_interrupt_vector_mode+0x3e>
20404ec4:	fec42703          	lw	a4,-20(s0)
20404ec8:	4785                	li	a5,1
20404eca:	00f70763          	beq	a4,a5,20404ed8 <__metal_controller_interrupt_vector_mode+0x42>
20404ece:	a039                	j	20404edc <__metal_controller_interrupt_vector_mode+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20404ed0:	478d                	li	a5,3
20404ed2:	a031                	j	20404ede <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20404ed4:	4791                	li	a5,4
20404ed6:	a021                	j	20404ede <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20404ed8:	4785                	li	a5,1
20404eda:	a011                	j	20404ede <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20404edc:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
}
20404ede:	853e                	mv	a0,a5
20404ee0:	4472                	lw	s0,28(sp)
20404ee2:	6105                	addi	sp,sp,32
20404ee4:	8082                	ret

20404ee6 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20404ee6:	7179                	addi	sp,sp,-48
20404ee8:	d622                	sw	s0,44(sp)
20404eea:	1800                	addi	s0,sp,48
20404eec:	fca42e23          	sw	a0,-36(s0)
20404ef0:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404ef4:	305027f3          	csrr	a5,mtvec
20404ef8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20404efc:	fec42783          	lw	a5,-20(s0)
20404f00:	fc07f793          	andi	a5,a5,-64
20404f04:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20404f08:	fd842783          	lw	a5,-40(s0)
20404f0c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20404f10:	fdc42703          	lw	a4,-36(s0)
20404f14:	4791                	li	a5,4
20404f16:	06e7e063          	bltu	a5,a4,20404f76 <__metal_controller_interrupt_vector+0x90>
20404f1a:	fdc42783          	lw	a5,-36(s0)
20404f1e:	00279713          	slli	a4,a5,0x2
20404f22:	204007b7          	lui	a5,0x20400
20404f26:	5f078793          	addi	a5,a5,1520 # 204005f0 <__metal_driver_vtable_riscv_clint0+0x64>
20404f2a:	97ba                	add	a5,a5,a4
20404f2c:	439c                	lw	a5,0(a5)
20404f2e:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404f30:	fe842783          	lw	a5,-24(s0)
20404f34:	30779073          	csrw	mtvt,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20404f38:	fec42783          	lw	a5,-20(s0)
20404f3c:	0027e793          	ori	a5,a5,2
20404f40:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20404f44:	a80d                	j	20404f76 <__metal_controller_interrupt_vector+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404f46:	fe842783          	lw	a5,-24(s0)
20404f4a:	30779073          	csrw	mtvt,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20404f4e:	fec42783          	lw	a5,-20(s0)
20404f52:	0037e793          	ori	a5,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20404f56:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20404f5a:	a831                	j	20404f76 <__metal_controller_interrupt_vector+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20404f5c:	fe842783          	lw	a5,-24(s0)
20404f60:	0017e793          	ori	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20404f64:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20404f68:	a039                	j	20404f76 <__metal_controller_interrupt_vector+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20404f6a:	fe842783          	lw	a5,-24(s0)
20404f6e:	9bf1                	andi	a5,a5,-4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20404f70:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20404f74:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20404f76:	0001                	nop
20404f78:	5432                	lw	s0,44(sp)
20404f7a:	6145                	addi	sp,sp,48
20404f7c:	8082                	ret

20404f7e <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20404f7e:	1101                	addi	sp,sp,-32
20404f80:	ce22                	sw	s0,28(sp)
20404f82:	1000                	addi	s0,sp,32
20404f84:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404f88:	fec42703          	lw	a4,-20(s0)
20404f8c:	47ad                	li	a5,11
20404f8e:	04f70263          	beq	a4,a5,20404fd2 <__metal_valid_interrupt_id+0x54>
20404f92:	fec42703          	lw	a4,-20(s0)
20404f96:	47ad                	li	a5,11
20404f98:	00e7cd63          	blt	a5,a4,20404fb2 <__metal_valid_interrupt_id+0x34>
20404f9c:	fec42703          	lw	a4,-20(s0)
20404fa0:	478d                	li	a5,3
20404fa2:	02f70863          	beq	a4,a5,20404fd2 <__metal_valid_interrupt_id+0x54>
20404fa6:	fec42703          	lw	a4,-20(s0)
20404faa:	479d                	li	a5,7
20404fac:	02f70363          	beq	a4,a5,20404fd2 <__metal_valid_interrupt_id+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20404fb0:	a01d                	j	20404fd6 <__metal_valid_interrupt_id+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404fb2:	fec42703          	lw	a4,-20(s0)
20404fb6:	47c1                	li	a5,16
20404fb8:	00f74f63          	blt	a4,a5,20404fd6 <__metal_valid_interrupt_id+0x58>
20404fbc:	fec42703          	lw	a4,-20(s0)
20404fc0:	47fd                	li	a5,31
20404fc2:	00e7d863          	bge	a5,a4,20404fd2 <__metal_valid_interrupt_id+0x54>
20404fc6:	fec42703          	lw	a4,-20(s0)
20404fca:	08000793          	li	a5,128
20404fce:	00f71463          	bne	a4,a5,20404fd6 <__metal_valid_interrupt_id+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20404fd2:	4785                	li	a5,1
20404fd4:	a019                	j	20404fda <__metal_valid_interrupt_id+0x5c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20404fd6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20404fd8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:374
}
20404fda:	853e                	mv	a0,a5
20404fdc:	4472                	lw	s0,28(sp)
20404fde:	6105                	addi	sp,sp,32
20404fe0:	8082                	ret

20404fe2 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20404fe2:	7179                	addi	sp,sp,-48
20404fe4:	d606                	sw	ra,44(sp)
20404fe6:	d422                	sw	s0,40(sp)
20404fe8:	1800                	addi	s0,sp,48
20404fea:	fca42e23          	sw	a0,-36(s0)
20404fee:	fcb42c23          	sw	a1,-40(s0)
20404ff2:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20404ff6:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20404ffa:	fdc42783          	lw	a5,-36(s0)
20404ffe:	e399                	bnez	a5,20405004 <__metal_local_interrupt_enable+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20405000:	57fd                	li	a5,-1
20405002:	a849                	j	20405094 <__metal_local_interrupt_enable+0xb2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20405004:	fd842703          	lw	a4,-40(s0)
20405008:	47fd                	li	a5,31
2040500a:	08e7e063          	bltu	a5,a4,2040508a <__metal_local_interrupt_enable+0xa8>
2040500e:	fd842783          	lw	a5,-40(s0)
20405012:	00279713          	slli	a4,a5,0x2
20405016:	204007b7          	lui	a5,0x20400
2040501a:	60478793          	addi	a5,a5,1540 # 20400604 <__metal_driver_vtable_riscv_clint0+0x78>
2040501e:	97ba                	add	a5,a5,a4
20405020:	439c                	lw	a5,0(a5)
20405022:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20405024:	fd442783          	lw	a5,-44(s0)
20405028:	c781                	beqz	a5,20405030 <__metal_local_interrupt_enable+0x4e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
2040502a:	fb5fe0ef          	jal	ra,20403fde <__metal_interrupt_global_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
2040502e:	a08d                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20405030:	fc7fe0ef          	jal	ra,20403ff6 <__metal_interrupt_global_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20405034:	a8b1                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20405036:	fd442783          	lw	a5,-44(s0)
2040503a:	c781                	beqz	a5,20405042 <__metal_local_interrupt_enable+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
2040503c:	fd3fe0ef          	jal	ra,2040400e <__metal_interrupt_software_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20405040:	a881                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20405042:	fe5fe0ef          	jal	ra,20404026 <__metal_interrupt_software_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20405046:	a0a9                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20405048:	fd442783          	lw	a5,-44(s0)
2040504c:	c781                	beqz	a5,20405054 <__metal_local_interrupt_enable+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
2040504e:	ff1fe0ef          	jal	ra,2040403e <__metal_interrupt_timer_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20405052:	a83d                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20405054:	804ff0ef          	jal	ra,20404058 <__metal_interrupt_timer_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20405058:	a825                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
2040505a:	fd442783          	lw	a5,-44(s0)
2040505e:	c781                	beqz	a5,20405066 <__metal_local_interrupt_enable+0x84>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20405060:	812ff0ef          	jal	ra,20404072 <__metal_interrupt_external_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20405064:	a035                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20405066:	828ff0ef          	jal	ra,2040408e <__metal_interrupt_external_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
2040506a:	a01d                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
2040506c:	fd442783          	lw	a5,-44(s0)
20405070:	c799                	beqz	a5,2040507e <__metal_local_interrupt_enable+0x9c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20405072:	fd842783          	lw	a5,-40(s0)
20405076:	853e                	mv	a0,a5
20405078:	832ff0ef          	jal	ra,204040aa <__metal_interrupt_local_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
2040507c:	a811                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
2040507e:	fd842783          	lw	a5,-40(s0)
20405082:	853e                	mv	a0,a5
20405084:	852ff0ef          	jal	ra,204040d6 <__metal_interrupt_local_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20405088:	a021                	j	20405090 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
2040508a:	57fd                	li	a5,-1
2040508c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20405090:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
}
20405094:	853e                	mv	a0,a5
20405096:	50b2                	lw	ra,44(sp)
20405098:	5422                	lw	s0,40(sp)
2040509a:	6145                	addi	sp,sp,48
2040509c:	8082                	ret

2040509e <__metal_exception_register>:
__metal_exception_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
2040509e:	7179                	addi	sp,sp,-48
204050a0:	d622                	sw	s0,44(sp)
204050a2:	1800                	addi	s0,sp,48
204050a4:	fca42e23          	sw	a0,-36(s0)
204050a8:	fcb42c23          	sw	a1,-40(s0)
204050ac:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204050b0:	fdc42783          	lw	a5,-36(s0)
204050b4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
204050b8:	fd842703          	lw	a4,-40(s0)
204050bc:	47ad                	li	a5,11
204050be:	02e7c263          	blt	a5,a4,204050e2 <__metal_exception_register+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
204050c2:	fd442783          	lw	a5,-44(s0)
204050c6:	cf91                	beqz	a5,204050e2 <__metal_exception_register+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
204050c8:	fec42703          	lw	a4,-20(s0)
204050cc:	fd842783          	lw	a5,-40(s0)
204050d0:	0e878793          	addi	a5,a5,232
204050d4:	078a                	slli	a5,a5,0x2
204050d6:	97ba                	add	a5,a5,a4
204050d8:	fd442703          	lw	a4,-44(s0)
204050dc:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
204050de:	4781                	li	a5,0
204050e0:	a011                	j	204050e4 <__metal_exception_register+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
204050e2:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
}
204050e4:	853e                	mv	a0,a5
204050e6:	5432                	lw	s0,44(sp)
204050e8:	6145                	addi	sp,sp,48
204050ea:	8082                	ret

204050ec <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
204050ec:	7179                	addi	sp,sp,-48
204050ee:	d606                	sw	ra,44(sp)
204050f0:	d422                	sw	s0,40(sp)
204050f2:	1800                	addi	s0,sp,48
204050f4:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204050f8:	fdc42783          	lw	a5,-36(s0)
204050fc:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20405100:	fe442783          	lw	a5,-28(s0)
20405104:	43dc                	lw	a5,4(a5)
20405106:	efdd                	bnez	a5,204051c4 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20405108:	fe042623          	sw	zero,-20(s0)
2040510c:	a0b9                	j	2040515a <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
2040510e:	fe442683          	lw	a3,-28(s0)
20405112:	fec42703          	lw	a4,-20(s0)
20405116:	87ba                	mv	a5,a4
20405118:	0786                	slli	a5,a5,0x1
2040511a:	97ba                	add	a5,a5,a4
2040511c:	078e                	slli	a5,a5,0x3
2040511e:	97b6                	add	a5,a5,a3
20405120:	0807a823          	sw	zero,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20405124:	fe442683          	lw	a3,-28(s0)
20405128:	fec42703          	lw	a4,-20(s0)
2040512c:	87ba                	mv	a5,a4
2040512e:	0786                	slli	a5,a5,0x1
20405130:	97ba                	add	a5,a5,a4
20405132:	078e                	slli	a5,a5,0x3
20405134:	97b6                	add	a5,a5,a3
20405136:	0807aa23          	sw	zero,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
2040513a:	fe442683          	lw	a3,-28(s0)
2040513e:	fec42703          	lw	a4,-20(s0)
20405142:	87ba                	mv	a5,a4
20405144:	0786                	slli	a5,a5,0x1
20405146:	97ba                	add	a5,a5,a4
20405148:	078e                	slli	a5,a5,0x3
2040514a:	97b6                	add	a5,a5,a3
2040514c:	0807ac23          	sw	zero,152(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20405150:	fec42783          	lw	a5,-20(s0)
20405154:	0785                	addi	a5,a5,1
20405156:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
2040515a:	fec42703          	lw	a4,-20(s0)
2040515e:	47fd                	li	a5,31
20405160:	fae7d7e3          	bge	a5,a4,2040510e <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20405164:	fe042423          	sw	zero,-24(s0)
20405168:	a01d                	j	2040518e <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
2040516a:	fe442703          	lw	a4,-28(s0)
2040516e:	fe842783          	lw	a5,-24(s0)
20405172:	0e878793          	addi	a5,a5,232
20405176:	078a                	slli	a5,a5,0x2
20405178:	97ba                	add	a5,a5,a4
2040517a:	20404737          	lui	a4,0x20404
2040517e:	10270713          	addi	a4,a4,258 # 20404102 <__metal_default_exception_handler>
20405182:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20405184:	fe842783          	lw	a5,-24(s0)
20405188:	0785                	addi	a5,a5,1
2040518a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
2040518e:	fe842703          	lw	a4,-24(s0)
20405192:	47ad                	li	a5,11
20405194:	fce7dbe3          	bge	a5,a4,2040516a <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20405198:	305027f3          	csrr	a5,mtvec
2040519c:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
204051a0:	204007b7          	lui	a5,0x20400
204051a4:	13c78793          	addi	a5,a5,316 # 2040013c <early_trap_vector>
204051a8:	fe042703          	lw	a4,-32(s0)
204051ac:	00f71863          	bne	a4,a5,204051bc <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
204051b0:	204047b7          	lui	a5,0x20404
204051b4:	38078593          	addi	a1,a5,896 # 20404380 <__metal_exception_handler>
204051b8:	4501                	li	a0,0
204051ba:	3335                	jal	20404ee6 <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
204051bc:	fe442783          	lw	a5,-28(s0)
204051c0:	4705                	li	a4,1
204051c2:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
204051c4:	0001                	nop
204051c6:	50b2                	lw	ra,44(sp)
204051c8:	5422                	lw	s0,40(sp)
204051ca:	6145                	addi	sp,sp,48
204051cc:	8082                	ret

204051ce <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
204051ce:	7179                	addi	sp,sp,-48
204051d0:	d606                	sw	ra,44(sp)
204051d2:	d422                	sw	s0,40(sp)
204051d4:	1800                	addi	s0,sp,48
204051d6:	fca42e23          	sw	a0,-36(s0)
204051da:	fcb42c23          	sw	a1,-40(s0)
204051de:	fcc42a23          	sw	a2,-44(s0)
204051e2:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
204051e6:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204051ea:	fdc42783          	lw	a5,-36(s0)
204051ee:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
204051f2:	fd842503          	lw	a0,-40(s0)
204051f6:	3361                	jal	20404f7e <__metal_valid_interrupt_id>
204051f8:	87aa                	mv	a5,a0
204051fa:	e399                	bnez	a5,20405200 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
204051fc:	57d5                	li	a5,-11
204051fe:	aa71                	j	2040539a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20405200:	fd842703          	lw	a4,-40(s0)
20405204:	08000793          	li	a5,128
20405208:	00f71763          	bne	a4,a5,20405216 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
2040520c:	3169                	jal	20404e96 <__metal_controller_interrupt_vector_mode>
2040520e:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20405210:	c399                	beqz	a5,20405216 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20405212:	57cd                	li	a5,-13
20405214:	a259                	j	2040539a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20405216:	fd442783          	lw	a5,-44(s0)
2040521a:	cfb9                	beqz	a5,20405278 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
2040521c:	fd842703          	lw	a4,-40(s0)
20405220:	08000793          	li	a5,128
20405224:	00f71f63          	bne	a4,a5,20405242 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20405228:	fe842783          	lw	a5,-24(s0)
2040522c:	fd442703          	lw	a4,-44(s0)
20405230:	38e7a823          	sw	a4,912(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20405234:	fe842783          	lw	a5,-24(s0)
20405238:	fd042703          	lw	a4,-48(s0)
2040523c:	38e7ac23          	sw	a4,920(a5)
20405240:	aa99                	j	20405396 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20405242:	fe842683          	lw	a3,-24(s0)
20405246:	fd842703          	lw	a4,-40(s0)
2040524a:	87ba                	mv	a5,a4
2040524c:	0786                	slli	a5,a5,0x1
2040524e:	97ba                	add	a5,a5,a4
20405250:	078e                	slli	a5,a5,0x3
20405252:	97b6                	add	a5,a5,a3
20405254:	fd442703          	lw	a4,-44(s0)
20405258:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
2040525c:	fe842683          	lw	a3,-24(s0)
20405260:	fd842703          	lw	a4,-40(s0)
20405264:	87ba                	mv	a5,a4
20405266:	0786                	slli	a5,a5,0x1
20405268:	97ba                	add	a5,a5,a4
2040526a:	078e                	slli	a5,a5,0x3
2040526c:	97b6                	add	a5,a5,a3
2040526e:	fd042703          	lw	a4,-48(s0)
20405272:	08e7ac23          	sw	a4,152(a5)
20405276:	a205                	j	20405396 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20405278:	fd842703          	lw	a4,-40(s0)
2040527c:	47ad                	li	a5,11
2040527e:	0cf70c63          	beq	a4,a5,20405356 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20405282:	fd842703          	lw	a4,-40(s0)
20405286:	47ad                	li	a5,11
20405288:	00e7cd63          	blt	a5,a4,204052a2 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
2040528c:	fd842703          	lw	a4,-40(s0)
20405290:	478d                	li	a5,3
20405292:	02f70963          	beq	a4,a5,204052c4 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
20405296:	fd842703          	lw	a4,-40(s0)
2040529a:	479d                	li	a5,7
2040529c:	06f70163          	beq	a4,a5,204052fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
204052a0:	a8c5                	j	20405390 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
204052a2:	fd842703          	lw	a4,-40(s0)
204052a6:	47c1                	li	a5,16
204052a8:	0ef74463          	blt	a4,a5,20405390 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
204052ac:	fd842703          	lw	a4,-40(s0)
204052b0:	47fd                	li	a5,31
204052b2:	0ae7d263          	bge	a5,a4,20405356 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
204052b6:	fd842703          	lw	a4,-40(s0)
204052ba:	08000793          	li	a5,128
204052be:	06f70d63          	beq	a4,a5,20405338 <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
204052c2:	a0f9                	j	20405390 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
204052c4:	fe842683          	lw	a3,-24(s0)
204052c8:	fd842703          	lw	a4,-40(s0)
204052cc:	87ba                	mv	a5,a4
204052ce:	0786                	slli	a5,a5,0x1
204052d0:	97ba                	add	a5,a5,a4
204052d2:	078e                	slli	a5,a5,0x3
204052d4:	97b6                	add	a5,a5,a3
204052d6:	20404737          	lui	a4,0x20404
204052da:	1ee70713          	addi	a4,a4,494 # 204041ee <__metal_default_sw_handler>
204052de:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
204052e2:	fe842683          	lw	a3,-24(s0)
204052e6:	fd842703          	lw	a4,-40(s0)
204052ea:	87ba                	mv	a5,a4
204052ec:	0786                	slli	a5,a5,0x1
204052ee:	97ba                	add	a5,a5,a4
204052f0:	078e                	slli	a5,a5,0x3
204052f2:	97b6                	add	a5,a5,a3
204052f4:	fd042703          	lw	a4,-48(s0)
204052f8:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
204052fc:	a869                	j	20405396 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
204052fe:	fe842683          	lw	a3,-24(s0)
20405302:	fd842703          	lw	a4,-40(s0)
20405306:	87ba                	mv	a5,a4
20405308:	0786                	slli	a5,a5,0x1
2040530a:	97ba                	add	a5,a5,a4
2040530c:	078e                	slli	a5,a5,0x3
2040530e:	97b6                	add	a5,a5,a3
20405310:	20404737          	lui	a4,0x20404
20405314:	2f670713          	addi	a4,a4,758 # 204042f6 <__metal_default_timer_handler>
20405318:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
2040531c:	fe842683          	lw	a3,-24(s0)
20405320:	fd842703          	lw	a4,-40(s0)
20405324:	87ba                	mv	a5,a4
20405326:	0786                	slli	a5,a5,0x1
20405328:	97ba                	add	a5,a5,a4
2040532a:	078e                	slli	a5,a5,0x3
2040532c:	97b6                	add	a5,a5,a3
2040532e:	fd042703          	lw	a4,-48(s0)
20405332:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20405336:	a085                	j	20405396 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20405338:	fe842783          	lw	a5,-24(s0)
2040533c:	20404737          	lui	a4,0x20404
20405340:	2e070713          	addi	a4,a4,736 # 204042e0 <__metal_default_beu_handler>
20405344:	38e7a823          	sw	a4,912(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20405348:	fe842783          	lw	a5,-24(s0)
2040534c:	fd042703          	lw	a4,-48(s0)
20405350:	38e7ac23          	sw	a4,920(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20405354:	a089                	j	20405396 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20405356:	fe842683          	lw	a3,-24(s0)
2040535a:	fd842703          	lw	a4,-40(s0)
2040535e:	87ba                	mv	a5,a4
20405360:	0786                	slli	a5,a5,0x1
20405362:	97ba                	add	a5,a5,a4
20405364:	078e                	slli	a5,a5,0x3
20405366:	97b6                	add	a5,a5,a3
20405368:	20404737          	lui	a4,0x20404
2040536c:	11a70713          	addi	a4,a4,282 # 2040411a <__metal_default_interrupt_handler>
20405370:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20405374:	fe842683          	lw	a3,-24(s0)
20405378:	fd842703          	lw	a4,-40(s0)
2040537c:	87ba                	mv	a5,a4
2040537e:	0786                	slli	a5,a5,0x1
20405380:	97ba                	add	a5,a5,a4
20405382:	078e                	slli	a5,a5,0x3
20405384:	97b6                	add	a5,a5,a3
20405386:	fd042703          	lw	a4,-48(s0)
2040538a:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
2040538e:	a021                	j	20405396 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20405390:	57d1                	li	a5,-12
20405392:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20405396:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:549
}
2040539a:	853e                	mv	a0,a5
2040539c:	50b2                	lw	ra,44(sp)
2040539e:	5422                	lw	s0,40(sp)
204053a0:	6145                	addi	sp,sp,48
204053a2:	8082                	ret

204053a4 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
204053a4:	1101                	addi	sp,sp,-32
204053a6:	ce06                	sw	ra,28(sp)
204053a8:	cc22                	sw	s0,24(sp)
204053aa:	1000                	addi	s0,sp,32
204053ac:	fea42623          	sw	a0,-20(s0)
204053b0:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
204053b4:	fe842783          	lw	a5,-24(s0)
204053b8:	4605                	li	a2,1
204053ba:	85be                	mv	a1,a5
204053bc:	fec42503          	lw	a0,-20(s0)
204053c0:	c23ff0ef          	jal	ra,20404fe2 <__metal_local_interrupt_enable>
204053c4:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:554
}
204053c6:	853e                	mv	a0,a5
204053c8:	40f2                	lw	ra,28(sp)
204053ca:	4462                	lw	s0,24(sp)
204053cc:	6105                	addi	sp,sp,32
204053ce:	8082                	ret

204053d0 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
204053d0:	1101                	addi	sp,sp,-32
204053d2:	ce06                	sw	ra,28(sp)
204053d4:	cc22                	sw	s0,24(sp)
204053d6:	1000                	addi	s0,sp,32
204053d8:	fea42623          	sw	a0,-20(s0)
204053dc:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
204053e0:	fe842783          	lw	a5,-24(s0)
204053e4:	4601                	li	a2,0
204053e6:	85be                	mv	a1,a5
204053e8:	fec42503          	lw	a0,-20(s0)
204053ec:	bf7ff0ef          	jal	ra,20404fe2 <__metal_local_interrupt_enable>
204053f0:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
}
204053f2:	853e                	mv	a0,a5
204053f4:	40f2                	lw	ra,28(sp)
204053f6:	4462                	lw	s0,24(sp)
204053f8:	6105                	addi	sp,sp,32
204053fa:	8082                	ret

204053fc <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
204053fc:	1101                	addi	sp,sp,-32
204053fe:	ce06                	sw	ra,28(sp)
20405400:	cc22                	sw	s0,24(sp)
20405402:	1000                	addi	s0,sp,32
20405404:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20405408:	a8fff0ef          	jal	ra,20404e96 <__metal_controller_interrupt_vector_mode>
2040540c:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:593
}
2040540e:	853e                	mv	a0,a5
20405410:	40f2                	lw	ra,28(sp)
20405412:	4462                	lw	s0,24(sp)
20405414:	6105                	addi	sp,sp,32
20405416:	8082                	ret

20405418 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20405418:	1101                	addi	sp,sp,-32
2040541a:	ce06                	sw	ra,28(sp)
2040541c:	cc22                	sw	s0,24(sp)
2040541e:	1000                	addi	s0,sp,32
20405420:	fea42623          	sw	a0,-20(s0)
20405424:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20405428:	fe842783          	lw	a5,-24(s0)
2040542c:	eb99                	bnez	a5,20405442 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
2040542e:	204047b7          	lui	a5,0x20404
20405432:	38078593          	addi	a1,a5,896 # 20404380 <__metal_exception_handler>
20405436:	fe842503          	lw	a0,-24(s0)
2040543a:	aadff0ef          	jal	ra,20404ee6 <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
2040543e:	4781                	li	a5,0
20405440:	a00d                	j	20405462 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20405442:	fe842703          	lw	a4,-24(s0)
20405446:	4785                	li	a5,1
20405448:	00f71c63          	bne	a4,a5,20405460 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
2040544c:	204087b7          	lui	a5,0x20408
20405450:	c0078593          	addi	a1,a5,-1024 # 20407c00 <__metal_vector_table>
20405454:	fe842503          	lw	a0,-24(s0)
20405458:	a8fff0ef          	jal	ra,20404ee6 <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
2040545c:	4781                	li	a5,0
2040545e:	a011                	j	20405462 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20405460:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:609
}
20405462:	853e                	mv	a0,a5
20405464:	40f2                	lw	ra,28(sp)
20405466:	4462                	lw	s0,24(sp)
20405468:	6105                	addi	sp,sp,32
2040546a:	8082                	ret

2040546c <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
2040546c:	1101                	addi	sp,sp,-32
2040546e:	ce22                	sw	s0,28(sp)
20405470:	1000                	addi	s0,sp,32
20405472:	fea42623          	sw	a0,-20(s0)
20405476:	feb42423          	sw	a1,-24(s0)
2040547a:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
2040547e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
}
20405480:	853e                	mv	a0,a5
20405482:	4472                	lw	s0,28(sp)
20405484:	6105                	addi	sp,sp,32
20405486:	8082                	ret

20405488 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20405488:	7139                	addi	sp,sp,-64
2040548a:	de22                	sw	s0,60(sp)
2040548c:	0080                	addi	s0,sp,64
2040548e:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20405492:	4301                	li	t1,0
20405494:	4381                	li	t2,0
20405496:	fe642423          	sw	t1,-24(s0)
2040549a:	fe742623          	sw	t2,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
2040549e:	b8002573          	csrr	a0,mcycleh
204054a2:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
204054a6:	b0002573          	csrr	a0,mcycle
204054aa:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
204054ae:	b8002573          	csrr	a0,mcycleh
204054b2:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
204054b6:	fe442883          	lw	a7,-28(s0)
204054ba:	fdc42503          	lw	a0,-36(s0)
204054be:	fea890e3          	bne	a7,a0,2040549e <__metal_driver_cpu_mcycle_get+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
204054c2:	fe442503          	lw	a0,-28(s0)
204054c6:	85aa                	mv	a1,a0
204054c8:	4601                	li	a2,0
204054ca:	00059813          	slli	a6,a1,0x0
204054ce:	4781                	li	a5,0
204054d0:	fe042603          	lw	a2,-32(s0)
204054d4:	86b2                	mv	a3,a2
204054d6:	4701                	li	a4,0
204054d8:	00d7e633          	or	a2,a5,a3
204054dc:	fec42423          	sw	a2,-24(s0)
204054e0:	00e867b3          	or	a5,a6,a4
204054e4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
204054e8:	fe842783          	lw	a5,-24(s0)
204054ec:	fec42803          	lw	a6,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:640
}
204054f0:	853e                	mv	a0,a5
204054f2:	85c2                	mv	a1,a6
204054f4:	5472                	lw	s0,60(sp)
204054f6:	6121                	addi	sp,sp,64
204054f8:	8082                	ret

204054fa <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
204054fa:	7179                	addi	sp,sp,-48
204054fc:	d606                	sw	ra,44(sp)
204054fe:	d422                	sw	s0,40(sp)
20405500:	d24a                	sw	s2,36(sp)
20405502:	d04e                	sw	s3,32(sp)
20405504:	1800                	addi	s0,sp,48
20405506:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
2040550a:	fdc42783          	lw	a5,-36(s0)
2040550e:	e781                	bnez	a5,20405516 <__metal_driver_cpu_timebase_get+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20405510:	4901                	li	s2,0
20405512:	4981                	li	s3,0
20405514:	a821                	j	2040552c <__metal_driver_cpu_timebase_get+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20405516:	fdc42503          	lw	a0,-36(s0)
2040551a:	a07fe0ef          	jal	ra,20403f20 <__metal_driver_cpu_timebase>
2040551e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20405522:	fec42783          	lw	a5,-20(s0)
20405526:	893e                	mv	s2,a5
20405528:	87fd                	srai	a5,a5,0x1f
2040552a:	89be                	mv	s3,a5
2040552c:	87ca                	mv	a5,s2
2040552e:	884e                	mv	a6,s3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:650
}
20405530:	853e                	mv	a0,a5
20405532:	85c2                	mv	a1,a6
20405534:	50b2                	lw	ra,44(sp)
20405536:	5422                	lw	s0,40(sp)
20405538:	5912                	lw	s2,36(sp)
2040553a:	5982                	lw	s3,32(sp)
2040553c:	6145                	addi	sp,sp,48
2040553e:	8082                	ret

20405540 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20405540:	7179                	addi	sp,sp,-48
20405542:	d606                	sw	ra,44(sp)
20405544:	d422                	sw	s0,40(sp)
20405546:	1800                	addi	s0,sp,48
20405548:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
2040554c:	4781                	li	a5,0
2040554e:	4801                	li	a6,0
20405550:	fef42023          	sw	a5,-32(s0)
20405554:	ff042223          	sw	a6,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405558:	fdc42503          	lw	a0,-36(s0)
2040555c:	9effe0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20405560:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20405564:	fec42783          	lw	a5,-20(s0)
20405568:	c78d                	beqz	a5,20405592 <__metal_driver_cpu_mtime_get+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
2040556a:	fec42783          	lw	a5,-20(s0)
2040556e:	13c7a783          	lw	a5,316(a5)
20405572:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20405576:	fe842783          	lw	a5,-24(s0)
2040557a:	cf81                	beqz	a5,20405592 <__metal_driver_cpu_mtime_get+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
2040557c:	fe842783          	lw	a5,-24(s0)
20405580:	439c                	lw	a5,0(a5)
20405582:	47f8                	lw	a4,76(a5)
20405584:	fe040793          	addi	a5,s0,-32
20405588:	863e                	mv	a2,a5
2040558a:	4585                	li	a1,1
2040558c:	fe842503          	lw	a0,-24(s0)
20405590:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20405592:	fe042783          	lw	a5,-32(s0)
20405596:	fe442803          	lw	a6,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:667
}
2040559a:	853e                	mv	a0,a5
2040559c:	85c2                	mv	a1,a6
2040559e:	50b2                	lw	ra,44(sp)
204055a0:	5422                	lw	s0,40(sp)
204055a2:	6145                	addi	sp,sp,48
204055a4:	8082                	ret

204055a6 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
204055a6:	7179                	addi	sp,sp,-48
204055a8:	d606                	sw	ra,44(sp)
204055aa:	d422                	sw	s0,40(sp)
204055ac:	d226                	sw	s1,36(sp)
204055ae:	1800                	addi	s0,sp,48
204055b0:	fca42e23          	sw	a0,-36(s0)
204055b4:	fcb42823          	sw	a1,-48(s0)
204055b8:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
204055bc:	57fd                	li	a5,-1
204055be:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204055c2:	fdc42503          	lw	a0,-36(s0)
204055c6:	985fe0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
204055ca:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
204055ce:	fe842783          	lw	a5,-24(s0)
204055d2:	cf8d                	beqz	a5,2040560c <__metal_driver_cpu_mtimecmp_set+0x66>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
204055d4:	fe842783          	lw	a5,-24(s0)
204055d8:	13c7a783          	lw	a5,316(a5)
204055dc:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
204055e0:	fe442783          	lw	a5,-28(s0)
204055e4:	c785                	beqz	a5,2040560c <__metal_driver_cpu_mtimecmp_set+0x66>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
204055e6:	fe442783          	lw	a5,-28(s0)
204055ea:	439c                	lw	a5,0(a5)
204055ec:	4ba4                	lw	s1,80(a5)
204055ee:	fdc42503          	lw	a0,-36(s0)
204055f2:	90bfe0ef          	jal	ra,20403efc <__metal_driver_cpu_hartid>
204055f6:	87aa                	mv	a5,a0
204055f8:	fd042603          	lw	a2,-48(s0)
204055fc:	fd442683          	lw	a3,-44(s0)
20405600:	85be                	mv	a1,a5
20405602:	fe442503          	lw	a0,-28(s0)
20405606:	9482                	jalr	s1
20405608:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
2040560c:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
20405610:	853e                	mv	a0,a5
20405612:	50b2                	lw	ra,44(sp)
20405614:	5422                	lw	s0,40(sp)
20405616:	5492                	lw	s1,36(sp)
20405618:	6145                	addi	sp,sp,48
2040561a:	8082                	ret

2040561c <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
2040561c:	1101                	addi	sp,sp,-32
2040561e:	ce22                	sw	s0,28(sp)
20405620:	1000                	addi	s0,sp,32
20405622:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20405626:	81018793          	addi	a5,gp,-2032 # 80000a88 <__metal_dt_clint_2000000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
2040562a:	853e                	mv	a0,a5
2040562c:	4472                	lw	s0,28(sp)
2040562e:	6105                	addi	sp,sp,32
20405630:	8082                	ret

20405632 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20405632:	1101                	addi	sp,sp,-32
20405634:	ce22                	sw	s0,28(sp)
20405636:	1000                	addi	s0,sp,32
20405638:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
2040563c:	479d                	li	a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:703
}
2040563e:	853e                	mv	a0,a5
20405640:	4472                	lw	s0,28(sp)
20405642:	6105                	addi	sp,sp,32
20405644:	8082                	ret

20405646 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20405646:	1101                	addi	sp,sp,-32
20405648:	ce22                	sw	s0,28(sp)
2040564a:	1000                	addi	s0,sp,32
2040564c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20405650:	81018793          	addi	a5,gp,-2032 # 80000a88 <__metal_dt_clint_2000000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20405654:	853e                	mv	a0,a5
20405656:	4472                	lw	s0,28(sp)
20405658:	6105                	addi	sp,sp,32
2040565a:	8082                	ret

2040565c <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
2040565c:	1101                	addi	sp,sp,-32
2040565e:	ce22                	sw	s0,28(sp)
20405660:	1000                	addi	s0,sp,32
20405662:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20405666:	478d                	li	a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:721
}
20405668:	853e                	mv	a0,a5
2040566a:	4472                	lw	s0,28(sp)
2040566c:	6105                	addi	sp,sp,32
2040566e:	8082                	ret

20405670 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20405670:	7179                	addi	sp,sp,-48
20405672:	d606                	sw	ra,44(sp)
20405674:	d422                	sw	s0,40(sp)
20405676:	1800                	addi	s0,sp,48
20405678:	fca42e23          	sw	a0,-36(s0)
2040567c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20405680:	57fd                	li	a5,-1
20405682:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405686:	fdc42503          	lw	a0,-36(s0)
2040568a:	8c1fe0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
2040568e:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20405692:	fe842783          	lw	a5,-24(s0)
20405696:	c79d                	beqz	a5,204056c4 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20405698:	fe842783          	lw	a5,-24(s0)
2040569c:	0dc7a783          	lw	a5,220(a5)
204056a0:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
204056a4:	fe442783          	lw	a5,-28(s0)
204056a8:	cf91                	beqz	a5,204056c4 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
204056aa:	fe442783          	lw	a5,-28(s0)
204056ae:	439c                	lw	a5,0(a5)
204056b0:	47f8                	lw	a4,76(a5)
204056b2:	fd840793          	addi	a5,s0,-40
204056b6:	863e                	mv	a2,a5
204056b8:	458d                	li	a1,3
204056ba:	fe442503          	lw	a0,-28(s0)
204056be:	9702                	jalr	a4
204056c0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
204056c4:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:738
}
204056c8:	853e                	mv	a0,a5
204056ca:	50b2                	lw	ra,44(sp)
204056cc:	5422                	lw	s0,40(sp)
204056ce:	6145                	addi	sp,sp,48
204056d0:	8082                	ret

204056d2 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
204056d2:	7179                	addi	sp,sp,-48
204056d4:	d606                	sw	ra,44(sp)
204056d6:	d422                	sw	s0,40(sp)
204056d8:	1800                	addi	s0,sp,48
204056da:	fca42e23          	sw	a0,-36(s0)
204056de:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
204056e2:	57fd                	li	a5,-1
204056e4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204056e8:	fdc42503          	lw	a0,-36(s0)
204056ec:	85ffe0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
204056f0:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
204056f4:	fe842783          	lw	a5,-24(s0)
204056f8:	c79d                	beqz	a5,20405726 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204056fa:	fe842783          	lw	a5,-24(s0)
204056fe:	0dc7a783          	lw	a5,220(a5)
20405702:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20405706:	fe442783          	lw	a5,-28(s0)
2040570a:	cf91                	beqz	a5,20405726 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
2040570c:	fe442783          	lw	a5,-28(s0)
20405710:	439c                	lw	a5,0(a5)
20405712:	47f8                	lw	a4,76(a5)
20405714:	fd840793          	addi	a5,s0,-40
20405718:	863e                	mv	a2,a5
2040571a:	4589                	li	a1,2
2040571c:	fe442503          	lw	a0,-28(s0)
20405720:	9702                	jalr	a4
20405722:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20405726:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:755
}
2040572a:	853e                	mv	a0,a5
2040572c:	50b2                	lw	ra,44(sp)
2040572e:	5422                	lw	s0,40(sp)
20405730:	6145                	addi	sp,sp,48
20405732:	8082                	ret

20405734 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20405734:	7179                	addi	sp,sp,-48
20405736:	d606                	sw	ra,44(sp)
20405738:	d422                	sw	s0,40(sp)
2040573a:	1800                	addi	s0,sp,48
2040573c:	fca42e23          	sw	a0,-36(s0)
20405740:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20405744:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405748:	fdc42503          	lw	a0,-36(s0)
2040574c:	ffefe0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
20405750:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20405754:	fe842783          	lw	a5,-24(s0)
20405758:	c79d                	beqz	a5,20405786 <__metal_driver_cpu_get_msip+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2040575a:	fe842783          	lw	a5,-24(s0)
2040575e:	0dc7a783          	lw	a5,220(a5)
20405762:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20405766:	fe442783          	lw	a5,-28(s0)
2040576a:	cf91                	beqz	a5,20405786 <__metal_driver_cpu_get_msip+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
2040576c:	fe442783          	lw	a5,-28(s0)
20405770:	439c                	lw	a5,0(a5)
20405772:	47f8                	lw	a4,76(a5)
20405774:	fd840793          	addi	a5,s0,-40
20405778:	863e                	mv	a2,a5
2040577a:	4591                	li	a1,4
2040577c:	fe442503          	lw	a0,-28(s0)
20405780:	9702                	jalr	a4
20405782:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20405786:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772
}
2040578a:	853e                	mv	a0,a5
2040578c:	50b2                	lw	ra,44(sp)
2040578e:	5422                	lw	s0,40(sp)
20405790:	6145                	addi	sp,sp,48
20405792:	8082                	ret

20405794 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20405794:	1101                	addi	sp,sp,-32
20405796:	ce06                	sw	ra,28(sp)
20405798:	cc22                	sw	s0,24(sp)
2040579a:	1000                	addi	s0,sp,32
2040579c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
204057a0:	fec42503          	lw	a0,-20(s0)
204057a4:	fa6fe0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
204057a8:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:777
}
204057aa:	853e                	mv	a0,a5
204057ac:	40f2                	lw	ra,28(sp)
204057ae:	4462                	lw	s0,24(sp)
204057b0:	6105                	addi	sp,sp,32
204057b2:	8082                	ret

204057b4 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
204057b4:	7179                	addi	sp,sp,-48
204057b6:	d606                	sw	ra,44(sp)
204057b8:	d422                	sw	s0,40(sp)
204057ba:	1800                	addi	s0,sp,48
204057bc:	fca42e23          	sw	a0,-36(s0)
204057c0:	fcb42c23          	sw	a1,-40(s0)
204057c4:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204057c8:	fdc42503          	lw	a0,-36(s0)
204057cc:	f7efe0ef          	jal	ra,20403f4a <__metal_driver_cpu_interrupt_controller>
204057d0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
204057d4:	fec42783          	lw	a5,-20(s0)
204057d8:	cb99                	beqz	a5,204057ee <__metal_driver_cpu_exception_register+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
204057da:	fd442603          	lw	a2,-44(s0)
204057de:	fd842583          	lw	a1,-40(s0)
204057e2:	fec42503          	lw	a0,-20(s0)
204057e6:	8b9ff0ef          	jal	ra,2040509e <__metal_exception_register>
204057ea:	87aa                	mv	a5,a0
204057ec:	a011                	j	204057f0 <__metal_driver_cpu_exception_register+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
204057ee:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
}
204057f0:	853e                	mv	a0,a5
204057f2:	50b2                	lw	ra,44(sp)
204057f4:	5422                	lw	s0,40(sp)
204057f6:	6145                	addi	sp,sp,48
204057f8:	8082                	ret

204057fa <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
204057fa:	1101                	addi	sp,sp,-32
204057fc:	ce22                	sw	s0,28(sp)
204057fe:	1000                	addi	s0,sp,32
20405800:	fea42623          	sw	a0,-20(s0)
20405804:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20405808:	fe842783          	lw	a5,-24(s0)
2040580c:	0007d783          	lhu	a5,0(a5)
20405810:	0037f713          	andi	a4,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20405814:	478d                	li	a5,3
20405816:	00f71463          	bne	a4,a5,2040581e <__metal_driver_cpu_get_instruction_length+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
2040581a:	4791                	li	a5,4
2040581c:	a011                	j	20405820 <__metal_driver_cpu_get_instruction_length+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2040581e:	4789                	li	a5,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20405820:	853e                	mv	a0,a5
20405822:	4472                	lw	s0,28(sp)
20405824:	6105                	addi	sp,sp,32
20405826:	8082                	ret

20405828 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20405828:	7179                	addi	sp,sp,-48
2040582a:	d622                	sw	s0,44(sp)
2040582c:	1800                	addi	s0,sp,48
2040582e:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20405832:	341027f3          	csrr	a5,mepc
20405836:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
2040583a:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:827
}
2040583e:	853e                	mv	a0,a5
20405840:	5432                	lw	s0,44(sp)
20405842:	6145                	addi	sp,sp,48
20405844:	8082                	ret

20405846 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20405846:	1101                	addi	sp,sp,-32
20405848:	ce22                	sw	s0,28(sp)
2040584a:	1000                	addi	s0,sp,32
2040584c:	fea42623          	sw	a0,-20(s0)
20405850:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20405854:	fe842783          	lw	a5,-24(s0)
20405858:	34179073          	csrw	mepc,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2040585c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:832
}
2040585e:	853e                	mv	a0,a5
20405860:	4472                	lw	s0,28(sp)
20405862:	6105                	addi	sp,sp,32
20405864:	8082                	ret

20405866 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20405866:	1101                	addi	sp,sp,-32
20405868:	ce06                	sw	ra,28(sp)
2040586a:	cc22                	sw	s0,24(sp)
2040586c:	1000                	addi	s0,sp,32
2040586e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20405872:	fec42503          	lw	a0,-20(s0)
20405876:	efefe0ef          	jal	ra,20403f74 <__metal_driver_cpu_buserror>
2040587a:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:836
}
2040587c:	853e                	mv	a0,a5
2040587e:	40f2                	lw	ra,28(sp)
20405880:	4462                	lw	s0,24(sp)
20405882:	6105                	addi	sp,sp,32
20405884:	8082                	ret

20405886 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:320



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20405886:	1101                	addi	sp,sp,-32
20405888:	ce22                	sw	s0,28(sp)
2040588a:	1000                	addi	s0,sp,32
2040588c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:321
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20405890:	fec42703          	lw	a4,-20(s0)
20405894:	800007b7          	lui	a5,0x80000
20405898:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffece8>
2040589c:	00f71563          	bne	a4,a5,204058a6 <__metal_driver_sifive_plic0_control_base+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:322
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
204058a0:	0c0007b7          	lui	a5,0xc000
204058a4:	a011                	j	204058a8 <__metal_driver_sifive_plic0_control_base+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:325
	}
	else {
		return 0;
204058a6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:327
	}
}
204058a8:	853e                	mv	a0,a5
204058aa:	4472                	lw	s0,28(sp)
204058ac:	6105                	addi	sp,sp,32
204058ae:	8082                	ret

204058b0 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:340
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
204058b0:	1101                	addi	sp,sp,-32
204058b2:	ce22                	sw	s0,28(sp)
204058b4:	1000                	addi	s0,sp,32
204058b6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:341
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204058ba:	fec42703          	lw	a4,-20(s0)
204058be:	800007b7          	lui	a5,0x80000
204058c2:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffece8>
204058c6:	00f71563          	bne	a4,a5,204058d0 <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:342
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
204058ca:	03500793          	li	a5,53
204058ce:	a011                	j	204058d2 <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:345
	}
	else {
		return 0;
204058d0:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:347
	}
}
204058d2:	853e                	mv	a0,a5
204058d4:	4472                	lw	s0,28(sp)
204058d6:	6105                	addi	sp,sp,32
204058d8:	8082                	ret

204058da <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:350

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204058da:	1101                	addi	sp,sp,-32
204058dc:	ce22                	sw	s0,28(sp)
204058de:	1000                	addi	s0,sp,32
204058e0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:351
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204058e4:	fec42703          	lw	a4,-20(s0)
204058e8:	800007b7          	lui	a5,0x80000
204058ec:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffece8>
204058f0:	00f71463          	bne	a4,a5,204058f8 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:352
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204058f4:	479d                	li	a5,7
204058f6:	a011                	j	204058fa <__metal_driver_sifive_plic0_max_priority+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:355
	}
	else {
		return 0;
204058f8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:357
	}
}
204058fa:	853e                	mv	a0,a5
204058fc:	4472                	lw	s0,28(sp)
204058fe:	6105                	addi	sp,sp,32
20405900:	8082                	ret

20405902 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:360

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20405902:	1101                	addi	sp,sp,-32
20405904:	ce22                	sw	s0,28(sp)
20405906:	1000                	addi	s0,sp,32
20405908:	fea42623          	sw	a0,-20(s0)
2040590c:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:361
	if (idx == 0) {
20405910:	fe842783          	lw	a5,-24(s0)
20405914:	e791                	bnez	a5,20405920 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:362
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405916:	800007b7          	lui	a5,0x80000
2040591a:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe918>
2040591e:	a011                	j	20405922 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:365
	}
	else {
		return NULL;
20405920:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:367
	}
}
20405922:	853e                	mv	a0,a5
20405924:	4472                	lw	s0,28(sp)
20405926:	6105                	addi	sp,sp,32
20405928:	8082                	ret

2040592a <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:370

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2040592a:	1101                	addi	sp,sp,-32
2040592c:	ce22                	sw	s0,28(sp)
2040592e:	1000                	addi	s0,sp,32
20405930:	fea42623          	sw	a0,-20(s0)
20405934:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:371
	if (idx == 0) {
20405938:	fe842783          	lw	a5,-24(s0)
2040593c:	e399                	bnez	a5,20405942 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:372
		return 11;
2040593e:	47ad                	li	a5,11
20405940:	a011                	j	20405944 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:375
	}
	else {
		return 0;
20405942:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:377
	}
}
20405944:	853e                	mv	a0,a5
20405946:	4472                	lw	s0,28(sp)
20405948:	6105                	addi	sp,sp,32
2040594a:	8082                	ret

2040594c <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:380

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2040594c:	1101                	addi	sp,sp,-32
2040594e:	ce22                	sw	s0,28(sp)
20405950:	1000                	addi	s0,sp,32
20405952:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:381
	if (hartid == 0) {
20405956:	fec42783          	lw	a5,-20(s0)
2040595a:	e399                	bnez	a5,20405960 <__metal_driver_sifive_plic0_context_ids+0x14>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:382
		return 0;
2040595c:	4781                	li	a5,0
2040595e:	a011                	j	20405962 <__metal_driver_sifive_plic0_context_ids+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:385
	}
	else {
		return -1;
20405960:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:387
	}
}
20405962:	853e                	mv	a0,a5
20405964:	4472                	lw	s0,28(sp)
20405966:	6105                	addi	sp,sp,32
20405968:	8082                	ret

2040596a <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
2040596a:	7179                	addi	sp,sp,-48
2040596c:	d606                	sw	ra,44(sp)
2040596e:	d422                	sw	s0,40(sp)
20405970:	1800                	addi	s0,sp,48
20405972:	fca42e23          	sw	a0,-36(s0)
20405976:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2040597a:	fdc42503          	lw	a0,-36(s0)
2040597e:	3721                	jal	20405886 <__metal_driver_sifive_plic0_control_base>
20405980:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20405984:	fd842783          	lw	a5,-40(s0)
20405988:	00c79713          	slli	a4,a5,0xc
2040598c:	fec42783          	lw	a5,-20(s0)
20405990:	973e                	add	a4,a4,a5
20405992:	002007b7          	lui	a5,0x200
20405996:	0791                	addi	a5,a5,4
20405998:	97ba                	add	a5,a5,a4
2040599a:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
2040599c:	853e                	mv	a0,a5
2040599e:	50b2                	lw	ra,44(sp)
204059a0:	5422                	lw	s0,40(sp)
204059a2:	6145                	addi	sp,sp,48
204059a4:	8082                	ret

204059a6 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
204059a6:	7179                	addi	sp,sp,-48
204059a8:	d606                	sw	ra,44(sp)
204059aa:	d422                	sw	s0,40(sp)
204059ac:	1800                	addi	s0,sp,48
204059ae:	fca42e23          	sw	a0,-36(s0)
204059b2:	fcb42c23          	sw	a1,-40(s0)
204059b6:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204059ba:	fdc42503          	lw	a0,-36(s0)
204059be:	35e1                	jal	20405886 <__metal_driver_sifive_plic0_control_base>
204059c0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
204059c4:	fd842783          	lw	a5,-40(s0)
204059c8:	00c79713          	slli	a4,a5,0xc
204059cc:	fec42783          	lw	a5,-20(s0)
204059d0:	973e                	add	a4,a4,a5
204059d2:	002007b7          	lui	a5,0x200
204059d6:	0791                	addi	a5,a5,4
204059d8:	97ba                	add	a5,a5,a4
204059da:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
204059dc:	fd442783          	lw	a5,-44(s0)
204059e0:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:35
}
204059e2:	0001                	nop
204059e4:	50b2                	lw	ra,44(sp)
204059e6:	5422                	lw	s0,40(sp)
204059e8:	6145                	addi	sp,sp,48
204059ea:	8082                	ret

204059ec <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
204059ec:	7179                	addi	sp,sp,-48
204059ee:	d606                	sw	ra,44(sp)
204059f0:	d422                	sw	s0,40(sp)
204059f2:	1800                	addi	s0,sp,48
204059f4:	fca42e23          	sw	a0,-36(s0)
204059f8:	fcb42c23          	sw	a1,-40(s0)
204059fc:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20405a00:	fdc42503          	lw	a0,-36(s0)
20405a04:	3549                	jal	20405886 <__metal_driver_sifive_plic0_control_base>
20405a06:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20405a0a:	fd842783          	lw	a5,-40(s0)
20405a0e:	00c79713          	slli	a4,a5,0xc
20405a12:	fec42783          	lw	a5,-20(s0)
20405a16:	973e                	add	a4,a4,a5
20405a18:	002007b7          	lui	a5,0x200
20405a1c:	97ba                	add	a5,a5,a4
20405a1e:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20405a20:	fd442783          	lw	a5,-44(s0)
20405a24:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20405a26:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
}
20405a28:	853e                	mv	a0,a5
20405a2a:	50b2                	lw	ra,44(sp)
20405a2c:	5422                	lw	s0,40(sp)
20405a2e:	6145                	addi	sp,sp,48
20405a30:	8082                	ret

20405a32 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20405a32:	7179                	addi	sp,sp,-48
20405a34:	d606                	sw	ra,44(sp)
20405a36:	d422                	sw	s0,40(sp)
20405a38:	1800                	addi	s0,sp,48
20405a3a:	fca42e23          	sw	a0,-36(s0)
20405a3e:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20405a42:	fdc42503          	lw	a0,-36(s0)
20405a46:	3581                	jal	20405886 <__metal_driver_sifive_plic0_control_base>
20405a48:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20405a4c:	fd842783          	lw	a5,-40(s0)
20405a50:	00c79713          	slli	a4,a5,0xc
20405a54:	fec42783          	lw	a5,-20(s0)
20405a58:	973e                	add	a4,a4,a5
20405a5a:	002007b7          	lui	a5,0x200
20405a5e:	97ba                	add	a5,a5,a4
20405a60:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20405a62:	853e                	mv	a0,a5
20405a64:	50b2                	lw	ra,44(sp)
20405a66:	5422                	lw	s0,40(sp)
20405a68:	6145                	addi	sp,sp,48
20405a6a:	8082                	ret

20405a6c <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20405a6c:	7179                	addi	sp,sp,-48
20405a6e:	d606                	sw	ra,44(sp)
20405a70:	d422                	sw	s0,40(sp)
20405a72:	1800                	addi	s0,sp,48
20405a74:	fca42e23          	sw	a0,-36(s0)
20405a78:	fcb42c23          	sw	a1,-40(s0)
20405a7c:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405a80:	fdc42503          	lw	a0,-36(s0)
20405a84:	3509                	jal	20405886 <__metal_driver_sifive_plic0_control_base>
20405a86:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20405a8a:	fdc42503          	lw	a0,-36(s0)
20405a8e:	35b1                	jal	204058da <__metal_driver_sifive_plic0_max_priority>
20405a90:	87aa                	mv	a5,a0
20405a92:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20405a96:	fe842783          	lw	a5,-24(s0)
20405a9a:	c785                	beqz	a5,20405ac2 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20405a9c:	fd442703          	lw	a4,-44(s0)
20405aa0:	fe842783          	lw	a5,-24(s0)
20405aa4:	00f77f63          	bgeu	a4,a5,20405ac2 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20405aa8:	fd842783          	lw	a5,-40(s0)
20405aac:	078a                	slli	a5,a5,0x2
20405aae:	873e                	mv	a4,a5
20405ab0:	fec42783          	lw	a5,-20(s0)
20405ab4:	97ba                	add	a5,a5,a4
20405ab6:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20405ab8:	fd442783          	lw	a5,-44(s0)
20405abc:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20405abe:	4781                	li	a5,0
20405ac0:	a011                	j	20405ac4 <__metal_driver_riscv_plic0_set_priority+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20405ac2:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:72
}
20405ac4:	853e                	mv	a0,a5
20405ac6:	50b2                	lw	ra,44(sp)
20405ac8:	5422                	lw	s0,40(sp)
20405aca:	6145                	addi	sp,sp,48
20405acc:	8082                	ret

20405ace <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20405ace:	7179                	addi	sp,sp,-48
20405ad0:	d606                	sw	ra,44(sp)
20405ad2:	d422                	sw	s0,40(sp)
20405ad4:	1800                	addi	s0,sp,48
20405ad6:	fca42e23          	sw	a0,-36(s0)
20405ada:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20405ade:	fdc42503          	lw	a0,-36(s0)
20405ae2:	3355                	jal	20405886 <__metal_driver_sifive_plic0_control_base>
20405ae4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20405ae8:	fd842783          	lw	a5,-40(s0)
20405aec:	078a                	slli	a5,a5,0x2
20405aee:	873e                	mv	a4,a5
20405af0:	fec42783          	lw	a5,-20(s0)
20405af4:	97ba                	add	a5,a5,a4
20405af6:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20405af8:	853e                	mv	a0,a5
20405afa:	50b2                	lw	ra,44(sp)
20405afc:	5422                	lw	s0,40(sp)
20405afe:	6145                	addi	sp,sp,48
20405b00:	8082                	ret

20405b02 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20405b02:	7179                	addi	sp,sp,-48
20405b04:	d606                	sw	ra,44(sp)
20405b06:	d422                	sw	s0,40(sp)
20405b08:	1800                	addi	s0,sp,48
20405b0a:	fca42e23          	sw	a0,-36(s0)
20405b0e:	fcb42c23          	sw	a1,-40(s0)
20405b12:	fcc42a23          	sw	a2,-44(s0)
20405b16:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405b1a:	fdc42503          	lw	a0,-36(s0)
20405b1e:	33a5                	jal	20405886 <__metal_driver_sifive_plic0_control_base>
20405b20:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20405b24:	fd842783          	lw	a5,-40(s0)
20405b28:	00779713          	slli	a4,a5,0x7
20405b2c:	fec42783          	lw	a5,-20(s0)
20405b30:	97ba                	add	a5,a5,a4
20405b32:	fd442703          	lw	a4,-44(s0)
20405b36:	8715                	srai	a4,a4,0x5
20405b38:	070a                	slli	a4,a4,0x2
20405b3a:	973e                	add	a4,a4,a5
20405b3c:	6789                	lui	a5,0x2
20405b3e:	97ba                	add	a5,a5,a4
20405b40:	439c                	lw	a5,0(a5)
20405b42:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405b46:	fd042783          	lw	a5,-48(s0)
20405b4a:	cf81                	beqz	a5,20405b62 <__metal_plic0_enable+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20405b4c:	fd442783          	lw	a5,-44(s0)
20405b50:	8bfd                	andi	a5,a5,31
20405b52:	4705                	li	a4,1
20405b54:	00f717b3          	sll	a5,a4,a5
20405b58:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405b5a:	fe842783          	lw	a5,-24(s0)
20405b5e:	8fd9                	or	a5,a5,a4
20405b60:	a829                	j	20405b7a <__metal_plic0_enable+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20405b62:	fd442783          	lw	a5,-44(s0)
20405b66:	8bfd                	andi	a5,a5,31
20405b68:	4705                	li	a4,1
20405b6a:	00f717b3          	sll	a5,a4,a5
20405b6e:	fff7c793          	not	a5,a5
20405b72:	873e                	mv	a4,a5
20405b74:	fe842783          	lw	a5,-24(s0)
20405b78:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20405b7a:	fd842703          	lw	a4,-40(s0)
20405b7e:	00771693          	slli	a3,a4,0x7
20405b82:	fec42703          	lw	a4,-20(s0)
20405b86:	9736                	add	a4,a4,a3
20405b88:	fd442683          	lw	a3,-44(s0)
20405b8c:	8695                	srai	a3,a3,0x5
20405b8e:	068a                	slli	a3,a3,0x2
20405b90:	96ba                	add	a3,a3,a4
20405b92:	6709                	lui	a4,0x2
20405b94:	9736                	add	a4,a4,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20405b96:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20405b98:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103
}
20405b9a:	853e                	mv	a0,a5
20405b9c:	50b2                	lw	ra,44(sp)
20405b9e:	5422                	lw	s0,40(sp)
20405ba0:	6145                	addi	sp,sp,48
20405ba2:	8082                	ret

20405ba4 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20405ba4:	1101                	addi	sp,sp,-32
20405ba6:	ce06                	sw	ra,28(sp)
20405ba8:	cc22                	sw	s0,24(sp)
20405baa:	1000                	addi	s0,sp,32
20405bac:	fea42623          	sw	a0,-20(s0)
20405bb0:	feb42423          	sw	a1,-24(s0)
20405bb4:	12c00513          	li	a0,300
20405bb8:	7ef010ef          	jal	ra,20407ba6 <metal_shutdown>

20405bbc <__metal_plic0_handler>:
__metal_plic0_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20405bbc:	7179                	addi	sp,sp,-48
20405bbe:	d606                	sw	ra,44(sp)
20405bc0:	d422                	sw	s0,40(sp)
20405bc2:	1800                	addi	s0,sp,48
20405bc4:	fca42e23          	sw	a0,-36(s0)
20405bc8:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20405bcc:	fd842783          	lw	a5,-40(s0)
20405bd0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20405bd4:	bf0fe0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20405bd8:	87aa                	mv	a5,a0
20405bda:	853e                	mv	a0,a5
20405bdc:	3b85                	jal	2040594c <__metal_driver_sifive_plic0_context_ids>
20405bde:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20405be2:	fe842583          	lw	a1,-24(s0)
20405be6:	fec42503          	lw	a0,-20(s0)
20405bea:	3341                	jal	2040596a <__metal_plic0_claim_interrupt>
20405bec:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20405bf0:	fec42503          	lw	a0,-20(s0)
20405bf4:	cbdff0ef          	jal	ra,204058b0 <__metal_driver_sifive_plic0_num_interrupts>
20405bf8:	87aa                	mv	a5,a0
20405bfa:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20405bfe:	fe442703          	lw	a4,-28(s0)
20405c02:	fe042783          	lw	a5,-32(s0)
20405c06:	04f77263          	bgeu	a4,a5,20405c4a <__metal_plic0_handler+0x8e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20405c0a:	fec42703          	lw	a4,-20(s0)
20405c0e:	fe442783          	lw	a5,-28(s0)
20405c12:	078a                	slli	a5,a5,0x2
20405c14:	97ba                	add	a5,a5,a4
20405c16:	479c                	lw	a5,8(a5)
20405c18:	cb8d                	beqz	a5,20405c4a <__metal_plic0_handler+0x8e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20405c1a:	fec42703          	lw	a4,-20(s0)
20405c1e:	fe442783          	lw	a5,-28(s0)
20405c22:	078a                	slli	a5,a5,0x2
20405c24:	97ba                	add	a5,a5,a4
20405c26:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20405c2a:	fe442603          	lw	a2,-28(s0)
20405c2e:	fec42683          	lw	a3,-20(s0)
20405c32:	fe442703          	lw	a4,-28(s0)
20405c36:	87ba                	mv	a5,a4
20405c38:	0786                	slli	a5,a5,0x1
20405c3a:	97ba                	add	a5,a5,a4
20405c3c:	078e                	slli	a5,a5,0x3
20405c3e:	97b6                	add	a5,a5,a3
20405c40:	0f07a783          	lw	a5,240(a5)
20405c44:	85be                	mv	a1,a5
20405c46:	8532                	mv	a0,a2
20405c48:	9802                	jalr	a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20405c4a:	fe442603          	lw	a2,-28(s0)
20405c4e:	fe842583          	lw	a1,-24(s0)
20405c52:	fec42503          	lw	a0,-20(s0)
20405c56:	3b81                	jal	204059a6 <__metal_plic0_complete_interrupt>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:121
}
20405c58:	0001                	nop
20405c5a:	50b2                	lw	ra,44(sp)
20405c5c:	5422                	lw	s0,40(sp)
20405c5e:	6145                	addi	sp,sp,48
20405c60:	8082                	ret

20405c62 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20405c62:	7139                	addi	sp,sp,-64
20405c64:	de06                	sw	ra,60(sp)
20405c66:	dc22                	sw	s0,56(sp)
20405c68:	0080                	addi	s0,sp,64
20405c6a:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405c6e:	fcc42783          	lw	a5,-52(s0)
20405c72:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20405c76:	fe442783          	lw	a5,-28(s0)
20405c7a:	43dc                	lw	a5,4(a5)
20405c7c:	12079a63          	bnez	a5,20405db0 <__metal_driver_riscv_plic0_init+0x14e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20405c80:	fe042623          	sw	zero,-20(s0)
20405c84:	aa31                	j	20405da0 <__metal_driver_riscv_plic0_init+0x13e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20405c86:	fcc42503          	lw	a0,-52(s0)
20405c8a:	c27ff0ef          	jal	ra,204058b0 <__metal_driver_sifive_plic0_num_interrupts>
20405c8e:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20405c92:	fec42583          	lw	a1,-20(s0)
20405c96:	fcc42503          	lw	a0,-52(s0)
20405c9a:	c69ff0ef          	jal	ra,20405902 <__metal_driver_sifive_plic0_interrupt_parents>
20405c9e:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20405ca2:	fec42583          	lw	a1,-20(s0)
20405ca6:	fcc42503          	lw	a0,-52(s0)
20405caa:	c81ff0ef          	jal	ra,2040592a <__metal_driver_sifive_plic0_interrupt_lines>
20405cae:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20405cb2:	fdc42783          	lw	a5,-36(s0)
20405cb6:	439c                	lw	a5,0(a5)
20405cb8:	439c                	lw	a5,0(a5)
20405cba:	fdc42503          	lw	a0,-36(s0)
20405cbe:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405cc0:	fe042423          	sw	zero,-24(s0)
20405cc4:	a885                	j	20405d34 <__metal_driver_riscv_plic0_init+0xd2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20405cc6:	4681                	li	a3,0
20405cc8:	fe842603          	lw	a2,-24(s0)
20405ccc:	fec42583          	lw	a1,-20(s0)
20405cd0:	fe442503          	lw	a0,-28(s0)
20405cd4:	353d                	jal	20405b02 <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20405cd6:	fe842703          	lw	a4,-24(s0)
20405cda:	fe042783          	lw	a5,-32(s0)
20405cde:	04f75663          	bge	a4,a5,20405d2a <__metal_driver_riscv_plic0_init+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20405ce2:	4601                	li	a2,0
20405ce4:	fe842583          	lw	a1,-24(s0)
20405ce8:	fcc42503          	lw	a0,-52(s0)
20405cec:	3341                	jal	20405a6c <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20405cee:	fe442703          	lw	a4,-28(s0)
20405cf2:	fe842783          	lw	a5,-24(s0)
20405cf6:	078a                	slli	a5,a5,0x2
20405cf8:	97ba                	add	a5,a5,a4
20405cfa:	0007a423          	sw	zero,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20405cfe:	fe442683          	lw	a3,-28(s0)
20405d02:	fe842703          	lw	a4,-24(s0)
20405d06:	87ba                	mv	a5,a4
20405d08:	0786                	slli	a5,a5,0x1
20405d0a:	97ba                	add	a5,a5,a4
20405d0c:	078e                	slli	a5,a5,0x3
20405d0e:	97b6                	add	a5,a5,a3
20405d10:	0e07a623          	sw	zero,236(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20405d14:	fe442683          	lw	a3,-28(s0)
20405d18:	fe842703          	lw	a4,-24(s0)
20405d1c:	87ba                	mv	a5,a4
20405d1e:	0786                	slli	a5,a5,0x1
20405d20:	97ba                	add	a5,a5,a4
20405d22:	078e                	slli	a5,a5,0x3
20405d24:	97b6                	add	a5,a5,a3
20405d26:	0e07a823          	sw	zero,240(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405d2a:	fe842783          	lw	a5,-24(s0)
20405d2e:	0785                	addi	a5,a5,1
20405d30:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20405d34:	fe842703          	lw	a4,-24(s0)
20405d38:	3ff00793          	li	a5,1023
20405d3c:	f8e7d5e3          	bge	a5,a4,20405cc6 <__metal_driver_riscv_plic0_init+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20405d40:	4601                	li	a2,0
20405d42:	fec42583          	lw	a1,-20(s0)
20405d46:	fcc42503          	lw	a0,-52(s0)
20405d4a:	ca3ff0ef          	jal	ra,204059ec <__metal_plic0_set_threshold>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20405d4e:	fdc42783          	lw	a5,-36(s0)
20405d52:	439c                	lw	a5,0(a5)
20405d54:	4fdc                	lw	a5,28(a5)
20405d56:	fe442683          	lw	a3,-28(s0)
20405d5a:	4601                	li	a2,0
20405d5c:	fd842583          	lw	a1,-40(s0)
20405d60:	fdc42503          	lw	a0,-36(s0)
20405d64:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20405d66:	fdc42783          	lw	a5,-36(s0)
20405d6a:	439c                	lw	a5,0(a5)
20405d6c:	4fd8                	lw	a4,28(a5)
20405d6e:	fe442683          	lw	a3,-28(s0)
20405d72:	204067b7          	lui	a5,0x20406
20405d76:	bbc78613          	addi	a2,a5,-1092 # 20405bbc <__metal_plic0_handler>
20405d7a:	fd842583          	lw	a1,-40(s0)
20405d7e:	fdc42503          	lw	a0,-36(s0)
20405d82:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20405d84:	fdc42783          	lw	a5,-36(s0)
20405d88:	439c                	lw	a5,0(a5)
20405d8a:	53dc                	lw	a5,36(a5)
20405d8c:	fd842583          	lw	a1,-40(s0)
20405d90:	fdc42503          	lw	a0,-36(s0)
20405d94:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20405d96:	fec42783          	lw	a5,-20(s0)
20405d9a:	0785                	addi	a5,a5,1
20405d9c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20405da0:	fec42783          	lw	a5,-20(s0)
20405da4:	eef051e3          	blez	a5,20405c86 <__metal_driver_riscv_plic0_init+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20405da8:	fe442783          	lw	a5,-28(s0)
20405dac:	4705                	li	a4,1
20405dae:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20405db0:	0001                	nop
20405db2:	50f2                	lw	ra,60(sp)
20405db4:	5462                	lw	s0,56(sp)
20405db6:	6121                	addi	sp,sp,64
20405db8:	8082                	ret

20405dba <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20405dba:	7179                	addi	sp,sp,-48
20405dbc:	d606                	sw	ra,44(sp)
20405dbe:	d422                	sw	s0,40(sp)
20405dc0:	1800                	addi	s0,sp,48
20405dc2:	fca42e23          	sw	a0,-36(s0)
20405dc6:	fcb42c23          	sw	a1,-40(s0)
20405dca:	fcc42a23          	sw	a2,-44(s0)
20405dce:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405dd2:	fdc42783          	lw	a5,-36(s0)
20405dd6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405dda:	fdc42503          	lw	a0,-36(s0)
20405dde:	ad3ff0ef          	jal	ra,204058b0 <__metal_driver_sifive_plic0_num_interrupts>
20405de2:	872a                	mv	a4,a0
20405de4:	fd842783          	lw	a5,-40(s0)
20405de8:	00e7c463          	blt	a5,a4,20405df0 <__metal_driver_riscv_plic0_register+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20405dec:	57fd                	li	a5,-1
20405dee:	a051                	j	20405e72 <__metal_driver_riscv_plic0_register+0xb8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20405df0:	fd442783          	lw	a5,-44(s0)
20405df4:	cf9d                	beqz	a5,20405e32 <__metal_driver_riscv_plic0_register+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20405df6:	4609                	li	a2,2
20405df8:	fd842583          	lw	a1,-40(s0)
20405dfc:	fdc42503          	lw	a0,-36(s0)
20405e00:	c6dff0ef          	jal	ra,20405a6c <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20405e04:	fec42703          	lw	a4,-20(s0)
20405e08:	fd842783          	lw	a5,-40(s0)
20405e0c:	078a                	slli	a5,a5,0x2
20405e0e:	97ba                	add	a5,a5,a4
20405e10:	fd442703          	lw	a4,-44(s0)
20405e14:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20405e16:	fec42683          	lw	a3,-20(s0)
20405e1a:	fd842703          	lw	a4,-40(s0)
20405e1e:	87ba                	mv	a5,a4
20405e20:	0786                	slli	a5,a5,0x1
20405e22:	97ba                	add	a5,a5,a4
20405e24:	078e                	slli	a5,a5,0x3
20405e26:	97b6                	add	a5,a5,a3
20405e28:	fd042703          	lw	a4,-48(s0)
20405e2c:	0ee7a823          	sw	a4,240(a5)
20405e30:	a081                	j	20405e70 <__metal_driver_riscv_plic0_register+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20405e32:	4605                	li	a2,1
20405e34:	fd842583          	lw	a1,-40(s0)
20405e38:	fdc42503          	lw	a0,-36(s0)
20405e3c:	c31ff0ef          	jal	ra,20405a6c <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20405e40:	fec42703          	lw	a4,-20(s0)
20405e44:	fd842783          	lw	a5,-40(s0)
20405e48:	078a                	slli	a5,a5,0x2
20405e4a:	97ba                	add	a5,a5,a4
20405e4c:	20406737          	lui	a4,0x20406
20405e50:	ba470713          	addi	a4,a4,-1116 # 20405ba4 <__metal_plic0_default_handler>
20405e54:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20405e56:	fec42683          	lw	a3,-20(s0)
20405e5a:	fd842703          	lw	a4,-40(s0)
20405e5e:	87ba                	mv	a5,a4
20405e60:	0786                	slli	a5,a5,0x1
20405e62:	97ba                	add	a5,a5,a4
20405e64:	078e                	slli	a5,a5,0x3
20405e66:	97b6                	add	a5,a5,a3
20405e68:	fd042703          	lw	a4,-48(s0)
20405e6c:	0ee7a623          	sw	a4,236(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20405e70:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:185
}
20405e72:	853e                	mv	a0,a5
20405e74:	50b2                	lw	ra,44(sp)
20405e76:	5422                	lw	s0,40(sp)
20405e78:	6145                	addi	sp,sp,48
20405e7a:	8082                	ret

20405e7c <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20405e7c:	7179                	addi	sp,sp,-48
20405e7e:	d606                	sw	ra,44(sp)
20405e80:	d422                	sw	s0,40(sp)
20405e82:	1800                	addi	s0,sp,48
20405e84:	fca42e23          	sw	a0,-36(s0)
20405e88:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405e8c:	fdc42783          	lw	a5,-36(s0)
20405e90:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405e94:	fdc42503          	lw	a0,-36(s0)
20405e98:	a19ff0ef          	jal	ra,204058b0 <__metal_driver_sifive_plic0_num_interrupts>
20405e9c:	872a                	mv	a4,a0
20405e9e:	fd842783          	lw	a5,-40(s0)
20405ea2:	00e7c463          	blt	a5,a4,20405eaa <__metal_driver_riscv_plic0_enable+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20405ea6:	57fd                	li	a5,-1
20405ea8:	a829                	j	20405ec2 <__metal_driver_riscv_plic0_enable+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20405eaa:	91afe0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20405eae:	87aa                	mv	a5,a0
20405eb0:	4685                	li	a3,1
20405eb2:	fd842603          	lw	a2,-40(s0)
20405eb6:	85be                	mv	a1,a5
20405eb8:	fec42503          	lw	a0,-20(s0)
20405ebc:	c47ff0ef          	jal	ra,20405b02 <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20405ec0:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:197
}
20405ec2:	853e                	mv	a0,a5
20405ec4:	50b2                	lw	ra,44(sp)
20405ec6:	5422                	lw	s0,40(sp)
20405ec8:	6145                	addi	sp,sp,48
20405eca:	8082                	ret

20405ecc <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20405ecc:	7179                	addi	sp,sp,-48
20405ece:	d606                	sw	ra,44(sp)
20405ed0:	d422                	sw	s0,40(sp)
20405ed2:	1800                	addi	s0,sp,48
20405ed4:	fca42e23          	sw	a0,-36(s0)
20405ed8:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405edc:	fdc42783          	lw	a5,-36(s0)
20405ee0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405ee4:	fdc42503          	lw	a0,-36(s0)
20405ee8:	9c9ff0ef          	jal	ra,204058b0 <__metal_driver_sifive_plic0_num_interrupts>
20405eec:	872a                	mv	a4,a0
20405eee:	fd842783          	lw	a5,-40(s0)
20405ef2:	00e7c463          	blt	a5,a4,20405efa <__metal_driver_riscv_plic0_disable+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20405ef6:	57fd                	li	a5,-1
20405ef8:	a829                	j	20405f12 <__metal_driver_riscv_plic0_disable+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20405efa:	8cafe0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20405efe:	87aa                	mv	a5,a0
20405f00:	4681                	li	a3,0
20405f02:	fd842603          	lw	a2,-40(s0)
20405f06:	85be                	mv	a1,a5
20405f08:	fec42503          	lw	a0,-20(s0)
20405f0c:	bf7ff0ef          	jal	ra,20405b02 <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20405f10:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:208
}
20405f12:	853e                	mv	a0,a5
20405f14:	50b2                	lw	ra,44(sp)
20405f16:	5422                	lw	s0,40(sp)
20405f18:	6145                	addi	sp,sp,48
20405f1a:	8082                	ret

20405f1c <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405f1c:	1101                	addi	sp,sp,-32
20405f1e:	ce06                	sw	ra,28(sp)
20405f20:	cc22                	sw	s0,24(sp)
20405f22:	1000                	addi	s0,sp,32
20405f24:	fea42623          	sw	a0,-20(s0)
20405f28:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20405f2c:	898fe0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20405f30:	87aa                	mv	a5,a0
20405f32:	fe842603          	lw	a2,-24(s0)
20405f36:	85be                	mv	a1,a5
20405f38:	fec42503          	lw	a0,-20(s0)
20405f3c:	ab1ff0ef          	jal	ra,204059ec <__metal_plic0_set_threshold>
20405f40:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20405f42:	853e                	mv	a0,a5
20405f44:	40f2                	lw	ra,28(sp)
20405f46:	4462                	lw	s0,24(sp)
20405f48:	6105                	addi	sp,sp,32
20405f4a:	8082                	ret

20405f4c <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20405f4c:	1101                	addi	sp,sp,-32
20405f4e:	ce06                	sw	ra,28(sp)
20405f50:	cc22                	sw	s0,24(sp)
20405f52:	1000                	addi	s0,sp,32
20405f54:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20405f58:	86cfe0ef          	jal	ra,20403fc4 <__metal_myhart_id>
20405f5c:	87aa                	mv	a5,a0
20405f5e:	85be                	mv	a1,a5
20405f60:	fec42503          	lw	a0,-20(s0)
20405f64:	acfff0ef          	jal	ra,20405a32 <__metal_plic0_get_threshold>
20405f68:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:219
}
20405f6a:	853e                	mv	a0,a5
20405f6c:	40f2                	lw	ra,28(sp)
20405f6e:	4462                	lw	s0,24(sp)
20405f70:	6105                	addi	sp,sp,32
20405f72:	8082                	ret

20405f74 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20405f74:	7179                	addi	sp,sp,-48
20405f76:	d606                	sw	ra,44(sp)
20405f78:	d422                	sw	s0,40(sp)
20405f7a:	1800                	addi	s0,sp,48
20405f7c:	fca42e23          	sw	a0,-36(s0)
20405f80:	fcb42c23          	sw	a1,-40(s0)
20405f84:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20405f88:	fe042223          	sw	zero,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405f8c:	fdc42783          	lw	a5,-36(s0)
20405f90:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405f94:	fdc42503          	lw	a0,-36(s0)
20405f98:	919ff0ef          	jal	ra,204058b0 <__metal_driver_sifive_plic0_num_interrupts>
20405f9c:	872a                	mv	a4,a0
20405f9e:	fd442783          	lw	a5,-44(s0)
20405fa2:	00e7c863          	blt	a5,a4,20405fb2 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20405fa6:	57fd                	li	a5,-1
20405fa8:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405fac:	fe442783          	lw	a5,-28(s0)
20405fb0:	a899                	j	20406006 <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20405fb2:	fe042623          	sw	zero,-20(s0)
20405fb6:	a099                	j	20405ffc <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20405fb8:	fec42783          	lw	a5,-20(s0)
20405fbc:	c795                	beqz	a5,20405fe8 <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20405fbe:	4685                	li	a3,1
20405fc0:	fd442603          	lw	a2,-44(s0)
20405fc4:	fec42583          	lw	a1,-20(s0)
20405fc8:	fe842503          	lw	a0,-24(s0)
20405fcc:	b37ff0ef          	jal	ra,20405b02 <__metal_plic0_enable>
20405fd0:	87aa                	mv	a5,a0
20405fd2:	0017f713          	andi	a4,a5,1
20405fd6:	fec42783          	lw	a5,-20(s0)
20405fda:	00f71733          	sll	a4,a4,a5
20405fde:	fe442783          	lw	a5,-28(s0)
20405fe2:	8fd9                	or	a5,a5,a4
20405fe4:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405fe8:	fec42783          	lw	a5,-20(s0)
20405fec:	0785                	addi	a5,a5,1
20405fee:	fef42623          	sw	a5,-20(s0)
20405ff2:	fd842783          	lw	a5,-40(s0)
20405ff6:	8385                	srli	a5,a5,0x1
20405ff8:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20405ffc:	fd842783          	lw	a5,-40(s0)
20406000:	ffc5                	bnez	a5,20405fb8 <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20406002:	fe442783          	lw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20406006:	853e                	mv	a0,a5
20406008:	50b2                	lw	ra,44(sp)
2040600a:	5422                	lw	s0,40(sp)
2040600c:	6145                	addi	sp,sp,48
2040600e:	8082                	ret

20406010 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20406010:	7179                	addi	sp,sp,-48
20406012:	d606                	sw	ra,44(sp)
20406014:	d422                	sw	s0,40(sp)
20406016:	1800                	addi	s0,sp,48
20406018:	fca42e23          	sw	a0,-36(s0)
2040601c:	fcb42c23          	sw	a1,-40(s0)
20406020:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20406024:	fe042223          	sw	zero,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20406028:	fdc42783          	lw	a5,-36(s0)
2040602c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20406030:	fdc42503          	lw	a0,-36(s0)
20406034:	87dff0ef          	jal	ra,204058b0 <__metal_driver_sifive_plic0_num_interrupts>
20406038:	872a                	mv	a4,a0
2040603a:	fd442783          	lw	a5,-44(s0)
2040603e:	00e7c863          	blt	a5,a4,2040604e <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20406042:	57fd                	li	a5,-1
20406044:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20406048:	fe442783          	lw	a5,-28(s0)
2040604c:	a899                	j	204060a2 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
2040604e:	fe042623          	sw	zero,-20(s0)
20406052:	a099                	j	20406098 <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20406054:	fec42783          	lw	a5,-20(s0)
20406058:	c795                	beqz	a5,20406084 <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
2040605a:	4681                	li	a3,0
2040605c:	fd442603          	lw	a2,-44(s0)
20406060:	fec42583          	lw	a1,-20(s0)
20406064:	fe842503          	lw	a0,-24(s0)
20406068:	a9bff0ef          	jal	ra,20405b02 <__metal_plic0_enable>
2040606c:	87aa                	mv	a5,a0
2040606e:	0017f713          	andi	a4,a5,1
20406072:	fec42783          	lw	a5,-20(s0)
20406076:	00f71733          	sll	a4,a4,a5
2040607a:	fe442783          	lw	a5,-28(s0)
2040607e:	8fd9                	or	a5,a5,a4
20406080:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20406084:	fec42783          	lw	a5,-20(s0)
20406088:	0785                	addi	a5,a5,1
2040608a:	fef42623          	sw	a5,-20(s0)
2040608e:	fd842783          	lw	a5,-40(s0)
20406092:	8385                	srli	a5,a5,0x1
20406094:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20406098:	fd842783          	lw	a5,-40(s0)
2040609c:	ffc5                	bnez	a5,20406054 <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
2040609e:	fe442783          	lw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
204060a2:	853e                	mv	a0,a5
204060a4:	50b2                	lw	ra,44(sp)
204060a6:	5422                	lw	s0,40(sp)
204060a8:	6145                	addi	sp,sp,48
204060aa:	8082                	ret

204060ac <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
204060ac:	7179                	addi	sp,sp,-48
204060ae:	d606                	sw	ra,44(sp)
204060b0:	d422                	sw	s0,40(sp)
204060b2:	1800                	addi	s0,sp,48
204060b4:	fca42e23          	sw	a0,-36(s0)
204060b8:	fcb42c23          	sw	a1,-40(s0)
204060bc:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
204060c0:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
204060c4:	fe042623          	sw	zero,-20(s0)
204060c8:	a091                	j	2040610c <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
204060ca:	fec42783          	lw	a5,-20(s0)
204060ce:	c78d                	beqz	a5,204060f8 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
204060d0:	fd442603          	lw	a2,-44(s0)
204060d4:	fec42583          	lw	a1,-20(s0)
204060d8:	fdc42503          	lw	a0,-36(s0)
204060dc:	911ff0ef          	jal	ra,204059ec <__metal_plic0_set_threshold>
204060e0:	87aa                	mv	a5,a0
204060e2:	0017f713          	andi	a4,a5,1
204060e6:	fec42783          	lw	a5,-20(s0)
204060ea:	00f71733          	sll	a4,a4,a5
204060ee:	fe842783          	lw	a5,-24(s0)
204060f2:	8fd9                	or	a5,a5,a4
204060f4:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204060f8:	fec42783          	lw	a5,-20(s0)
204060fc:	0785                	addi	a5,a5,1
204060fe:	fef42623          	sw	a5,-20(s0)
20406102:	fd842783          	lw	a5,-40(s0)
20406106:	8385                	srli	a5,a5,0x1
20406108:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
2040610c:	fd842783          	lw	a5,-40(s0)
20406110:	ffcd                	bnez	a5,204060ca <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20406112:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:281
}
20406116:	853e                	mv	a0,a5
20406118:	50b2                	lw	ra,44(sp)
2040611a:	5422                	lw	s0,40(sp)
2040611c:	6145                	addi	sp,sp,48
2040611e:	8082                	ret

20406120 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20406120:	1101                	addi	sp,sp,-32
20406122:	ce06                	sw	ra,28(sp)
20406124:	cc22                	sw	s0,24(sp)
20406126:	1000                	addi	s0,sp,32
20406128:	fea42623          	sw	a0,-20(s0)
2040612c:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20406130:	fe842583          	lw	a1,-24(s0)
20406134:	fec42503          	lw	a0,-20(s0)
20406138:	8fbff0ef          	jal	ra,20405a32 <__metal_plic0_get_threshold>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
2040613c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:287
}
2040613e:	853e                	mv	a0,a5
20406140:	40f2                	lw	ra,28(sp)
20406142:	4462                	lw	s0,24(sp)
20406144:	6105                	addi	sp,sp,32
20406146:	8082                	ret

20406148 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1101



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20406148:	1101                	addi	sp,sp,-32
2040614a:	ce22                	sw	s0,28(sp)
2040614c:	1000                	addi	s0,sp,32
2040614e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1102
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20406152:	800007b7          	lui	a5,0x80000
20406156:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8fc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1103
}
2040615a:	853e                	mv	a0,a5
2040615c:	4472                	lw	s0,28(sp)
2040615e:	6105                	addi	sp,sp,32
20406160:	8082                	ret

20406162 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1106

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20406162:	1101                	addi	sp,sp,-32
20406164:	ce22                	sw	s0,28(sp)
20406166:	1000                	addi	s0,sp,32
20406168:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1107
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2040616c:	82418793          	addi	a5,gp,-2012 # 80000a9c <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1108
}
20406170:	853e                	mv	a0,a5
20406172:	4472                	lw	s0,28(sp)
20406174:	6105                	addi	sp,sp,32
20406176:	8082                	ret

20406178 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1116
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20406178:	1101                	addi	sp,sp,-32
2040617a:	ce22                	sw	s0,28(sp)
2040617c:	1000                	addi	s0,sp,32
2040617e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1117
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20406182:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1118
}
20406184:	853e                	mv	a0,a5
20406186:	4472                	lw	s0,28(sp)
20406188:	6105                	addi	sp,sp,32
2040618a:	8082                	ret

2040618c <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
2040618c:	1141                	addi	sp,sp,-16
2040618e:	c622                	sw	s0,12(sp)
20406190:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20406192:	83818793          	addi	a5,gp,-1992 # 80000ab0 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
20406196:	853e                	mv	a0,a5
20406198:	4432                	lw	s0,12(sp)
2040619a:	0141                	addi	sp,sp,16
2040619c:	8082                	ret

2040619e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
2040619e:	7139                	addi	sp,sp,-64
204061a0:	de06                	sw	ra,60(sp)
204061a2:	dc22                	sw	s0,56(sp)
204061a4:	0080                	addi	s0,sp,64
204061a6:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
204061aa:	fcc42503          	lw	a0,-52(s0)
204061ae:	3f69                	jal	20406148 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
204061b0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
204061b4:	fcc42503          	lw	a0,-52(s0)
204061b8:	37c1                	jal	20406178 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
204061ba:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
204061be:	fcc42503          	lw	a0,-52(s0)
204061c2:	3745                	jal	20406162 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
204061c4:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
204061c8:	37d1                	jal	2040618c <__metal_driver_sifive_fe310_g000_prci_vtable>
204061ca:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
204061ce:	fe042783          	lw	a5,-32(s0)
204061d2:	439c                	lw	a5,0(a5)
204061d4:	fe842583          	lw	a1,-24(s0)
204061d8:	fe442503          	lw	a0,-28(s0)
204061dc:	9782                	jalr	a5
204061de:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
204061e2:	fdc42703          	lw	a4,-36(s0)
204061e6:	400007b7          	lui	a5,0x40000
204061ea:	8ff9                	and	a5,a5,a4
204061ec:	e399                	bnez	a5,204061f2 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
204061ee:	57fd                	li	a5,-1
204061f0:	a025                	j	20406218 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
204061f2:	fdc42783          	lw	a5,-36(s0)
204061f6:	0007c463          	bltz	a5,204061fe <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
204061fa:	57fd                	li	a5,-1
204061fc:	a831                	j	20406218 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
204061fe:	fec42503          	lw	a0,-20(s0)
20406202:	065010ef          	jal	ra,20407a66 <metal_clock_get_rate_hz>
20406206:	87aa                	mv	a5,a0
20406208:	873e                	mv	a4,a5
2040620a:	fdc42783          	lw	a5,-36(s0)
2040620e:	03f7f793          	andi	a5,a5,63
20406212:	0785                	addi	a5,a5,1
20406214:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20406218:	853e                	mv	a0,a5
2040621a:	50f2                	lw	ra,60(sp)
2040621c:	5462                	lw	s0,56(sp)
2040621e:	6121                	addi	sp,sp,64
20406220:	8082                	ret

20406222 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20406222:	1101                	addi	sp,sp,-32
20406224:	ce06                	sw	ra,28(sp)
20406226:	cc22                	sw	s0,24(sp)
20406228:	1000                	addi	s0,sp,32
2040622a:	fea42623          	sw	a0,-20(s0)
2040622e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20406232:	fec42503          	lw	a0,-20(s0)
20406236:	37a5                	jal	2040619e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20406238:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
2040623a:	853e                	mv	a0,a5
2040623c:	40f2                	lw	ra,28(sp)
2040623e:	4462                	lw	s0,24(sp)
20406240:	6105                	addi	sp,sp,32
20406242:	8082                	ret

20406244 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1124
{
20406244:	1101                	addi	sp,sp,-32
20406246:	ce22                	sw	s0,28(sp)
20406248:	1000                	addi	s0,sp,32
2040624a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1125
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
2040624e:	800007b7          	lui	a5,0x80000
20406252:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8f0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1126
}
20406256:	853e                	mv	a0,a5
20406258:	4472                	lw	s0,28(sp)
2040625a:	6105                	addi	sp,sp,32
2040625c:	8082                	ret

2040625e <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1129
{
2040625e:	1101                	addi	sp,sp,-32
20406260:	ce22                	sw	s0,28(sp)
20406262:	1000                	addi	s0,sp,32
20406264:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1130
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20406268:	82418793          	addi	a5,gp,-2012 # 80000a9c <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1131
}
2040626c:	853e                	mv	a0,a5
2040626e:	4472                	lw	s0,28(sp)
20406270:	6105                	addi	sp,sp,32
20406272:	8082                	ret

20406274 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1134
{
20406274:	1101                	addi	sp,sp,-32
20406276:	ce22                	sw	s0,28(sp)
20406278:	1000                	addi	s0,sp,32
2040627a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1135
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
2040627e:	4791                	li	a5,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1136
}
20406280:	853e                	mv	a0,a5
20406282:	4472                	lw	s0,28(sp)
20406284:	6105                	addi	sp,sp,32
20406286:	8082                	ret

20406288 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
20406288:	1141                	addi	sp,sp,-16
2040628a:	c622                	sw	s0,12(sp)
2040628c:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2040628e:	83818793          	addi	a5,gp,-1992 # 80000ab0 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
20406292:	853e                	mv	a0,a5
20406294:	4432                	lw	s0,12(sp)
20406296:	0141                	addi	sp,sp,16
20406298:	8082                	ret

2040629a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
2040629a:	7139                	addi	sp,sp,-64
2040629c:	de06                	sw	ra,60(sp)
2040629e:	dc22                	sw	s0,56(sp)
204062a0:	0080                	addi	s0,sp,64
204062a2:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
204062a6:	fcc42503          	lw	a0,-52(s0)
204062aa:	3f69                	jal	20406244 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
204062ac:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
204062b0:	fcc42503          	lw	a0,-52(s0)
204062b4:	37c1                	jal	20406274 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
204062b6:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
204062ba:	fcc42503          	lw	a0,-52(s0)
204062be:	3745                	jal	2040625e <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
204062c0:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
204062c4:	37d1                	jal	20406288 <__metal_driver_sifive_fe310_g000_prci_vtable>
204062c6:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
204062ca:	fe042783          	lw	a5,-32(s0)
204062ce:	439c                	lw	a5,0(a5)
204062d0:	fe842583          	lw	a1,-24(s0)
204062d4:	fe442503          	lw	a0,-28(s0)
204062d8:	9782                	jalr	a5
204062da:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
204062de:	fdc42703          	lw	a4,-36(s0)
204062e2:	400007b7          	lui	a5,0x40000
204062e6:	8ff9                	and	a5,a5,a4
204062e8:	e399                	bnez	a5,204062ee <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
204062ea:	57fd                	li	a5,-1
204062ec:	a821                	j	20406304 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
204062ee:	fdc42783          	lw	a5,-36(s0)
204062f2:	0007c463          	bltz	a5,204062fa <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
204062f6:	57fd                	li	a5,-1
204062f8:	a031                	j	20406304 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
204062fa:	fec42503          	lw	a0,-20(s0)
204062fe:	768010ef          	jal	ra,20407a66 <metal_clock_get_rate_hz>
20406302:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20406304:	853e                	mv	a0,a5
20406306:	50f2                	lw	ra,60(sp)
20406308:	5462                	lw	s0,56(sp)
2040630a:	6121                	addi	sp,sp,64
2040630c:	8082                	ret

2040630e <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2040630e:	1101                	addi	sp,sp,-32
20406310:	ce06                	sw	ra,28(sp)
20406312:	cc22                	sw	s0,24(sp)
20406314:	1000                	addi	s0,sp,32
20406316:	fea42623          	sw	a0,-20(s0)
2040631a:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
2040631e:	fec42503          	lw	a0,-20(s0)
20406322:	3fa5                	jal	2040629a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20406324:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20406326:	853e                	mv	a0,a5
20406328:	40f2                	lw	ra,28(sp)
2040632a:	4462                	lw	s0,24(sp)
2040632c:	6105                	addi	sp,sp,32
2040632e:	8082                	ret

20406330 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1185
{
20406330:	1101                	addi	sp,sp,-32
20406332:	ce22                	sw	s0,28(sp)
20406334:	1000                	addi	s0,sp,32
20406336:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1186
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
2040633a:	800017b7          	lui	a5,0x80001
2040633e:	a5078793          	addi	a5,a5,-1456 # 80000a50 <metal_segment_heap_target_end+0xfffff2e0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1187
}
20406342:	853e                	mv	a0,a5
20406344:	4472                	lw	s0,28(sp)
20406346:	6105                	addi	sp,sp,32
20406348:	8082                	ret

2040634a <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1190
{
2040634a:	1101                	addi	sp,sp,-32
2040634c:	ce22                	sw	s0,28(sp)
2040634e:	1000                	addi	s0,sp,32
20406350:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1191
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20406354:	800017b7          	lui	a5,0x80001
20406358:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff2ec>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1192
}
2040635c:	853e                	mv	a0,a5
2040635e:	4472                	lw	s0,28(sp)
20406360:	6105                	addi	sp,sp,32
20406362:	8082                	ret

20406364 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1195
{
20406364:	1101                	addi	sp,sp,-32
20406366:	ce22                	sw	s0,28(sp)
20406368:	1000                	addi	s0,sp,32
2040636a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1196
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2040636e:	82418793          	addi	a5,gp,-2012 # 80000a9c <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1197
}
20406372:	853e                	mv	a0,a5
20406374:	4472                	lw	s0,28(sp)
20406376:	6105                	addi	sp,sp,32
20406378:	8082                	ret

2040637a <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1200
{
2040637a:	1101                	addi	sp,sp,-32
2040637c:	ce22                	sw	s0,28(sp)
2040637e:	1000                	addi	s0,sp,32
20406380:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1201
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20406384:	47b1                	li	a5,12
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1202
}
20406386:	853e                	mv	a0,a5
20406388:	4472                	lw	s0,28(sp)
2040638a:	6105                	addi	sp,sp,32
2040638c:	8082                	ret

2040638e <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1205
{
2040638e:	1141                	addi	sp,sp,-16
20406390:	c622                	sw	s0,12(sp)
20406392:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1206
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20406394:	82418793          	addi	a5,gp,-2012 # 80000a9c <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1207
}
20406398:	853e                	mv	a0,a5
2040639a:	4432                	lw	s0,12(sp)
2040639c:	0141                	addi	sp,sp,16
2040639e:	8082                	ret

204063a0 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1210
{
204063a0:	1141                	addi	sp,sp,-16
204063a2:	c622                	sw	s0,12(sp)
204063a4:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1211
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
204063a6:	47a1                	li	a5,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1212
}
204063a8:	853e                	mv	a0,a5
204063aa:	4432                	lw	s0,12(sp)
204063ac:	0141                	addi	sp,sp,16
204063ae:	8082                	ret

204063b0 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1215
{
204063b0:	1141                	addi	sp,sp,-16
204063b2:	c622                	sw	s0,12(sp)
204063b4:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1216
		return 16000000;
204063b6:	00f427b7          	lui	a5,0xf42
204063ba:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1217
}
204063be:	853e                	mv	a0,a5
204063c0:	4432                	lw	s0,12(sp)
204063c2:	0141                	addi	sp,sp,16
204063c4:	8082                	ret

204063c6 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1223
{
204063c6:	1141                	addi	sp,sp,-16
204063c8:	c622                	sw	s0,12(sp)
204063ca:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1224
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
204063cc:	100087b7          	lui	a5,0x10008
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1225
}
204063d0:	853e                	mv	a0,a5
204063d2:	4432                	lw	s0,12(sp)
204063d4:	0141                	addi	sp,sp,16
204063d6:	8082                	ret

204063d8 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
204063d8:	1141                	addi	sp,sp,-16
204063da:	c622                	sw	s0,12(sp)
204063dc:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
204063de:	83818793          	addi	a5,gp,-1992 # 80000ab0 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
204063e2:	853e                	mv	a0,a5
204063e4:	4432                	lw	s0,12(sp)
204063e6:	0141                	addi	sp,sp,16
204063e8:	8082                	ret

204063ea <get_pll_config_freq>:
get_pll_config_freq():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
204063ea:	1101                	addi	sp,sp,-32
204063ec:	ce22                	sw	s0,28(sp)
204063ee:	1000                	addi	s0,sp,32
204063f0:	fea42623          	sw	a0,-20(s0)
204063f4:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
204063f8:	fe842783          	lw	a5,-24(s0)
204063fc:	479c                	lw	a5,8(a5)
204063fe:	fec42703          	lw	a4,-20(s0)
20406402:	00f76963          	bltu	a4,a5,20406414 <get_pll_config_freq+0x2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20406406:	fe842783          	lw	a5,-24(s0)
2040640a:	47dc                	lw	a5,12(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
2040640c:	fec42703          	lw	a4,-20(s0)
20406410:	00e7f463          	bgeu	a5,a4,20406418 <get_pll_config_freq+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20406414:	57fd                	li	a5,-1
20406416:	a829                	j	20406430 <get_pll_config_freq+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20406418:	fe842783          	lw	a5,-24(s0)
2040641c:	4398                	lw	a4,0(a5)
2040641e:	fec42783          	lw	a5,-20(s0)
20406422:	02f70733          	mul	a4,a4,a5
20406426:	fe842783          	lw	a5,-24(s0)
2040642a:	43dc                	lw	a5,4(a5)
2040642c:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20406430:	853e                	mv	a0,a5
20406432:	4472                	lw	s0,28(sp)
20406434:	6105                	addi	sp,sp,32
20406436:	8082                	ret

20406438 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20406438:	7139                	addi	sp,sp,-64
2040643a:	de06                	sw	ra,60(sp)
2040643c:	dc22                	sw	s0,56(sp)
2040643e:	0080                	addi	s0,sp,64
20406440:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20406444:	fcc42783          	lw	a5,-52(s0)
20406448:	853e                	mv	a0,a5
2040644a:	3701                	jal	2040634a <__metal_driver_sifive_fe310_g000_pll_pllref>
2040644c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20406450:	3785                	jal	204063b0 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20406452:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20406456:	37a9                	jal	204063a0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20406458:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2040645c:	37ad                	jal	204063c6 <__metal_driver_sifive_fe310_g000_prci_base>
2040645e:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20406462:	fe042703          	lw	a4,-32(s0)
20406466:	fe442783          	lw	a5,-28(s0)
2040646a:	97ba                	add	a5,a5,a4
2040646c:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20406470:	fcc42783          	lw	a5,-52(s0)
20406474:	43dc                	lw	a5,4(a5)
20406476:	853e                	mv	a0,a5
20406478:	55a010ef          	jal	ra,204079d2 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
2040647c:	fdc42783          	lw	a5,-36(s0)
20406480:	4398                	lw	a4,0(a5)
20406482:	67c1                	lui	a5,0x10
20406484:	8ff9                	and	a5,a5,a4
20406486:	cb91                	beqz	a5,2040649a <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20406488:	fdc42783          	lw	a5,-36(s0)
2040648c:	4398                	lw	a4,0(a5)
2040648e:	77c1                	lui	a5,0xffff0
20406490:	17fd                	addi	a5,a5,-1
20406492:	8f7d                	and	a4,a4,a5
20406494:	fdc42783          	lw	a5,-36(s0)
20406498:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
2040649a:	fec42783          	lw	a5,-20(s0)
2040649e:	cb91                	beqz	a5,204064b2 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
204064a0:	fdc42783          	lw	a5,-36(s0)
204064a4:	4398                	lw	a4,0(a5)
204064a6:	000207b7          	lui	a5,0x20
204064aa:	8f5d                	or	a4,a4,a5
204064ac:	fdc42783          	lw	a5,-36(s0)
204064b0:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
204064b2:	fcc42783          	lw	a5,-52(s0)
204064b6:	439c                	lw	a5,0(a5)
204064b8:	43d8                	lw	a4,4(a5)
204064ba:	fcc42783          	lw	a5,-52(s0)
204064be:	fe842583          	lw	a1,-24(s0)
204064c2:	853e                	mv	a0,a5
204064c4:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
204064c6:	fcc42783          	lw	a5,-52(s0)
204064ca:	479c                	lw	a5,8(a5)
204064cc:	853e                	mv	a0,a5
204064ce:	504010ef          	jal	ra,204079d2 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
204064d2:	0001                	nop
204064d4:	50f2                	lw	ra,60(sp)
204064d6:	5462                	lw	s0,56(sp)
204064d8:	6121                	addi	sp,sp,64
204064da:	8082                	ret

204064dc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
204064dc:	711d                	addi	sp,sp,-96
204064de:	ce86                	sw	ra,92(sp)
204064e0:	cca2                	sw	s0,88(sp)
204064e2:	1080                	addi	s0,sp,96
204064e4:	faa42623          	sw	a0,-84(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204064e8:	fac42503          	lw	a0,-84(s0)
204064ec:	3db9                	jal	2040634a <__metal_driver_sifive_fe310_g000_pll_pllref>
204064ee:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204064f2:	fac42503          	lw	a0,-84(s0)
204064f6:	3d2d                	jal	20406330 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204064f8:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204064fc:	fac42503          	lw	a0,-84(s0)
20406500:	3545                	jal	204063a0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20406502:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20406506:	fac42503          	lw	a0,-84(s0)
2040650a:	3551                	jal	2040638e <__metal_driver_sifive_fe310_g000_pll_config_base>
2040650c:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20406510:	fac42503          	lw	a0,-84(s0)
20406514:	359d                	jal	2040637a <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20406516:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
2040651a:	fac42503          	lw	a0,-84(s0)
2040651e:	3599                	jal	20406364 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20406520:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20406524:	3d55                	jal	204063d8 <__metal_driver_sifive_fe310_g000_prci_vtable>
20406526:	fca42a23          	sw	a0,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
2040652a:	fd442783          	lw	a5,-44(s0)
2040652e:	439c                	lw	a5,0(a5)
20406530:	fe442583          	lw	a1,-28(s0)
20406534:	fe042503          	lw	a0,-32(s0)
20406538:	9782                	jalr	a5
2040653a:	fca42823          	sw	a0,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
2040653e:	fd442783          	lw	a5,-44(s0)
20406542:	439c                	lw	a5,0(a5)
20406544:	fdc42583          	lw	a1,-36(s0)
20406548:	fd842503          	lw	a0,-40(s0)
2040654c:	9782                	jalr	a5
2040654e:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20406552:	fd042703          	lw	a4,-48(s0)
20406556:	67c1                	lui	a5,0x10
20406558:	8f7d                	and	a4,a4,a5
2040655a:	67c1                	lui	a5,0x10
2040655c:	00f77863          	bgeu	a4,a5,2040656c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20406560:	fe842503          	lw	a0,-24(s0)
20406564:	502010ef          	jal	ra,20407a66 <metal_clock_get_rate_hz>
20406568:	87aa                	mv	a5,a0
2040656a:	a8e1                	j	20406642 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
2040656c:	fd042703          	lw	a4,-48(s0)
20406570:	000207b7          	lui	a5,0x20
20406574:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20406576:	000207b7          	lui	a5,0x20
2040657a:	00f76563          	bltu	a4,a5,20406584 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
2040657e:	fec42783          	lw	a5,-20(s0)
20406582:	a019                	j	20406588 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20406584:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20406588:	853e                	mv	a0,a5
2040658a:	4dc010ef          	jal	ra,20407a66 <metal_clock_get_rate_hz>
2040658e:	fca42423          	sw	a0,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20406592:	fd042703          	lw	a4,-48(s0)
20406596:	000407b7          	lui	a5,0x40
2040659a:	8f7d                	and	a4,a4,a5
2040659c:	000407b7          	lui	a5,0x40
204065a0:	00f76563          	bltu	a4,a5,204065aa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
204065a4:	fc842783          	lw	a5,-56(s0)
204065a8:	a869                	j	20406642 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
204065aa:	fd042783          	lw	a5,-48(s0)
204065ae:	8b9d                	andi	a5,a5,7
204065b0:	0785                	addi	a5,a5,1
204065b2:	fcf42223          	sw	a5,-60(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
204065b6:	fd042783          	lw	a5,-48(s0)
204065ba:	3f07f793          	andi	a5,a5,1008
204065be:	8391                	srli	a5,a5,0x4
204065c0:	0785                	addi	a5,a5,1
204065c2:	0786                	slli	a5,a5,0x1
204065c4:	fcf42023          	sw	a5,-64(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
204065c8:	fd042703          	lw	a4,-48(s0)
204065cc:	6785                	lui	a5,0x1
204065ce:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204065d2:	8f7d                	and	a4,a4,a5
204065d4:	3ff00793          	li	a5,1023
204065d8:	00e7e463          	bltu	a5,a4,204065e0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
204065dc:	57fd                	li	a5,-1
204065de:	a095                	j	20406642 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
204065e0:	fd042703          	lw	a4,-48(s0)
204065e4:	6785                	lui	a5,0x1
204065e6:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204065ea:	8ff9                	and	a5,a5,a4
204065ec:	83a9                	srli	a5,a5,0xa
204065ee:	4705                	li	a4,1
204065f0:	00f717b3          	sll	a5,a4,a5
204065f4:	faf42e23          	sw	a5,-68(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
204065f8:	fc842703          	lw	a4,-56(s0)
204065fc:	fc442783          	lw	a5,-60(s0)
20406600:	02f74733          	div	a4,a4,a5
20406604:	fc042783          	lw	a5,-64(s0)
20406608:	02f70733          	mul	a4,a4,a5
2040660c:	fbc42783          	lw	a5,-68(s0)
20406610:	02f747b3          	div	a5,a4,a5
20406614:	faf42c23          	sw	a5,-72(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20406618:	fcc42783          	lw	a5,-52(s0)
2040661c:	1007f713          	andi	a4,a5,256
20406620:	0ff00793          	li	a5,255
20406624:	00e7f563          	bgeu	a5,a4,2040662e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20406628:	fb842783          	lw	a5,-72(s0)
2040662c:	a819                	j	20406642 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
2040662e:	fb842703          	lw	a4,-72(s0)
20406632:	fcc42783          	lw	a5,-52(s0)
20406636:	03f7f793          	andi	a5,a5,63
2040663a:	0785                	addi	a5,a5,1
2040663c:	0786                	slli	a5,a5,0x1
2040663e:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20406642:	853e                	mv	a0,a5
20406644:	40f6                	lw	ra,92(sp)
20406646:	4466                	lw	s0,88(sp)
20406648:	6125                	addi	sp,sp,96
2040664a:	8082                	ret

2040664c <find_closest_config>:
find_closest_config():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2040664c:	7139                	addi	sp,sp,-64
2040664e:	de06                	sw	ra,60(sp)
20406650:	dc22                	sw	s0,56(sp)
20406652:	0080                	addi	s0,sp,64
20406654:	fca42623          	sw	a0,-52(s0)
20406658:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2040665c:	57fd                	li	a5,-1
2040665e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20406662:	800007b7          	lui	a5,0x80000
20406666:	fff7c793          	not	a5,a5
2040666a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2040666e:	04300793          	li	a5,67
20406672:	fef42223          	sw	a5,-28(s0)
20406676:	a0b5                	j	204066e2 <find_closest_config+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20406678:	fcc42683          	lw	a3,-52(s0)
2040667c:	fe442783          	lw	a5,-28(s0)
20406680:	00579713          	slli	a4,a5,0x5
20406684:	204007b7          	lui	a5,0x20400
20406688:	79078793          	addi	a5,a5,1936 # 20400790 <pll_configs>
2040668c:	97ba                	add	a5,a5,a4
2040668e:	85be                	mv	a1,a5
20406690:	8536                	mv	a0,a3
20406692:	d59ff0ef          	jal	ra,204063ea <get_pll_config_freq>
20406696:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
2040669a:	fe042703          	lw	a4,-32(s0)
2040669e:	57fd                	li	a5,-1
204066a0:	02f70c63          	beq	a4,a5,204066d8 <find_closest_config+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
204066a4:	fe042703          	lw	a4,-32(s0)
204066a8:	fc842783          	lw	a5,-56(s0)
204066ac:	8f1d                	sub	a4,a4,a5
204066ae:	41f75793          	srai	a5,a4,0x1f
204066b2:	8f3d                	xor	a4,a4,a5
204066b4:	40f707b3          	sub	a5,a4,a5
204066b8:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
204066bc:	fdc42703          	lw	a4,-36(s0)
204066c0:	fe842783          	lw	a5,-24(s0)
204066c4:	00f75a63          	bge	a4,a5,204066d8 <find_closest_config+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
204066c8:	fe442783          	lw	a5,-28(s0)
204066cc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
204066d0:	fdc42783          	lw	a5,-36(s0)
204066d4:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
204066d8:	fe442783          	lw	a5,-28(s0)
204066dc:	17fd                	addi	a5,a5,-1
204066de:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
204066e2:	fe442783          	lw	a5,-28(s0)
204066e6:	f807d9e3          	bgez	a5,20406678 <find_closest_config+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
204066ea:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
204066ee:	853e                	mv	a0,a5
204066f0:	50f2                	lw	ra,60(sp)
204066f2:	5462                	lw	s0,56(sp)
204066f4:	6121                	addi	sp,sp,64
204066f6:	8082                	ret

204066f8 <configure_pll>:
configure_pll():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
204066f8:	7179                	addi	sp,sp,-48
204066fa:	d606                	sw	ra,44(sp)
204066fc:	d422                	sw	s0,40(sp)
204066fe:	1800                	addi	s0,sp,48
20406700:	fca42e23          	sw	a0,-36(s0)
20406704:	fcb42c23          	sw	a1,-40(s0)
20406708:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
2040670c:	fdc42783          	lw	a5,-36(s0)
20406710:	439c                	lw	a5,0(a5)
20406712:	ff87f713          	andi	a4,a5,-8
20406716:	fdc42783          	lw	a5,-36(s0)
2040671a:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
2040671c:	fdc42783          	lw	a5,-36(s0)
20406720:	4398                	lw	a4,0(a5)
20406722:	fd442783          	lw	a5,-44(s0)
20406726:	4b9c                	lw	a5,16(a5)
20406728:	8b9d                	andi	a5,a5,7
2040672a:	8f5d                	or	a4,a4,a5
2040672c:	fdc42783          	lw	a5,-36(s0)
20406730:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20406732:	fdc42783          	lw	a5,-36(s0)
20406736:	439c                	lw	a5,0(a5)
20406738:	c0f7f713          	andi	a4,a5,-1009
2040673c:	fdc42783          	lw	a5,-36(s0)
20406740:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20406742:	fdc42783          	lw	a5,-36(s0)
20406746:	4398                	lw	a4,0(a5)
20406748:	fd442783          	lw	a5,-44(s0)
2040674c:	4bdc                	lw	a5,20(a5)
2040674e:	0792                	slli	a5,a5,0x4
20406750:	3f07f793          	andi	a5,a5,1008
20406754:	8f5d                	or	a4,a4,a5
20406756:	fdc42783          	lw	a5,-36(s0)
2040675a:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2040675c:	fdc42783          	lw	a5,-36(s0)
20406760:	4398                	lw	a4,0(a5)
20406762:	77fd                	lui	a5,0xfffff
20406764:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc8f>
20406768:	8f7d                	and	a4,a4,a5
2040676a:	fdc42783          	lw	a5,-36(s0)
2040676e:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20406770:	fdc42783          	lw	a5,-36(s0)
20406774:	4398                	lw	a4,0(a5)
20406776:	fd442783          	lw	a5,-44(s0)
2040677a:	4f9c                	lw	a5,24(a5)
2040677c:	00a79693          	slli	a3,a5,0xa
20406780:	6785                	lui	a5,0x1
20406782:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20406786:	8ff5                	and	a5,a5,a3
20406788:	8f5d                	or	a4,a4,a5
2040678a:	fdc42783          	lw	a5,-36(s0)
2040678e:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20406790:	fd442783          	lw	a5,-44(s0)
20406794:	4fdc                	lw	a5,28(a5)
20406796:	0207db63          	bgez	a5,204067cc <configure_pll+0xd4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
2040679a:	fd842783          	lw	a5,-40(s0)
2040679e:	439c                	lw	a5,0(a5)
204067a0:	1007e713          	ori	a4,a5,256
204067a4:	fd842783          	lw	a5,-40(s0)
204067a8:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
204067aa:	fd842783          	lw	a5,-40(s0)
204067ae:	439c                	lw	a5,0(a5)
204067b0:	fc07f713          	andi	a4,a5,-64
204067b4:	fd842783          	lw	a5,-40(s0)
204067b8:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
204067ba:	fd842783          	lw	a5,-40(s0)
204067be:	439c                	lw	a5,0(a5)
204067c0:	0017e713          	ori	a4,a5,1
204067c4:	fd842783          	lw	a5,-40(s0)
204067c8:	c398                	sw	a4,0(a5)
204067ca:	a82d                	j	20406804 <configure_pll+0x10c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
204067cc:	fd842783          	lw	a5,-40(s0)
204067d0:	439c                	lw	a5,0(a5)
204067d2:	eff7f713          	andi	a4,a5,-257
204067d6:	fd842783          	lw	a5,-40(s0)
204067da:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
204067dc:	fd842783          	lw	a5,-40(s0)
204067e0:	439c                	lw	a5,0(a5)
204067e2:	fc07f713          	andi	a4,a5,-64
204067e6:	fd842783          	lw	a5,-40(s0)
204067ea:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
204067ec:	fd842783          	lw	a5,-40(s0)
204067f0:	4398                	lw	a4,0(a5)
204067f2:	fd442783          	lw	a5,-44(s0)
204067f6:	4fdc                	lw	a5,28(a5)
204067f8:	03f7f793          	andi	a5,a5,63
204067fc:	8f5d                	or	a4,a4,a5
204067fe:	fd842783          	lw	a5,-40(s0)
20406802:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20406804:	fdc42783          	lw	a5,-36(s0)
20406808:	4398                	lw	a4,0(a5)
2040680a:	fffc07b7          	lui	a5,0xfffc0
2040680e:	17fd                	addi	a5,a5,-1
20406810:	8f7d                	and	a4,a4,a5
20406812:	fdc42783          	lw	a5,-36(s0)
20406816:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20406818:	fe040793          	addi	a5,s0,-32
2040681c:	863e                	mv	a2,a5
2040681e:	4585                	li	a1,1
20406820:	81018513          	addi	a0,gp,-2032 # 80000a88 <__metal_dt_clint_2000000>
20406824:	d3afd0ef          	jal	ra,20403d5e <__metal_driver_riscv_clint0_command_request>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20406828:	fe042683          	lw	a3,-32(s0)
2040682c:	fe442703          	lw	a4,-28(s0)
20406830:	4591                	li	a1,4
20406832:	4601                	li	a2,0
20406834:	00b687b3          	add	a5,a3,a1
20406838:	853e                	mv	a0,a5
2040683a:	00d53533          	sltu	a0,a0,a3
2040683e:	00c70833          	add	a6,a4,a2
20406842:	01050733          	add	a4,a0,a6
20406846:	883a                	mv	a6,a4
20406848:	fef42423          	sw	a5,-24(s0)
2040684c:	ff042623          	sw	a6,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20406850:	a809                	j	20406862 <configure_pll+0x16a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20406852:	fe040793          	addi	a5,s0,-32
20406856:	863e                	mv	a2,a5
20406858:	4585                	li	a1,1
2040685a:	81018513          	addi	a0,gp,-2032 # 80000a88 <__metal_dt_clint_2000000>
2040685e:	d00fd0ef          	jal	ra,20403d5e <__metal_driver_riscv_clint0_command_request>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20406862:	fe042783          	lw	a5,-32(s0)
20406866:	fe442803          	lw	a6,-28(s0)
2040686a:	fec42703          	lw	a4,-20(s0)
2040686e:	86c2                	mv	a3,a6
20406870:	00d76b63          	bltu	a4,a3,20406886 <configure_pll+0x18e>
20406874:	fec42703          	lw	a4,-20(s0)
20406878:	86c2                	mv	a3,a6
2040687a:	fcd71ce3          	bne	a4,a3,20406852 <configure_pll+0x15a>
2040687e:	fe842703          	lw	a4,-24(s0)
20406882:	fcf778e3          	bgeu	a4,a5,20406852 <configure_pll+0x15a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20406886:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20406888:	fdc42783          	lw	a5,-36(s0)
2040688c:	439c                	lw	a5,0(a5)
2040688e:	fe07dde3          	bgez	a5,20406888 <configure_pll+0x190>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20406892:	0001                	nop
20406894:	50b2                	lw	ra,44(sp)
20406896:	5422                	lw	s0,40(sp)
20406898:	6145                	addi	sp,sp,48
2040689a:	8082                	ret

2040689c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
2040689c:	715d                	addi	sp,sp,-80
2040689e:	c686                	sw	ra,76(sp)
204068a0:	c4a2                	sw	s0,72(sp)
204068a2:	0880                	addi	s0,sp,80
204068a4:	faa42e23          	sw	a0,-68(s0)
204068a8:	fab42c23          	sw	a1,-72(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204068ac:	fbc42503          	lw	a0,-68(s0)
204068b0:	a9bff0ef          	jal	ra,2040634a <__metal_driver_sifive_fe310_g000_pll_pllref>
204068b4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204068b8:	fbc42503          	lw	a0,-68(s0)
204068bc:	a75ff0ef          	jal	ra,20406330 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204068c0:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204068c4:	fbc42503          	lw	a0,-68(s0)
204068c8:	ad9ff0ef          	jal	ra,204063a0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
204068cc:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
204068d0:	fbc42503          	lw	a0,-68(s0)
204068d4:	aa7ff0ef          	jal	ra,2040637a <__metal_driver_sifive_fe310_g000_pll_divider_offset>
204068d8:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
204068dc:	aebff0ef          	jal	ra,204063c6 <__metal_driver_sifive_fe310_g000_prci_base>
204068e0:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
204068e4:	fdc42703          	lw	a4,-36(s0)
204068e8:	fe442783          	lw	a5,-28(s0)
204068ec:	97ba                	add	a5,a5,a4
204068ee:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
204068f2:	fdc42703          	lw	a4,-36(s0)
204068f6:	fe042783          	lw	a5,-32(s0)
204068fa:	97ba                	add	a5,a5,a4
204068fc:	fcf42a23          	sw	a5,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20406900:	fd842783          	lw	a5,-40(s0)
20406904:	4398                	lw	a4,0(a5)
20406906:	67c1                	lui	a5,0x10
20406908:	8ff9                	and	a5,a5,a4
2040690a:	cb91                	beqz	a5,2040691e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2040690c:	fd842783          	lw	a5,-40(s0)
20406910:	4398                	lw	a4,0(a5)
20406912:	77c1                	lui	a5,0xffff0
20406914:	17fd                	addi	a5,a5,-1
20406916:	8f7d                	and	a4,a4,a5
20406918:	fd842783          	lw	a5,-40(s0)
2040691c:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
2040691e:	fd842783          	lw	a5,-40(s0)
20406922:	4398                	lw	a4,0(a5)
20406924:	000207b7          	lui	a5,0x20
20406928:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2040692a:	c781                	beqz	a5,20406932 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2040692c:	fec42783          	lw	a5,-20(s0)
20406930:	a019                	j	20406936 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20406932:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20406936:	853e                	mv	a0,a5
20406938:	12e010ef          	jal	ra,20407a66 <metal_clock_get_rate_hz>
2040693c:	fca42823          	sw	a0,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20406940:	fd042703          	lw	a4,-48(s0)
20406944:	87ba                	mv	a5,a4
20406946:	0786                	slli	a5,a5,0x1
20406948:	97ba                	add	a5,a5,a4
2040694a:	41f7d713          	srai	a4,a5,0x1f
2040694e:	8b0d                	andi	a4,a4,3
20406950:	97ba                	add	a5,a5,a4
20406952:	8789                	srai	a5,a5,0x2
20406954:	873e                	mv	a4,a5
20406956:	fb842783          	lw	a5,-72(s0)
2040695a:	02e7cb63          	blt	a5,a4,20406990 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
2040695e:	fd042703          	lw	a4,-48(s0)
20406962:	87ba                	mv	a5,a4
20406964:	078a                	slli	a5,a5,0x2
20406966:	97ba                	add	a5,a5,a4
20406968:	41f7d713          	srai	a4,a5,0x1f
2040696c:	8b0d                	andi	a4,a4,3
2040696e:	97ba                	add	a5,a5,a4
20406970:	8789                	srai	a5,a5,0x2
20406972:	873e                	mv	a4,a5
20406974:	fb842783          	lw	a5,-72(s0)
20406978:	00f74c63          	blt	a4,a5,20406990 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2040697c:	fd842783          	lw	a5,-40(s0)
20406980:	4398                	lw	a4,0(a5)
20406982:	000407b7          	lui	a5,0x40
20406986:	8f5d                	or	a4,a4,a5
20406988:	fd842783          	lw	a5,-40(s0)
2040698c:	c398                	sw	a4,0(a5)
2040698e:	a881                	j	204069de <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20406990:	fb842583          	lw	a1,-72(s0)
20406994:	fd042503          	lw	a0,-48(s0)
20406998:	cb5ff0ef          	jal	ra,2040664c <find_closest_config>
2040699c:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
204069a0:	fcc42703          	lw	a4,-52(s0)
204069a4:	57fd                	li	a5,-1
204069a6:	02f70363          	beq	a4,a5,204069cc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
204069aa:	fcc42783          	lw	a5,-52(s0)
204069ae:	00579713          	slli	a4,a5,0x5
204069b2:	204007b7          	lui	a5,0x20400
204069b6:	79078793          	addi	a5,a5,1936 # 20400790 <pll_configs>
204069ba:	97ba                	add	a5,a5,a4
204069bc:	863e                	mv	a2,a5
204069be:	fd442583          	lw	a1,-44(s0)
204069c2:	fd842503          	lw	a0,-40(s0)
204069c6:	d33ff0ef          	jal	ra,204066f8 <configure_pll>
204069ca:	a811                	j	204069de <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204069cc:	fd842783          	lw	a5,-40(s0)
204069d0:	4398                	lw	a4,0(a5)
204069d2:	000407b7          	lui	a5,0x40
204069d6:	8f5d                	or	a4,a4,a5
204069d8:	fd842783          	lw	a5,-40(s0)
204069dc:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
204069de:	fd842783          	lw	a5,-40(s0)
204069e2:	4398                	lw	a4,0(a5)
204069e4:	67c1                	lui	a5,0x10
204069e6:	8f5d                	or	a4,a4,a5
204069e8:	fd842783          	lw	a5,-40(s0)
204069ec:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
204069ee:	fbc42503          	lw	a0,-68(s0)
204069f2:	aebff0ef          	jal	ra,204064dc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
204069f6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
204069f8:	853e                	mv	a0,a5
204069fa:	40b6                	lw	ra,76(sp)
204069fc:	4426                	lw	s0,72(sp)
204069fe:	6161                	addi	sp,sp,80
20406a00:	8082                	ret

20406a02 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1223
{
20406a02:	1141                	addi	sp,sp,-16
20406a04:	c622                	sw	s0,12(sp)
20406a06:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1224
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20406a08:	100087b7          	lui	a5,0x10008
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1225
}
20406a0c:	853e                	mv	a0,a5
20406a0e:	4432                	lw	s0,12(sp)
20406a10:	0141                	addi	sp,sp,16
20406a12:	8082                	ret

20406a14 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20406a14:	7179                	addi	sp,sp,-48
20406a16:	d606                	sw	ra,44(sp)
20406a18:	d422                	sw	s0,40(sp)
20406a1a:	1800                	addi	s0,sp,48
20406a1c:	fca42e23          	sw	a0,-36(s0)
20406a20:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406a24:	3ff9                	jal	20406a02 <__metal_driver_sifive_fe310_g000_prci_base>
20406a26:	87aa                	mv	a5,a0
20406a28:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20406a2c:	fd842703          	lw	a4,-40(s0)
20406a30:	fec42783          	lw	a5,-20(s0)
20406a34:	97ba                	add	a5,a5,a4
20406a36:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20406a38:	853e                	mv	a0,a5
20406a3a:	50b2                	lw	ra,44(sp)
20406a3c:	5422                	lw	s0,40(sp)
20406a3e:	6145                	addi	sp,sp,48
20406a40:	8082                	ret

20406a42 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20406a42:	7179                	addi	sp,sp,-48
20406a44:	d606                	sw	ra,44(sp)
20406a46:	d422                	sw	s0,40(sp)
20406a48:	1800                	addi	s0,sp,48
20406a4a:	fca42e23          	sw	a0,-36(s0)
20406a4e:	fcb42c23          	sw	a1,-40(s0)
20406a52:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406a56:	3775                	jal	20406a02 <__metal_driver_sifive_fe310_g000_prci_base>
20406a58:	87aa                	mv	a5,a0
20406a5a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20406a5e:	fd842703          	lw	a4,-40(s0)
20406a62:	fec42783          	lw	a5,-20(s0)
20406a66:	97ba                	add	a5,a5,a4
20406a68:	873e                	mv	a4,a5
20406a6a:	fd442783          	lw	a5,-44(s0)
20406a6e:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20406a70:	853e                	mv	a0,a5
20406a72:	50b2                	lw	ra,44(sp)
20406a74:	5422                	lw	s0,40(sp)
20406a76:	6145                	addi	sp,sp,48
20406a78:	8082                	ret

20406a7a <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:480
{
20406a7a:	1101                	addi	sp,sp,-32
20406a7c:	ce22                	sw	s0,28(sp)
20406a7e:	1000                	addi	s0,sp,32
20406a80:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:481
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20406a84:	fec42703          	lw	a4,-20(s0)
20406a88:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406a8c:	00f71563          	bne	a4,a5,20406a96 <__metal_driver_sifive_gpio0_base+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:482
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20406a90:	100127b7          	lui	a5,0x10012
20406a94:	a011                	j	20406a98 <__metal_driver_sifive_gpio0_base+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:485
		return 0;
20406a96:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:487
}
20406a98:	853e                	mv	a0,a5
20406a9a:	4472                	lw	s0,28(sp)
20406a9c:	6105                	addi	sp,sp,32
20406a9e:	8082                	ret

20406aa0 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:510
{
20406aa0:	1101                	addi	sp,sp,-32
20406aa2:	ce22                	sw	s0,28(sp)
20406aa4:	1000                	addi	s0,sp,32
20406aa6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:511
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20406aaa:	fec42703          	lw	a4,-20(s0)
20406aae:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406ab2:	00f71763          	bne	a4,a5,20406ac0 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:512
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406ab6:	800007b7          	lui	a5,0x80000
20406aba:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffece8>
20406abe:	a011                	j	20406ac2 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:515
		return 0;
20406ac0:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:517
}
20406ac2:	853e                	mv	a0,a5
20406ac4:	4472                	lw	s0,28(sp)
20406ac6:	6105                	addi	sp,sp,32
20406ac8:	8082                	ret

20406aca <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:520
{
20406aca:	1101                	addi	sp,sp,-32
20406acc:	ce22                	sw	s0,28(sp)
20406ace:	1000                	addi	s0,sp,32
20406ad0:	fea42623          	sw	a0,-20(s0)
20406ad4:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:521
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20406ad8:	fec42703          	lw	a4,-20(s0)
20406adc:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406ae0:	00f71763          	bne	a4,a5,20406aee <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:521 (discriminator 1)
20406ae4:	fe842783          	lw	a5,-24(s0)
20406ae8:	e399                	bnez	a5,20406aee <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:522
		return 7;
20406aea:	479d                	li	a5,7
20406aec:	a269                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20406aee:	fec42703          	lw	a4,-20(s0)
20406af2:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406af6:	00f71963          	bne	a4,a5,20406b08 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:524 (discriminator 1)
20406afa:	fe842703          	lw	a4,-24(s0)
20406afe:	4785                	li	a5,1
20406b00:	00f71463          	bne	a4,a5,20406b08 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:525
		return 8;
20406b04:	47a1                	li	a5,8
20406b06:	aa85                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20406b08:	fec42703          	lw	a4,-20(s0)
20406b0c:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406b10:	00f71963          	bne	a4,a5,20406b22 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:527 (discriminator 1)
20406b14:	fe842703          	lw	a4,-24(s0)
20406b18:	4789                	li	a5,2
20406b1a:	00f71463          	bne	a4,a5,20406b22 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:528
		return 9;
20406b1e:	47a5                	li	a5,9
20406b20:	aa99                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20406b22:	fec42703          	lw	a4,-20(s0)
20406b26:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406b2a:	00f71963          	bne	a4,a5,20406b3c <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:530 (discriminator 1)
20406b2e:	fe842703          	lw	a4,-24(s0)
20406b32:	478d                	li	a5,3
20406b34:	00f71463          	bne	a4,a5,20406b3c <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:531
		return 10;
20406b38:	47a9                	li	a5,10
20406b3a:	aa35                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20406b3c:	fec42703          	lw	a4,-20(s0)
20406b40:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406b44:	00f71963          	bne	a4,a5,20406b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:533 (discriminator 1)
20406b48:	fe842703          	lw	a4,-24(s0)
20406b4c:	4791                	li	a5,4
20406b4e:	00f71463          	bne	a4,a5,20406b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:534
		return 11;
20406b52:	47ad                	li	a5,11
20406b54:	a20d                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20406b56:	fec42703          	lw	a4,-20(s0)
20406b5a:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406b5e:	00f71963          	bne	a4,a5,20406b70 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:536 (discriminator 1)
20406b62:	fe842703          	lw	a4,-24(s0)
20406b66:	4795                	li	a5,5
20406b68:	00f71463          	bne	a4,a5,20406b70 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:537
		return 12;
20406b6c:	47b1                	li	a5,12
20406b6e:	a221                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20406b70:	fec42703          	lw	a4,-20(s0)
20406b74:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406b78:	00f71963          	bne	a4,a5,20406b8a <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:539 (discriminator 1)
20406b7c:	fe842703          	lw	a4,-24(s0)
20406b80:	4799                	li	a5,6
20406b82:	00f71463          	bne	a4,a5,20406b8a <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:540
		return 13;
20406b86:	47b5                	li	a5,13
20406b88:	a0fd                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20406b8a:	fec42703          	lw	a4,-20(s0)
20406b8e:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406b92:	00f71963          	bne	a4,a5,20406ba4 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:542 (discriminator 1)
20406b96:	fe842703          	lw	a4,-24(s0)
20406b9a:	479d                	li	a5,7
20406b9c:	00f71463          	bne	a4,a5,20406ba4 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:543
		return 14;
20406ba0:	47b9                	li	a5,14
20406ba2:	a8d1                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20406ba4:	fec42703          	lw	a4,-20(s0)
20406ba8:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406bac:	00f71963          	bne	a4,a5,20406bbe <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:545 (discriminator 1)
20406bb0:	fe842703          	lw	a4,-24(s0)
20406bb4:	47a1                	li	a5,8
20406bb6:	00f71463          	bne	a4,a5,20406bbe <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:546
		return 15;
20406bba:	47bd                	li	a5,15
20406bbc:	a86d                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20406bbe:	fec42703          	lw	a4,-20(s0)
20406bc2:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406bc6:	00f71963          	bne	a4,a5,20406bd8 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:548 (discriminator 1)
20406bca:	fe842703          	lw	a4,-24(s0)
20406bce:	47a5                	li	a5,9
20406bd0:	00f71463          	bne	a4,a5,20406bd8 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:549
		return 16;
20406bd4:	47c1                	li	a5,16
20406bd6:	a045                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20406bd8:	fec42703          	lw	a4,-20(s0)
20406bdc:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406be0:	00f71963          	bne	a4,a5,20406bf2 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:551 (discriminator 1)
20406be4:	fe842703          	lw	a4,-24(s0)
20406be8:	47a9                	li	a5,10
20406bea:	00f71463          	bne	a4,a5,20406bf2 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:552
		return 17;
20406bee:	47c5                	li	a5,17
20406bf0:	a059                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20406bf2:	fec42703          	lw	a4,-20(s0)
20406bf6:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406bfa:	00f71963          	bne	a4,a5,20406c0c <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:554 (discriminator 1)
20406bfe:	fe842703          	lw	a4,-24(s0)
20406c02:	47ad                	li	a5,11
20406c04:	00f71463          	bne	a4,a5,20406c0c <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:555
		return 18;
20406c08:	47c9                	li	a5,18
20406c0a:	a0b5                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20406c0c:	fec42703          	lw	a4,-20(s0)
20406c10:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406c14:	00f71963          	bne	a4,a5,20406c26 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:557 (discriminator 1)
20406c18:	fe842703          	lw	a4,-24(s0)
20406c1c:	47b1                	li	a5,12
20406c1e:	00f71463          	bne	a4,a5,20406c26 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:558
		return 19;
20406c22:	47cd                	li	a5,19
20406c24:	a889                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20406c26:	fec42703          	lw	a4,-20(s0)
20406c2a:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406c2e:	00f71963          	bne	a4,a5,20406c40 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:560 (discriminator 1)
20406c32:	fe842703          	lw	a4,-24(s0)
20406c36:	47b5                	li	a5,13
20406c38:	00f71463          	bne	a4,a5,20406c40 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:561
		return 20;
20406c3c:	47d1                	li	a5,20
20406c3e:	a825                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:563
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20406c40:	fec42703          	lw	a4,-20(s0)
20406c44:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406c48:	00f71963          	bne	a4,a5,20406c5a <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:563 (discriminator 1)
20406c4c:	fe842703          	lw	a4,-24(s0)
20406c50:	47b9                	li	a5,14
20406c52:	00f71463          	bne	a4,a5,20406c5a <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:564
		return 21;
20406c56:	47d5                	li	a5,21
20406c58:	a839                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:566
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20406c5a:	fec42703          	lw	a4,-20(s0)
20406c5e:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
20406c62:	00f71963          	bne	a4,a5,20406c74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:566 (discriminator 1)
20406c66:	fe842703          	lw	a4,-24(s0)
20406c6a:	47bd                	li	a5,15
20406c6c:	00f71463          	bne	a4,a5,20406c74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:567
		return 22;
20406c70:	47d9                	li	a5,22
20406c72:	a011                	j	20406c76 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:570
		return 0;
20406c74:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:572
}
20406c76:	853e                	mv	a0,a5
20406c78:	4472                	lw	s0,28(sp)
20406c7a:	6105                	addi	sp,sp,32
20406c7c:	8082                	ret

20406c7e <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20406c7e:	7179                	addi	sp,sp,-48
20406c80:	d606                	sw	ra,44(sp)
20406c82:	d422                	sw	s0,40(sp)
20406c84:	1800                	addi	s0,sp,48
20406c86:	fca42e23          	sw	a0,-36(s0)
20406c8a:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406c8e:	fdc42503          	lw	a0,-36(s0)
20406c92:	de9ff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406c96:	87aa                	mv	a5,a0
20406c98:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20406c9c:	fec42783          	lw	a5,-20(s0)
20406ca0:	0791                	addi	a5,a5,4
20406ca2:	4398                	lw	a4,0(a5)
20406ca4:	fd842783          	lw	a5,-40(s0)
20406ca8:	fec42683          	lw	a3,-20(s0)
20406cac:	0691                	addi	a3,a3,4
20406cae:	8fd9                	or	a5,a5,a4
20406cb0:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20406cb2:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20406cb4:	853e                	mv	a0,a5
20406cb6:	50b2                	lw	ra,44(sp)
20406cb8:	5422                	lw	s0,40(sp)
20406cba:	6145                	addi	sp,sp,48
20406cbc:	8082                	ret

20406cbe <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20406cbe:	7179                	addi	sp,sp,-48
20406cc0:	d606                	sw	ra,44(sp)
20406cc2:	d422                	sw	s0,40(sp)
20406cc4:	1800                	addi	s0,sp,48
20406cc6:	fca42e23          	sw	a0,-36(s0)
20406cca:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406cce:	fdc42503          	lw	a0,-36(s0)
20406cd2:	da9ff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406cd6:	87aa                	mv	a5,a0
20406cd8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20406cdc:	fec42783          	lw	a5,-20(s0)
20406ce0:	0791                	addi	a5,a5,4
20406ce2:	439c                	lw	a5,0(a5)
20406ce4:	fd842703          	lw	a4,-40(s0)
20406ce8:	fff74713          	not	a4,a4
20406cec:	86ba                	mv	a3,a4
20406cee:	fec42703          	lw	a4,-20(s0)
20406cf2:	0711                	addi	a4,a4,4
20406cf4:	8ff5                	and	a5,a5,a3
20406cf6:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20406cf8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20406cfa:	853e                	mv	a0,a5
20406cfc:	50b2                	lw	ra,44(sp)
20406cfe:	5422                	lw	s0,40(sp)
20406d00:	6145                	addi	sp,sp,48
20406d02:	8082                	ret

20406d04 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20406d04:	7179                	addi	sp,sp,-48
20406d06:	d606                	sw	ra,44(sp)
20406d08:	d422                	sw	s0,40(sp)
20406d0a:	1800                	addi	s0,sp,48
20406d0c:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406d10:	fdc42503          	lw	a0,-36(s0)
20406d14:	d67ff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406d18:	87aa                	mv	a5,a0
20406d1a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20406d1e:	fec42783          	lw	a5,-20(s0)
20406d22:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20406d24:	853e                	mv	a0,a5
20406d26:	50b2                	lw	ra,44(sp)
20406d28:	5422                	lw	s0,40(sp)
20406d2a:	6145                	addi	sp,sp,48
20406d2c:	8082                	ret

20406d2e <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20406d2e:	7179                	addi	sp,sp,-48
20406d30:	d606                	sw	ra,44(sp)
20406d32:	d422                	sw	s0,40(sp)
20406d34:	1800                	addi	s0,sp,48
20406d36:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406d3a:	fdc42503          	lw	a0,-36(s0)
20406d3e:	d3dff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406d42:	87aa                	mv	a5,a0
20406d44:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20406d48:	fec42783          	lw	a5,-20(s0)
20406d4c:	07b1                	addi	a5,a5,12
20406d4e:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20406d50:	853e                	mv	a0,a5
20406d52:	50b2                	lw	ra,44(sp)
20406d54:	5422                	lw	s0,40(sp)
20406d56:	6145                	addi	sp,sp,48
20406d58:	8082                	ret

20406d5a <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20406d5a:	7179                	addi	sp,sp,-48
20406d5c:	d606                	sw	ra,44(sp)
20406d5e:	d422                	sw	s0,40(sp)
20406d60:	1800                	addi	s0,sp,48
20406d62:	fca42e23          	sw	a0,-36(s0)
20406d66:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406d6a:	fdc42503          	lw	a0,-36(s0)
20406d6e:	d0dff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406d72:	87aa                	mv	a5,a0
20406d74:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20406d78:	fec42783          	lw	a5,-20(s0)
20406d7c:	07a1                	addi	a5,a5,8
20406d7e:	439c                	lw	a5,0(a5)
20406d80:	fd842703          	lw	a4,-40(s0)
20406d84:	fff74713          	not	a4,a4
20406d88:	86ba                	mv	a3,a4
20406d8a:	fec42703          	lw	a4,-20(s0)
20406d8e:	0721                	addi	a4,a4,8
20406d90:	8ff5                	and	a5,a5,a3
20406d92:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20406d94:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20406d96:	853e                	mv	a0,a5
20406d98:	50b2                	lw	ra,44(sp)
20406d9a:	5422                	lw	s0,40(sp)
20406d9c:	6145                	addi	sp,sp,48
20406d9e:	8082                	ret

20406da0 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20406da0:	7179                	addi	sp,sp,-48
20406da2:	d606                	sw	ra,44(sp)
20406da4:	d422                	sw	s0,40(sp)
20406da6:	1800                	addi	s0,sp,48
20406da8:	fca42e23          	sw	a0,-36(s0)
20406dac:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406db0:	fdc42503          	lw	a0,-36(s0)
20406db4:	cc7ff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406db8:	87aa                	mv	a5,a0
20406dba:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20406dbe:	fec42783          	lw	a5,-20(s0)
20406dc2:	07a1                	addi	a5,a5,8
20406dc4:	4398                	lw	a4,0(a5)
20406dc6:	fd842783          	lw	a5,-40(s0)
20406dca:	fec42683          	lw	a3,-20(s0)
20406dce:	06a1                	addi	a3,a3,8
20406dd0:	8fd9                	or	a5,a5,a4
20406dd2:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20406dd4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20406dd6:	853e                	mv	a0,a5
20406dd8:	50b2                	lw	ra,44(sp)
20406dda:	5422                	lw	s0,40(sp)
20406ddc:	6145                	addi	sp,sp,48
20406dde:	8082                	ret

20406de0 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20406de0:	7179                	addi	sp,sp,-48
20406de2:	d606                	sw	ra,44(sp)
20406de4:	d422                	sw	s0,40(sp)
20406de6:	1800                	addi	s0,sp,48
20406de8:	fca42e23          	sw	a0,-36(s0)
20406dec:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406df0:	fdc42503          	lw	a0,-36(s0)
20406df4:	c87ff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406df8:	87aa                	mv	a5,a0
20406dfa:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20406dfe:	fec42783          	lw	a5,-20(s0)
20406e02:	07b1                	addi	a5,a5,12
20406e04:	4398                	lw	a4,0(a5)
20406e06:	fd842783          	lw	a5,-40(s0)
20406e0a:	fec42683          	lw	a3,-20(s0)
20406e0e:	06b1                	addi	a3,a3,12
20406e10:	8fd9                	or	a5,a5,a4
20406e12:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20406e14:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20406e16:	853e                	mv	a0,a5
20406e18:	50b2                	lw	ra,44(sp)
20406e1a:	5422                	lw	s0,40(sp)
20406e1c:	6145                	addi	sp,sp,48
20406e1e:	8082                	ret

20406e20 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20406e20:	7179                	addi	sp,sp,-48
20406e22:	d606                	sw	ra,44(sp)
20406e24:	d422                	sw	s0,40(sp)
20406e26:	1800                	addi	s0,sp,48
20406e28:	fca42e23          	sw	a0,-36(s0)
20406e2c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406e30:	fdc42503          	lw	a0,-36(s0)
20406e34:	c47ff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406e38:	87aa                	mv	a5,a0
20406e3a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20406e3e:	fec42783          	lw	a5,-20(s0)
20406e42:	07b1                	addi	a5,a5,12
20406e44:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20406e46:	fd842703          	lw	a4,-40(s0)
20406e4a:	fff74713          	not	a4,a4
20406e4e:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20406e50:	fec42703          	lw	a4,-20(s0)
20406e54:	0731                	addi	a4,a4,12
20406e56:	8ff5                	and	a5,a5,a3
20406e58:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20406e5a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20406e5c:	853e                	mv	a0,a5
20406e5e:	50b2                	lw	ra,44(sp)
20406e60:	5422                	lw	s0,40(sp)
20406e62:	6145                	addi	sp,sp,48
20406e64:	8082                	ret

20406e66 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20406e66:	7179                	addi	sp,sp,-48
20406e68:	d606                	sw	ra,44(sp)
20406e6a:	d422                	sw	s0,40(sp)
20406e6c:	1800                	addi	s0,sp,48
20406e6e:	fca42e23          	sw	a0,-36(s0)
20406e72:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406e76:	fdc42503          	lw	a0,-36(s0)
20406e7a:	c01ff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406e7e:	87aa                	mv	a5,a0
20406e80:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20406e84:	fec42783          	lw	a5,-20(s0)
20406e88:	07b1                	addi	a5,a5,12
20406e8a:	4398                	lw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406e8c:	fd842783          	lw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406e90:	fec42683          	lw	a3,-20(s0)
20406e94:	06b1                	addi	a3,a3,12
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406e96:	8fb9                	xor	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406e98:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20406e9a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20406e9c:	853e                	mv	a0,a5
20406e9e:	50b2                	lw	ra,44(sp)
20406ea0:	5422                	lw	s0,40(sp)
20406ea2:	6145                	addi	sp,sp,48
20406ea4:	8082                	ret

20406ea6 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20406ea6:	7179                	addi	sp,sp,-48
20406ea8:	d606                	sw	ra,44(sp)
20406eaa:	d422                	sw	s0,40(sp)
20406eac:	1800                	addi	s0,sp,48
20406eae:	fca42e23          	sw	a0,-36(s0)
20406eb2:	fcb42c23          	sw	a1,-40(s0)
20406eb6:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406eba:	fdc42503          	lw	a0,-36(s0)
20406ebe:	bbdff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406ec2:	87aa                	mv	a5,a0
20406ec4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20406ec8:	fec42783          	lw	a5,-20(s0)
20406ecc:	03c78793          	addi	a5,a5,60
20406ed0:	4398                	lw	a4,0(a5)
20406ed2:	fd842783          	lw	a5,-40(s0)
20406ed6:	fec42683          	lw	a3,-20(s0)
20406eda:	03c68693          	addi	a3,a3,60
20406ede:	8fd9                	or	a5,a5,a4
20406ee0:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20406ee2:	fec42783          	lw	a5,-20(s0)
20406ee6:	03878793          	addi	a5,a5,56
20406eea:	4398                	lw	a4,0(a5)
20406eec:	fd442783          	lw	a5,-44(s0)
20406ef0:	fec42683          	lw	a3,-20(s0)
20406ef4:	03868693          	addi	a3,a3,56
20406ef8:	8fd9                	or	a5,a5,a4
20406efa:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20406efc:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20406efe:	853e                	mv	a0,a5
20406f00:	50b2                	lw	ra,44(sp)
20406f02:	5422                	lw	s0,40(sp)
20406f04:	6145                	addi	sp,sp,48
20406f06:	8082                	ret

20406f08 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20406f08:	7179                	addi	sp,sp,-48
20406f0a:	d606                	sw	ra,44(sp)
20406f0c:	d422                	sw	s0,40(sp)
20406f0e:	1800                	addi	s0,sp,48
20406f10:	fca42e23          	sw	a0,-36(s0)
20406f14:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406f18:	fdc42503          	lw	a0,-36(s0)
20406f1c:	b5fff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406f20:	87aa                	mv	a5,a0
20406f22:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406f26:	fec42783          	lw	a5,-20(s0)
20406f2a:	03878793          	addi	a5,a5,56
20406f2e:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20406f30:	fd842703          	lw	a4,-40(s0)
20406f34:	fff74713          	not	a4,a4
20406f38:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406f3a:	fec42703          	lw	a4,-20(s0)
20406f3e:	03870713          	addi	a4,a4,56
20406f42:	8ff5                	and	a5,a5,a3
20406f44:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20406f46:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20406f48:	853e                	mv	a0,a5
20406f4a:	50b2                	lw	ra,44(sp)
20406f4c:	5422                	lw	s0,40(sp)
20406f4e:	6145                	addi	sp,sp,48
20406f50:	8082                	ret

20406f52 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20406f52:	7179                	addi	sp,sp,-48
20406f54:	d606                	sw	ra,44(sp)
20406f56:	d422                	sw	s0,40(sp)
20406f58:	1800                	addi	s0,sp,48
20406f5a:	fca42e23          	sw	a0,-36(s0)
20406f5e:	fcb42c23          	sw	a1,-40(s0)
20406f62:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406f66:	fdc42503          	lw	a0,-36(s0)
20406f6a:	b11ff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20406f6e:	87aa                	mv	a5,a0
20406f70:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20406f74:	fd442703          	lw	a4,-44(s0)
20406f78:	479d                	li	a5,7
20406f7a:	1ce7e963          	bltu	a5,a4,2040714c <__metal_driver_sifive_gpio0_config_int+0x1fa>
20406f7e:	fd442783          	lw	a5,-44(s0)
20406f82:	00279713          	slli	a4,a5,0x2
20406f86:	204017b7          	lui	a5,0x20401
20406f8a:	01c78793          	addi	a5,a5,28 # 2040101c <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20406f8e:	97ba                	add	a5,a5,a4
20406f90:	439c                	lw	a5,0(a5)
20406f92:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20406f94:	fec42783          	lw	a5,-20(s0)
20406f98:	07e1                	addi	a5,a5,24
20406f9a:	439c                	lw	a5,0(a5)
20406f9c:	fd842703          	lw	a4,-40(s0)
20406fa0:	fff74713          	not	a4,a4
20406fa4:	86ba                	mv	a3,a4
20406fa6:	fec42703          	lw	a4,-20(s0)
20406faa:	0761                	addi	a4,a4,24
20406fac:	8ff5                	and	a5,a5,a3
20406fae:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20406fb0:	fec42783          	lw	a5,-20(s0)
20406fb4:	02078793          	addi	a5,a5,32
20406fb8:	439c                	lw	a5,0(a5)
20406fba:	fd842703          	lw	a4,-40(s0)
20406fbe:	fff74713          	not	a4,a4
20406fc2:	86ba                	mv	a3,a4
20406fc4:	fec42703          	lw	a4,-20(s0)
20406fc8:	02070713          	addi	a4,a4,32
20406fcc:	8ff5                	and	a5,a5,a3
20406fce:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20406fd0:	fec42783          	lw	a5,-20(s0)
20406fd4:	02878793          	addi	a5,a5,40
20406fd8:	439c                	lw	a5,0(a5)
20406fda:	fd842703          	lw	a4,-40(s0)
20406fde:	fff74713          	not	a4,a4
20406fe2:	86ba                	mv	a3,a4
20406fe4:	fec42703          	lw	a4,-20(s0)
20406fe8:	02870713          	addi	a4,a4,40
20406fec:	8ff5                	and	a5,a5,a3
20406fee:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20406ff0:	fec42783          	lw	a5,-20(s0)
20406ff4:	03078793          	addi	a5,a5,48
20406ff8:	439c                	lw	a5,0(a5)
20406ffa:	fd842703          	lw	a4,-40(s0)
20406ffe:	fff74713          	not	a4,a4
20407002:	86ba                	mv	a3,a4
20407004:	fec42703          	lw	a4,-20(s0)
20407008:	03070713          	addi	a4,a4,48
2040700c:	8ff5                	and	a5,a5,a3
2040700e:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20407010:	aa35                	j	2040714c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20407012:	fec42783          	lw	a5,-20(s0)
20407016:	07e1                	addi	a5,a5,24
20407018:	4398                	lw	a4,0(a5)
2040701a:	fd842783          	lw	a5,-40(s0)
2040701e:	fec42683          	lw	a3,-20(s0)
20407022:	06e1                	addi	a3,a3,24
20407024:	8fd9                	or	a5,a5,a4
20407026:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20407028:	a215                	j	2040714c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2040702a:	fec42783          	lw	a5,-20(s0)
2040702e:	02078793          	addi	a5,a5,32
20407032:	4398                	lw	a4,0(a5)
20407034:	fd842783          	lw	a5,-40(s0)
20407038:	fec42683          	lw	a3,-20(s0)
2040703c:	02068693          	addi	a3,a3,32
20407040:	8fd9                	or	a5,a5,a4
20407042:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20407044:	a221                	j	2040714c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20407046:	fec42783          	lw	a5,-20(s0)
2040704a:	07e1                	addi	a5,a5,24
2040704c:	4398                	lw	a4,0(a5)
2040704e:	fd842783          	lw	a5,-40(s0)
20407052:	fec42683          	lw	a3,-20(s0)
20407056:	06e1                	addi	a3,a3,24
20407058:	8fd9                	or	a5,a5,a4
2040705a:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2040705c:	fec42783          	lw	a5,-20(s0)
20407060:	02078793          	addi	a5,a5,32
20407064:	4398                	lw	a4,0(a5)
20407066:	fd842783          	lw	a5,-40(s0)
2040706a:	fec42683          	lw	a3,-20(s0)
2040706e:	02068693          	addi	a3,a3,32
20407072:	8fd9                	or	a5,a5,a4
20407074:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20407076:	a8d9                	j	2040714c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20407078:	fec42783          	lw	a5,-20(s0)
2040707c:	02878793          	addi	a5,a5,40
20407080:	4398                	lw	a4,0(a5)
20407082:	fd842783          	lw	a5,-40(s0)
20407086:	fec42683          	lw	a3,-20(s0)
2040708a:	02868693          	addi	a3,a3,40
2040708e:	8fd9                	or	a5,a5,a4
20407090:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20407092:	a86d                	j	2040714c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20407094:	fec42783          	lw	a5,-20(s0)
20407098:	03078793          	addi	a5,a5,48
2040709c:	4398                	lw	a4,0(a5)
2040709e:	fd842783          	lw	a5,-40(s0)
204070a2:	fec42683          	lw	a3,-20(s0)
204070a6:	03068693          	addi	a3,a3,48
204070aa:	8fd9                	or	a5,a5,a4
204070ac:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
204070ae:	a879                	j	2040714c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204070b0:	fec42783          	lw	a5,-20(s0)
204070b4:	02878793          	addi	a5,a5,40
204070b8:	4398                	lw	a4,0(a5)
204070ba:	fd842783          	lw	a5,-40(s0)
204070be:	fec42683          	lw	a3,-20(s0)
204070c2:	02868693          	addi	a3,a3,40
204070c6:	8fd9                	or	a5,a5,a4
204070c8:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204070ca:	fec42783          	lw	a5,-20(s0)
204070ce:	03078793          	addi	a5,a5,48
204070d2:	4398                	lw	a4,0(a5)
204070d4:	fd842783          	lw	a5,-40(s0)
204070d8:	fec42683          	lw	a3,-20(s0)
204070dc:	03068693          	addi	a3,a3,48
204070e0:	8fd9                	or	a5,a5,a4
204070e2:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
204070e4:	a0a5                	j	2040714c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
204070e6:	fec42783          	lw	a5,-20(s0)
204070ea:	07e1                	addi	a5,a5,24
204070ec:	4398                	lw	a4,0(a5)
204070ee:	fd842783          	lw	a5,-40(s0)
204070f2:	fec42683          	lw	a3,-20(s0)
204070f6:	06e1                	addi	a3,a3,24
204070f8:	8fd9                	or	a5,a5,a4
204070fa:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204070fc:	fec42783          	lw	a5,-20(s0)
20407100:	02078793          	addi	a5,a5,32
20407104:	4398                	lw	a4,0(a5)
20407106:	fd842783          	lw	a5,-40(s0)
2040710a:	fec42683          	lw	a3,-20(s0)
2040710e:	02068693          	addi	a3,a3,32
20407112:	8fd9                	or	a5,a5,a4
20407114:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20407116:	fec42783          	lw	a5,-20(s0)
2040711a:	02878793          	addi	a5,a5,40
2040711e:	4398                	lw	a4,0(a5)
20407120:	fd842783          	lw	a5,-40(s0)
20407124:	fec42683          	lw	a3,-20(s0)
20407128:	02868693          	addi	a3,a3,40
2040712c:	8fd9                	or	a5,a5,a4
2040712e:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20407130:	fec42783          	lw	a5,-20(s0)
20407134:	03078793          	addi	a5,a5,48
20407138:	4398                	lw	a4,0(a5)
2040713a:	fd842783          	lw	a5,-40(s0)
2040713e:	fec42683          	lw	a3,-20(s0)
20407142:	03068693          	addi	a3,a3,48
20407146:	8fd9                	or	a5,a5,a4
20407148:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
2040714a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
2040714c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
}
2040714e:	853e                	mv	a0,a5
20407150:	50b2                	lw	ra,44(sp)
20407152:	5422                	lw	s0,40(sp)
20407154:	6145                	addi	sp,sp,48
20407156:	8082                	ret

20407158 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20407158:	7179                	addi	sp,sp,-48
2040715a:	d606                	sw	ra,44(sp)
2040715c:	d422                	sw	s0,40(sp)
2040715e:	1800                	addi	s0,sp,48
20407160:	fca42e23          	sw	a0,-36(s0)
20407164:	fcb42c23          	sw	a1,-40(s0)
20407168:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040716c:	fdc42503          	lw	a0,-36(s0)
20407170:	90bff0ef          	jal	ra,20406a7a <__metal_driver_sifive_gpio0_base>
20407174:	87aa                	mv	a5,a0
20407176:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
2040717a:	fd442703          	lw	a4,-44(s0)
2040717e:	479d                	li	a5,7
20407180:	14e7ea63          	bltu	a5,a4,204072d4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20407184:	fd442783          	lw	a5,-44(s0)
20407188:	00279713          	slli	a4,a5,0x2
2040718c:	204017b7          	lui	a5,0x20401
20407190:	03c78793          	addi	a5,a5,60 # 2040103c <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20407194:	97ba                	add	a5,a5,a4
20407196:	439c                	lw	a5,0(a5)
20407198:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2040719a:	fec42783          	lw	a5,-20(s0)
2040719e:	07f1                	addi	a5,a5,28
204071a0:	4398                	lw	a4,0(a5)
204071a2:	fd842783          	lw	a5,-40(s0)
204071a6:	fec42683          	lw	a3,-20(s0)
204071aa:	06f1                	addi	a3,a3,28
204071ac:	8fd9                	or	a5,a5,a4
204071ae:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
204071b0:	a215                	j	204072d4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204071b2:	fec42783          	lw	a5,-20(s0)
204071b6:	02478793          	addi	a5,a5,36
204071ba:	4398                	lw	a4,0(a5)
204071bc:	fd842783          	lw	a5,-40(s0)
204071c0:	fec42683          	lw	a3,-20(s0)
204071c4:	02468693          	addi	a3,a3,36
204071c8:	8fd9                	or	a5,a5,a4
204071ca:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
204071cc:	a221                	j	204072d4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
204071ce:	fec42783          	lw	a5,-20(s0)
204071d2:	07f1                	addi	a5,a5,28
204071d4:	4398                	lw	a4,0(a5)
204071d6:	fd842783          	lw	a5,-40(s0)
204071da:	fec42683          	lw	a3,-20(s0)
204071de:	06f1                	addi	a3,a3,28
204071e0:	8fd9                	or	a5,a5,a4
204071e2:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204071e4:	fec42783          	lw	a5,-20(s0)
204071e8:	02478793          	addi	a5,a5,36
204071ec:	4398                	lw	a4,0(a5)
204071ee:	fd842783          	lw	a5,-40(s0)
204071f2:	fec42683          	lw	a3,-20(s0)
204071f6:	02468693          	addi	a3,a3,36
204071fa:	8fd9                	or	a5,a5,a4
204071fc:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
204071fe:	a8d9                	j	204072d4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20407200:	fec42783          	lw	a5,-20(s0)
20407204:	02c78793          	addi	a5,a5,44
20407208:	4398                	lw	a4,0(a5)
2040720a:	fd842783          	lw	a5,-40(s0)
2040720e:	fec42683          	lw	a3,-20(s0)
20407212:	02c68693          	addi	a3,a3,44
20407216:	8fd9                	or	a5,a5,a4
20407218:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
2040721a:	a86d                	j	204072d4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2040721c:	fec42783          	lw	a5,-20(s0)
20407220:	03478793          	addi	a5,a5,52
20407224:	4398                	lw	a4,0(a5)
20407226:	fd842783          	lw	a5,-40(s0)
2040722a:	fec42683          	lw	a3,-20(s0)
2040722e:	03468693          	addi	a3,a3,52
20407232:	8fd9                	or	a5,a5,a4
20407234:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20407236:	a879                	j	204072d4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20407238:	fec42783          	lw	a5,-20(s0)
2040723c:	02c78793          	addi	a5,a5,44
20407240:	4398                	lw	a4,0(a5)
20407242:	fd842783          	lw	a5,-40(s0)
20407246:	fec42683          	lw	a3,-20(s0)
2040724a:	02c68693          	addi	a3,a3,44
2040724e:	8fd9                	or	a5,a5,a4
20407250:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20407252:	fec42783          	lw	a5,-20(s0)
20407256:	03478793          	addi	a5,a5,52
2040725a:	4398                	lw	a4,0(a5)
2040725c:	fd842783          	lw	a5,-40(s0)
20407260:	fec42683          	lw	a3,-20(s0)
20407264:	03468693          	addi	a3,a3,52
20407268:	8fd9                	or	a5,a5,a4
2040726a:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
2040726c:	a0a5                	j	204072d4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2040726e:	fec42783          	lw	a5,-20(s0)
20407272:	07f1                	addi	a5,a5,28
20407274:	4398                	lw	a4,0(a5)
20407276:	fd842783          	lw	a5,-40(s0)
2040727a:	fec42683          	lw	a3,-20(s0)
2040727e:	06f1                	addi	a3,a3,28
20407280:	8fd9                	or	a5,a5,a4
20407282:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20407284:	fec42783          	lw	a5,-20(s0)
20407288:	02478793          	addi	a5,a5,36
2040728c:	4398                	lw	a4,0(a5)
2040728e:	fd842783          	lw	a5,-40(s0)
20407292:	fec42683          	lw	a3,-20(s0)
20407296:	02468693          	addi	a3,a3,36
2040729a:	8fd9                	or	a5,a5,a4
2040729c:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2040729e:	fec42783          	lw	a5,-20(s0)
204072a2:	02c78793          	addi	a5,a5,44
204072a6:	4398                	lw	a4,0(a5)
204072a8:	fd842783          	lw	a5,-40(s0)
204072ac:	fec42683          	lw	a3,-20(s0)
204072b0:	02c68693          	addi	a3,a3,44
204072b4:	8fd9                	or	a5,a5,a4
204072b6:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
204072b8:	fec42783          	lw	a5,-20(s0)
204072bc:	03478793          	addi	a5,a5,52
204072c0:	4398                	lw	a4,0(a5)
204072c2:	fd842783          	lw	a5,-40(s0)
204072c6:	fec42683          	lw	a3,-20(s0)
204072ca:	03468693          	addi	a3,a3,52
204072ce:	8fd9                	or	a5,a5,a4
204072d0:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
204072d2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
204072d4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:222
}
204072d6:	853e                	mv	a0,a5
204072d8:	50b2                	lw	ra,44(sp)
204072da:	5422                	lw	s0,40(sp)
204072dc:	6145                	addi	sp,sp,48
204072de:	8082                	ret

204072e0 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
204072e0:	1101                	addi	sp,sp,-32
204072e2:	ce06                	sw	ra,28(sp)
204072e4:	cc22                	sw	s0,24(sp)
204072e6:	1000                	addi	s0,sp,32
204072e8:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
204072ec:	fec42503          	lw	a0,-20(s0)
204072f0:	fb0ff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_gpio0_interrupt_parent>
204072f4:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:227
}
204072f6:	853e                	mv	a0,a5
204072f8:	40f2                	lw	ra,28(sp)
204072fa:	4462                	lw	s0,24(sp)
204072fc:	6105                	addi	sp,sp,32
204072fe:	8082                	ret

20407300 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20407300:	7179                	addi	sp,sp,-48
20407302:	d606                	sw	ra,44(sp)
20407304:	d422                	sw	s0,40(sp)
20407306:	1800                	addi	s0,sp,48
20407308:	fca42e23          	sw	a0,-36(s0)
2040730c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20407310:	fd842583          	lw	a1,-40(s0)
20407314:	fdc42503          	lw	a0,-36(s0)
20407318:	fb2ff0ef          	jal	ra,20406aca <__metal_driver_sifive_gpio0_interrupt_lines>
2040731c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20407320:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20407324:	853e                	mv	a0,a5
20407326:	50b2                	lw	ra,44(sp)
20407328:	5422                	lw	s0,40(sp)
2040732a:	6145                	addi	sp,sp,48
2040732c:	8082                	ret

2040732e <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:952
{
2040732e:	1101                	addi	sp,sp,-32
20407330:	ce22                	sw	s0,28(sp)
20407332:	1000                	addi	s0,sp,32
20407334:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:953
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407338:	fec42703          	lw	a4,-20(s0)
2040733c:	800017b7          	lui	a5,0x80001
20407340:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
20407344:	00f71563          	bne	a4,a5,2040734e <__metal_driver_sifive_uart0_control_base+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:954
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20407348:	100137b7          	lui	a5,0x10013
2040734c:	a011                	j	20407350 <__metal_driver_sifive_uart0_control_base+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:957
		return 0;
2040734e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:959
}
20407350:	853e                	mv	a0,a5
20407352:	4472                	lw	s0,28(sp)
20407354:	6105                	addi	sp,sp,32
20407356:	8082                	ret

20407358 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:982
{
20407358:	1101                	addi	sp,sp,-32
2040735a:	ce22                	sw	s0,28(sp)
2040735c:	1000                	addi	s0,sp,32
2040735e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:983
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407362:	fec42703          	lw	a4,-20(s0)
20407366:	800017b7          	lui	a5,0x80001
2040736a:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
2040736e:	00f71763          	bne	a4,a5,2040737c <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:984
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20407372:	800007b7          	lui	a5,0x80000
20407376:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffece8>
2040737a:	a011                	j	2040737e <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:987
		return 0;
2040737c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:989
}
2040737e:	853e                	mv	a0,a5
20407380:	4472                	lw	s0,28(sp)
20407382:	6105                	addi	sp,sp,32
20407384:	8082                	ret

20407386 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:992
{
20407386:	1101                	addi	sp,sp,-32
20407388:	ce22                	sw	s0,28(sp)
2040738a:	1000                	addi	s0,sp,32
2040738c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:993
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407390:	fec42703          	lw	a4,-20(s0)
20407394:	800017b7          	lui	a5,0x80001
20407398:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
2040739c:	00f71463          	bne	a4,a5,204073a4 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:994
		return 5;
204073a0:	4795                	li	a5,5
204073a2:	a011                	j	204073a6 <__metal_driver_sifive_uart0_interrupt_line+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:997
		return 0;
204073a4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:999
}
204073a6:	853e                	mv	a0,a5
204073a8:	4472                	lw	s0,28(sp)
204073aa:	6105                	addi	sp,sp,32
204073ac:	8082                	ret

204073ae <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1002
{
204073ae:	1101                	addi	sp,sp,-32
204073b0:	ce22                	sw	s0,28(sp)
204073b2:	1000                	addi	s0,sp,32
204073b4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1003
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204073b8:	fec42703          	lw	a4,-20(s0)
204073bc:	800017b7          	lui	a5,0x80001
204073c0:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
204073c4:	00f71763          	bne	a4,a5,204073d2 <__metal_driver_sifive_uart0_clock+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1004
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
204073c8:	800017b7          	lui	a5,0x80001
204073cc:	a6878793          	addi	a5,a5,-1432 # 80000a68 <metal_segment_heap_target_end+0xfffff2f8>
204073d0:	a011                	j	204073d4 <__metal_driver_sifive_uart0_clock+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1007
		return 0;
204073d2:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1009
}
204073d4:	853e                	mv	a0,a5
204073d6:	4472                	lw	s0,28(sp)
204073d8:	6105                	addi	sp,sp,32
204073da:	8082                	ret

204073dc <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1012
{
204073dc:	1101                	addi	sp,sp,-32
204073de:	ce22                	sw	s0,28(sp)
204073e0:	1000                	addi	s0,sp,32
204073e2:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1013
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204073e6:	fec42703          	lw	a4,-20(s0)
204073ea:	800017b7          	lui	a5,0x80001
204073ee:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
204073f2:	00f71563          	bne	a4,a5,204073fc <__metal_driver_sifive_uart0_pinmux+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1014
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
204073f6:	82018793          	addi	a5,gp,-2016 # 80000a98 <__metal_dt_gpio_10012000>
204073fa:	a011                	j	204073fe <__metal_driver_sifive_uart0_pinmux+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1017
		return 0;
204073fc:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1019
}
204073fe:	853e                	mv	a0,a5
20407400:	4472                	lw	s0,28(sp)
20407402:	6105                	addi	sp,sp,32
20407404:	8082                	ret

20407406 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1022
{
20407406:	1101                	addi	sp,sp,-32
20407408:	ce22                	sw	s0,28(sp)
2040740a:	1000                	addi	s0,sp,32
2040740c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1023
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407410:	fec42703          	lw	a4,-20(s0)
20407414:	800017b7          	lui	a5,0x80001
20407418:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
2040741c:	00f71463          	bne	a4,a5,20407424 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1024
		return 0;
20407420:	4781                	li	a5,0
20407422:	a011                	j	20407426 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1027
		return 0;
20407424:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1029
}
20407426:	853e                	mv	a0,a5
20407428:	4472                	lw	s0,28(sp)
2040742a:	6105                	addi	sp,sp,32
2040742c:	8082                	ret

2040742e <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1032
{
2040742e:	1101                	addi	sp,sp,-32
20407430:	ce22                	sw	s0,28(sp)
20407432:	1000                	addi	s0,sp,32
20407434:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1033
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407438:	fec42703          	lw	a4,-20(s0)
2040743c:	800017b7          	lui	a5,0x80001
20407440:	a3078793          	addi	a5,a5,-1488 # 80000a30 <metal_segment_heap_target_end+0xfffff2c0>
20407444:	00f71563          	bne	a4,a5,2040744e <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1034
		return 196608;
20407448:	000307b7          	lui	a5,0x30
2040744c:	a011                	j	20407450 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1037
		return 0;
2040744e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1039
}
20407450:	853e                	mv	a0,a5
20407452:	4472                	lw	s0,28(sp)
20407454:	6105                	addi	sp,sp,32
20407456:	8082                	ret

20407458 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20407458:	1101                	addi	sp,sp,-32
2040745a:	ce06                	sw	ra,28(sp)
2040745c:	cc22                	sw	s0,24(sp)
2040745e:	1000                	addi	s0,sp,32
20407460:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20407464:	fec42503          	lw	a0,-20(s0)
20407468:	ef1ff0ef          	jal	ra,20407358 <__metal_driver_sifive_uart0_interrupt_parent>
2040746c:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
2040746e:	853e                	mv	a0,a5
20407470:	40f2                	lw	ra,28(sp)
20407472:	4462                	lw	s0,24(sp)
20407474:	6105                	addi	sp,sp,32
20407476:	8082                	ret

20407478 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20407478:	1101                	addi	sp,sp,-32
2040747a:	ce06                	sw	ra,28(sp)
2040747c:	cc22                	sw	s0,24(sp)
2040747e:	1000                	addi	s0,sp,32
20407480:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20407484:	fec42503          	lw	a0,-20(s0)
20407488:	effff0ef          	jal	ra,20407386 <__metal_driver_sifive_uart0_interrupt_line>
2040748c:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43
}
2040748e:	853e                	mv	a0,a5
20407490:	40f2                	lw	ra,28(sp)
20407492:	4462                	lw	s0,24(sp)
20407494:	6105                	addi	sp,sp,32
20407496:	8082                	ret

20407498 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20407498:	7179                	addi	sp,sp,-48
2040749a:	d606                	sw	ra,44(sp)
2040749c:	d422                	sw	s0,40(sp)
2040749e:	1800                	addi	s0,sp,48
204074a0:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204074a4:	fdc42503          	lw	a0,-36(s0)
204074a8:	e87ff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
204074ac:	87aa                	mv	a5,a0
204074ae:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
204074b2:	fec42783          	lw	a5,-20(s0)
204074b6:	07c1                	addi	a5,a5,16
204074b8:	439c                	lw	a5,0(a5)
204074ba:	fec42703          	lw	a4,-20(s0)
204074be:	0741                	addi	a4,a4,16
204074c0:	0017e793          	ori	a5,a5,1
204074c4:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
204074c6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:50
}
204074c8:	853e                	mv	a0,a5
204074ca:	50b2                	lw	ra,44(sp)
204074cc:	5422                	lw	s0,40(sp)
204074ce:	6145                	addi	sp,sp,48
204074d0:	8082                	ret

204074d2 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
204074d2:	7179                	addi	sp,sp,-48
204074d4:	d606                	sw	ra,44(sp)
204074d6:	d422                	sw	s0,40(sp)
204074d8:	1800                	addi	s0,sp,48
204074da:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204074de:	fdc42503          	lw	a0,-36(s0)
204074e2:	e4dff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
204074e6:	87aa                	mv	a5,a0
204074e8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
204074ec:	fec42783          	lw	a5,-20(s0)
204074f0:	07c1                	addi	a5,a5,16
204074f2:	439c                	lw	a5,0(a5)
204074f4:	fec42703          	lw	a4,-20(s0)
204074f8:	0741                	addi	a4,a4,16
204074fa:	9bf9                	andi	a5,a5,-2
204074fc:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
204074fe:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
}
20407500:	853e                	mv	a0,a5
20407502:	50b2                	lw	ra,44(sp)
20407504:	5422                	lw	s0,40(sp)
20407506:	6145                	addi	sp,sp,48
20407508:	8082                	ret

2040750a <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
2040750a:	7179                	addi	sp,sp,-48
2040750c:	d606                	sw	ra,44(sp)
2040750e:	d422                	sw	s0,40(sp)
20407510:	1800                	addi	s0,sp,48
20407512:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407516:	fdc42503          	lw	a0,-36(s0)
2040751a:	e15ff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
2040751e:	87aa                	mv	a5,a0
20407520:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20407524:	fec42783          	lw	a5,-20(s0)
20407528:	07c1                	addi	a5,a5,16
2040752a:	439c                	lw	a5,0(a5)
2040752c:	fec42703          	lw	a4,-20(s0)
20407530:	0741                	addi	a4,a4,16
20407532:	0027e793          	ori	a5,a5,2
20407536:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20407538:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:64
}
2040753a:	853e                	mv	a0,a5
2040753c:	50b2                	lw	ra,44(sp)
2040753e:	5422                	lw	s0,40(sp)
20407540:	6145                	addi	sp,sp,48
20407542:	8082                	ret

20407544 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20407544:	7179                	addi	sp,sp,-48
20407546:	d606                	sw	ra,44(sp)
20407548:	d422                	sw	s0,40(sp)
2040754a:	1800                	addi	s0,sp,48
2040754c:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407550:	fdc42503          	lw	a0,-36(s0)
20407554:	ddbff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
20407558:	87aa                	mv	a5,a0
2040755a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
2040755e:	fec42783          	lw	a5,-20(s0)
20407562:	07c1                	addi	a5,a5,16
20407564:	439c                	lw	a5,0(a5)
20407566:	fec42703          	lw	a4,-20(s0)
2040756a:	0741                	addi	a4,a4,16
2040756c:	9bf5                	andi	a5,a5,-3
2040756e:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20407570:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
}
20407572:	853e                	mv	a0,a5
20407574:	50b2                	lw	ra,44(sp)
20407576:	5422                	lw	s0,40(sp)
20407578:	6145                	addi	sp,sp,48
2040757a:	8082                	ret

2040757c <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
2040757c:	7179                	addi	sp,sp,-48
2040757e:	d606                	sw	ra,44(sp)
20407580:	d422                	sw	s0,40(sp)
20407582:	1800                	addi	s0,sp,48
20407584:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407588:	fdc42503          	lw	a0,-36(s0)
2040758c:	da3ff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
20407590:	87aa                	mv	a5,a0
20407592:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20407596:	fec42783          	lw	a5,-20(s0)
2040759a:	439c                	lw	a5,0(a5)
2040759c:	83fd                	srli	a5,a5,0x1f
2040759e:	0ff7f793          	andi	a5,a5,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:77
}
204075a2:	853e                	mv	a0,a5
204075a4:	50b2                	lw	ra,44(sp)
204075a6:	5422                	lw	s0,40(sp)
204075a8:	6145                	addi	sp,sp,48
204075aa:	8082                	ret

204075ac <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
204075ac:	7179                	addi	sp,sp,-48
204075ae:	d606                	sw	ra,44(sp)
204075b0:	d422                	sw	s0,40(sp)
204075b2:	1800                	addi	s0,sp,48
204075b4:	fca42e23          	sw	a0,-36(s0)
204075b8:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204075bc:	fdc42503          	lw	a0,-36(s0)
204075c0:	d6fff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
204075c4:	87aa                	mv	a5,a0
204075c6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
204075ca:	fec42783          	lw	a5,-20(s0)
204075ce:	07a1                	addi	a5,a5,8
204075d0:	4398                	lw	a4,0(a5)
204075d2:	fd842783          	lw	a5,-40(s0)
204075d6:	01079693          	slli	a3,a5,0x10
204075da:	000707b7          	lui	a5,0x70
204075de:	8ff5                	and	a5,a5,a3
204075e0:	fec42683          	lw	a3,-20(s0)
204075e4:	06a1                	addi	a3,a3,8
204075e6:	8fd9                	or	a5,a5,a4
204075e8:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
204075ea:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
}
204075ec:	853e                	mv	a0,a5
204075ee:	50b2                	lw	ra,44(sp)
204075f0:	5422                	lw	s0,40(sp)
204075f2:	6145                	addi	sp,sp,48
204075f4:	8082                	ret

204075f6 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
204075f6:	7179                	addi	sp,sp,-48
204075f8:	d606                	sw	ra,44(sp)
204075fa:	d422                	sw	s0,40(sp)
204075fc:	1800                	addi	s0,sp,48
204075fe:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407602:	fdc42503          	lw	a0,-36(s0)
20407606:	d29ff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
2040760a:	87aa                	mv	a5,a0
2040760c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20407610:	fec42783          	lw	a5,-20(s0)
20407614:	07a1                	addi	a5,a5,8
20407616:	439c                	lw	a5,0(a5)
20407618:	83c1                	srli	a5,a5,0x10
2040761a:	8b9d                	andi	a5,a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91
}
2040761c:	853e                	mv	a0,a5
2040761e:	50b2                	lw	ra,44(sp)
20407620:	5422                	lw	s0,40(sp)
20407622:	6145                	addi	sp,sp,48
20407624:	8082                	ret

20407626 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20407626:	7179                	addi	sp,sp,-48
20407628:	d606                	sw	ra,44(sp)
2040762a:	d422                	sw	s0,40(sp)
2040762c:	1800                	addi	s0,sp,48
2040762e:	fca42e23          	sw	a0,-36(s0)
20407632:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407636:	fdc42503          	lw	a0,-36(s0)
2040763a:	cf5ff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
2040763e:	87aa                	mv	a5,a0
20407640:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20407644:	fec42783          	lw	a5,-20(s0)
20407648:	07b1                	addi	a5,a5,12
2040764a:	4398                	lw	a4,0(a5)
2040764c:	fd842783          	lw	a5,-40(s0)
20407650:	01079693          	slli	a3,a5,0x10
20407654:	000707b7          	lui	a5,0x70
20407658:	8ff5                	and	a5,a5,a3
2040765a:	fec42683          	lw	a3,-20(s0)
2040765e:	06b1                	addi	a3,a3,12
20407660:	8fd9                	or	a5,a5,a4
20407662:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20407664:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:99
}
20407666:	853e                	mv	a0,a5
20407668:	50b2                	lw	ra,44(sp)
2040766a:	5422                	lw	s0,40(sp)
2040766c:	6145                	addi	sp,sp,48
2040766e:	8082                	ret

20407670 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20407670:	7179                	addi	sp,sp,-48
20407672:	d606                	sw	ra,44(sp)
20407674:	d422                	sw	s0,40(sp)
20407676:	1800                	addi	s0,sp,48
20407678:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040767c:	fdc42503          	lw	a0,-36(s0)
20407680:	cafff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
20407684:	87aa                	mv	a5,a0
20407686:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
2040768a:	fec42783          	lw	a5,-20(s0)
2040768e:	07b1                	addi	a5,a5,12
20407690:	439c                	lw	a5,0(a5)
20407692:	83c1                	srli	a5,a5,0x10
20407694:	8b9d                	andi	a5,a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:105
}
20407696:	853e                	mv	a0,a5
20407698:	50b2                	lw	ra,44(sp)
2040769a:	5422                	lw	s0,40(sp)
2040769c:	6145                	addi	sp,sp,48
2040769e:	8082                	ret

204076a0 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
204076a0:	7179                	addi	sp,sp,-48
204076a2:	d606                	sw	ra,44(sp)
204076a4:	d422                	sw	s0,40(sp)
204076a6:	1800                	addi	s0,sp,48
204076a8:	fca42e23          	sw	a0,-36(s0)
204076ac:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204076b0:	fdc42503          	lw	a0,-36(s0)
204076b4:	c7bff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
204076b8:	87aa                	mv	a5,a0
204076ba:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
204076be:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
204076c0:	fdc42503          	lw	a0,-36(s0)
204076c4:	eb9ff0ef          	jal	ra,2040757c <__metal_driver_sifive_uart0_txready>
204076c8:	87aa                	mv	a5,a0
204076ca:	fbfd                	bnez	a5,204076c0 <__metal_driver_sifive_uart0_putc+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
204076cc:	fec42783          	lw	a5,-20(s0)
204076d0:	fd842703          	lw	a4,-40(s0)
204076d4:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
204076d6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:115
}
204076d8:	853e                	mv	a0,a5
204076da:	50b2                	lw	ra,44(sp)
204076dc:	5422                	lw	s0,40(sp)
204076de:	6145                	addi	sp,sp,48
204076e0:	8082                	ret

204076e2 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
204076e2:	7179                	addi	sp,sp,-48
204076e4:	d606                	sw	ra,44(sp)
204076e6:	d422                	sw	s0,40(sp)
204076e8:	1800                	addi	s0,sp,48
204076ea:	fca42e23          	sw	a0,-36(s0)
204076ee:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204076f2:	fdc42503          	lw	a0,-36(s0)
204076f6:	c39ff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
204076fa:	87aa                	mv	a5,a0
204076fc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20407700:	fec42783          	lw	a5,-20(s0)
20407704:	0791                	addi	a5,a5,4
20407706:	439c                	lw	a5,0(a5)
20407708:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
2040770c:	fe842783          	lw	a5,-24(s0)
20407710:	0007d763          	bgez	a5,2040771e <__metal_driver_sifive_uart0_getc+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20407714:	fd842783          	lw	a5,-40(s0)
20407718:	577d                	li	a4,-1
2040771a:	c398                	sw	a4,0(a5)
2040771c:	a801                	j	2040772c <__metal_driver_sifive_uart0_getc+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
2040771e:	fe842783          	lw	a5,-24(s0)
20407722:	0ff7f713          	andi	a4,a5,255
20407726:	fd842783          	lw	a5,-40(s0)
2040772a:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
2040772c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
}
2040772e:	853e                	mv	a0,a5
20407730:	50b2                	lw	ra,44(sp)
20407732:	5422                	lw	s0,40(sp)
20407734:	6145                	addi	sp,sp,48
20407736:	8082                	ret

20407738 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20407738:	7179                	addi	sp,sp,-48
2040773a:	d622                	sw	s0,44(sp)
2040773c:	1800                	addi	s0,sp,48
2040773e:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20407742:	fdc42783          	lw	a5,-36(s0)
20407746:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
2040774a:	fec42783          	lw	a5,-20(s0)
2040774e:	43dc                	lw	a5,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
}
20407750:	853e                	mv	a0,a5
20407752:	5432                	lw	s0,44(sp)
20407754:	6145                	addi	sp,sp,48
20407756:	8082                	ret

20407758 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20407758:	7179                	addi	sp,sp,-48
2040775a:	d606                	sw	ra,44(sp)
2040775c:	d422                	sw	s0,40(sp)
2040775e:	1800                	addi	s0,sp,48
20407760:	fca42e23          	sw	a0,-36(s0)
20407764:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20407768:	fdc42783          	lw	a5,-36(s0)
2040776c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20407770:	fdc42503          	lw	a0,-36(s0)
20407774:	bbbff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
20407778:	87aa                	mv	a5,a0
2040777a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2040777e:	fdc42503          	lw	a0,-36(s0)
20407782:	c2dff0ef          	jal	ra,204073ae <__metal_driver_sifive_uart0_clock>
20407786:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2040778a:	fd842703          	lw	a4,-40(s0)
2040778e:	fec42783          	lw	a5,-20(s0)
20407792:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20407794:	fe442783          	lw	a5,-28(s0)
20407798:	cbb1                	beqz	a5,204077ec <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2040779a:	fe442783          	lw	a5,-28(s0)
2040779e:	439c                	lw	a5,0(a5)
204077a0:	439c                	lw	a5,0(a5)
204077a2:	fe442503          	lw	a0,-28(s0)
204077a6:	9782                	jalr	a5
204077a8:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
204077ac:	fe042703          	lw	a4,-32(s0)
204077b0:	fd842783          	lw	a5,-40(s0)
204077b4:	02f747b3          	div	a5,a4,a5
204077b8:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
204077bc:	fe842783          	lw	a5,-24(s0)
204077c0:	07e1                	addi	a5,a5,24
204077c2:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
204077c4:	fe842783          	lw	a5,-24(s0)
204077c8:	07a1                	addi	a5,a5,8
204077ca:	439c                	lw	a5,0(a5)
204077cc:	fe842703          	lw	a4,-24(s0)
204077d0:	0721                	addi	a4,a4,8
204077d2:	0017e793          	ori	a5,a5,1
204077d6:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
204077d8:	fe842783          	lw	a5,-24(s0)
204077dc:	07b1                	addi	a5,a5,12
204077de:	439c                	lw	a5,0(a5)
204077e0:	fe842703          	lw	a4,-24(s0)
204077e4:	0731                	addi	a4,a4,12
204077e6:	0017e793          	ori	a5,a5,1
204077ea:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
204077ec:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
}
204077ee:	853e                	mv	a0,a5
204077f0:	50b2                	lw	ra,44(sp)
204077f2:	5422                	lw	s0,40(sp)
204077f4:	6145                	addi	sp,sp,48
204077f6:	8082                	ret

204077f8 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
204077f8:	7139                	addi	sp,sp,-64
204077fa:	de06                	sw	ra,60(sp)
204077fc:	dc22                	sw	s0,56(sp)
204077fe:	0080                	addi	s0,sp,64
20407800:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20407804:	fcc42783          	lw	a5,-52(s0)
20407808:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
2040780c:	fcc42503          	lw	a0,-52(s0)
20407810:	b1fff0ef          	jal	ra,2040732e <__metal_driver_sifive_uart0_control_base>
20407814:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20407816:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2040781a:	fcc42503          	lw	a0,-52(s0)
2040781e:	b91ff0ef          	jal	ra,204073ae <__metal_driver_sifive_uart0_clock>
20407822:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20407826:	fe842783          	lw	a5,-24(s0)
2040782a:	07a1                	addi	a5,a5,8
2040782c:	4398                	lw	a4,0(a5)
2040782e:	fe842783          	lw	a5,-24(s0)
20407832:	07a1                	addi	a5,a5,8
20407834:	86be                	mv	a3,a5
20407836:	fff907b7          	lui	a5,0xfff90
2040783a:	17fd                	addi	a5,a5,-1
2040783c:	8ff9                	and	a5,a5,a4
2040783e:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20407840:	fe842783          	lw	a5,-24(s0)
20407844:	07a1                	addi	a5,a5,8
20407846:	4398                	lw	a4,0(a5)
20407848:	fe842783          	lw	a5,-24(s0)
2040784c:	07a1                	addi	a5,a5,8
2040784e:	86be                	mv	a3,a5
20407850:	67c1                	lui	a5,0x10
20407852:	8fd9                	or	a5,a5,a4
20407854:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20407856:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20407858:	fe842783          	lw	a5,-24(s0)
2040785c:	07d1                	addi	a5,a5,20
2040785e:	439c                	lw	a5,0(a5)
20407860:	8b85                	andi	a5,a5,1
20407862:	dbfd                	beqz	a5,20407858 <pre_rate_change_callback_func+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20407864:	fe842783          	lw	a5,-24(s0)
20407868:	07a1                	addi	a5,a5,8
2040786a:	439c                	lw	a5,0(a5)
2040786c:	8b89                	andi	a5,a5,2
2040786e:	c399                	beqz	a5,20407874 <pre_rate_change_callback_func+0x7c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20407870:	47a5                	li	a5,9
20407872:	a011                	j	20407876 <pre_rate_change_callback_func+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20407874:	47a9                	li	a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20407876:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2040787a:	fe442783          	lw	a5,-28(s0)
2040787e:	439c                	lw	a5,0(a5)
20407880:	439c                	lw	a5,0(a5)
20407882:	fe442503          	lw	a0,-28(s0)
20407886:	9782                	jalr	a5
20407888:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2040788c:	fe042703          	lw	a4,-32(s0)
20407890:	fdc42783          	lw	a5,-36(s0)
20407894:	02f707b3          	mul	a5,a4,a5
20407898:	873e                	mv	a4,a5
2040789a:	fec42783          	lw	a5,-20(s0)
2040789e:	43dc                	lw	a5,4(a5)
204078a0:	02f757b3          	divu	a5,a4,a5
204078a4:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
204078a8:	fc042a23          	sw	zero,-44(s0)
204078ac:	a039                	j	204078ba <pre_rate_change_callback_func+0xc2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
204078ae:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
204078b0:	fd442783          	lw	a5,-44(s0)
204078b4:	0785                	addi	a5,a5,1
204078b6:	fcf42a23          	sw	a5,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
204078ba:	fd442783          	lw	a5,-44(s0)
204078be:	fd842703          	lw	a4,-40(s0)
204078c2:	fee7c6e3          	blt	a5,a4,204078ae <pre_rate_change_callback_func+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:180
}
204078c6:	0001                	nop
204078c8:	50f2                	lw	ra,60(sp)
204078ca:	5462                	lw	s0,56(sp)
204078cc:	6121                	addi	sp,sp,64
204078ce:	8082                	ret

204078d0 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
204078d0:	7179                	addi	sp,sp,-48
204078d2:	d606                	sw	ra,44(sp)
204078d4:	d422                	sw	s0,40(sp)
204078d6:	1800                	addi	s0,sp,48
204078d8:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
204078dc:	fdc42783          	lw	a5,-36(s0)
204078e0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
204078e4:	fec42703          	lw	a4,-20(s0)
204078e8:	fec42783          	lw	a5,-20(s0)
204078ec:	43dc                	lw	a5,4(a5)
204078ee:	85be                	mv	a1,a5
204078f0:	853a                	mv	a0,a4
204078f2:	ec1fb0ef          	jal	ra,204037b2 <metal_uart_set_baud_rate>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:185
}
204078f6:	0001                	nop
204078f8:	50b2                	lw	ra,44(sp)
204078fa:	5422                	lw	s0,40(sp)
204078fc:	6145                	addi	sp,sp,48
204078fe:	8082                	ret

20407900 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
20407900:	7139                	addi	sp,sp,-64
20407902:	de06                	sw	ra,60(sp)
20407904:	dc22                	sw	s0,56(sp)
20407906:	0080                	addi	s0,sp,64
20407908:	fca42623          	sw	a0,-52(s0)
2040790c:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20407910:	fcc42783          	lw	a5,-52(s0)
20407914:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407918:	fcc42503          	lw	a0,-52(s0)
2040791c:	a93ff0ef          	jal	ra,204073ae <__metal_driver_sifive_uart0_clock>
20407920:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20407924:	fcc42503          	lw	a0,-52(s0)
20407928:	ab5ff0ef          	jal	ra,204073dc <__metal_driver_sifive_uart0_pinmux>
2040792c:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
20407930:	fe842783          	lw	a5,-24(s0)
20407934:	c7b9                	beqz	a5,20407982 <__metal_driver_sifive_uart0_init+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20407936:	fec42783          	lw	a5,-20(s0)
2040793a:	20407737          	lui	a4,0x20407
2040793e:	7f870713          	addi	a4,a4,2040 # 204077f8 <pre_rate_change_callback_func>
20407942:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20407944:	fec42783          	lw	a5,-20(s0)
20407948:	fcc42703          	lw	a4,-52(s0)
2040794c:	c7d8                	sw	a4,12(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
2040794e:	fec42783          	lw	a5,-20(s0)
20407952:	07a1                	addi	a5,a5,8
20407954:	85be                	mv	a1,a5
20407956:	fe842503          	lw	a0,-24(s0)
2040795a:	2abd                	jal	20407ad8 <metal_clock_register_pre_rate_change_callback>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
2040795c:	fec42783          	lw	a5,-20(s0)
20407960:	20408737          	lui	a4,0x20408
20407964:	8d070713          	addi	a4,a4,-1840 # 204078d0 <post_rate_change_callback_func>
20407968:	cbd8                	sw	a4,20(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
2040796a:	fec42783          	lw	a5,-20(s0)
2040796e:	fcc42703          	lw	a4,-52(s0)
20407972:	cf98                	sw	a4,24(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20407974:	fec42783          	lw	a5,-20(s0)
20407978:	07d1                	addi	a5,a5,20
2040797a:	85be                	mv	a1,a5
2040797c:	fe842503          	lw	a0,-24(s0)
20407980:	2269                	jal	20407b0a <metal_clock_register_post_rate_change_callback>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20407982:	fec42783          	lw	a5,-20(s0)
20407986:	fc842583          	lw	a1,-56(s0)
2040798a:	853e                	mv	a0,a5
2040798c:	e27fb0ef          	jal	ra,204037b2 <metal_uart_set_baud_rate>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20407990:	fe442783          	lw	a5,-28(s0)
20407994:	cb95                	beqz	a5,204079c8 <__metal_driver_sifive_uart0_init+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20407996:	fcc42503          	lw	a0,-52(s0)
2040799a:	a6dff0ef          	jal	ra,20407406 <__metal_driver_sifive_uart0_pinmux_output_selector>
2040799e:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
204079a0:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
204079a4:	fcc42503          	lw	a0,-52(s0)
204079a8:	a87ff0ef          	jal	ra,2040742e <__metal_driver_sifive_uart0_pinmux_source_selector>
204079ac:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
204079ae:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
204079b2:	fe442783          	lw	a5,-28(s0)
204079b6:	439c                	lw	a5,0(a5)
204079b8:	53dc                	lw	a5,36(a5)
204079ba:	fdc42603          	lw	a2,-36(s0)
204079be:	fe042583          	lw	a1,-32(s0)
204079c2:	fe442503          	lw	a0,-28(s0)
204079c6:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
204079c8:	0001                	nop
204079ca:	50f2                	lw	ra,60(sp)
204079cc:	5462                	lw	s0,56(sp)
204079ce:	6121                	addi	sp,sp,64
204079d0:	8082                	ret

204079d2 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
204079d2:	7179                	addi	sp,sp,-48
204079d4:	d606                	sw	ra,44(sp)
204079d6:	d422                	sw	s0,40(sp)
204079d8:	1800                	addi	s0,sp,48
204079da:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
204079de:	fdc42783          	lw	a5,-36(s0)
204079e2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:52
    while (current) {
204079e6:	a831                	j	20407a02 <_metal_clock_call_all_callbacks+0x30>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
204079e8:	fec42783          	lw	a5,-20(s0)
204079ec:	4398                	lw	a4,0(a5)
204079ee:	fec42783          	lw	a5,-20(s0)
204079f2:	43dc                	lw	a5,4(a5)
204079f4:	853e                	mv	a0,a5
204079f6:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:54
        current = current->_next;
204079f8:	fec42783          	lw	a5,-20(s0)
204079fc:	479c                	lw	a5,8(a5)
204079fe:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:52
    while (current) {
20407a02:	fec42783          	lw	a5,-20(s0)
20407a06:	f3ed                	bnez	a5,204079e8 <_metal_clock_call_all_callbacks+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:56
    }
}
20407a08:	0001                	nop
20407a0a:	50b2                	lw	ra,44(sp)
20407a0c:	5422                	lw	s0,40(sp)
20407a0e:	6145                	addi	sp,sp,48
20407a10:	8082                	ret

20407a12 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20407a12:	7179                	addi	sp,sp,-48
20407a14:	d622                	sw	s0,44(sp)
20407a16:	1800                	addi	s0,sp,48
20407a18:	fca42e23          	sw	a0,-36(s0)
20407a1c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20407a20:	fd842783          	lw	a5,-40(s0)
20407a24:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:66

    if (!list) {
20407a28:	fdc42783          	lw	a5,-36(s0)
20407a2c:	e781                	bnez	a5,20407a34 <_metal_clock_append_to_callbacks+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:67
        return cb;
20407a2e:	fd842783          	lw	a5,-40(s0)
20407a32:	a035                	j	20407a5e <_metal_clock_append_to_callbacks+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20407a34:	fdc42783          	lw	a5,-36(s0)
20407a38:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20407a3c:	a031                	j	20407a48 <_metal_clock_append_to_callbacks+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:73
        current = current->_next;
20407a3e:	fec42783          	lw	a5,-20(s0)
20407a42:	479c                	lw	a5,8(a5)
20407a44:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20407a48:	fec42783          	lw	a5,-20(s0)
20407a4c:	479c                	lw	a5,8(a5)
20407a4e:	fbe5                	bnez	a5,20407a3e <_metal_clock_append_to_callbacks+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20407a50:	fec42783          	lw	a5,-20(s0)
20407a54:	fd842703          	lw	a4,-40(s0)
20407a58:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:78

    return list;
20407a5a:	fdc42783          	lw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:79
}
20407a5e:	853e                	mv	a0,a5
20407a60:	5432                	lw	s0,44(sp)
20407a62:	6145                	addi	sp,sp,48
20407a64:	8082                	ret

20407a66 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20407a66:	1101                	addi	sp,sp,-32
20407a68:	ce06                	sw	ra,28(sp)
20407a6a:	cc22                	sw	s0,24(sp)
20407a6c:	1000                	addi	s0,sp,32
20407a6e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20407a72:	fec42783          	lw	a5,-20(s0)
20407a76:	439c                	lw	a5,0(a5)
20407a78:	439c                	lw	a5,0(a5)
20407a7a:	fec42503          	lw	a0,-20(s0)
20407a7e:	9782                	jalr	a5
20407a80:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:112
}
20407a82:	853e                	mv	a0,a5
20407a84:	40f2                	lw	ra,28(sp)
20407a86:	4462                	lw	s0,24(sp)
20407a88:	6105                	addi	sp,sp,32
20407a8a:	8082                	ret

20407a8c <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20407a8c:	7179                	addi	sp,sp,-48
20407a8e:	d606                	sw	ra,44(sp)
20407a90:	d422                	sw	s0,40(sp)
20407a92:	1800                	addi	s0,sp,48
20407a94:	fca42e23          	sw	a0,-36(s0)
20407a98:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20407a9c:	fdc42783          	lw	a5,-36(s0)
20407aa0:	43dc                	lw	a5,4(a5)
20407aa2:	853e                	mv	a0,a5
20407aa4:	f2fff0ef          	jal	ra,204079d2 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20407aa8:	fdc42783          	lw	a5,-36(s0)
20407aac:	439c                	lw	a5,0(a5)
20407aae:	43dc                	lw	a5,4(a5)
20407ab0:	fd842583          	lw	a1,-40(s0)
20407ab4:	fdc42503          	lw	a0,-36(s0)
20407ab8:	9782                	jalr	a5
20407aba:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20407abe:	fdc42783          	lw	a5,-36(s0)
20407ac2:	479c                	lw	a5,8(a5)
20407ac4:	853e                	mv	a0,a5
20407ac6:	f0dff0ef          	jal	ra,204079d2 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:135

    return out;
20407aca:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:136
}
20407ace:	853e                	mv	a0,a5
20407ad0:	50b2                	lw	ra,44(sp)
20407ad2:	5422                	lw	s0,40(sp)
20407ad4:	6145                	addi	sp,sp,48
20407ad6:	8082                	ret

20407ad8 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20407ad8:	1101                	addi	sp,sp,-32
20407ada:	ce06                	sw	ra,28(sp)
20407adc:	cc22                	sw	s0,24(sp)
20407ade:	1000                	addi	s0,sp,32
20407ae0:	fea42623          	sw	a0,-20(s0)
20407ae4:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20407ae8:	fec42783          	lw	a5,-20(s0)
20407aec:	43dc                	lw	a5,4(a5)
20407aee:	fe842583          	lw	a1,-24(s0)
20407af2:	853e                	mv	a0,a5
20407af4:	f1fff0ef          	jal	ra,20407a12 <_metal_clock_append_to_callbacks>
20407af8:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20407afa:	fec42783          	lw	a5,-20(s0)
20407afe:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:149
}
20407b00:	0001                	nop
20407b02:	40f2                	lw	ra,28(sp)
20407b04:	4462                	lw	s0,24(sp)
20407b06:	6105                	addi	sp,sp,32
20407b08:	8082                	ret

20407b0a <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20407b0a:	1101                	addi	sp,sp,-32
20407b0c:	ce06                	sw	ra,28(sp)
20407b0e:	cc22                	sw	s0,24(sp)
20407b10:	1000                	addi	s0,sp,32
20407b12:	fea42623          	sw	a0,-20(s0)
20407b16:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20407b1a:	fec42783          	lw	a5,-20(s0)
20407b1e:	479c                	lw	a5,8(a5)
20407b20:	fe842583          	lw	a1,-24(s0)
20407b24:	853e                	mv	a0,a5
20407b26:	eedff0ef          	jal	ra,20407a12 <_metal_clock_append_to_callbacks>
20407b2a:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20407b2c:	fec42783          	lw	a5,-20(s0)
20407b30:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:162
}
20407b32:	0001                	nop
20407b34:	40f2                	lw	ra,28(sp)
20407b36:	4462                	lw	s0,24(sp)
20407b38:	6105                	addi	sp,sp,32
20407b3a:	8082                	ret

20407b3c <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20407b3c:	1101                	addi	sp,sp,-32
20407b3e:	ce06                	sw	ra,28(sp)
20407b40:	cc22                	sw	s0,24(sp)
20407b42:	1000                	addi	s0,sp,32
20407b44:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20407b48:	fec42783          	lw	a5,-20(s0)
20407b4c:	439c                	lw	a5,0(a5)
20407b4e:	57dc                	lw	a5,44(a5)
20407b50:	fec42503          	lw	a0,-20(s0)
20407b54:	9782                	jalr	a5
20407b56:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:226
}
20407b58:	853e                	mv	a0,a5
20407b5a:	40f2                	lw	ra,28(sp)
20407b5c:	4462                	lw	s0,24(sp)
20407b5e:	6105                	addi	sp,sp,32
20407b60:	8082                	ret

20407b62 <metal_cpu_get>:
metal_cpu_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20407b62:	1101                	addi	sp,sp,-32
20407b64:	ce22                	sw	s0,28(sp)
20407b66:	1000                	addi	s0,sp,32
20407b68:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20407b6c:	fec42783          	lw	a5,-20(s0)
20407b70:	eb89                	bnez	a5,20407b82 <metal_cpu_get+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20407b72:	fec42703          	lw	a4,-20(s0)
20407b76:	070a                	slli	a4,a4,0x2
20407b78:	80c18793          	addi	a5,gp,-2036 # 80000a84 <__metal_cpu_table>
20407b7c:	97ba                	add	a5,a5,a4
20407b7e:	439c                	lw	a5,0(a5)
20407b80:	a011                	j	20407b84 <metal_cpu_get+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:11
    }
    return NULL;
20407b82:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:12
}
20407b84:	853e                	mv	a0,a5
20407b86:	4472                	lw	s0,28(sp)
20407b88:	6105                	addi	sp,sp,32
20407b8a:	8082                	ret

20407b8c <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20407b8c:	1101                	addi	sp,sp,-32
20407b8e:	ce22                	sw	s0,28(sp)
20407b90:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20407b92:	f14027f3          	csrr	a5,mhartid
20407b96:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:18
    return mhartid;
20407b9a:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:20
#endif
}
20407b9e:	853e                	mv	a0,a5
20407ba0:	4472                	lw	s0,28(sp)
20407ba2:	6105                	addi	sp,sp,32
20407ba4:	8082                	ret

20407ba6 <metal_shutdown>:
metal_shutdown():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20407ba6:	1101                	addi	sp,sp,-32
20407ba8:	ce22                	sw	s0,28(sp)
20407baa:	1000                	addi	s0,sp,32
20407bac:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20407bb0:	0001                	nop
20407bb2:	bffd                	j	20407bb0 <metal_shutdown+0xa>
	...

20407c00 <__metal_vector_table>:
IRQ_0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20407c00:	d32fc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c04 <IRQ_1>:
IRQ_1():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20407c04:	d2efc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c08 <IRQ_2>:
IRQ_2():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20407c08:	d2afc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c0c <IRQ_3>:
IRQ_3():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20407c0c:	d54fc06f          	j	20404160 <metal_software_interrupt_vector_handler>

20407c10 <IRQ_4>:
IRQ_4():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20407c10:	d22fc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c14 <IRQ_5>:
IRQ_5():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20407c14:	d1efc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c18 <IRQ_6>:
IRQ_6():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20407c18:	d1afc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c1c <IRQ_7>:
IRQ_7():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20407c1c:	e36fc06f          	j	20404252 <metal_timer_interrupt_vector_handler>

20407c20 <IRQ_8>:
IRQ_8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20407c20:	d12fc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c24 <IRQ_9>:
IRQ_9():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20407c24:	d0efc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c28 <IRQ_10>:
IRQ_10():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20407c28:	d0afc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c2c <IRQ_11>:
IRQ_11():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20407c2c:	d06fc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c30 <IRQ_12>:
IRQ_12():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20407c30:	d02fc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c34 <IRQ_13>:
IRQ_13():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20407c34:	cfefc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c38 <IRQ_14>:
IRQ_14():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20407c38:	cfafc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c3c <IRQ_15>:
IRQ_15():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20407c3c:	cf6fc06f          	j	20404132 <metal_interrupt_vector_handler>

20407c40 <IRQ_LC0>:
IRQ_LC0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20407c40:	937fc06f          	j	20404576 <metal_lc0_interrupt_vector_handler>

20407c44 <IRQ_LC1>:
IRQ_LC1():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20407c44:	9c5fc06f          	j	20404608 <metal_lc1_interrupt_vector_handler>

20407c48 <IRQ_LC2>:
IRQ_LC2():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20407c48:	a53fc06f          	j	2040469a <metal_lc2_interrupt_vector_handler>

20407c4c <IRQ_LC3>:
IRQ_LC3():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20407c4c:	ae1fc06f          	j	2040472c <metal_lc3_interrupt_vector_handler>

20407c50 <IRQ_LC4>:
IRQ_LC4():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20407c50:	b6ffc06f          	j	204047be <metal_lc4_interrupt_vector_handler>

20407c54 <IRQ_LC5>:
IRQ_LC5():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20407c54:	bfdfc06f          	j	20404850 <metal_lc5_interrupt_vector_handler>

20407c58 <IRQ_LC6>:
IRQ_LC6():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20407c58:	c8bfc06f          	j	204048e2 <metal_lc6_interrupt_vector_handler>

20407c5c <IRQ_LC7>:
IRQ_LC7():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20407c5c:	d19fc06f          	j	20404974 <metal_lc7_interrupt_vector_handler>

20407c60 <IRQ_LC8>:
IRQ_LC8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20407c60:	da7fc06f          	j	20404a06 <metal_lc8_interrupt_vector_handler>

20407c64 <IRQ_LC9>:
IRQ_LC9():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20407c64:	e35fc06f          	j	20404a98 <metal_lc9_interrupt_vector_handler>

20407c68 <IRQ_LC10>:
IRQ_LC10():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20407c68:	ec3fc06f          	j	20404b2a <metal_lc10_interrupt_vector_handler>

20407c6c <IRQ_LC11>:
IRQ_LC11():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20407c6c:	f51fc06f          	j	20404bbc <metal_lc11_interrupt_vector_handler>

20407c70 <IRQ_LC12>:
IRQ_LC12():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20407c70:	fdffc06f          	j	20404c4e <metal_lc12_interrupt_vector_handler>

20407c74 <IRQ_LC13>:
IRQ_LC13():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20407c74:	86cfd06f          	j	20404ce0 <metal_lc13_interrupt_vector_handler>

20407c78 <IRQ_LC14>:
IRQ_LC14():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20407c78:	8fafd06f          	j	20404d72 <metal_lc14_interrupt_vector_handler>

20407c7c <IRQ_LC15>:
IRQ_LC15():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20407c7c:	988fd06f          	j	20404e04 <metal_lc15_interrupt_vector_handler>

20407c80 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:186
{
20407c80:	1101                	addi	sp,sp,-32
20407c82:	ce22                	sw	s0,28(sp)
20407c84:	1000                	addi	s0,sp,32
20407c86:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:187
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20407c8a:	fec42703          	lw	a4,-20(s0)
20407c8e:	800007b7          	lui	a5,0x80000
20407c92:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8f0>
20407c96:	00f71763          	bne	a4,a5,20407ca4 <__metal_driver_fixed_clock_rate+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20407c9a:	00f427b7          	lui	a5,0xf42
20407c9e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20407ca2:	a825                	j	20407cda <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:190
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20407ca4:	fec42703          	lw	a4,-20(s0)
20407ca8:	800007b7          	lui	a5,0x80000
20407cac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8fc>
20407cb0:	00f71763          	bne	a4,a5,20407cbe <__metal_driver_fixed_clock_rate+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:191
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20407cb4:	044aa7b7          	lui	a5,0x44aa
20407cb8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20407cbc:	a839                	j	20407cda <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:193
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20407cbe:	fec42703          	lw	a4,-20(s0)
20407cc2:	800007b7          	lui	a5,0x80000
20407cc6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe908>
20407cca:	00f71763          	bne	a4,a5,20407cd8 <__metal_driver_fixed_clock_rate+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:194
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
20407cce:	01e857b7          	lui	a5,0x1e85
20407cd2:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20407cd6:	a011                	j	20407cda <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:197
		return 0;
20407cd8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:199
}
20407cda:	853e                	mv	a0,a5
20407cdc:	4472                	lw	s0,28(sp)
20407cde:	6105                	addi	sp,sp,32
20407ce0:	8082                	ret

20407ce2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20407ce2:	1101                	addi	sp,sp,-32
20407ce4:	ce06                	sw	ra,28(sp)
20407ce6:	cc22                	sw	s0,24(sp)
20407ce8:	1000                	addi	s0,sp,32
20407cea:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20407cee:	fec42503          	lw	a0,-20(s0)
20407cf2:	3779                	jal	20407c80 <__metal_driver_fixed_clock_rate>
20407cf4:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
}
20407cf6:	853e                	mv	a0,a5
20407cf8:	40f2                	lw	ra,28(sp)
20407cfa:	4462                	lw	s0,24(sp)
20407cfc:	6105                	addi	sp,sp,32
20407cfe:	8082                	ret

20407d00 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407d00:	1101                	addi	sp,sp,-32
20407d02:	ce06                	sw	ra,28(sp)
20407d04:	cc22                	sw	s0,24(sp)
20407d06:	1000                	addi	s0,sp,32
20407d08:	fea42623          	sw	a0,-20(s0)
20407d0c:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407d10:	fec42503          	lw	a0,-20(s0)
20407d14:	37f9                	jal	20407ce2 <__metal_driver_fixed_clock_get_rate_hz>
20407d16:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
}
20407d18:	853e                	mv	a0,a5
20407d1a:	40f2                	lw	ra,28(sp)
20407d1c:	4462                	lw	s0,24(sp)
20407d1e:	6105                	addi	sp,sp,32
20407d20:	8082                	ret

20407d22 <_exit>:
_exit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20407d22:	1101                	addi	sp,sp,-32
20407d24:	ce06                	sw	ra,28(sp)
20407d26:	cc22                	sw	s0,24(sp)
20407d28:	1000                	addi	s0,sp,32
20407d2a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20407d2e:	fec42503          	lw	a0,-20(s0)
20407d32:	e75ff0ef          	jal	ra,20407ba6 <metal_shutdown>
