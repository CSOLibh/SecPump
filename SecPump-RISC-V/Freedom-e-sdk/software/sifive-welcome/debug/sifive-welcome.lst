
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/debug/sifive-welcome.elf:     format de fichier elf32-littleriscv
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/debug/sifive-welcome.elf
architecture: riscv:rv32, fanions 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
adresse de départ 0x20400000

En-tête de programme:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x000013c8 memsz 0x000013c8 flags rwx
    LOAD off    0x00003000 vaddr 0x80000000 paddr 0x20407490 align 2**12
         filesz 0x00000ad4 memsz 0x00000ad4 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00003ad8 vaddr 0x80000ad8 paddr 0x80000ad8 align 2**12
         filesz 0x00000000 memsz 0x00000cb8 flags rw-
    LOAD off    0x00003ad4 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004400 vaddr 0x20401400 paddr 0x20401400 align 2**12
         filesz 0x0000608e memsz 0x0000608e flags r-x
    LOAD off    0x0000a48e vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections :
Idx Name              Taille    VMA       LMA       Off fich  Algn  Fanions
  0 .init             000002e6  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e8  204002e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002f4  204002f4  000012f4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00001058  20400370  20400370  00001370  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             0000608e  20401400  20401400  00004400  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000ad4  80000000  20407490  00003000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000b8  80000ad8  80000ad8  00003ad8  2**3  ALLOC
  7 .stack            00000400  80000b90  80000b90  00003ad8  2**4  ALLOC
  8 .heap             00000800  80000f90  80000f90  00003ad8  2**3  ALLOC
  9 .debug_info       0003162d  00000000  00000000  0000a48e  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     00003c5f  00000000  00000000  0003babb  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000d80  00000000  00000000  0003f720  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000b60  00000000  00000000  000404a0  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000dc08  00000000  00000000  00041000  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        000058e1  00000000  00000000  0004ec08  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  000544e9  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  00054511  2**0  CONTENTS, READONLY
 17 .debug_frame      000036cc  00000000  00000000  0005453c  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e8 l    d  .init_array	00000000 .init_array
204002f4 l    d  .ctors	00000000 .ctors
20400370 l    d  .rodata	00000000 .rodata
20401400 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000ad8 l    d  .bss	00000000 .bss
80000b90 l    d  .stack	00000000 .stack
80000f90 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000ca l     F .init	00000000 __metal_memory_scrub
20400138 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400248 l       .init	00000000 _skip_init
204013b4 l       .rodata	00000000 argv
204013b8 l       .rodata	00000000 envp
204013bc l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
204051fe l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20405218 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20405232 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20405248 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2040525c l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
2040526e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
2040527e l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20405294 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
204052a6 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20400a38 l     O .rodata	00000880 pll_configs
204052b8 l     F .text	0000004e get_pll_config_freq
2040551a l     F .text	000000ac find_closest_config
204055c6 l     F .text	000001ac configure_pll
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive-welcome.c
00000000 l    df *ABS*	00000000 findfp.c
20401c7e l     F .text	00000068 std
00000000 l    df *ABS*	00000000 riscv_clint0.c
20402602 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
2040262c l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20402654 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20402690 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
204027f0 l     F .text	00000032 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20402d26 l     F .text	00000024 __metal_driver_cpu_hartid
20402d4a l     F .text	0000002a __metal_driver_cpu_timebase
20402d74 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20402d9e l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20404754 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040477e l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
204047a8 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
204047d0 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
204047f8 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2040481a l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio-leds.c
20405950 l     F .text	0000004a __metal_driver_sifive_gpio_led_gpio
2040599a l     F .text	00000044 __metal_driver_sifive_gpio_led_pin
204059de l     F .text	0000005c __metal_driver_sifive_gpio_led_label
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20405b7e l     F .text	00000026 __metal_driver_sifive_gpio0_base
20405ba4 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20405bce l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20406432 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
2040645c l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
2040648a l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
204064b2 l     F .text	0000002e __metal_driver_sifive_uart0_clock
204064e0 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
2040650a l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20406532 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
204068fc l     F .text	000000d8 pre_rate_change_callback_func
204069d4 l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20405016 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20405030 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20405046 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
2040505a l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20405112 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
2040512c l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20405142 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405156 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
204058d8 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
20406e00 l       .text	00000000 IRQ_0
20406e04 l       .text	00000000 IRQ_1
20406e08 l       .text	00000000 IRQ_2
20406e0c l       .text	00000000 IRQ_3
20406e10 l       .text	00000000 IRQ_4
20406e14 l       .text	00000000 IRQ_5
20406e18 l       .text	00000000 IRQ_6
20406e1c l       .text	00000000 IRQ_7
20406e20 l       .text	00000000 IRQ_8
20406e24 l       .text	00000000 IRQ_9
20406e28 l       .text	00000000 IRQ_10
20406e2c l       .text	00000000 IRQ_11
20406e30 l       .text	00000000 IRQ_12
20406e34 l       .text	00000000 IRQ_13
20406e38 l       .text	00000000 IRQ_14
20406e3c l       .text	00000000 IRQ_15
20406e40 l       .text	00000000 IRQ_LC0
20406e44 l       .text	00000000 IRQ_LC1
20406e48 l       .text	00000000 IRQ_LC2
20406e4c l       .text	00000000 IRQ_LC3
20406e50 l       .text	00000000 IRQ_LC4
20406e54 l       .text	00000000 IRQ_LC5
20406e58 l       .text	00000000 IRQ_LC6
20406e5c l       .text	00000000 IRQ_LC7
20406e60 l       .text	00000000 IRQ_LC8
20406e64 l       .text	00000000 IRQ_LC9
20406e68 l       .text	00000000 IRQ_LC10
20406e6c l       .text	00000000 IRQ_LC11
20406e70 l       .text	00000000 IRQ_LC12
20406e74 l       .text	00000000 IRQ_LC13
20406e78 l       .text	00000000 IRQ_LC14
20406e7c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20406e80 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000ad0 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 __atexit.c
80000aec l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
80000ae4 l     O .bss	00000004 init_done.1531
80000ae8 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002f4 l       .init_array	00000000 metal_constructors_end
204002f8 l       .init_array	00000000 __fini_array_end
204002f8 l       .init_array	00000000 metal_destructors_end
204002f8 l       .init_array	00000000 metal_destructors_start
204002f8 l       .init_array	00000000 __fini_array_start
204002e8 l       .init_array	00000000 __init_array_end
204002e8 l       .init_array	00000000 __preinit_array_end
204002e8 l       .init_array	00000000 __init_array_start
204002e8 l       .init_array	00000000 metal_constructors_start
204002e8 l       .init_array	00000000 __preinit_array_start
2040176a g     F .text	0000002c putchar
20401374 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20405a3a g     F .text	00000036 __metal_driver_led_exist
204023ae g     F .text	00000026 metal_cpu_timer_get_interrupt_id
2040229e g     F .text	0000002a _isatty_r
204071d4 g     F .text	00000012 strcpy
20403652  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401818 g     F .text	000000da _puts_r
204022c8 g     F .text	0000002e _lseek_r
20406b66 g     F .text	00000026 metal_clock_get_rate_hz
2040685c g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
204029c8 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
204066b0 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
204035bc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20403e42 g     F .text	00000064 __metal_valid_interrupt_id
20406d24 g     F .text	00000040 metal_gpio_toggle_pin
204002ec g     O .init_array	00000004 _use_hfxosc_ptr
204042c2 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80001280 g       .data	00000000 __global_pointer$
2040034a g     F .ctors	00000024 metal_tty_init
20402388 g     F .text	00000026 metal_cpu_timer_interrupt_controller
20402548 g     F .text	00000024 metal_led_off
20406b12 g     F .text	00000054 _metal_clock_append_to_callbacks
20404874 g     F .text	00000046 __metal_plic0_complete_interrupt
20404092 g     F .text	000001d8 __metal_driver_riscv_cpu_controller_interrupt_register
204002e8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
204021de g     F .text	00000036 __sseek
20401d34 g     F .text	0000006a __sinit
204012e4 g     O .rodata	00000014 __metal_driver_vtable_sifive_led
20401900 g     F .text	000000c0 __swbuf_r
80000ad8 g       .data	00000000 __tls_base
20401cf0 g     F .text	00000044 __sfmoreglue
204022f8 g     F .text	00000002 __malloc_unlock
204023fa g     F .text	0000002e metal_cpu_get
20402524 g     F .text	00000024 metal_led_on
80000a38 g     O .data	00000020 __metal_dt_serial_10013000
2040600c g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20400834 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000b90 g       .bss	00000000 metal_segment_bss_target_end
204026c0 g     F .text	0000009a __metal_clint0_mtime_get
204046c8 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20406774 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20405dc2 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
204070c4 g     F .text	0000000c __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20406680 g     F .text	00000030 __metal_driver_sifive_uart0_txready
2040660e g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20406c7c g     F .text	00000040 metal_gpio_enable_output
2040014a g     F .init	0000000e __metal_synchronize_harts
80000ad8 g       .data	00000000 metal_segment_bss_target_start
2040275a g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20402272 g     F .text	0000002c _fstat_r
2040625c g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000b8c g     O .bss	00000004 errno
204053aa g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20406bd8 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20405aba g     F .text	00000042 __metal_driver_led_on
20403940  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000d6  w    F .init	00000000 __metal_before_start
20407426  w    F .text	00000016 metal_init_run
204009d4 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20400990 g     O .rodata	00000044 __metal_driver_vtable_cpu
20406dcc g     F .text	0000002e metal_uart_set_baud_rate
20406a02 g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
80000b78 g     O .bss	00000004 cpu
2040434e g     F .text	00000072 __metal_driver_cpu_mcycle_get
204012b8 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000f90 g       .heap	00000000 metal_segment_heap_target_start
20401ce6 g     F .text	0000000a _cleanup_r
80000a94 g     O .data	00000008 __metal_dt_cpu_0
204038aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20405772 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20404f7a g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
204018f2 g     F .text	0000000e puts
20403b98  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20406cbc g     F .text	00000068 metal_gpio_set_pin
20402f30 g     F .text	00000018 __metal_default_exception_handler
20406f48 g     F .text	00000026 _fstat
20402cf2 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
204042de g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20402dc2 g     F .text	00000030 __metal_driver_cpu_get
2040092c g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20402e24 g     F .text	00000018 __metal_interrupt_global_disable
20404fee g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20402500 g     F .text	00000024 metal_led_enable
20403814  w    F .text	00000096 metal_lc7_interrupt_vector_handler
204039d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20402136 g     F .text	0000002a _sbrk_r
20404d9a g     F .text	00000050 __metal_driver_riscv_plic0_disable
20403f62 g     F .text	0000004e __metal_exception_register
2040256c g     F .text	00000096 metal_led_get_rgb
20407336 g     F .text	00000078 metal_init
204022fa g     F .text	0000002e _read_r
204044e2 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20405ea4 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20403020 g     F .text	00000068 __metal_default_sw_handler
20406c0a g     F .text	00000032 metal_clock_register_post_rate_change_callback
80000078 g     O .data	0000000c __metal_dt_clock_2
2040655c g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20406f6e g     F .text	00000020 _isatty
20405f6a g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
2040659c g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
80000ac8 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000a84 g     O .data	00000004 _global_impure_ptr
20403088  w    F .text	00000092 metal_timer_interrupt_vector_handler
20407132 g     F .text	0000006a __libc_init_array
20405afc g     F .text	00000042 __metal_driver_led_off
80000aa8 g     O .data	00000004 __metal_dt_led_2
20405ee4 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20403a6c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
204051dc g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
2040426a g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20406fe2 g     F .text	0000006a _sbrk
20405e5e g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20406ad2 g     F .text	00000040 _metal_clock_call_all_callbacks
204002c4 g     F .init	00000002 _init
20402e86 g     F .text	0000001a __metal_interrupt_timer_disable
20406056 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
204045a0 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20401338 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
204065d6 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20405faa g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
204070fa g     F .text	00000038 __libc_fini_array
80000a70 g     O .data	0000000c __metal_dt_clock_4
204073ae g     F .text	00000078 metal_fini
204063e4 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2040452a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20404734 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20402ed8 g     F .text	0000002c __metal_interrupt_local_enable
20402cbe g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20407452 g     F .text	00000028 metal_tty_putc
20404a72 g     F .text	00000018 __metal_plic0_default_handler
2040704c  w    F .text	0000006e write
20401796 g     F .text	00000082 _putc_r
00000000 g       *ABS*	00000000 __tbss_size
8000006c g     O .data	0000000c __metal_dt_clock_0
2040719c g     F .text	00000020 strcat
00000800 g       *ABS*	00000000 __heap_size
20404dea g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
2040311a g     F .text	00000016 __metal_default_beu_handler
204007d4 g     O .rodata	00000020 __sf_fake_stderr
20402328 g     F .text	0000002a metal_cpu_get_mtime
20402ebc g     F .text	0000001c __metal_interrupt_external_disable
2040657c g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20404332 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20403fb0 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20404682 g     F .text	00000046 __metal_driver_cpu_exception_register
20402e3c g     F .text	00000018 __metal_interrupt_software_enable
20403490  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20401fac g     F .text	000000ac _free_r
80000ae0 g     O .bss	00000004 _global_atexit
2040493a g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20403d5a g     F .text	00000050 __metal_controller_interrupt_vector_mode
2040726e g     F .text	000000c8 __call_exitprocs
80000f90 g       .stack	00000000 _sp
204002f0 g     O .init_array	00000004 _metal_tty_init_ptr
20400158 g     F .init	00000000 _start
2040506c g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20406f8e g     F .text	0000002a _lseek
20404662 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
204046f6 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20402ea0 g     F .text	0000001c __metal_interrupt_external_enable
204071e6 g     F .text	00000088 __register_exitproc
204067a4 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20404b30 g     F .text	00000158 __metal_driver_riscv_plic0_init
20404d4a g     F .text	00000050 __metal_driver_riscv_plic0_enable
20405e32 g     F .text	0000002c __metal_driver_sifive_gpio0_output
2040377e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20402df2 g     F .text	0000001a __metal_myhart_id
20406404 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20402f8e  w    F .text	00000092 metal_software_interrupt_vector_handler
20404296 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20402248 g     F .text	0000002a _close_r
2040683c g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
204028aa g     F .text	000000da __metal_driver_riscv_clint0_register
20406c3c g     F .text	00000040 metal_gpio_disable_input
80000a8c g     O .data	00000008 __metal_dt_clint_2000000
204019c0 g     F .text	00000110 __swsetup_r
20402466 g     F .text	0000003e metal_interrupt_register_handler
20401d9e g     F .text	0000009e __sfp
20406b8c g     F .text	0000004c metal_clock_set_rate_hz
20402160 g     F .text	00000030 __sread
20405d82 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002c6  w    F .init	00000000 secondary_main
20402f60  w    F .text	0000002e metal_interrupt_vector_handler
204022f6 g     F .text	00000002 __malloc_lock
20406648 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
80000b7c g     O .bss	00000004 tmr_intr
20401c1a g     F .text	00000064 _fflush_r
20404900 g     F .text	0000003a __metal_plic0_get_threshold
204058ea g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
204007f4 g     O .rodata	00000020 __sf_fake_stdin
20403ea6 g     F .text	000000bc __metal_local_interrupt_enable
20402b88 g     F .text	00000136 __metal_driver_riscv_clint0_command_request
20401f9c g     F .text	00000010 memset
204036e8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
204015ba g     F .text	000001b0 main
80000ad8 g       .data	00000000 metal_segment_data_target_end
2040672a g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
80000ab0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
2040453e g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20404602 g     F .text	00000060 __metal_driver_cpu_get_msip
20406d64 g     F .text	0000000e metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20404714 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20405b3e g     F .text	00000040 __metal_driver_led_toggle
20404838 g     F .text	0000003c __metal_plic0_claim_interrupt
204066fa g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20402214 g     F .text	00000006 __sclose
80000060  w    O .data	0000000c __metal_led_table
20403b02  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20400092 g     F .init	00000000 metal_mem_scrub
80000aa4 g     O .data	00000004 __metal_dt_led_1
20402058 g     F .text	000000de _malloc_r
204029ac g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
20405a70 g     F .text	0000004a __metal_driver_led_enable
80000aac g     O .data	00000004 __metal_dt_prci_10008000
204043c0 g     F .text	00000046 __metal_driver_cpu_timebase_get
20404ede g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20402428 g     F .text	0000001a metal_cpu_get_current_hartid
204071bc g     F .text	00000018 strcmp
20405168 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20406e00 g       .text	00000000 __metal_vector_table
204013c8 g       *ABS*	00000000 metal_segment_itim_source_start
80000a88  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002c4 g     F .init	00000002 _fini
80000000 g       .rodata	00000000 metal_segment_lim_target_start
2040499c g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20401400 g     F .text	0000010c display_banner
20400320 g     F .ctors	0000002a use_hfxosc
20402e0c g     F .text	00000018 __metal_interrupt_global_enable
204070ba g     F .text	0000000a atexit
2040221a g     F .text	0000002e _write_r
20402e6c g     F .text	0000001a __metal_interrupt_timer_enable
2040153c g     F .text	0000007e wait_for_timer
204067e6 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20402ad2 g     F .text	000000b6 __metal_driver_riscv_clint0_disable
80000a80 g     O .data	00000004 _impure_ptr
2040446c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401ad0 g     F .text	0000014a __sflush_r
20404e1a g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20405306 g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000084 g     O .data	0000000c __metal_dt_clock_5
80000b80 g     O .bss	00000004 cpu_intr
20405918 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20406ee2 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20402a20 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20407490 g       *ABS*	00000000 metal_segment_data_source_start
2040013c g       .init	00000000 early_trap_vector
80001790 g       .heap	00000000 metal_segment_heap_target_end
20403daa g     F .text	00000098 __metal_controller_interrupt_vector
80000a64 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20401ea8 g     F .text	00000058 __swhatbuf_r
20405f24 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20403130 g     F .text	00000066 __metal_default_timer_handler
2040704c g     F .text	0000006e _write
20404a8a g     F .text	000000a6 __metal_plic0_handler
20403526  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20403cc4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
204023d4 g     F .text	00000026 metal_cpu_interrupt_controller
20402442 g     F .text	00000024 metal_interrupt_init
20402190 g     F .text	0000004e __swrite
20402352 g     F .text	00000036 metal_cpu_set_mtimecmp
204070d0 g     F .text	0000002a exit
20401e3c g     F .text	0000006c _fwalk_reent
20406f02 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
204013c8 g       *ABS*	00000000 metal_segment_lim_source_start
20400814 g     O .rodata	00000020 __sf_fake_stdout
80000a9c g     O .data	00000004 __metal_dt_gpio_10012000
20402f48 g     F .text	00000018 __metal_default_interrupt_handler
204024a4 g     F .text	0000002e metal_interrupt_enable
20406d9e g     F .text	0000002e metal_uart_putc
20406fb8 g     F .text	0000002a _read
2040743c  w    F .text	00000016 metal_fini_run
20405e08 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403200 g     F .text	00000180 __metal_exception_handler
204033fa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
2040747a g     F .text	00000014 _exit
2040150c g     F .text	00000030 timer_isr
20404406 g     F .text	00000066 __metal_driver_cpu_mtime_get
20401f00 g     F .text	0000009c __smakebuf_r
20402984 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
80000adc g     O .bss	00000004 __malloc_sbrk_start
80000b84 g     O .bss	00000004 timer_isr_flag
20403c2e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000ab8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20402822 g     F .text	00000088 __metal_driver_riscv_clint0_init
80000ad8 g     O .bss	00000004 __malloc_free_list
204002f4 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
80000b88 g     O .bss	00000004 tmr_id
204044fc g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
204049d0 g     F .text	000000a2 __metal_plic0_enable
20400090  w      .init	00000000 __register_frame_info
204050f0 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20404510 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20402f04 g     F .text	0000002c __metal_interrupt_local_disable
20402e54 g     F .text	00000018 __metal_interrupt_software_disable
20406d72 g     F .text	0000002c metal_uart_init
80000a58 g     O .data	0000000c __metal_dt_clock_3
204048ba g     F .text	00000046 __metal_plic0_set_threshold
80000aa0 g     O .data	00000004 __metal_dt_led_0
20404e42 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20406f26 g     F .text	00000022 _close
80000ac0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20404c88 g     F .text	000000c2 __metal_driver_riscv_plic0_register
204024d2 g     F .text	0000002e metal_interrupt_disable



Déassemblage de la section .init :

20400000 <_enter>:
_enter():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	28018193          	addi	gp,gp,640 # 80001280 <__global_pointer$>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11c28293          	addi	t0,t0,284 # 2040013c <early_trap_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	dfc00117          	auipc	sp,0xdfc00
20400030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400034:	00011463          	bnez	sp,2040003c <_enter+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:56
    la sp, _sp
20400038:	d1018113          	addi	sp,gp,-752 # 80000f90 <_sp>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2040003c:	f1402573          	csrr	a0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:60
    li t0, 0
20400040:	4281                	li	t0,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:61
    la t1, __stack_size
20400042:	40000313          	li	t1,1024
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400046:	ff017113          	andi	sp,sp,-16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2040004a:	00a28563          	beq	t0,a0,20400054 <_enter+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004e:	911a                	add	sp,sp,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20400050:	0285                	addi	t0,t0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:67
    j 1b
20400052:	bfd5                	j	20400046 <_enter+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400054:	00000097          	auipc	ra,0x0
20400058:	08208093          	addi	ra,ra,130 # 204000d6 <__metal_before_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:77
    beqz ra, 1f
2040005c:	00008363          	beqz	ra,20400062 <_enter+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:78
    jalr ra
20400060:	9082                	jalr	ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400062:	f1402573          	csrr	a0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:85
    li a1, 0
20400066:	4581                	li	a1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:86
    li a2, 0
20400068:	4601                	li	a2,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:87
    call _start
2040006a:	20fd                	jal	20400158 <_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2040006c:	dfc00097          	auipc	ra,0xdfc00
20400070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:93
    beqz ra, 1f
20400074:	00008363          	beqz	ra,2040007a <_enter+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:94
    jalr ra
20400078:	9082                	jalr	ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2040007a:	00000297          	auipc	t0,0x0
2040007e:	00c28293          	addi	t0,t0,12 # 20400086 <_enter+0x86>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20400082:	30529073          	csrw	mtvec,t0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20400086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:103
     j 1b
2040008a:	bff5                	j	20400086 <_enter+0x86>
2040008c:	0000                	unimp
	...

20400090 <__register_frame_info>:
__register_frame_info():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400090:	8082                	ret

20400092 <metal_mem_scrub>:
metal_mem_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
20400092:	46a1                	li	a3,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20400094:	3006b373          	csrrc	t1,mstatus,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400098:	00400293          	li	t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
2040009c:	0055c563          	blt	a1,t0,204000a6 <metal_mem_scrub+0x14>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
204000a0:	00357613          	andi	a2,a0,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
204000a4:	ca11                	beqz	a2,204000b8 <metal_mem_scrub+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
204000a6:	00050023          	sb	zero,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000aa:	0505                	addi	a0,a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000ac:	15fd                	addi	a1,a1,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000ae:	feb047e3          	bgtz	a1,2040009c <metal_mem_scrub+0xa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000b2:	30031073          	csrw	mstatus,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:39
    ret
204000b6:	8082                	ret
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000b8:	00052023          	sw	zero,0(a0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000bc:	0511                	addi	a0,a0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000be:	15f1                	addi	a1,a1,-4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000c0:	fcb04ee3          	bgtz	a1,2040009c <metal_mem_scrub+0xa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000c4:	30031073          	csrw	mstatus,t1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:46
    ret
204000c8:	8082                	ret

204000ca <__metal_memory_scrub>:
__metal_memory_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000ca:	00032023          	sw	zero,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000ce:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000d0:	fe734de3          	blt	t1,t2,204000ca <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000d4:	8082                	ret

204000d6 <__metal_before_start>:
__metal_before_start():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000d6:	8406                	mv	s0,ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000d8:	dfc00297          	auipc	t0,0xdfc00
204000dc:	f2828293          	addi	t0,t0,-216 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000e0:	04028c63          	beqz	t0,20400138 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000e4:	dfc00297          	auipc	t0,0xdfc00
204000e8:	f1c28293          	addi	t0,t0,-228 # 0 <__metal_boot_hart>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000ec:	f14027f3          	csrr	a5,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000f0:	46a1                	li	a3,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000f2:	3006b073          	csrc	mstatus,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000f6:	830a                	mv	t1,sp
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000f8:	dfc00397          	auipc	t2,0xdfc00
204000fc:	30838393          	addi	t2,t2,776 # 400 <__stack_size>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20400100:	938a                	add	t2,t2,sp
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
20400102:	00730363          	beq	t1,t2,20400108 <__metal_before_start+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20400106:	37d1                	jal	204000ca <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20400108:	02579863          	bne	a5,t0,20400138 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
2040010c:	5fc00317          	auipc	t1,0x5fc00
20400110:	ef430313          	addi	t1,t1,-268 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
20400114:	5fc01397          	auipc	t2,0x5fc01
20400118:	9c438393          	addi	t2,t2,-1596 # 80000ad8 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
2040011c:	00730363          	beq	t1,t2,20400122 <__metal_before_start+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400120:	376d                	jal	204000ca <__metal_memory_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20400122:	5fc00317          	auipc	t1,0x5fc00
20400126:	ede30313          	addi	t1,t1,-290 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
2040012a:	5fc00397          	auipc	t2,0x5fc00
2040012e:	ed638393          	addi	t2,t2,-298 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20400132:	00730363          	beq	t1,t2,20400138 <skip_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20400136:	3f51                	jal	204000ca <__metal_memory_scrub>

20400138 <skip_scrub>:
skip_scrub():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20400138:	80a2                	mv	ra,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/scrub.S:130
    ret
2040013a:	8082                	ret

2040013c <early_trap_vector>:
early_trap_vector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
2040013c:	342022f3          	csrr	t0,mcause
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400140:	34102373          	csrr	t1,mepc
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:66
    csrr t2, mtval
20400144:	343023f3          	csrr	t2,mtval
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/trap.S:67
    j early_trap_vector
20400148:	bfd5                	j	2040013c <early_trap_vector>

2040014a <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
2040014a:	1141                	addi	sp,sp,-16
2040014c:	c622                	sw	s0,12(sp)
2040014e:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400150:	0001                	nop
20400152:	4432                	lw	s0,12(sp)
20400154:	0141                	addi	sp,sp,16
20400156:	8082                	ret

20400158 <_start>:
_start():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400158:	8406                	mv	s0,ra
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
2040015a:	5fc01197          	auipc	gp,0x5fc01
2040015e:	12618193          	addi	gp,gp,294 # 80001280 <__global_pointer$>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20400162:	00000293          	li	t0,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20400166:	0e551163          	bne	a0,t0,20400248 <_skip_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2040016a:	00007297          	auipc	t0,0x7
2040016e:	32628293          	addi	t0,t0,806 # 20407490 <metal_segment_data_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
20400172:	5fc00317          	auipc	t1,0x5fc00
20400176:	e8e30313          	addi	t1,t1,-370 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
2040017a:	5fc01397          	auipc	t2,0x5fc01
2040017e:	95e38393          	addi	t2,t2,-1698 # 80000ad8 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
20400182:	00628c63          	beq	t0,t1,2040019a <_start+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20400186:	00735a63          	bge	t1,t2,2040019a <_start+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2040018a:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2040018e:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400190:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20400194:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20400196:	fe734ae3          	blt	t1,t2,2040018a <_start+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
2040019a:	00001297          	auipc	t0,0x1
2040019e:	22e28293          	addi	t0,t0,558 # 204013c8 <metal_segment_itim_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
204001a2:	5fc00317          	auipc	t1,0x5fc00
204001a6:	e5e30313          	addi	t1,t1,-418 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001aa:	5fc00397          	auipc	t2,0x5fc00
204001ae:	e5638393          	addi	t2,t2,-426 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001b2:	00628c63          	beq	t0,t1,204001ca <_start+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001b6:	00735a63          	bge	t1,t2,204001ca <_start+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001ba:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001be:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001c0:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001c4:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001c6:	fe734ae3          	blt	t1,t2,204001ba <_start+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001ca:	0000100f          	fence.i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001ce:	00001297          	auipc	t0,0x1
204001d2:	1fa28293          	addi	t0,t0,506 # 204013c8 <metal_segment_itim_source_start>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001d6:	5fc00317          	auipc	t1,0x5fc00
204001da:	e2a30313          	addi	t1,t1,-470 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001de:	5fc00397          	auipc	t2,0x5fc00
204001e2:	e2238393          	addi	t2,t2,-478 # 80000000 <metal_segment_itim_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001e6:	00628c63          	beq	t0,t1,204001fe <_start+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001ea:	00735a63          	bge	t1,t2,204001fe <_start+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001ee:	0002a503          	lw	a0,0(t0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001f2:	0291                	addi	t0,t0,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001f4:	00a32023          	sw	a0,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f8:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001fa:	fe734ae3          	blt	t1,t2,204001ee <_start+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001fe:	0000100f          	fence.i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20400202:	5fc01317          	auipc	t1,0x5fc01
20400206:	8d630313          	addi	t1,t1,-1834 # 80000ad8 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
2040020a:	91018393          	addi	t2,gp,-1776 # 80000b90 <metal_segment_bss_target_end>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2040020e:	00735763          	bge	t1,t2,2040021c <_start+0xc4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20400212:	00032023          	sw	zero,0(t1)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20400216:	0311                	addi	t1,t1,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400218:	fe734de3          	blt	t1,t2,20400212 <_start+0xba>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
2040021c:	5fc01217          	auipc	tp,0x5fc01
20400220:	8bc20213          	addi	tp,tp,-1860 # 80000ad8 <__tls_base>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400224:	c211                	beqz	a2,20400228 <_start+0xd0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  jalr a2
20400226:	9602                	jalr	a2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400228:	00007517          	auipc	a0,0x7
2040022c:	ed250513          	addi	a0,a0,-302 # 204070fa <__libc_fini_array>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:172
  call atexit
20400230:	68b060ef          	jal	ra,204070ba <atexit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20400234:	6ff060ef          	jal	ra,20407132 <__libc_init_array>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400238:	00007517          	auipc	a0,0x7
2040023c:	20450513          	addi	a0,a0,516 # 2040743c <metal_fini_run>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  call atexit
20400240:	67b060ef          	jal	ra,204070ba <atexit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20400244:	1e2070ef          	jal	ra,20407426 <metal_init_run>

20400248 <_skip_init>:
_skip_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400248:	3709                	jal	2040014a <__metal_synchronize_harts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
2040024a:	56fd                	li	a3,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
2040024c:	3046b073          	csrc	mie,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20400250:	3446b073          	csrc	mip,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20400254:	301027f3          	csrr	a5,misa
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400258:	00042737          	lui	a4,0x42
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
2040025c:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2040025e:	c709                	beqz	a4,20400268 <_skip_init+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20400260:	3036b073          	csrc	mideleg,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20400264:	3026b073          	csrc	medeleg,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400268:	00040737          	lui	a4,0x40
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
2040026c:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2040026e:	c319                	beqz	a4,20400274 <_skip_init+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20400270:	1806b073          	csrc	satp,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20400274:	00010737          	lui	a4,0x10
20400278:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
2040027c:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2040027e:	cb89                	beqz	a5,20400290 <_skip_init+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20400280:	300027f3          	csrr	a5,mstatus
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20400284:	6709                	lui	a4,0x2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20400286:	8fd9                	or	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20400288:	30079073          	csrw	mstatus,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
2040028c:	00305073          	csrwi	fcsr,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20400290:	301027f3          	csrr	a5,misa
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
20400294:	00200737          	lui	a4,0x200
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20400298:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
2040029a:	c799                	beqz	a5,204002a8 <_skip_init+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
2040029c:	300027f3          	csrr	a5,mstatus
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
204002a0:	2007e793          	ori	a5,a5,512
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
204002a4:	30079073          	csrw	mstatus,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
204002a8:	4505                	li	a0,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002aa:	00001597          	auipc	a1,0x1
204002ae:	10a58593          	addi	a1,a1,266 # 204013b4 <argv>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002b2:	00001617          	auipc	a2,0x1
204002b6:	10660613          	addi	a2,a2,262 # 204013b8 <envp>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002ba:	2031                	jal	204002c6 <secondary_main>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002bc:	615060ef          	jal	ra,204070d0 <exit>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002c0:	80a2                	mv	ra,s0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:248
  ret
204002c2:	8082                	ret

204002c4 <_fini>:
_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002c4:	8082                	ret

204002c6 <secondary_main>:
secondary_main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002c6:	1141                	addi	sp,sp,-16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002c8:	c206                	sw	ra,4(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002ca:	f14022f3          	csrr	t0,mhartid
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002ce:	00000313          	li	t1,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002d2:	00628563          	beq	t0,t1,204002dc <secondary_main+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002d6:	10500073          	wfi
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:282
  j 1b
204002da:	bff5                	j	204002d6 <secondary_main+0x10>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:284
2:
  call main
204002dc:	2de010ef          	jal	ra,204015ba <main>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002e0:	4092                	lw	ra,4(sp)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002e2:	0141                	addi	sp,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/crt0.S:291
  ret
204002e4:	8082                	ret

Déassemblage de la section .ctors :

204002f4 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
204002f4:	1101                	addi	sp,sp,-32
204002f6:	ce06                	sw	ra,28(sp)
204002f8:	cc22                	sw	s0,24(sp)
204002fa:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
204002fc:	783040ef          	jal	ra,2040527e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400300:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400304:	fec42783          	lw	a5,-20(s0)
20400308:	c799                	beqz	a5,20400316 <__fini_array_end+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2040030a:	800017b7          	lui	a5,0x80001
2040030e:	a7078513          	addi	a0,a5,-1424 # 80000a70 <metal_segment_heap_target_end+0xfffff2e0>
20400312:	7f5040ef          	jal	ra,20405306 <__metal_driver_sifive_fe310_g000_pll_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400316:	0001                	nop
20400318:	40f2                	lw	ra,28(sp)
2040031a:	4462                	lw	s0,24(sp)
2040031c:	6105                	addi	sp,sp,32
2040031e:	8082                	ret

20400320 <use_hfxosc>:
use_hfxosc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20400320:	1101                	addi	sp,sp,-32
20400322:	ce06                	sw	ra,28(sp)
20400324:	cc22                	sw	s0,24(sp)
20400326:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400328:	757040ef          	jal	ra,2040527e <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040032c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20400330:	fec42583          	lw	a1,-20(s0)
20400334:	800017b7          	lui	a5,0x80001
20400338:	a7078513          	addi	a0,a5,-1424 # 80000a70 <metal_segment_heap_target_end+0xfffff2e0>
2040033c:	051060ef          	jal	ra,20406b8c <metal_clock_set_rate_hz>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20400340:	0001                	nop
20400342:	40f2                	lw	ra,28(sp)
20400344:	4462                	lw	s0,24(sp)
20400346:	6105                	addi	sp,sp,32
20400348:	8082                	ret

2040034a <metal_tty_init>:
metal_tty_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
2040034a:	1141                	addi	sp,sp,-16
2040034c:	c606                	sw	ra,12(sp)
2040034e:	c422                	sw	s0,8(sp)
20400350:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20400352:	67f1                	lui	a5,0x1c
20400354:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20400358:	800017b7          	lui	a5,0x80001
2040035c:	a3878513          	addi	a0,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
20400360:	213060ef          	jal	ra,20406d72 <metal_uart_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:30
}
20400364:	0001                	nop
20400366:	40b2                	lw	ra,12(sp)
20400368:	4422                	lw	s0,8(sp)
2040036a:	0141                	addi	sp,sp,16
2040036c:	8082                	ret

Déassemblage de la section .text :

20401400 <display_banner>:
display_banner():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:17
struct metal_cpu *cpu;
struct metal_interrupt *cpu_intr, *tmr_intr;
int tmr_id;
volatile uint32_t timer_isr_flag;

void display_banner (void) {
20401400:	1141                	addi	sp,sp,-16
20401402:	c606                	sw	ra,12(sp)
20401404:	c422                	sw	s0,8(sp)
20401406:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:19

    printf("\n");
20401408:	4529                	li	a0,10
2040140a:	2685                	jal	2040176a <putchar>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:20
    printf("\n");
2040140c:	4529                	li	a0,10
2040140e:	2eb1                	jal	2040176a <putchar>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:21
    printf("                  SIFIVE, INC.\n");
20401410:	204007b7          	lui	a5,0x20400
20401414:	37078513          	addi	a0,a5,880 # 20400370 <metal_tty_init+0x26>
20401418:	29e9                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:22
    printf("\n");
2040141a:	4529                	li	a0,10
2040141c:	26b9                	jal	2040176a <putchar>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:23
    printf("           5555555555555555555555555\n");
2040141e:	204007b7          	lui	a5,0x20400
20401422:	39078513          	addi	a0,a5,912 # 20400390 <metal_tty_init+0x46>
20401426:	21f1                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:24
    printf("          5555                   5555\n");
20401428:	204007b7          	lui	a5,0x20400
2040142c:	3b878513          	addi	a0,a5,952 # 204003b8 <metal_tty_init+0x6e>
20401430:	21c9                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:25
    printf("         5555                     5555\n");
20401432:	204007b7          	lui	a5,0x20400
20401436:	3e078513          	addi	a0,a5,992 # 204003e0 <metal_tty_init+0x96>
2040143a:	2965                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:26
    printf("        5555                       5555\n");
2040143c:	204007b7          	lui	a5,0x20400
20401440:	40878513          	addi	a0,a5,1032 # 20400408 <metal_tty_init+0xbe>
20401444:	217d                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:27
    printf("       5555       5555555555555555555555\n");
20401446:	204007b7          	lui	a5,0x20400
2040144a:	43078513          	addi	a0,a5,1072 # 20400430 <metal_tty_init+0xe6>
2040144e:	2155                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:28
    printf("      5555       555555555555555555555555\n");
20401450:	204007b7          	lui	a5,0x20400
20401454:	45c78513          	addi	a0,a5,1116 # 2040045c <metal_tty_init+0x112>
20401458:	2969                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:29
    printf("     5555                             5555\n");
2040145a:	204007b7          	lui	a5,0x20400
2040145e:	48878513          	addi	a0,a5,1160 # 20400488 <metal_tty_init+0x13e>
20401462:	2941                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:30
    printf("    5555                               5555\n");
20401464:	204007b7          	lui	a5,0x20400
20401468:	4b478513          	addi	a0,a5,1204 # 204004b4 <metal_tty_init+0x16a>
2040146c:	2159                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:31
    printf("   5555                                 5555\n");
2040146e:	204007b7          	lui	a5,0x20400
20401472:	4e078513          	addi	a0,a5,1248 # 204004e0 <metal_tty_init+0x196>
20401476:	29b5                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:32
    printf("  5555555555555555555555555555          55555\n");
20401478:	204007b7          	lui	a5,0x20400
2040147c:	51078513          	addi	a0,a5,1296 # 20400510 <metal_tty_init+0x1c6>
20401480:	298d                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:33
    printf("   55555           555555555           55555\n");
20401482:	204007b7          	lui	a5,0x20400
20401486:	54078513          	addi	a0,a5,1344 # 20400540 <metal_tty_init+0x1f6>
2040148a:	21a5                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:34
    printf("     55555           55555           55555\n");
2040148c:	204007b7          	lui	a5,0x20400
20401490:	57078513          	addi	a0,a5,1392 # 20400570 <metal_tty_init+0x226>
20401494:	29b9                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:35
    printf("       55555           5           55555\n");
20401496:	204007b7          	lui	a5,0x20400
2040149a:	59c78513          	addi	a0,a5,1436 # 2040059c <metal_tty_init+0x252>
2040149e:	2991                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:36
    printf("         55555                   55555\n");
204014a0:	204007b7          	lui	a5,0x20400
204014a4:	5c878513          	addi	a0,a5,1480 # 204005c8 <metal_tty_init+0x27e>
204014a8:	21a9                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:37
    printf("           55555               55555\n");
204014aa:	204007b7          	lui	a5,0x20400
204014ae:	5f078513          	addi	a0,a5,1520 # 204005f0 <metal_tty_init+0x2a6>
204014b2:	2181                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:38
    printf("             55555           55555\n");
204014b4:	204007b7          	lui	a5,0x20400
204014b8:	61878513          	addi	a0,a5,1560 # 20400618 <metal_tty_init+0x2ce>
204014bc:	291d                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:39
    printf("               55555       55555\n");
204014be:	204007b7          	lui	a5,0x20400
204014c2:	63c78513          	addi	a0,a5,1596 # 2040063c <metal_tty_init+0x2f2>
204014c6:	2135                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:40
    printf("                 55555   55555\n");
204014c8:	204007b7          	lui	a5,0x20400
204014cc:	66078513          	addi	a0,a5,1632 # 20400660 <metal_tty_init+0x316>
204014d0:	210d                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:41
    printf("                   555555555\n");
204014d2:	204007b7          	lui	a5,0x20400
204014d6:	68078513          	addi	a0,a5,1664 # 20400680 <metal_tty_init+0x336>
204014da:	2921                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:42
    printf("                     55555\n");
204014dc:	204007b7          	lui	a5,0x20400
204014e0:	6a078513          	addi	a0,a5,1696 # 204006a0 <metal_tty_init+0x356>
204014e4:	2139                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:43
    printf("                       5\n");
204014e6:	204007b7          	lui	a5,0x20400
204014ea:	6bc78513          	addi	a0,a5,1724 # 204006bc <metal_tty_init+0x372>
204014ee:	2111                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:44
    printf("\n");
204014f0:	4529                	li	a0,10
204014f2:	2ca5                	jal	2040176a <putchar>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:46

    printf("\n");
204014f4:	4529                	li	a0,10
204014f6:	2c95                	jal	2040176a <putchar>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:47
    printf("               Welcome to SiFive!\n");
204014f8:	204007b7          	lui	a5,0x20400
204014fc:	6d878513          	addi	a0,a5,1752 # 204006d8 <metal_tty_init+0x38e>
20401500:	2ecd                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:49

}
20401502:	0001                	nop
20401504:	40b2                	lw	ra,12(sp)
20401506:	4422                	lw	s0,8(sp)
20401508:	0141                	addi	sp,sp,16
2040150a:	8082                	ret

2040150c <timer_isr>:
timer_isr():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:51

void timer_isr (int id, void *data) {
2040150c:	1101                	addi	sp,sp,-32
2040150e:	ce06                	sw	ra,28(sp)
20401510:	cc22                	sw	s0,24(sp)
20401512:	1000                	addi	s0,sp,32
20401514:	fea42623          	sw	a0,-20(s0)
20401518:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:54

    // Disable Timer interrupt
    metal_interrupt_disable(tmr_intr, tmr_id);
2040151c:	8fc1a703          	lw	a4,-1796(gp) # 80000b7c <tmr_intr>
20401520:	9081a783          	lw	a5,-1784(gp) # 80000b88 <tmr_id>
20401524:	85be                	mv	a1,a5
20401526:	853a                	mv	a0,a4
20401528:	7ab000ef          	jal	ra,204024d2 <metal_interrupt_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:57

    // Flag showing we hit timer isr
    timer_isr_flag = 1;
2040152c:	4705                	li	a4,1
2040152e:	90e1a223          	sw	a4,-1788(gp) # 80000b84 <timer_isr_flag>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:58
}
20401532:	0001                	nop
20401534:	40f2                	lw	ra,28(sp)
20401536:	4462                	lw	s0,24(sp)
20401538:	6105                	addi	sp,sp,32
2040153a:	8082                	ret

2040153c <wait_for_timer>:
wait_for_timer():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:60

void wait_for_timer(struct metal_led *which_led) {
2040153c:	1101                	addi	sp,sp,-32
2040153e:	ce06                	sw	ra,28(sp)
20401540:	cc22                	sw	s0,24(sp)
20401542:	ca26                	sw	s1,20(sp)
20401544:	1000                	addi	s0,sp,32
20401546:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:63

    // clear global timer isr flag
    timer_isr_flag = 0;
2040154a:	9001a223          	sw	zero,-1788(gp) # 80000b84 <timer_isr_flag>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:66

    // Turn on desired LED
    metal_led_on(which_led);
2040154e:	fec42503          	lw	a0,-20(s0)
20401552:	7d3000ef          	jal	ra,20402524 <metal_led_on>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:69

    // Set timer
    metal_cpu_set_mtimecmp(cpu, metal_cpu_get_mtime(cpu) + RTC_FREQ);
20401556:	8f81a483          	lw	s1,-1800(gp) # 80000b78 <cpu>
2040155a:	8f81a783          	lw	a5,-1800(gp) # 80000b78 <cpu>
2040155e:	853e                	mv	a0,a5
20401560:	5c9000ef          	jal	ra,20402328 <metal_cpu_get_mtime>
20401564:	86aa                	mv	a3,a0
20401566:	872e                	mv	a4,a1
20401568:	65a1                	lui	a1,0x8
2040156a:	4601                	li	a2,0
2040156c:	00b687b3          	add	a5,a3,a1
20401570:	853e                	mv	a0,a5
20401572:	00d53533          	sltu	a0,a0,a3
20401576:	00c70833          	add	a6,a4,a2
2040157a:	01050733          	add	a4,a0,a6
2040157e:	883a                	mv	a6,a4
20401580:	85be                	mv	a1,a5
20401582:	8642                	mv	a2,a6
20401584:	8526                	mv	a0,s1
20401586:	5cd000ef          	jal	ra,20402352 <metal_cpu_set_mtimecmp>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:72

    // Enable Timer interrupt
    metal_interrupt_enable(tmr_intr, tmr_id);
2040158a:	8fc1a703          	lw	a4,-1796(gp) # 80000b7c <tmr_intr>
2040158e:	9081a783          	lw	a5,-1784(gp) # 80000b88 <tmr_id>
20401592:	85be                	mv	a1,a5
20401594:	853a                	mv	a0,a4
20401596:	70f000ef          	jal	ra,204024a4 <metal_interrupt_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:75

    // wait till timer triggers and isr is hit
    while (timer_isr_flag == 0){};
2040159a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:75 (discriminator 1)
2040159c:	9041a783          	lw	a5,-1788(gp) # 80000b84 <timer_isr_flag>
204015a0:	dff5                	beqz	a5,2040159c <wait_for_timer+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:77

    timer_isr_flag = 0;
204015a2:	9001a223          	sw	zero,-1788(gp) # 80000b84 <timer_isr_flag>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:80

    // Turn off this LED
    metal_led_off(which_led);
204015a6:	fec42503          	lw	a0,-20(s0)
204015aa:	79f000ef          	jal	ra,20402548 <metal_led_off>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:81
}
204015ae:	0001                	nop
204015b0:	40f2                	lw	ra,28(sp)
204015b2:	4462                	lw	s0,24(sp)
204015b4:	44d2                	lw	s1,20(sp)
204015b6:	6105                	addi	sp,sp,32
204015b8:	8082                	ret

204015ba <main>:
main():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:84

int main (void)
{
204015ba:	1101                	addi	sp,sp,-32
204015bc:	ce06                	sw	ra,28(sp)
204015be:	cc22                	sw	s0,24(sp)
204015c0:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:89
    int rc;
    struct metal_led *led0_red, *led0_green, *led0_blue;

    // This demo will toggle LEDs colors so we define them here
    led0_red = metal_led_get_rgb("LD0", "red");
204015c2:	204007b7          	lui	a5,0x20400
204015c6:	6fc78593          	addi	a1,a5,1788 # 204006fc <metal_tty_init+0x3b2>
204015ca:	204007b7          	lui	a5,0x20400
204015ce:	70078513          	addi	a0,a5,1792 # 20400700 <metal_tty_init+0x3b6>
204015d2:	79b000ef          	jal	ra,2040256c <metal_led_get_rgb>
204015d6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:90
    led0_green = metal_led_get_rgb("LD0", "green");
204015da:	204007b7          	lui	a5,0x20400
204015de:	70478593          	addi	a1,a5,1796 # 20400704 <metal_tty_init+0x3ba>
204015e2:	204007b7          	lui	a5,0x20400
204015e6:	70078513          	addi	a0,a5,1792 # 20400700 <metal_tty_init+0x3b6>
204015ea:	783000ef          	jal	ra,2040256c <metal_led_get_rgb>
204015ee:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:91
    led0_blue = metal_led_get_rgb("LD0", "blue");
204015f2:	204007b7          	lui	a5,0x20400
204015f6:	70c78593          	addi	a1,a5,1804 # 2040070c <metal_tty_init+0x3c2>
204015fa:	204007b7          	lui	a5,0x20400
204015fe:	70078513          	addi	a0,a5,1792 # 20400700 <metal_tty_init+0x3b6>
20401602:	76b000ef          	jal	ra,2040256c <metal_led_get_rgb>
20401606:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:92
    if ((led0_red == NULL) || (led0_green == NULL) || (led0_blue == NULL)) {
2040160a:	fec42783          	lw	a5,-20(s0)
2040160e:	c799                	beqz	a5,2040161c <main+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:92 (discriminator 1)
20401610:	fe842783          	lw	a5,-24(s0)
20401614:	c781                	beqz	a5,2040161c <main+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:92 (discriminator 2)
20401616:	fe442783          	lw	a5,-28(s0)
2040161a:	eb81                	bnez	a5,2040162a <main+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:93
        printf("At least one of LEDs is null.\n");
2040161c:	204007b7          	lui	a5,0x20400
20401620:	71478513          	addi	a0,a5,1812 # 20400714 <metal_tty_init+0x3ca>
20401624:	24f9                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:94
        return 1;
20401626:	4785                	li	a5,1
20401628:	aa25                	j	20401760 <main+0x1a6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:98
    }

    // Enable each LED
    metal_led_enable(led0_red);
2040162a:	fec42503          	lw	a0,-20(s0)
2040162e:	6d3000ef          	jal	ra,20402500 <metal_led_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:99
    metal_led_enable(led0_green);
20401632:	fe842503          	lw	a0,-24(s0)
20401636:	6cb000ef          	jal	ra,20402500 <metal_led_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:100
    metal_led_enable(led0_blue);
2040163a:	fe442503          	lw	a0,-28(s0)
2040163e:	6c3000ef          	jal	ra,20402500 <metal_led_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:103

    // All Off
    metal_led_off(led0_red);
20401642:	fec42503          	lw	a0,-20(s0)
20401646:	703000ef          	jal	ra,20402548 <metal_led_off>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:104
    metal_led_off(led0_green);
2040164a:	fe842503          	lw	a0,-24(s0)
2040164e:	6fb000ef          	jal	ra,20402548 <metal_led_off>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:105
    metal_led_off(led0_blue);
20401652:	fe442503          	lw	a0,-28(s0)
20401656:	6f3000ef          	jal	ra,20402548 <metal_led_off>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:108

    // Lets get the CPU and and its interrupt
    cpu = metal_cpu_get(metal_cpu_get_current_hartid());
2040165a:	5cf000ef          	jal	ra,20402428 <metal_cpu_get_current_hartid>
2040165e:	87aa                	mv	a5,a0
20401660:	853e                	mv	a0,a5
20401662:	599000ef          	jal	ra,204023fa <metal_cpu_get>
20401666:	872a                	mv	a4,a0
20401668:	8ee1ac23          	sw	a4,-1800(gp) # 80000b78 <cpu>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:109
    if (cpu == NULL) {
2040166c:	8f81a783          	lw	a5,-1800(gp) # 80000b78 <cpu>
20401670:	eb81                	bnez	a5,20401680 <main+0xc6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:110
        printf("CPU null.\n");
20401672:	204007b7          	lui	a5,0x20400
20401676:	73478513          	addi	a0,a5,1844 # 20400734 <metal_tty_init+0x3ea>
2040167a:	2ca5                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:111
        return 2;
2040167c:	4789                	li	a5,2
2040167e:	a0cd                	j	20401760 <main+0x1a6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:113
    }
    cpu_intr = metal_cpu_interrupt_controller(cpu);
20401680:	8f81a783          	lw	a5,-1800(gp) # 80000b78 <cpu>
20401684:	853e                	mv	a0,a5
20401686:	54f000ef          	jal	ra,204023d4 <metal_cpu_interrupt_controller>
2040168a:	872a                	mv	a4,a0
2040168c:	90e1a023          	sw	a4,-1792(gp) # 80000b80 <cpu_intr>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:114
    if (cpu_intr == NULL) {
20401690:	9001a783          	lw	a5,-1792(gp) # 80000b80 <cpu_intr>
20401694:	eb81                	bnez	a5,204016a4 <main+0xea>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:115
        printf("CPU interrupt controller is null.\n");
20401696:	204007b7          	lui	a5,0x20400
2040169a:	74078513          	addi	a0,a5,1856 # 20400740 <metal_tty_init+0x3f6>
2040169e:	2c91                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:116
        return 3;
204016a0:	478d                	li	a5,3
204016a2:	a87d                	j	20401760 <main+0x1a6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:118
    }
    metal_interrupt_init(cpu_intr);
204016a4:	9001a783          	lw	a5,-1792(gp) # 80000b80 <cpu_intr>
204016a8:	853e                	mv	a0,a5
204016aa:	599000ef          	jal	ra,20402442 <metal_interrupt_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:121

    // display welcome banner
    display_banner();
204016ae:	3b89                	jal	20401400 <display_banner>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:124

    // Setup Timer and its interrupt so we can toggle LEDs on 1s cadence
    tmr_intr = metal_cpu_timer_interrupt_controller(cpu);
204016b0:	8f81a783          	lw	a5,-1800(gp) # 80000b78 <cpu>
204016b4:	853e                	mv	a0,a5
204016b6:	4d3000ef          	jal	ra,20402388 <metal_cpu_timer_interrupt_controller>
204016ba:	872a                	mv	a4,a0
204016bc:	8ee1ae23          	sw	a4,-1796(gp) # 80000b7c <tmr_intr>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:125
    if (tmr_intr == NULL) {
204016c0:	8fc1a783          	lw	a5,-1796(gp) # 80000b7c <tmr_intr>
204016c4:	eb81                	bnez	a5,204016d4 <main+0x11a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:126
        printf("TIMER interrupt controller is  null.\n");
204016c6:	204007b7          	lui	a5,0x20400
204016ca:	76478513          	addi	a0,a5,1892 # 20400764 <metal_tty_init+0x41a>
204016ce:	2415                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:127
        return 4;
204016d0:	4791                	li	a5,4
204016d2:	a079                	j	20401760 <main+0x1a6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:129
    }
    metal_interrupt_init(tmr_intr);
204016d4:	8fc1a783          	lw	a5,-1796(gp) # 80000b7c <tmr_intr>
204016d8:	853e                	mv	a0,a5
204016da:	569000ef          	jal	ra,20402442 <metal_interrupt_init>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:130
    tmr_id = metal_cpu_timer_get_interrupt_id(cpu);
204016de:	8f81a783          	lw	a5,-1800(gp) # 80000b78 <cpu>
204016e2:	853e                	mv	a0,a5
204016e4:	4cb000ef          	jal	ra,204023ae <metal_cpu_timer_get_interrupt_id>
204016e8:	872a                	mv	a4,a0
204016ea:	90e1a423          	sw	a4,-1784(gp) # 80000b88 <tmr_id>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:131
    rc = metal_interrupt_register_handler(tmr_intr, tmr_id, timer_isr, cpu);
204016ee:	8fc1a703          	lw	a4,-1796(gp) # 80000b7c <tmr_intr>
204016f2:	9081a583          	lw	a1,-1784(gp) # 80000b88 <tmr_id>
204016f6:	8f81a783          	lw	a5,-1800(gp) # 80000b78 <cpu>
204016fa:	86be                	mv	a3,a5
204016fc:	204017b7          	lui	a5,0x20401
20401700:	50c78613          	addi	a2,a5,1292 # 2040150c <timer_isr>
20401704:	853a                	mv	a0,a4
20401706:	561000ef          	jal	ra,20402466 <metal_interrupt_register_handler>
2040170a:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:132
    if (rc < 0) {
2040170e:	fe042783          	lw	a5,-32(s0)
20401712:	0007dc63          	bgez	a5,2040172a <main+0x170>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:133
        printf("TIMER interrupt handler registration failed\n");
20401716:	204007b7          	lui	a5,0x20400
2040171a:	78c78513          	addi	a0,a5,1932 # 2040078c <metal_tty_init+0x442>
2040171e:	2ad1                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:134
        return (rc * -1);
20401720:	fe042783          	lw	a5,-32(s0)
20401724:	40f007b3          	neg	a5,a5
20401728:	a825                	j	20401760 <main+0x1a6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:138
    }

    // Lastly CPU interrupt
    if (metal_interrupt_enable(cpu_intr, 0) == -1) {
2040172a:	9001a783          	lw	a5,-1792(gp) # 80000b80 <cpu_intr>
2040172e:	4581                	li	a1,0
20401730:	853e                	mv	a0,a5
20401732:	573000ef          	jal	ra,204024a4 <metal_interrupt_enable>
20401736:	872a                	mv	a4,a0
20401738:	57fd                	li	a5,-1
2040173a:	00f71963          	bne	a4,a5,2040174c <main+0x192>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:139
        printf("CPU interrupt enable failed\n");
2040173e:	204007b7          	lui	a5,0x20400
20401742:	7b878513          	addi	a0,a5,1976 # 204007b8 <metal_tty_init+0x46e>
20401746:	2275                	jal	204018f2 <puts>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:140
        return 6;
20401748:	4799                	li	a5,6
2040174a:	a819                	j	20401760 <main+0x1a6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:147 (discriminator 1)

    // Red -> Green -> Blue, repeat
    while (1) {

        // Turn on RED
        wait_for_timer(led0_red);
2040174c:	fec42503          	lw	a0,-20(s0)
20401750:	33f5                	jal	2040153c <wait_for_timer>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:150 (discriminator 1)

        // Turn on Green
        wait_for_timer(led0_green);
20401752:	fe842503          	lw	a0,-24(s0)
20401756:	33dd                	jal	2040153c <wait_for_timer>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:153 (discriminator 1)

        // Turn on Blue
        wait_for_timer(led0_blue);
20401758:	fe442503          	lw	a0,-28(s0)
2040175c:	33c5                	jal	2040153c <wait_for_timer>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:147 (discriminator 1)
        wait_for_timer(led0_red);
2040175e:	b7fd                	j	2040174c <main+0x192>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/software/sifive-welcome/sifive-welcome.c:158
    }

    // return
    return 0;
}
20401760:	853e                	mv	a0,a5
20401762:	40f2                	lw	ra,28(sp)
20401764:	4462                	lw	s0,24(sp)
20401766:	6105                	addi	sp,sp,32
20401768:	8082                	ret

2040176a <putchar>:
putchar():
2040176a:	1101                	addi	sp,sp,-32
2040176c:	5fbff797          	auipc	a5,0x5fbff
20401770:	31478793          	addi	a5,a5,788 # 80000a80 <_impure_ptr>
20401774:	cc22                	sw	s0,24(sp)
20401776:	4380                	lw	s0,0(a5)
20401778:	ce06                	sw	ra,28(sp)
2040177a:	85aa                	mv	a1,a0
2040177c:	c419                	beqz	s0,2040178a <putchar+0x20>
2040177e:	4c1c                	lw	a5,24(s0)
20401780:	e789                	bnez	a5,2040178a <putchar+0x20>
20401782:	c62a                	sw	a0,12(sp)
20401784:	8522                	mv	a0,s0
20401786:	237d                	jal	20401d34 <__sinit>
20401788:	45b2                	lw	a1,12(sp)
2040178a:	4410                	lw	a2,8(s0)
2040178c:	8522                	mv	a0,s0
2040178e:	4462                	lw	s0,24(sp)
20401790:	40f2                	lw	ra,28(sp)
20401792:	6105                	addi	sp,sp,32
20401794:	a009                	j	20401796 <_putc_r>

20401796 <_putc_r>:
_putc_r():
20401796:	1101                	addi	sp,sp,-32
20401798:	cc22                	sw	s0,24(sp)
2040179a:	ce06                	sw	ra,28(sp)
2040179c:	842a                	mv	s0,a0
2040179e:	c901                	beqz	a0,204017ae <_putc_r+0x18>
204017a0:	4d1c                	lw	a5,24(a0)
204017a2:	e791                	bnez	a5,204017ae <_putc_r+0x18>
204017a4:	c632                	sw	a2,12(sp)
204017a6:	c42e                	sw	a1,8(sp)
204017a8:	2371                	jal	20401d34 <__sinit>
204017aa:	4632                	lw	a2,12(sp)
204017ac:	45a2                	lw	a1,8(sp)
204017ae:	fffff797          	auipc	a5,0xfffff
204017b2:	04678793          	addi	a5,a5,70 # 204007f4 <__sf_fake_stdin>
204017b6:	02f61563          	bne	a2,a5,204017e0 <_putc_r+0x4a>
204017ba:	4050                	lw	a2,4(s0)
204017bc:	461c                	lw	a5,8(a2)
204017be:	17fd                	addi	a5,a5,-1
204017c0:	c61c                	sw	a5,8(a2)
204017c2:	0207df63          	bgez	a5,20401800 <_putc_r+0x6a>
204017c6:	4e18                	lw	a4,24(a2)
204017c8:	00e7c763          	blt	a5,a4,204017d6 <_putc_r+0x40>
204017cc:	0ff5f793          	andi	a5,a1,255
204017d0:	4729                	li	a4,10
204017d2:	02e79763          	bne	a5,a4,20401800 <_putc_r+0x6a>
204017d6:	8522                	mv	a0,s0
204017d8:	4462                	lw	s0,24(sp)
204017da:	40f2                	lw	ra,28(sp)
204017dc:	6105                	addi	sp,sp,32
204017de:	a20d                	j	20401900 <__swbuf_r>
204017e0:	fffff797          	auipc	a5,0xfffff
204017e4:	03478793          	addi	a5,a5,52 # 20400814 <__sf_fake_stdout>
204017e8:	00f61463          	bne	a2,a5,204017f0 <_putc_r+0x5a>
204017ec:	4410                	lw	a2,8(s0)
204017ee:	b7f9                	j	204017bc <_putc_r+0x26>
204017f0:	fffff797          	auipc	a5,0xfffff
204017f4:	fe478793          	addi	a5,a5,-28 # 204007d4 <__sf_fake_stderr>
204017f8:	fcf612e3          	bne	a2,a5,204017bc <_putc_r+0x26>
204017fc:	4450                	lw	a2,12(s0)
204017fe:	bf7d                	j	204017bc <_putc_r+0x26>
20401800:	421c                	lw	a5,0(a2)
20401802:	0ff5f513          	andi	a0,a1,255
20401806:	00178713          	addi	a4,a5,1
2040180a:	c218                	sw	a4,0(a2)
2040180c:	00b78023          	sb	a1,0(a5)
20401810:	40f2                	lw	ra,28(sp)
20401812:	4462                	lw	s0,24(sp)
20401814:	6105                	addi	sp,sp,32
20401816:	8082                	ret

20401818 <_puts_r>:
_puts_r():
20401818:	1101                	addi	sp,sp,-32
2040181a:	ca26                	sw	s1,20(sp)
2040181c:	c84a                	sw	s2,16(sp)
2040181e:	ce06                	sw	ra,28(sp)
20401820:	cc22                	sw	s0,24(sp)
20401822:	c64e                	sw	s3,12(sp)
20401824:	c452                	sw	s4,8(sp)
20401826:	84aa                	mv	s1,a0
20401828:	892e                	mv	s2,a1
2040182a:	c501                	beqz	a0,20401832 <_puts_r+0x1a>
2040182c:	4d1c                	lw	a5,24(a0)
2040182e:	e391                	bnez	a5,20401832 <_puts_r+0x1a>
20401830:	2311                	jal	20401d34 <__sinit>
20401832:	4c9c                	lw	a5,24(s1)
20401834:	4480                	lw	s0,8(s1)
20401836:	e399                	bnez	a5,2040183c <_puts_r+0x24>
20401838:	8526                	mv	a0,s1
2040183a:	29ed                	jal	20401d34 <__sinit>
2040183c:	fffff797          	auipc	a5,0xfffff
20401840:	fb878793          	addi	a5,a5,-72 # 204007f4 <__sf_fake_stdin>
20401844:	02f41c63          	bne	s0,a5,2040187c <_puts_r+0x64>
20401848:	40c0                	lw	s0,4(s1)
2040184a:	00c45783          	lhu	a5,12(s0)
2040184e:	8ba1                	andi	a5,a5,8
20401850:	c7b1                	beqz	a5,2040189c <_puts_r+0x84>
20401852:	481c                	lw	a5,16(s0)
20401854:	c7a1                	beqz	a5,2040189c <_puts_r+0x84>
20401856:	59fd                	li	s3,-1
20401858:	4a29                	li	s4,10
2040185a:	441c                	lw	a5,8(s0)
2040185c:	00094583          	lbu	a1,0(s2)
20401860:	17fd                	addi	a5,a5,-1
20401862:	e9b1                	bnez	a1,204018b6 <_puts_r+0x9e>
20401864:	c41c                	sw	a5,8(s0)
20401866:	0607de63          	bgez	a5,204018e2 <_puts_r+0xca>
2040186a:	8622                	mv	a2,s0
2040186c:	45a9                	li	a1,10
2040186e:	8526                	mv	a0,s1
20401870:	2841                	jal	20401900 <__swbuf_r>
20401872:	57fd                	li	a5,-1
20401874:	02f50863          	beq	a0,a5,204018a4 <_puts_r+0x8c>
20401878:	4529                	li	a0,10
2040187a:	a035                	j	204018a6 <_puts_r+0x8e>
2040187c:	fffff797          	auipc	a5,0xfffff
20401880:	f9878793          	addi	a5,a5,-104 # 20400814 <__sf_fake_stdout>
20401884:	00f41463          	bne	s0,a5,2040188c <_puts_r+0x74>
20401888:	4480                	lw	s0,8(s1)
2040188a:	b7c1                	j	2040184a <_puts_r+0x32>
2040188c:	fffff797          	auipc	a5,0xfffff
20401890:	f4878793          	addi	a5,a5,-184 # 204007d4 <__sf_fake_stderr>
20401894:	faf41be3          	bne	s0,a5,2040184a <_puts_r+0x32>
20401898:	44c0                	lw	s0,12(s1)
2040189a:	bf45                	j	2040184a <_puts_r+0x32>
2040189c:	85a2                	mv	a1,s0
2040189e:	8526                	mv	a0,s1
204018a0:	2205                	jal	204019c0 <__swsetup_r>
204018a2:	d955                	beqz	a0,20401856 <_puts_r+0x3e>
204018a4:	557d                	li	a0,-1
204018a6:	40f2                	lw	ra,28(sp)
204018a8:	4462                	lw	s0,24(sp)
204018aa:	44d2                	lw	s1,20(sp)
204018ac:	4942                	lw	s2,16(sp)
204018ae:	49b2                	lw	s3,12(sp)
204018b0:	4a22                	lw	s4,8(sp)
204018b2:	6105                	addi	sp,sp,32
204018b4:	8082                	ret
204018b6:	c41c                	sw	a5,8(s0)
204018b8:	0905                	addi	s2,s2,1
204018ba:	0007d763          	bgez	a5,204018c8 <_puts_r+0xb0>
204018be:	4c18                	lw	a4,24(s0)
204018c0:	00e7cb63          	blt	a5,a4,204018d6 <_puts_r+0xbe>
204018c4:	01458963          	beq	a1,s4,204018d6 <_puts_r+0xbe>
204018c8:	401c                	lw	a5,0(s0)
204018ca:	00178713          	addi	a4,a5,1
204018ce:	c018                	sw	a4,0(s0)
204018d0:	00b78023          	sb	a1,0(a5)
204018d4:	b759                	j	2040185a <_puts_r+0x42>
204018d6:	8622                	mv	a2,s0
204018d8:	8526                	mv	a0,s1
204018da:	201d                	jal	20401900 <__swbuf_r>
204018dc:	f7351fe3          	bne	a0,s3,2040185a <_puts_r+0x42>
204018e0:	b7d1                	j	204018a4 <_puts_r+0x8c>
204018e2:	401c                	lw	a5,0(s0)
204018e4:	00178713          	addi	a4,a5,1
204018e8:	c018                	sw	a4,0(s0)
204018ea:	4729                	li	a4,10
204018ec:	00e78023          	sb	a4,0(a5)
204018f0:	b761                	j	20401878 <_puts_r+0x60>

204018f2 <puts>:
puts():
204018f2:	5fbff797          	auipc	a5,0x5fbff
204018f6:	18e78793          	addi	a5,a5,398 # 80000a80 <_impure_ptr>
204018fa:	85aa                	mv	a1,a0
204018fc:	4388                	lw	a0,0(a5)
204018fe:	bf29                	j	20401818 <_puts_r>

20401900 <__swbuf_r>:
__swbuf_r():
20401900:	1101                	addi	sp,sp,-32
20401902:	cc22                	sw	s0,24(sp)
20401904:	ca26                	sw	s1,20(sp)
20401906:	c84a                	sw	s2,16(sp)
20401908:	ce06                	sw	ra,28(sp)
2040190a:	c64e                	sw	s3,12(sp)
2040190c:	84aa                	mv	s1,a0
2040190e:	892e                	mv	s2,a1
20401910:	8432                	mv	s0,a2
20401912:	c501                	beqz	a0,2040191a <__swbuf_r+0x1a>
20401914:	4d1c                	lw	a5,24(a0)
20401916:	e391                	bnez	a5,2040191a <__swbuf_r+0x1a>
20401918:	2931                	jal	20401d34 <__sinit>
2040191a:	fffff797          	auipc	a5,0xfffff
2040191e:	eda78793          	addi	a5,a5,-294 # 204007f4 <__sf_fake_stdin>
20401922:	06f41963          	bne	s0,a5,20401994 <__swbuf_r+0x94>
20401926:	40c0                	lw	s0,4(s1)
20401928:	4c1c                	lw	a5,24(s0)
2040192a:	c41c                	sw	a5,8(s0)
2040192c:	00c45783          	lhu	a5,12(s0)
20401930:	8ba1                	andi	a5,a5,8
20401932:	c3c9                	beqz	a5,204019b4 <__swbuf_r+0xb4>
20401934:	481c                	lw	a5,16(s0)
20401936:	cfbd                	beqz	a5,204019b4 <__swbuf_r+0xb4>
20401938:	481c                	lw	a5,16(s0)
2040193a:	4008                	lw	a0,0(s0)
2040193c:	0ff97993          	andi	s3,s2,255
20401940:	0ff97913          	andi	s2,s2,255
20401944:	8d1d                	sub	a0,a0,a5
20401946:	485c                	lw	a5,20(s0)
20401948:	00f54663          	blt	a0,a5,20401954 <__swbuf_r+0x54>
2040194c:	85a2                	mv	a1,s0
2040194e:	8526                	mv	a0,s1
20401950:	24e9                	jal	20401c1a <_fflush_r>
20401952:	e52d                	bnez	a0,204019bc <__swbuf_r+0xbc>
20401954:	441c                	lw	a5,8(s0)
20401956:	0505                	addi	a0,a0,1
20401958:	17fd                	addi	a5,a5,-1
2040195a:	c41c                	sw	a5,8(s0)
2040195c:	401c                	lw	a5,0(s0)
2040195e:	00178713          	addi	a4,a5,1
20401962:	c018                	sw	a4,0(s0)
20401964:	01378023          	sb	s3,0(a5)
20401968:	485c                	lw	a5,20(s0)
2040196a:	00a78963          	beq	a5,a0,2040197c <__swbuf_r+0x7c>
2040196e:	00c45783          	lhu	a5,12(s0)
20401972:	8b85                	andi	a5,a5,1
20401974:	cb81                	beqz	a5,20401984 <__swbuf_r+0x84>
20401976:	47a9                	li	a5,10
20401978:	00f91663          	bne	s2,a5,20401984 <__swbuf_r+0x84>
2040197c:	85a2                	mv	a1,s0
2040197e:	8526                	mv	a0,s1
20401980:	2c69                	jal	20401c1a <_fflush_r>
20401982:	ed0d                	bnez	a0,204019bc <__swbuf_r+0xbc>
20401984:	40f2                	lw	ra,28(sp)
20401986:	4462                	lw	s0,24(sp)
20401988:	854a                	mv	a0,s2
2040198a:	44d2                	lw	s1,20(sp)
2040198c:	4942                	lw	s2,16(sp)
2040198e:	49b2                	lw	s3,12(sp)
20401990:	6105                	addi	sp,sp,32
20401992:	8082                	ret
20401994:	fffff797          	auipc	a5,0xfffff
20401998:	e8078793          	addi	a5,a5,-384 # 20400814 <__sf_fake_stdout>
2040199c:	00f41463          	bne	s0,a5,204019a4 <__swbuf_r+0xa4>
204019a0:	4480                	lw	s0,8(s1)
204019a2:	b759                	j	20401928 <__swbuf_r+0x28>
204019a4:	fffff797          	auipc	a5,0xfffff
204019a8:	e3078793          	addi	a5,a5,-464 # 204007d4 <__sf_fake_stderr>
204019ac:	f6f41ee3          	bne	s0,a5,20401928 <__swbuf_r+0x28>
204019b0:	44c0                	lw	s0,12(s1)
204019b2:	bf9d                	j	20401928 <__swbuf_r+0x28>
204019b4:	85a2                	mv	a1,s0
204019b6:	8526                	mv	a0,s1
204019b8:	2021                	jal	204019c0 <__swsetup_r>
204019ba:	dd3d                	beqz	a0,20401938 <__swbuf_r+0x38>
204019bc:	597d                	li	s2,-1
204019be:	b7d9                	j	20401984 <__swbuf_r+0x84>

204019c0 <__swsetup_r>:
__swsetup_r():
204019c0:	1141                	addi	sp,sp,-16
204019c2:	5fbff797          	auipc	a5,0x5fbff
204019c6:	0be78793          	addi	a5,a5,190 # 80000a80 <_impure_ptr>
204019ca:	c226                	sw	s1,4(sp)
204019cc:	4384                	lw	s1,0(a5)
204019ce:	c422                	sw	s0,8(sp)
204019d0:	c04a                	sw	s2,0(sp)
204019d2:	c606                	sw	ra,12(sp)
204019d4:	892a                	mv	s2,a0
204019d6:	842e                	mv	s0,a1
204019d8:	c489                	beqz	s1,204019e2 <__swsetup_r+0x22>
204019da:	4c9c                	lw	a5,24(s1)
204019dc:	e399                	bnez	a5,204019e2 <__swsetup_r+0x22>
204019de:	8526                	mv	a0,s1
204019e0:	2e91                	jal	20401d34 <__sinit>
204019e2:	fffff797          	auipc	a5,0xfffff
204019e6:	e1278793          	addi	a5,a5,-494 # 204007f4 <__sf_fake_stdin>
204019ea:	02f41c63          	bne	s0,a5,20401a22 <__swsetup_r+0x62>
204019ee:	40c0                	lw	s0,4(s1)
204019f0:	00c41703          	lh	a4,12(s0)
204019f4:	01071793          	slli	a5,a4,0x10
204019f8:	83c1                	srli	a5,a5,0x10
204019fa:	0087f693          	andi	a3,a5,8
204019fe:	eeb5                	bnez	a3,20401a7a <__swsetup_r+0xba>
20401a00:	0107f693          	andi	a3,a5,16
20401a04:	ee9d                	bnez	a3,20401a42 <__swsetup_r+0x82>
20401a06:	47a5                	li	a5,9
20401a08:	00f92023          	sw	a5,0(s2)
20401a0c:	04076713          	ori	a4,a4,64
20401a10:	00e41623          	sh	a4,12(s0)
20401a14:	557d                	li	a0,-1
20401a16:	40b2                	lw	ra,12(sp)
20401a18:	4422                	lw	s0,8(sp)
20401a1a:	4492                	lw	s1,4(sp)
20401a1c:	4902                	lw	s2,0(sp)
20401a1e:	0141                	addi	sp,sp,16
20401a20:	8082                	ret
20401a22:	fffff797          	auipc	a5,0xfffff
20401a26:	df278793          	addi	a5,a5,-526 # 20400814 <__sf_fake_stdout>
20401a2a:	00f41463          	bne	s0,a5,20401a32 <__swsetup_r+0x72>
20401a2e:	4480                	lw	s0,8(s1)
20401a30:	b7c1                	j	204019f0 <__swsetup_r+0x30>
20401a32:	fffff797          	auipc	a5,0xfffff
20401a36:	da278793          	addi	a5,a5,-606 # 204007d4 <__sf_fake_stderr>
20401a3a:	faf41be3          	bne	s0,a5,204019f0 <__swsetup_r+0x30>
20401a3e:	44c0                	lw	s0,12(s1)
20401a40:	bf45                	j	204019f0 <__swsetup_r+0x30>
20401a42:	8b91                	andi	a5,a5,4
20401a44:	c78d                	beqz	a5,20401a6e <__swsetup_r+0xae>
20401a46:	584c                	lw	a1,52(s0)
20401a48:	c989                	beqz	a1,20401a5a <__swsetup_r+0x9a>
20401a4a:	04440793          	addi	a5,s0,68
20401a4e:	00f58463          	beq	a1,a5,20401a56 <__swsetup_r+0x96>
20401a52:	854a                	mv	a0,s2
20401a54:	2ba1                	jal	20401fac <_free_r>
20401a56:	02042a23          	sw	zero,52(s0)
20401a5a:	00c45783          	lhu	a5,12(s0)
20401a5e:	00042223          	sw	zero,4(s0)
20401a62:	fdb7f793          	andi	a5,a5,-37
20401a66:	00f41623          	sh	a5,12(s0)
20401a6a:	481c                	lw	a5,16(s0)
20401a6c:	c01c                	sw	a5,0(s0)
20401a6e:	00c45783          	lhu	a5,12(s0)
20401a72:	0087e793          	ori	a5,a5,8
20401a76:	00f41623          	sh	a5,12(s0)
20401a7a:	481c                	lw	a5,16(s0)
20401a7c:	ef81                	bnez	a5,20401a94 <__swsetup_r+0xd4>
20401a7e:	00c45783          	lhu	a5,12(s0)
20401a82:	20000713          	li	a4,512
20401a86:	2807f793          	andi	a5,a5,640
20401a8a:	00e78563          	beq	a5,a4,20401a94 <__swsetup_r+0xd4>
20401a8e:	85a2                	mv	a1,s0
20401a90:	854a                	mv	a0,s2
20401a92:	21bd                	jal	20401f00 <__smakebuf_r>
20401a94:	00c45783          	lhu	a5,12(s0)
20401a98:	0017f713          	andi	a4,a5,1
20401a9c:	c705                	beqz	a4,20401ac4 <__swsetup_r+0x104>
20401a9e:	485c                	lw	a5,20(s0)
20401aa0:	00042423          	sw	zero,8(s0)
20401aa4:	40f007b3          	neg	a5,a5
20401aa8:	cc1c                	sw	a5,24(s0)
20401aaa:	481c                	lw	a5,16(s0)
20401aac:	4501                	li	a0,0
20401aae:	f7a5                	bnez	a5,20401a16 <__swsetup_r+0x56>
20401ab0:	00c41783          	lh	a5,12(s0)
20401ab4:	0807f713          	andi	a4,a5,128
20401ab8:	df39                	beqz	a4,20401a16 <__swsetup_r+0x56>
20401aba:	0407e793          	ori	a5,a5,64
20401abe:	00f41623          	sh	a5,12(s0)
20401ac2:	bf89                	j	20401a14 <__swsetup_r+0x54>
20401ac4:	8b89                	andi	a5,a5,2
20401ac6:	4701                	li	a4,0
20401ac8:	e391                	bnez	a5,20401acc <__swsetup_r+0x10c>
20401aca:	4858                	lw	a4,20(s0)
20401acc:	c418                	sw	a4,8(s0)
20401ace:	bff1                	j	20401aaa <__swsetup_r+0xea>

20401ad0 <__sflush_r>:
__sflush_r():
20401ad0:	00c5d783          	lhu	a5,12(a1) # 800c <__heap_size+0x780c>
20401ad4:	1101                	addi	sp,sp,-32
20401ad6:	cc22                	sw	s0,24(sp)
20401ad8:	ca26                	sw	s1,20(sp)
20401ada:	ce06                	sw	ra,28(sp)
20401adc:	c84a                	sw	s2,16(sp)
20401ade:	c64e                	sw	s3,12(sp)
20401ae0:	0087f713          	andi	a4,a5,8
20401ae4:	84aa                	mv	s1,a0
20401ae6:	842e                	mv	s0,a1
20401ae8:	e765                	bnez	a4,20401bd0 <__sflush_r+0x100>
20401aea:	41d8                	lw	a4,4(a1)
20401aec:	00e04763          	bgtz	a4,20401afa <__sflush_r+0x2a>
20401af0:	41b8                	lw	a4,64(a1)
20401af2:	00e04463          	bgtz	a4,20401afa <__sflush_r+0x2a>
20401af6:	4501                	li	a0,0
20401af8:	a0c1                	j	20401bb8 <__sflush_r+0xe8>
20401afa:	5458                	lw	a4,44(s0)
20401afc:	df6d                	beqz	a4,20401af6 <__sflush_r+0x26>
20401afe:	0004a903          	lw	s2,0(s1)
20401b02:	01379693          	slli	a3,a5,0x13
20401b06:	0004a023          	sw	zero,0(s1)
20401b0a:	0606de63          	bgez	a3,20401b86 <__sflush_r+0xb6>
20401b0e:	4868                	lw	a0,84(s0)
20401b10:	00c45783          	lhu	a5,12(s0)
20401b14:	8b91                	andi	a5,a5,4
20401b16:	c799                	beqz	a5,20401b24 <__sflush_r+0x54>
20401b18:	405c                	lw	a5,4(s0)
20401b1a:	8d1d                	sub	a0,a0,a5
20401b1c:	585c                	lw	a5,52(s0)
20401b1e:	c399                	beqz	a5,20401b24 <__sflush_r+0x54>
20401b20:	403c                	lw	a5,64(s0)
20401b22:	8d1d                	sub	a0,a0,a5
20401b24:	545c                	lw	a5,44(s0)
20401b26:	500c                	lw	a1,32(s0)
20401b28:	862a                	mv	a2,a0
20401b2a:	4681                	li	a3,0
20401b2c:	8526                	mv	a0,s1
20401b2e:	9782                	jalr	a5
20401b30:	57fd                	li	a5,-1
20401b32:	00c45703          	lhu	a4,12(s0)
20401b36:	00f51d63          	bne	a0,a5,20401b50 <__sflush_r+0x80>
20401b3a:	4094                	lw	a3,0(s1)
20401b3c:	47f5                	li	a5,29
20401b3e:	08d7e463          	bltu	a5,a3,20401bc6 <__sflush_r+0xf6>
20401b42:	204007b7          	lui	a5,0x20400
20401b46:	0785                	addi	a5,a5,1
20401b48:	00d7d7b3          	srl	a5,a5,a3
20401b4c:	8b85                	andi	a5,a5,1
20401b4e:	cfa5                	beqz	a5,20401bc6 <__sflush_r+0xf6>
20401b50:	481c                	lw	a5,16(s0)
20401b52:	00042223          	sw	zero,4(s0)
20401b56:	c01c                	sw	a5,0(s0)
20401b58:	01371793          	slli	a5,a4,0x13
20401b5c:	0007d863          	bgez	a5,20401b6c <__sflush_r+0x9c>
20401b60:	57fd                	li	a5,-1
20401b62:	00f51463          	bne	a0,a5,20401b6a <__sflush_r+0x9a>
20401b66:	409c                	lw	a5,0(s1)
20401b68:	e391                	bnez	a5,20401b6c <__sflush_r+0x9c>
20401b6a:	c868                	sw	a0,84(s0)
20401b6c:	584c                	lw	a1,52(s0)
20401b6e:	0124a023          	sw	s2,0(s1)
20401b72:	d1d1                	beqz	a1,20401af6 <__sflush_r+0x26>
20401b74:	04440793          	addi	a5,s0,68
20401b78:	00f58463          	beq	a1,a5,20401b80 <__sflush_r+0xb0>
20401b7c:	8526                	mv	a0,s1
20401b7e:	213d                	jal	20401fac <_free_r>
20401b80:	02042a23          	sw	zero,52(s0)
20401b84:	bf8d                	j	20401af6 <__sflush_r+0x26>
20401b86:	500c                	lw	a1,32(s0)
20401b88:	4685                	li	a3,1
20401b8a:	4601                	li	a2,0
20401b8c:	8526                	mv	a0,s1
20401b8e:	9702                	jalr	a4
20401b90:	57fd                	li	a5,-1
20401b92:	f6f51fe3          	bne	a0,a5,20401b10 <__sflush_r+0x40>
20401b96:	409c                	lw	a5,0(s1)
20401b98:	dfa5                	beqz	a5,20401b10 <__sflush_r+0x40>
20401b9a:	4775                	li	a4,29
20401b9c:	00e78563          	beq	a5,a4,20401ba6 <__sflush_r+0xd6>
20401ba0:	4759                	li	a4,22
20401ba2:	00e79563          	bne	a5,a4,20401bac <__sflush_r+0xdc>
20401ba6:	0124a023          	sw	s2,0(s1)
20401baa:	b7b1                	j	20401af6 <__sflush_r+0x26>
20401bac:	00c45783          	lhu	a5,12(s0)
20401bb0:	0407e793          	ori	a5,a5,64
20401bb4:	00f41623          	sh	a5,12(s0)
20401bb8:	40f2                	lw	ra,28(sp)
20401bba:	4462                	lw	s0,24(sp)
20401bbc:	44d2                	lw	s1,20(sp)
20401bbe:	4942                	lw	s2,16(sp)
20401bc0:	49b2                	lw	s3,12(sp)
20401bc2:	6105                	addi	sp,sp,32
20401bc4:	8082                	ret
20401bc6:	04076713          	ori	a4,a4,64
20401bca:	00e41623          	sh	a4,12(s0)
20401bce:	b7ed                	j	20401bb8 <__sflush_r+0xe8>
20401bd0:	0105a983          	lw	s3,16(a1)
20401bd4:	f20981e3          	beqz	s3,20401af6 <__sflush_r+0x26>
20401bd8:	0005a903          	lw	s2,0(a1)
20401bdc:	8b8d                	andi	a5,a5,3
20401bde:	0135a023          	sw	s3,0(a1)
20401be2:	41390933          	sub	s2,s2,s3
20401be6:	4701                	li	a4,0
20401be8:	e391                	bnez	a5,20401bec <__sflush_r+0x11c>
20401bea:	49d8                	lw	a4,20(a1)
20401bec:	c418                	sw	a4,8(s0)
20401bee:	f12054e3          	blez	s2,20401af6 <__sflush_r+0x26>
20401bf2:	541c                	lw	a5,40(s0)
20401bf4:	500c                	lw	a1,32(s0)
20401bf6:	86ca                	mv	a3,s2
20401bf8:	864e                	mv	a2,s3
20401bfa:	8526                	mv	a0,s1
20401bfc:	9782                	jalr	a5
20401bfe:	00a04a63          	bgtz	a0,20401c12 <__sflush_r+0x142>
20401c02:	00c45783          	lhu	a5,12(s0)
20401c06:	557d                	li	a0,-1
20401c08:	0407e793          	ori	a5,a5,64
20401c0c:	00f41623          	sh	a5,12(s0)
20401c10:	b765                	j	20401bb8 <__sflush_r+0xe8>
20401c12:	99aa                	add	s3,s3,a0
20401c14:	40a90933          	sub	s2,s2,a0
20401c18:	bfd9                	j	20401bee <__sflush_r+0x11e>

20401c1a <_fflush_r>:
_fflush_r():
20401c1a:	499c                	lw	a5,16(a1)
20401c1c:	cfb9                	beqz	a5,20401c7a <_fflush_r+0x60>
20401c1e:	1101                	addi	sp,sp,-32
20401c20:	cc22                	sw	s0,24(sp)
20401c22:	ce06                	sw	ra,28(sp)
20401c24:	842a                	mv	s0,a0
20401c26:	c511                	beqz	a0,20401c32 <_fflush_r+0x18>
20401c28:	4d1c                	lw	a5,24(a0)
20401c2a:	e781                	bnez	a5,20401c32 <_fflush_r+0x18>
20401c2c:	c62e                	sw	a1,12(sp)
20401c2e:	2219                	jal	20401d34 <__sinit>
20401c30:	45b2                	lw	a1,12(sp)
20401c32:	fffff797          	auipc	a5,0xfffff
20401c36:	bc278793          	addi	a5,a5,-1086 # 204007f4 <__sf_fake_stdin>
20401c3a:	00f59b63          	bne	a1,a5,20401c50 <_fflush_r+0x36>
20401c3e:	404c                	lw	a1,4(s0)
20401c40:	00c59783          	lh	a5,12(a1)
20401c44:	c795                	beqz	a5,20401c70 <_fflush_r+0x56>
20401c46:	8522                	mv	a0,s0
20401c48:	4462                	lw	s0,24(sp)
20401c4a:	40f2                	lw	ra,28(sp)
20401c4c:	6105                	addi	sp,sp,32
20401c4e:	b549                	j	20401ad0 <__sflush_r>
20401c50:	fffff797          	auipc	a5,0xfffff
20401c54:	bc478793          	addi	a5,a5,-1084 # 20400814 <__sf_fake_stdout>
20401c58:	00f59463          	bne	a1,a5,20401c60 <_fflush_r+0x46>
20401c5c:	440c                	lw	a1,8(s0)
20401c5e:	b7cd                	j	20401c40 <_fflush_r+0x26>
20401c60:	fffff797          	auipc	a5,0xfffff
20401c64:	b7478793          	addi	a5,a5,-1164 # 204007d4 <__sf_fake_stderr>
20401c68:	fcf59ce3          	bne	a1,a5,20401c40 <_fflush_r+0x26>
20401c6c:	444c                	lw	a1,12(s0)
20401c6e:	bfc9                	j	20401c40 <_fflush_r+0x26>
20401c70:	40f2                	lw	ra,28(sp)
20401c72:	4462                	lw	s0,24(sp)
20401c74:	4501                	li	a0,0
20401c76:	6105                	addi	sp,sp,32
20401c78:	8082                	ret
20401c7a:	4501                	li	a0,0
20401c7c:	8082                	ret

20401c7e <std>:
std():
20401c7e:	1141                	addi	sp,sp,-16
20401c80:	c422                	sw	s0,8(sp)
20401c82:	c606                	sw	ra,12(sp)
20401c84:	842a                	mv	s0,a0
20401c86:	00b51623          	sh	a1,12(a0)
20401c8a:	00c51723          	sh	a2,14(a0)
20401c8e:	00052023          	sw	zero,0(a0)
20401c92:	00052223          	sw	zero,4(a0)
20401c96:	00052423          	sw	zero,8(a0)
20401c9a:	06052223          	sw	zero,100(a0)
20401c9e:	00052823          	sw	zero,16(a0)
20401ca2:	00052a23          	sw	zero,20(a0)
20401ca6:	00052c23          	sw	zero,24(a0)
20401caa:	4621                	li	a2,8
20401cac:	4581                	li	a1,0
20401cae:	05c50513          	addi	a0,a0,92
20401cb2:	24ed                	jal	20401f9c <memset>
20401cb4:	00000797          	auipc	a5,0x0
20401cb8:	4ac78793          	addi	a5,a5,1196 # 20402160 <__sread>
20401cbc:	d05c                	sw	a5,36(s0)
20401cbe:	00000797          	auipc	a5,0x0
20401cc2:	4d278793          	addi	a5,a5,1234 # 20402190 <__swrite>
20401cc6:	d41c                	sw	a5,40(s0)
20401cc8:	00000797          	auipc	a5,0x0
20401ccc:	51678793          	addi	a5,a5,1302 # 204021de <__sseek>
20401cd0:	d45c                	sw	a5,44(s0)
20401cd2:	00000797          	auipc	a5,0x0
20401cd6:	54278793          	addi	a5,a5,1346 # 20402214 <__sclose>
20401cda:	d000                	sw	s0,32(s0)
20401cdc:	d81c                	sw	a5,48(s0)
20401cde:	40b2                	lw	ra,12(sp)
20401ce0:	4422                	lw	s0,8(sp)
20401ce2:	0141                	addi	sp,sp,16
20401ce4:	8082                	ret

20401ce6 <_cleanup_r>:
_cleanup_r():
20401ce6:	00000597          	auipc	a1,0x0
20401cea:	f3458593          	addi	a1,a1,-204 # 20401c1a <_fflush_r>
20401cee:	a2b9                	j	20401e3c <_fwalk_reent>

20401cf0 <__sfmoreglue>:
__sfmoreglue():
20401cf0:	1141                	addi	sp,sp,-16
20401cf2:	c226                	sw	s1,4(sp)
20401cf4:	06800613          	li	a2,104
20401cf8:	fff58493          	addi	s1,a1,-1
20401cfc:	02c484b3          	mul	s1,s1,a2
20401d00:	c04a                	sw	s2,0(sp)
20401d02:	892e                	mv	s2,a1
20401d04:	c422                	sw	s0,8(sp)
20401d06:	c606                	sw	ra,12(sp)
20401d08:	07448593          	addi	a1,s1,116
20401d0c:	26b1                	jal	20402058 <_malloc_r>
20401d0e:	842a                	mv	s0,a0
20401d10:	c919                	beqz	a0,20401d26 <__sfmoreglue+0x36>
20401d12:	00052023          	sw	zero,0(a0)
20401d16:	01252223          	sw	s2,4(a0)
20401d1a:	0531                	addi	a0,a0,12
20401d1c:	c408                	sw	a0,8(s0)
20401d1e:	06848613          	addi	a2,s1,104
20401d22:	4581                	li	a1,0
20401d24:	2ca5                	jal	20401f9c <memset>
20401d26:	8522                	mv	a0,s0
20401d28:	40b2                	lw	ra,12(sp)
20401d2a:	4422                	lw	s0,8(sp)
20401d2c:	4492                	lw	s1,4(sp)
20401d2e:	4902                	lw	s2,0(sp)
20401d30:	0141                	addi	sp,sp,16
20401d32:	8082                	ret

20401d34 <__sinit>:
__sinit():
20401d34:	4d1c                	lw	a5,24(a0)
20401d36:	e3bd                	bnez	a5,20401d9c <__sinit+0x68>
20401d38:	1141                	addi	sp,sp,-16
20401d3a:	c606                	sw	ra,12(sp)
20401d3c:	c422                	sw	s0,8(sp)
20401d3e:	00000797          	auipc	a5,0x0
20401d42:	fa878793          	addi	a5,a5,-88 # 20401ce6 <_cleanup_r>
20401d46:	d51c                	sw	a5,40(a0)
20401d48:	5fbff797          	auipc	a5,0x5fbff
20401d4c:	d3c78793          	addi	a5,a5,-708 # 80000a84 <_global_impure_ptr>
20401d50:	439c                	lw	a5,0(a5)
20401d52:	04052423          	sw	zero,72(a0)
20401d56:	04052623          	sw	zero,76(a0)
20401d5a:	04052823          	sw	zero,80(a0)
20401d5e:	00f51463          	bne	a0,a5,20401d66 <__sinit+0x32>
20401d62:	4785                	li	a5,1
20401d64:	cd1c                	sw	a5,24(a0)
20401d66:	842a                	mv	s0,a0
20401d68:	281d                	jal	20401d9e <__sfp>
20401d6a:	c048                	sw	a0,4(s0)
20401d6c:	8522                	mv	a0,s0
20401d6e:	2805                	jal	20401d9e <__sfp>
20401d70:	c408                	sw	a0,8(s0)
20401d72:	8522                	mv	a0,s0
20401d74:	202d                	jal	20401d9e <__sfp>
20401d76:	c448                	sw	a0,12(s0)
20401d78:	4048                	lw	a0,4(s0)
20401d7a:	4601                	li	a2,0
20401d7c:	4591                	li	a1,4
20401d7e:	3701                	jal	20401c7e <std>
20401d80:	4408                	lw	a0,8(s0)
20401d82:	4605                	li	a2,1
20401d84:	45a5                	li	a1,9
20401d86:	3de5                	jal	20401c7e <std>
20401d88:	4448                	lw	a0,12(s0)
20401d8a:	4609                	li	a2,2
20401d8c:	45c9                	li	a1,18
20401d8e:	3dc5                	jal	20401c7e <std>
20401d90:	4785                	li	a5,1
20401d92:	cc1c                	sw	a5,24(s0)
20401d94:	40b2                	lw	ra,12(sp)
20401d96:	4422                	lw	s0,8(sp)
20401d98:	0141                	addi	sp,sp,16
20401d9a:	8082                	ret
20401d9c:	8082                	ret

20401d9e <__sfp>:
__sfp():
20401d9e:	1141                	addi	sp,sp,-16
20401da0:	5fbff797          	auipc	a5,0x5fbff
20401da4:	ce478793          	addi	a5,a5,-796 # 80000a84 <_global_impure_ptr>
20401da8:	c226                	sw	s1,4(sp)
20401daa:	4384                	lw	s1,0(a5)
20401dac:	c04a                	sw	s2,0(sp)
20401dae:	c606                	sw	ra,12(sp)
20401db0:	4c9c                	lw	a5,24(s1)
20401db2:	c422                	sw	s0,8(sp)
20401db4:	892a                	mv	s2,a0
20401db6:	e399                	bnez	a5,20401dbc <__sfp+0x1e>
20401db8:	8526                	mv	a0,s1
20401dba:	3fad                	jal	20401d34 <__sinit>
20401dbc:	04848493          	addi	s1,s1,72
20401dc0:	4480                	lw	s0,8(s1)
20401dc2:	40dc                	lw	a5,4(s1)
20401dc4:	17fd                	addi	a5,a5,-1
20401dc6:	0007d663          	bgez	a5,20401dd2 <__sfp+0x34>
20401dca:	409c                	lw	a5,0(s1)
20401dcc:	cfb1                	beqz	a5,20401e28 <__sfp+0x8a>
20401dce:	4084                	lw	s1,0(s1)
20401dd0:	bfc5                	j	20401dc0 <__sfp+0x22>
20401dd2:	00c41703          	lh	a4,12(s0)
20401dd6:	e731                	bnez	a4,20401e22 <__sfp+0x84>
20401dd8:	77c1                	lui	a5,0xffff0
20401dda:	0785                	addi	a5,a5,1
20401ddc:	06042223          	sw	zero,100(s0)
20401de0:	00042023          	sw	zero,0(s0)
20401de4:	00042223          	sw	zero,4(s0)
20401de8:	00042423          	sw	zero,8(s0)
20401dec:	c45c                	sw	a5,12(s0)
20401dee:	00042823          	sw	zero,16(s0)
20401df2:	00042a23          	sw	zero,20(s0)
20401df6:	00042c23          	sw	zero,24(s0)
20401dfa:	4621                	li	a2,8
20401dfc:	4581                	li	a1,0
20401dfe:	05c40513          	addi	a0,s0,92
20401e02:	2a69                	jal	20401f9c <memset>
20401e04:	02042a23          	sw	zero,52(s0)
20401e08:	02042c23          	sw	zero,56(s0)
20401e0c:	04042423          	sw	zero,72(s0)
20401e10:	04042623          	sw	zero,76(s0)
20401e14:	8522                	mv	a0,s0
20401e16:	40b2                	lw	ra,12(sp)
20401e18:	4422                	lw	s0,8(sp)
20401e1a:	4492                	lw	s1,4(sp)
20401e1c:	4902                	lw	s2,0(sp)
20401e1e:	0141                	addi	sp,sp,16
20401e20:	8082                	ret
20401e22:	06840413          	addi	s0,s0,104
20401e26:	bf79                	j	20401dc4 <__sfp+0x26>
20401e28:	4591                	li	a1,4
20401e2a:	854a                	mv	a0,s2
20401e2c:	35d1                	jal	20401cf0 <__sfmoreglue>
20401e2e:	c088                	sw	a0,0(s1)
20401e30:	842a                	mv	s0,a0
20401e32:	fd51                	bnez	a0,20401dce <__sfp+0x30>
20401e34:	47b1                	li	a5,12
20401e36:	00f92023          	sw	a5,0(s2)
20401e3a:	bfe9                	j	20401e14 <__sfp+0x76>

20401e3c <_fwalk_reent>:
_fwalk_reent():
20401e3c:	7179                	addi	sp,sp,-48
20401e3e:	d422                	sw	s0,40(sp)
20401e40:	d04a                	sw	s2,32(sp)
20401e42:	cc52                	sw	s4,24(sp)
20401e44:	ca56                	sw	s5,20(sp)
20401e46:	c85a                	sw	s6,16(sp)
20401e48:	c65e                	sw	s7,12(sp)
20401e4a:	d606                	sw	ra,44(sp)
20401e4c:	d226                	sw	s1,36(sp)
20401e4e:	ce4e                	sw	s3,28(sp)
20401e50:	8a2a                	mv	s4,a0
20401e52:	8aae                	mv	s5,a1
20401e54:	04850413          	addi	s0,a0,72
20401e58:	4901                	li	s2,0
20401e5a:	4b05                	li	s6,1
20401e5c:	5bfd                	li	s7,-1
20401e5e:	ec09                	bnez	s0,20401e78 <_fwalk_reent+0x3c>
20401e60:	50b2                	lw	ra,44(sp)
20401e62:	5422                	lw	s0,40(sp)
20401e64:	854a                	mv	a0,s2
20401e66:	5492                	lw	s1,36(sp)
20401e68:	5902                	lw	s2,32(sp)
20401e6a:	49f2                	lw	s3,28(sp)
20401e6c:	4a62                	lw	s4,24(sp)
20401e6e:	4ad2                	lw	s5,20(sp)
20401e70:	4b42                	lw	s6,16(sp)
20401e72:	4bb2                	lw	s7,12(sp)
20401e74:	6145                	addi	sp,sp,48
20401e76:	8082                	ret
20401e78:	4404                	lw	s1,8(s0)
20401e7a:	00442983          	lw	s3,4(s0)
20401e7e:	19fd                	addi	s3,s3,-1
20401e80:	0009d463          	bgez	s3,20401e88 <_fwalk_reent+0x4c>
20401e84:	4000                	lw	s0,0(s0)
20401e86:	bfe1                	j	20401e5e <_fwalk_reent+0x22>
20401e88:	00c4d783          	lhu	a5,12(s1)
20401e8c:	00fb7b63          	bgeu	s6,a5,20401ea2 <_fwalk_reent+0x66>
20401e90:	00e49783          	lh	a5,14(s1)
20401e94:	01778763          	beq	a5,s7,20401ea2 <_fwalk_reent+0x66>
20401e98:	85a6                	mv	a1,s1
20401e9a:	8552                	mv	a0,s4
20401e9c:	9a82                	jalr	s5
20401e9e:	00a96933          	or	s2,s2,a0
20401ea2:	06848493          	addi	s1,s1,104
20401ea6:	bfe1                	j	20401e7e <_fwalk_reent+0x42>

20401ea8 <__swhatbuf_r>:
__swhatbuf_r():
20401ea8:	7119                	addi	sp,sp,-128
20401eaa:	daa6                	sw	s1,116(sp)
20401eac:	84ae                	mv	s1,a1
20401eae:	00e59583          	lh	a1,14(a1)
20401eb2:	dca2                	sw	s0,120(sp)
20401eb4:	de86                	sw	ra,124(sp)
20401eb6:	8432                	mv	s0,a2
20401eb8:	0005dc63          	bgez	a1,20401ed0 <__swhatbuf_r+0x28>
20401ebc:	00c4d783          	lhu	a5,12(s1)
20401ec0:	0006a023          	sw	zero,0(a3)
20401ec4:	0807f793          	andi	a5,a5,128
20401ec8:	e39d                	bnez	a5,20401eee <__swhatbuf_r+0x46>
20401eca:	40000793          	li	a5,1024
20401ece:	a015                	j	20401ef2 <__swhatbuf_r+0x4a>
20401ed0:	0830                	addi	a2,sp,24
20401ed2:	c636                	sw	a3,12(sp)
20401ed4:	2e79                	jal	20402272 <_fstat_r>
20401ed6:	46b2                	lw	a3,12(sp)
20401ed8:	fe0542e3          	bltz	a0,20401ebc <__swhatbuf_r+0x14>
20401edc:	4772                	lw	a4,28(sp)
20401ede:	67bd                	lui	a5,0xf
20401ee0:	8ff9                	and	a5,a5,a4
20401ee2:	7779                	lui	a4,0xffffe
20401ee4:	97ba                	add	a5,a5,a4
20401ee6:	0017b793          	seqz	a5,a5
20401eea:	c29c                	sw	a5,0(a3)
20401eec:	bff9                	j	20401eca <__swhatbuf_r+0x22>
20401eee:	04000793          	li	a5,64
20401ef2:	c01c                	sw	a5,0(s0)
20401ef4:	50f6                	lw	ra,124(sp)
20401ef6:	5466                	lw	s0,120(sp)
20401ef8:	54d6                	lw	s1,116(sp)
20401efa:	4501                	li	a0,0
20401efc:	6109                	addi	sp,sp,128
20401efe:	8082                	ret

20401f00 <__smakebuf_r>:
__smakebuf_r():
20401f00:	00c5d783          	lhu	a5,12(a1)
20401f04:	1101                	addi	sp,sp,-32
20401f06:	cc22                	sw	s0,24(sp)
20401f08:	ce06                	sw	ra,28(sp)
20401f0a:	ca26                	sw	s1,20(sp)
20401f0c:	c84a                	sw	s2,16(sp)
20401f0e:	8b89                	andi	a5,a5,2
20401f10:	842e                	mv	s0,a1
20401f12:	cf89                	beqz	a5,20401f2c <__smakebuf_r+0x2c>
20401f14:	04740793          	addi	a5,s0,71
20401f18:	c01c                	sw	a5,0(s0)
20401f1a:	c81c                	sw	a5,16(s0)
20401f1c:	4785                	li	a5,1
20401f1e:	c85c                	sw	a5,20(s0)
20401f20:	40f2                	lw	ra,28(sp)
20401f22:	4462                	lw	s0,24(sp)
20401f24:	44d2                	lw	s1,20(sp)
20401f26:	4942                	lw	s2,16(sp)
20401f28:	6105                	addi	sp,sp,32
20401f2a:	8082                	ret
20401f2c:	0074                	addi	a3,sp,12
20401f2e:	0030                	addi	a2,sp,8
20401f30:	84aa                	mv	s1,a0
20401f32:	3f9d                	jal	20401ea8 <__swhatbuf_r>
20401f34:	45a2                	lw	a1,8(sp)
20401f36:	892a                	mv	s2,a0
20401f38:	8526                	mv	a0,s1
20401f3a:	2a39                	jal	20402058 <_malloc_r>
20401f3c:	ed01                	bnez	a0,20401f54 <__smakebuf_r+0x54>
20401f3e:	00c41783          	lh	a5,12(s0)
20401f42:	2007f713          	andi	a4,a5,512
20401f46:	ff69                	bnez	a4,20401f20 <__smakebuf_r+0x20>
20401f48:	9bf1                	andi	a5,a5,-4
20401f4a:	0027e793          	ori	a5,a5,2
20401f4e:	00f41623          	sh	a5,12(s0)
20401f52:	b7c9                	j	20401f14 <__smakebuf_r+0x14>
20401f54:	00000797          	auipc	a5,0x0
20401f58:	d9278793          	addi	a5,a5,-622 # 20401ce6 <_cleanup_r>
20401f5c:	d49c                	sw	a5,40(s1)
20401f5e:	00c45783          	lhu	a5,12(s0)
20401f62:	c008                	sw	a0,0(s0)
20401f64:	c808                	sw	a0,16(s0)
20401f66:	0807e793          	ori	a5,a5,128
20401f6a:	00f41623          	sh	a5,12(s0)
20401f6e:	47a2                	lw	a5,8(sp)
20401f70:	c85c                	sw	a5,20(s0)
20401f72:	47b2                	lw	a5,12(sp)
20401f74:	cf89                	beqz	a5,20401f8e <__smakebuf_r+0x8e>
20401f76:	00e41583          	lh	a1,14(s0)
20401f7a:	8526                	mv	a0,s1
20401f7c:	260d                	jal	2040229e <_isatty_r>
20401f7e:	c901                	beqz	a0,20401f8e <__smakebuf_r+0x8e>
20401f80:	00c45783          	lhu	a5,12(s0)
20401f84:	9bf1                	andi	a5,a5,-4
20401f86:	0017e793          	ori	a5,a5,1
20401f8a:	00f41623          	sh	a5,12(s0)
20401f8e:	00c45783          	lhu	a5,12(s0)
20401f92:	00f96933          	or	s2,s2,a5
20401f96:	01241623          	sh	s2,12(s0)
20401f9a:	b759                	j	20401f20 <__smakebuf_r+0x20>

20401f9c <memset>:
memset():
20401f9c:	832a                	mv	t1,a0
20401f9e:	c611                	beqz	a2,20401faa <memset+0xe>
20401fa0:	00b30023          	sb	a1,0(t1)
20401fa4:	167d                	addi	a2,a2,-1
20401fa6:	0305                	addi	t1,t1,1
20401fa8:	fe65                	bnez	a2,20401fa0 <memset+0x4>
20401faa:	8082                	ret

20401fac <_free_r>:
_free_r():
20401fac:	c5cd                	beqz	a1,20402056 <_free_r+0xaa>
20401fae:	ffc5a783          	lw	a5,-4(a1)
20401fb2:	1141                	addi	sp,sp,-16
20401fb4:	c422                	sw	s0,8(sp)
20401fb6:	c606                	sw	ra,12(sp)
20401fb8:	c226                	sw	s1,4(sp)
20401fba:	ffc58413          	addi	s0,a1,-4
20401fbe:	0007d363          	bgez	a5,20401fc4 <_free_r+0x18>
20401fc2:	943e                	add	s0,s0,a5
20401fc4:	84aa                	mv	s1,a0
20401fc6:	2e05                	jal	204022f6 <__malloc_lock>
20401fc8:	5fbff797          	auipc	a5,0x5fbff
20401fcc:	b1078793          	addi	a5,a5,-1264 # 80000ad8 <__tls_base>
20401fd0:	439c                	lw	a5,0(a5)
20401fd2:	ef89                	bnez	a5,20401fec <_free_r+0x40>
20401fd4:	00042223          	sw	zero,4(s0)
20401fd8:	5fbff797          	auipc	a5,0x5fbff
20401fdc:	b087a023          	sw	s0,-1280(a5) # 80000ad8 <__tls_base>
20401fe0:	4422                	lw	s0,8(sp)
20401fe2:	40b2                	lw	ra,12(sp)
20401fe4:	8526                	mv	a0,s1
20401fe6:	4492                	lw	s1,4(sp)
20401fe8:	0141                	addi	sp,sp,16
20401fea:	a639                	j	204022f8 <__malloc_unlock>
20401fec:	00f47e63          	bgeu	s0,a5,20402008 <_free_r+0x5c>
20401ff0:	4014                	lw	a3,0(s0)
20401ff2:	00d40733          	add	a4,s0,a3
20401ff6:	00e79663          	bne	a5,a4,20402002 <_free_r+0x56>
20401ffa:	4398                	lw	a4,0(a5)
20401ffc:	43dc                	lw	a5,4(a5)
20401ffe:	9736                	add	a4,a4,a3
20402000:	c018                	sw	a4,0(s0)
20402002:	c05c                	sw	a5,4(s0)
20402004:	bfd1                	j	20401fd8 <_free_r+0x2c>
20402006:	87ba                	mv	a5,a4
20402008:	43d8                	lw	a4,4(a5)
2040200a:	c319                	beqz	a4,20402010 <_free_r+0x64>
2040200c:	fee47de3          	bgeu	s0,a4,20402006 <_free_r+0x5a>
20402010:	4394                	lw	a3,0(a5)
20402012:	00d78633          	add	a2,a5,a3
20402016:	00861f63          	bne	a2,s0,20402034 <_free_r+0x88>
2040201a:	4010                	lw	a2,0(s0)
2040201c:	96b2                	add	a3,a3,a2
2040201e:	c394                	sw	a3,0(a5)
20402020:	00d78633          	add	a2,a5,a3
20402024:	fac71ee3          	bne	a4,a2,20401fe0 <_free_r+0x34>
20402028:	4310                	lw	a2,0(a4)
2040202a:	4358                	lw	a4,4(a4)
2040202c:	96b2                	add	a3,a3,a2
2040202e:	c394                	sw	a3,0(a5)
20402030:	c3d8                	sw	a4,4(a5)
20402032:	b77d                	j	20401fe0 <_free_r+0x34>
20402034:	00c47563          	bgeu	s0,a2,2040203e <_free_r+0x92>
20402038:	47b1                	li	a5,12
2040203a:	c09c                	sw	a5,0(s1)
2040203c:	b755                	j	20401fe0 <_free_r+0x34>
2040203e:	4010                	lw	a2,0(s0)
20402040:	00c406b3          	add	a3,s0,a2
20402044:	00d71663          	bne	a4,a3,20402050 <_free_r+0xa4>
20402048:	4314                	lw	a3,0(a4)
2040204a:	4358                	lw	a4,4(a4)
2040204c:	96b2                	add	a3,a3,a2
2040204e:	c014                	sw	a3,0(s0)
20402050:	c058                	sw	a4,4(s0)
20402052:	c3c0                	sw	s0,4(a5)
20402054:	b771                	j	20401fe0 <_free_r+0x34>
20402056:	8082                	ret

20402058 <_malloc_r>:
_malloc_r():
20402058:	1101                	addi	sp,sp,-32
2040205a:	ca26                	sw	s1,20(sp)
2040205c:	00358493          	addi	s1,a1,3
20402060:	98f1                	andi	s1,s1,-4
20402062:	ce06                	sw	ra,28(sp)
20402064:	cc22                	sw	s0,24(sp)
20402066:	c84a                	sw	s2,16(sp)
20402068:	c64e                	sw	s3,12(sp)
2040206a:	04a1                	addi	s1,s1,8
2040206c:	47b1                	li	a5,12
2040206e:	04f4f763          	bgeu	s1,a5,204020bc <_malloc_r+0x64>
20402072:	44b1                	li	s1,12
20402074:	04b4e663          	bltu	s1,a1,204020c0 <_malloc_r+0x68>
20402078:	892a                	mv	s2,a0
2040207a:	2cb5                	jal	204022f6 <__malloc_lock>
2040207c:	5fbff797          	auipc	a5,0x5fbff
20402080:	a5c78793          	addi	a5,a5,-1444 # 80000ad8 <__tls_base>
20402084:	4398                	lw	a4,0(a5)
20402086:	843a                	mv	s0,a4
20402088:	e431                	bnez	s0,204020d4 <_malloc_r+0x7c>
2040208a:	5fbff797          	auipc	a5,0x5fbff
2040208e:	a5278793          	addi	a5,a5,-1454 # 80000adc <__malloc_sbrk_start>
20402092:	439c                	lw	a5,0(a5)
20402094:	eb81                	bnez	a5,204020a4 <_malloc_r+0x4c>
20402096:	4581                	li	a1,0
20402098:	854a                	mv	a0,s2
2040209a:	2871                	jal	20402136 <_sbrk_r>
2040209c:	5fbff797          	auipc	a5,0x5fbff
204020a0:	a4a7a023          	sw	a0,-1472(a5) # 80000adc <__malloc_sbrk_start>
204020a4:	85a6                	mv	a1,s1
204020a6:	854a                	mv	a0,s2
204020a8:	2079                	jal	20402136 <_sbrk_r>
204020aa:	59fd                	li	s3,-1
204020ac:	07351963          	bne	a0,s3,2040211e <_malloc_r+0xc6>
204020b0:	47b1                	li	a5,12
204020b2:	00f92023          	sw	a5,0(s2)
204020b6:	854a                	mv	a0,s2
204020b8:	2481                	jal	204022f8 <__malloc_unlock>
204020ba:	a029                	j	204020c4 <_malloc_r+0x6c>
204020bc:	fa04dce3          	bgez	s1,20402074 <_malloc_r+0x1c>
204020c0:	47b1                	li	a5,12
204020c2:	c11c                	sw	a5,0(a0)
204020c4:	4501                	li	a0,0
204020c6:	40f2                	lw	ra,28(sp)
204020c8:	4462                	lw	s0,24(sp)
204020ca:	44d2                	lw	s1,20(sp)
204020cc:	4942                	lw	s2,16(sp)
204020ce:	49b2                	lw	s3,12(sp)
204020d0:	6105                	addi	sp,sp,32
204020d2:	8082                	ret
204020d4:	401c                	lw	a5,0(s0)
204020d6:	8f85                	sub	a5,a5,s1
204020d8:	0407c063          	bltz	a5,20402118 <_malloc_r+0xc0>
204020dc:	46ad                	li	a3,11
204020de:	00f6f663          	bgeu	a3,a5,204020ea <_malloc_r+0x92>
204020e2:	c01c                	sw	a5,0(s0)
204020e4:	943e                	add	s0,s0,a5
204020e6:	c004                	sw	s1,0(s0)
204020e8:	a801                	j	204020f8 <_malloc_r+0xa0>
204020ea:	405c                	lw	a5,4(s0)
204020ec:	02871463          	bne	a4,s0,20402114 <_malloc_r+0xbc>
204020f0:	5fbff717          	auipc	a4,0x5fbff
204020f4:	9ef72423          	sw	a5,-1560(a4) # 80000ad8 <__tls_base>
204020f8:	854a                	mv	a0,s2
204020fa:	2afd                	jal	204022f8 <__malloc_unlock>
204020fc:	00b40513          	addi	a0,s0,11
20402100:	00440793          	addi	a5,s0,4
20402104:	9961                	andi	a0,a0,-8
20402106:	40f50733          	sub	a4,a0,a5
2040210a:	df55                	beqz	a4,204020c6 <_malloc_r+0x6e>
2040210c:	943a                	add	s0,s0,a4
2040210e:	8f89                	sub	a5,a5,a0
20402110:	c01c                	sw	a5,0(s0)
20402112:	bf55                	j	204020c6 <_malloc_r+0x6e>
20402114:	c35c                	sw	a5,4(a4)
20402116:	b7cd                	j	204020f8 <_malloc_r+0xa0>
20402118:	8722                	mv	a4,s0
2040211a:	4040                	lw	s0,4(s0)
2040211c:	b7b5                	j	20402088 <_malloc_r+0x30>
2040211e:	00350413          	addi	s0,a0,3
20402122:	9871                	andi	s0,s0,-4
20402124:	fc8501e3          	beq	a0,s0,204020e6 <_malloc_r+0x8e>
20402128:	40a405b3          	sub	a1,s0,a0
2040212c:	854a                	mv	a0,s2
2040212e:	2021                	jal	20402136 <_sbrk_r>
20402130:	fb351be3          	bne	a0,s3,204020e6 <_malloc_r+0x8e>
20402134:	bfb5                	j	204020b0 <_malloc_r+0x58>

20402136 <_sbrk_r>:
_sbrk_r():
20402136:	1141                	addi	sp,sp,-16
20402138:	c422                	sw	s0,8(sp)
2040213a:	842a                	mv	s0,a0
2040213c:	852e                	mv	a0,a1
2040213e:	9001a623          	sw	zero,-1780(gp) # 80000b8c <errno>
20402142:	c606                	sw	ra,12(sp)
20402144:	69f040ef          	jal	ra,20406fe2 <_sbrk>
20402148:	57fd                	li	a5,-1
2040214a:	00f51763          	bne	a0,a5,20402158 <_sbrk_r+0x22>
2040214e:	90c18793          	addi	a5,gp,-1780 # 80000b8c <errno>
20402152:	439c                	lw	a5,0(a5)
20402154:	c391                	beqz	a5,20402158 <_sbrk_r+0x22>
20402156:	c01c                	sw	a5,0(s0)
20402158:	40b2                	lw	ra,12(sp)
2040215a:	4422                	lw	s0,8(sp)
2040215c:	0141                	addi	sp,sp,16
2040215e:	8082                	ret

20402160 <__sread>:
__sread():
20402160:	1141                	addi	sp,sp,-16
20402162:	c422                	sw	s0,8(sp)
20402164:	842e                	mv	s0,a1
20402166:	00e59583          	lh	a1,14(a1)
2040216a:	c606                	sw	ra,12(sp)
2040216c:	2279                	jal	204022fa <_read_r>
2040216e:	00054963          	bltz	a0,20402180 <__sread+0x20>
20402172:	487c                	lw	a5,84(s0)
20402174:	97aa                	add	a5,a5,a0
20402176:	c87c                	sw	a5,84(s0)
20402178:	40b2                	lw	ra,12(sp)
2040217a:	4422                	lw	s0,8(sp)
2040217c:	0141                	addi	sp,sp,16
2040217e:	8082                	ret
20402180:	00c45783          	lhu	a5,12(s0)
20402184:	777d                	lui	a4,0xfffff
20402186:	177d                	addi	a4,a4,-1
20402188:	8ff9                	and	a5,a5,a4
2040218a:	00f41623          	sh	a5,12(s0)
2040218e:	b7ed                	j	20402178 <__sread+0x18>

20402190 <__swrite>:
__swrite():
20402190:	00c5d783          	lhu	a5,12(a1)
20402194:	1101                	addi	sp,sp,-32
20402196:	cc22                	sw	s0,24(sp)
20402198:	ca26                	sw	s1,20(sp)
2040219a:	c84a                	sw	s2,16(sp)
2040219c:	c64e                	sw	s3,12(sp)
2040219e:	ce06                	sw	ra,28(sp)
204021a0:	1007f793          	andi	a5,a5,256
204021a4:	84aa                	mv	s1,a0
204021a6:	842e                	mv	s0,a1
204021a8:	8932                	mv	s2,a2
204021aa:	89b6                	mv	s3,a3
204021ac:	c791                	beqz	a5,204021b8 <__swrite+0x28>
204021ae:	00e59583          	lh	a1,14(a1)
204021b2:	4689                	li	a3,2
204021b4:	4601                	li	a2,0
204021b6:	2a09                	jal	204022c8 <_lseek_r>
204021b8:	00c45783          	lhu	a5,12(s0)
204021bc:	777d                	lui	a4,0xfffff
204021be:	177d                	addi	a4,a4,-1
204021c0:	8ff9                	and	a5,a5,a4
204021c2:	00f41623          	sh	a5,12(s0)
204021c6:	00e41583          	lh	a1,14(s0)
204021ca:	4462                	lw	s0,24(sp)
204021cc:	40f2                	lw	ra,28(sp)
204021ce:	86ce                	mv	a3,s3
204021d0:	864a                	mv	a2,s2
204021d2:	49b2                	lw	s3,12(sp)
204021d4:	4942                	lw	s2,16(sp)
204021d6:	8526                	mv	a0,s1
204021d8:	44d2                	lw	s1,20(sp)
204021da:	6105                	addi	sp,sp,32
204021dc:	a83d                	j	2040221a <_write_r>

204021de <__sseek>:
__sseek():
204021de:	1141                	addi	sp,sp,-16
204021e0:	c422                	sw	s0,8(sp)
204021e2:	842e                	mv	s0,a1
204021e4:	00e59583          	lh	a1,14(a1)
204021e8:	c606                	sw	ra,12(sp)
204021ea:	28f9                	jal	204022c8 <_lseek_r>
204021ec:	57fd                	li	a5,-1
204021ee:	00c45703          	lhu	a4,12(s0)
204021f2:	00f51b63          	bne	a0,a5,20402208 <__sseek+0x2a>
204021f6:	77fd                	lui	a5,0xfffff
204021f8:	17fd                	addi	a5,a5,-1
204021fa:	8ff9                	and	a5,a5,a4
204021fc:	00f41623          	sh	a5,12(s0)
20402200:	40b2                	lw	ra,12(sp)
20402202:	4422                	lw	s0,8(sp)
20402204:	0141                	addi	sp,sp,16
20402206:	8082                	ret
20402208:	6785                	lui	a5,0x1
2040220a:	8fd9                	or	a5,a5,a4
2040220c:	00f41623          	sh	a5,12(s0)
20402210:	c868                	sw	a0,84(s0)
20402212:	b7fd                	j	20402200 <__sseek+0x22>

20402214 <__sclose>:
__sclose():
20402214:	00e59583          	lh	a1,14(a1)
20402218:	a805                	j	20402248 <_close_r>

2040221a <_write_r>:
_write_r():
2040221a:	1141                	addi	sp,sp,-16
2040221c:	c422                	sw	s0,8(sp)
2040221e:	842a                	mv	s0,a0
20402220:	852e                	mv	a0,a1
20402222:	85b2                	mv	a1,a2
20402224:	8636                	mv	a2,a3
20402226:	9001a623          	sw	zero,-1780(gp) # 80000b8c <errno>
2040222a:	c606                	sw	ra,12(sp)
2040222c:	621040ef          	jal	ra,2040704c <_write>
20402230:	57fd                	li	a5,-1
20402232:	00f51763          	bne	a0,a5,20402240 <_write_r+0x26>
20402236:	90c18793          	addi	a5,gp,-1780 # 80000b8c <errno>
2040223a:	439c                	lw	a5,0(a5)
2040223c:	c391                	beqz	a5,20402240 <_write_r+0x26>
2040223e:	c01c                	sw	a5,0(s0)
20402240:	40b2                	lw	ra,12(sp)
20402242:	4422                	lw	s0,8(sp)
20402244:	0141                	addi	sp,sp,16
20402246:	8082                	ret

20402248 <_close_r>:
_close_r():
20402248:	1141                	addi	sp,sp,-16
2040224a:	c422                	sw	s0,8(sp)
2040224c:	842a                	mv	s0,a0
2040224e:	852e                	mv	a0,a1
20402250:	9001a623          	sw	zero,-1780(gp) # 80000b8c <errno>
20402254:	c606                	sw	ra,12(sp)
20402256:	4d1040ef          	jal	ra,20406f26 <_close>
2040225a:	57fd                	li	a5,-1
2040225c:	00f51763          	bne	a0,a5,2040226a <_close_r+0x22>
20402260:	90c18793          	addi	a5,gp,-1780 # 80000b8c <errno>
20402264:	439c                	lw	a5,0(a5)
20402266:	c391                	beqz	a5,2040226a <_close_r+0x22>
20402268:	c01c                	sw	a5,0(s0)
2040226a:	40b2                	lw	ra,12(sp)
2040226c:	4422                	lw	s0,8(sp)
2040226e:	0141                	addi	sp,sp,16
20402270:	8082                	ret

20402272 <_fstat_r>:
_fstat_r():
20402272:	1141                	addi	sp,sp,-16
20402274:	c422                	sw	s0,8(sp)
20402276:	842a                	mv	s0,a0
20402278:	852e                	mv	a0,a1
2040227a:	85b2                	mv	a1,a2
2040227c:	9001a623          	sw	zero,-1780(gp) # 80000b8c <errno>
20402280:	c606                	sw	ra,12(sp)
20402282:	4c7040ef          	jal	ra,20406f48 <_fstat>
20402286:	57fd                	li	a5,-1
20402288:	00f51763          	bne	a0,a5,20402296 <_fstat_r+0x24>
2040228c:	90c18793          	addi	a5,gp,-1780 # 80000b8c <errno>
20402290:	439c                	lw	a5,0(a5)
20402292:	c391                	beqz	a5,20402296 <_fstat_r+0x24>
20402294:	c01c                	sw	a5,0(s0)
20402296:	40b2                	lw	ra,12(sp)
20402298:	4422                	lw	s0,8(sp)
2040229a:	0141                	addi	sp,sp,16
2040229c:	8082                	ret

2040229e <_isatty_r>:
_isatty_r():
2040229e:	1141                	addi	sp,sp,-16
204022a0:	c422                	sw	s0,8(sp)
204022a2:	842a                	mv	s0,a0
204022a4:	852e                	mv	a0,a1
204022a6:	9001a623          	sw	zero,-1780(gp) # 80000b8c <errno>
204022aa:	c606                	sw	ra,12(sp)
204022ac:	4c3040ef          	jal	ra,20406f6e <_isatty>
204022b0:	57fd                	li	a5,-1
204022b2:	00f51763          	bne	a0,a5,204022c0 <_isatty_r+0x22>
204022b6:	90c18793          	addi	a5,gp,-1780 # 80000b8c <errno>
204022ba:	439c                	lw	a5,0(a5)
204022bc:	c391                	beqz	a5,204022c0 <_isatty_r+0x22>
204022be:	c01c                	sw	a5,0(s0)
204022c0:	40b2                	lw	ra,12(sp)
204022c2:	4422                	lw	s0,8(sp)
204022c4:	0141                	addi	sp,sp,16
204022c6:	8082                	ret

204022c8 <_lseek_r>:
_lseek_r():
204022c8:	1141                	addi	sp,sp,-16
204022ca:	c422                	sw	s0,8(sp)
204022cc:	842a                	mv	s0,a0
204022ce:	852e                	mv	a0,a1
204022d0:	85b2                	mv	a1,a2
204022d2:	8636                	mv	a2,a3
204022d4:	9001a623          	sw	zero,-1780(gp) # 80000b8c <errno>
204022d8:	c606                	sw	ra,12(sp)
204022da:	4b5040ef          	jal	ra,20406f8e <_lseek>
204022de:	57fd                	li	a5,-1
204022e0:	00f51763          	bne	a0,a5,204022ee <_lseek_r+0x26>
204022e4:	90c18793          	addi	a5,gp,-1780 # 80000b8c <errno>
204022e8:	439c                	lw	a5,0(a5)
204022ea:	c391                	beqz	a5,204022ee <_lseek_r+0x26>
204022ec:	c01c                	sw	a5,0(s0)
204022ee:	40b2                	lw	ra,12(sp)
204022f0:	4422                	lw	s0,8(sp)
204022f2:	0141                	addi	sp,sp,16
204022f4:	8082                	ret

204022f6 <__malloc_lock>:
__malloc_lock():
204022f6:	8082                	ret

204022f8 <__malloc_unlock>:
__malloc_unlock():
204022f8:	8082                	ret

204022fa <_read_r>:
_read_r():
204022fa:	1141                	addi	sp,sp,-16
204022fc:	c422                	sw	s0,8(sp)
204022fe:	842a                	mv	s0,a0
20402300:	852e                	mv	a0,a1
20402302:	85b2                	mv	a1,a2
20402304:	8636                	mv	a2,a3
20402306:	9001a623          	sw	zero,-1780(gp) # 80000b8c <errno>
2040230a:	c606                	sw	ra,12(sp)
2040230c:	4ad040ef          	jal	ra,20406fb8 <_read>
20402310:	57fd                	li	a5,-1
20402312:	00f51763          	bne	a0,a5,20402320 <_read_r+0x26>
20402316:	90c18793          	addi	a5,gp,-1780 # 80000b8c <errno>
2040231a:	439c                	lw	a5,0(a5)
2040231c:	c391                	beqz	a5,20402320 <_read_r+0x26>
2040231e:	c01c                	sw	a5,0(s0)
20402320:	40b2                	lw	ra,12(sp)
20402322:	4422                	lw	s0,8(sp)
20402324:	0141                	addi	sp,sp,16
20402326:	8082                	ret

20402328 <metal_cpu_get_mtime>:
metal_cpu_get_mtime():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:97
 * will be 0.
 *
 * @param cpu The CPU device handle
 * @return The value of mtime, or 0 if failure
 */
__inline__ unsigned long long metal_cpu_get_mtime(struct metal_cpu *cpu) {
20402328:	1101                	addi	sp,sp,-32
2040232a:	ce06                	sw	ra,28(sp)
2040232c:	cc22                	sw	s0,24(sp)
2040232e:	1000                	addi	s0,sp,32
20402330:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:98
    return cpu->vtable->mtime_get(cpu);
20402334:	fec42783          	lw	a5,-20(s0)
20402338:	439c                	lw	a5,0(a5)
2040233a:	479c                	lw	a5,8(a5)
2040233c:	fec42503          	lw	a0,-20(s0)
20402340:	9782                	jalr	a5
20402342:	87aa                	mv	a5,a0
20402344:	882e                	mv	a6,a1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:99
}
20402346:	853e                	mv	a0,a5
20402348:	85c2                	mv	a1,a6
2040234a:	40f2                	lw	ra,28(sp)
2040234c:	4462                	lw	s0,24(sp)
2040234e:	6105                	addi	sp,sp,32
20402350:	8082                	ret

20402352 <metal_cpu_set_mtimecmp>:
metal_cpu_set_mtimecmp():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:112
 * @param cpu The CPU device handle
 * @param time The value to set the compare register to
 * @return The value of mtimecmp or -1 if error
 */
__inline__ int metal_cpu_set_mtimecmp(struct metal_cpu *cpu,
                                      unsigned long long time) {
20402352:	1101                	addi	sp,sp,-32
20402354:	ce06                	sw	ra,28(sp)
20402356:	cc22                	sw	s0,24(sp)
20402358:	1000                	addi	s0,sp,32
2040235a:	fea42623          	sw	a0,-20(s0)
2040235e:	feb42023          	sw	a1,-32(s0)
20402362:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:113
    return cpu->vtable->mtimecmp_set(cpu, time);
20402366:	fec42783          	lw	a5,-20(s0)
2040236a:	439c                	lw	a5,0(a5)
2040236c:	47dc                	lw	a5,12(a5)
2040236e:	fe042583          	lw	a1,-32(s0)
20402372:	fe442603          	lw	a2,-28(s0)
20402376:	fec42503          	lw	a0,-20(s0)
2040237a:	9782                	jalr	a5
2040237c:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:114
}
2040237e:	853e                	mv	a0,a5
20402380:	40f2                	lw	ra,28(sp)
20402382:	4462                	lw	s0,24(sp)
20402384:	6105                	addi	sp,sp,32
20402386:	8082                	ret

20402388 <metal_cpu_timer_interrupt_controller>:
metal_cpu_timer_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:126
 *
 * @param cpu The CPU device handle
 * @return A pointer to the timer interrupt handle
 */
__inline__ struct metal_interrupt *
metal_cpu_timer_interrupt_controller(struct metal_cpu *cpu) {
20402388:	1101                	addi	sp,sp,-32
2040238a:	ce06                	sw	ra,28(sp)
2040238c:	cc22                	sw	s0,24(sp)
2040238e:	1000                	addi	s0,sp,32
20402390:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:127
    return cpu->vtable->tmr_controller_interrupt(cpu);
20402394:	fec42783          	lw	a5,-20(s0)
20402398:	439c                	lw	a5,0(a5)
2040239a:	4b9c                	lw	a5,16(a5)
2040239c:	fec42503          	lw	a0,-20(s0)
204023a0:	9782                	jalr	a5
204023a2:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:128
}
204023a4:	853e                	mv	a0,a5
204023a6:	40f2                	lw	ra,28(sp)
204023a8:	4462                	lw	s0,24(sp)
204023aa:	6105                	addi	sp,sp,32
204023ac:	8082                	ret

204023ae <metal_cpu_timer_get_interrupt_id>:
metal_cpu_timer_get_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:137
 * Get the interrupt ID of the real-time clock interrupt
 *
 * @param cpu The CPU device handle
 * @return The timer interrupt ID
 */
__inline__ int metal_cpu_timer_get_interrupt_id(struct metal_cpu *cpu) {
204023ae:	1101                	addi	sp,sp,-32
204023b0:	ce06                	sw	ra,28(sp)
204023b2:	cc22                	sw	s0,24(sp)
204023b4:	1000                	addi	s0,sp,32
204023b6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:138
    return cpu->vtable->get_tmr_interrupt_id(cpu);
204023ba:	fec42783          	lw	a5,-20(s0)
204023be:	439c                	lw	a5,0(a5)
204023c0:	4bdc                	lw	a5,20(a5)
204023c2:	fec42503          	lw	a0,-20(s0)
204023c6:	9782                	jalr	a5
204023c8:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:139
}
204023ca:	853e                	mv	a0,a5
204023cc:	40f2                	lw	ra,28(sp)
204023ce:	4462                	lw	s0,24(sp)
204023d0:	6105                	addi	sp,sp,32
204023d2:	8082                	ret

204023d4 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
204023d4:	1101                	addi	sp,sp,-32
204023d6:	ce06                	sw	ra,28(sp)
204023d8:	cc22                	sw	s0,24(sp)
204023da:	1000                	addi	s0,sp,32
204023dc:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
204023e0:	fec42783          	lw	a5,-20(s0)
204023e4:	439c                	lw	a5,0(a5)
204023e6:	57dc                	lw	a5,44(a5)
204023e8:	fec42503          	lw	a0,-20(s0)
204023ec:	9782                	jalr	a5
204023ee:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/cpu.h:226
}
204023f0:	853e                	mv	a0,a5
204023f2:	40f2                	lw	ra,28(sp)
204023f4:	4462                	lw	s0,24(sp)
204023f6:	6105                	addi	sp,sp,32
204023f8:	8082                	ret

204023fa <metal_cpu_get>:
metal_cpu_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
204023fa:	1101                	addi	sp,sp,-32
204023fc:	ce22                	sw	s0,28(sp)
204023fe:	1000                	addi	s0,sp,32
20402400:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20402404:	fec42783          	lw	a5,-20(s0)
20402408:	eb99                	bnez	a5,2040241e <metal_cpu_get+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
2040240a:	800017b7          	lui	a5,0x80001
2040240e:	fec42703          	lw	a4,-20(s0)
20402412:	070a                	slli	a4,a4,0x2
20402414:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20402418:	97ba                	add	a5,a5,a4
2040241a:	439c                	lw	a5,0(a5)
2040241c:	a011                	j	20402420 <metal_cpu_get+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:11
    }
    return NULL;
2040241e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:12
}
20402420:	853e                	mv	a0,a5
20402422:	4472                	lw	s0,28(sp)
20402424:	6105                	addi	sp,sp,32
20402426:	8082                	ret

20402428 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20402428:	1101                	addi	sp,sp,-32
2040242a:	ce22                	sw	s0,28(sp)
2040242c:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
2040242e:	f14027f3          	csrr	a5,mhartid
20402432:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:18
    return mhartid;
20402436:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/cpu.c:20
#endif
}
2040243a:	853e                	mv	a0,a5
2040243c:	4472                	lw	s0,28(sp)
2040243e:	6105                	addi	sp,sp,32
20402440:	8082                	ret

20402442 <metal_interrupt_init>:
metal_interrupt_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:130
 * before any interrupts are registered or enabled with the handler. It
 * is invalid to initialize an interrupt controller more than once.
 *
 * @param controller The handle for the interrupt controller
 */
__inline__ void metal_interrupt_init(struct metal_interrupt *controller) {
20402442:	1101                	addi	sp,sp,-32
20402444:	ce06                	sw	ra,28(sp)
20402446:	cc22                	sw	s0,24(sp)
20402448:	1000                	addi	s0,sp,32
2040244a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:131
    controller->vtable->interrupt_init(controller);
2040244e:	fec42783          	lw	a5,-20(s0)
20402452:	439c                	lw	a5,0(a5)
20402454:	439c                	lw	a5,0(a5)
20402456:	fec42503          	lw	a0,-20(s0)
2040245a:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:132
}
2040245c:	0001                	nop
2040245e:	40f2                	lw	ra,28(sp)
20402460:	4462                	lw	s0,24(sp)
20402462:	6105                	addi	sp,sp,32
20402464:	8082                	ret

20402466 <metal_interrupt_register_handler>:
metal_interrupt_register_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:240
 * @return 0 upon success
 */
__inline__ int
metal_interrupt_register_handler(struct metal_interrupt *controller, int id,
                                 metal_interrupt_handler_t handler,
                                 void *priv_data) {
20402466:	1101                	addi	sp,sp,-32
20402468:	ce06                	sw	ra,28(sp)
2040246a:	cc22                	sw	s0,24(sp)
2040246c:	1000                	addi	s0,sp,32
2040246e:	fea42623          	sw	a0,-20(s0)
20402472:	feb42423          	sw	a1,-24(s0)
20402476:	fec42223          	sw	a2,-28(s0)
2040247a:	fed42023          	sw	a3,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:241
    return controller->vtable->interrupt_register(controller, id, handler,
2040247e:	fec42783          	lw	a5,-20(s0)
20402482:	439c                	lw	a5,0(a5)
20402484:	4fdc                	lw	a5,28(a5)
20402486:	fe042683          	lw	a3,-32(s0)
2040248a:	fe442603          	lw	a2,-28(s0)
2040248e:	fe842583          	lw	a1,-24(s0)
20402492:	fec42503          	lw	a0,-20(s0)
20402496:	9782                	jalr	a5
20402498:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:243
                                                  priv_data);
}
2040249a:	853e                	mv	a0,a5
2040249c:	40f2                	lw	ra,28(sp)
2040249e:	4462                	lw	s0,24(sp)
204024a0:	6105                	addi	sp,sp,32
204024a2:	8082                	ret

204024a4 <metal_interrupt_enable>:
metal_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:267
 * @param controller The handle for the interrupt controller
 * @param id The interrupt ID to enable
 * @return 0 upon success
 */
__inline__ int metal_interrupt_enable(struct metal_interrupt *controller,
                                      int id) {
204024a4:	1101                	addi	sp,sp,-32
204024a6:	ce06                	sw	ra,28(sp)
204024a8:	cc22                	sw	s0,24(sp)
204024aa:	1000                	addi	s0,sp,32
204024ac:	fea42623          	sw	a0,-20(s0)
204024b0:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:268
    return controller->vtable->interrupt_enable(controller, id);
204024b4:	fec42783          	lw	a5,-20(s0)
204024b8:	439c                	lw	a5,0(a5)
204024ba:	53dc                	lw	a5,36(a5)
204024bc:	fe842583          	lw	a1,-24(s0)
204024c0:	fec42503          	lw	a0,-20(s0)
204024c4:	9782                	jalr	a5
204024c6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:269
}
204024c8:	853e                	mv	a0,a5
204024ca:	40f2                	lw	ra,28(sp)
204024cc:	4462                	lw	s0,24(sp)
204024ce:	6105                	addi	sp,sp,32
204024d0:	8082                	ret

204024d2 <metal_interrupt_disable>:
metal_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:278
 * @param controller The handle for the interrupt controller
 * @param id The interrupt ID to disable
 * @return 0 upon success
 */
__inline__ int metal_interrupt_disable(struct metal_interrupt *controller,
                                       int id) {
204024d2:	1101                	addi	sp,sp,-32
204024d4:	ce06                	sw	ra,28(sp)
204024d6:	cc22                	sw	s0,24(sp)
204024d8:	1000                	addi	s0,sp,32
204024da:	fea42623          	sw	a0,-20(s0)
204024de:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:279
    return controller->vtable->interrupt_disable(controller, id);
204024e2:	fec42783          	lw	a5,-20(s0)
204024e6:	439c                	lw	a5,0(a5)
204024e8:	579c                	lw	a5,40(a5)
204024ea:	fe842583          	lw	a1,-24(s0)
204024ee:	fec42503          	lw	a0,-20(s0)
204024f2:	9782                	jalr	a5
204024f4:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/interrupt.h:280
}
204024f6:	853e                	mv	a0,a5
204024f8:	40f2                	lw	ra,28(sp)
204024fa:	4462                	lw	s0,24(sp)
204024fc:	6105                	addi	sp,sp,32
204024fe:	8082                	ret

20402500 <metal_led_enable>:
metal_led_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:49

/*!
 * @brief Enable an LED
 * @param led The handle for the LED
 */
__inline__ void metal_led_enable(struct metal_led *led) {
20402500:	1101                	addi	sp,sp,-32
20402502:	ce06                	sw	ra,28(sp)
20402504:	cc22                	sw	s0,24(sp)
20402506:	1000                	addi	s0,sp,32
20402508:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:50
    led->vtable->led_enable(led);
2040250c:	fec42783          	lw	a5,-20(s0)
20402510:	439c                	lw	a5,0(a5)
20402512:	43dc                	lw	a5,4(a5)
20402514:	fec42503          	lw	a0,-20(s0)
20402518:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:51
}
2040251a:	0001                	nop
2040251c:	40f2                	lw	ra,28(sp)
2040251e:	4462                	lw	s0,24(sp)
20402520:	6105                	addi	sp,sp,32
20402522:	8082                	ret

20402524 <metal_led_on>:
metal_led_on():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:57

/*!
 * @brief Turn an LED on
 * @param led The handle for the LED
 */
__inline__ void metal_led_on(struct metal_led *led) {
20402524:	1101                	addi	sp,sp,-32
20402526:	ce06                	sw	ra,28(sp)
20402528:	cc22                	sw	s0,24(sp)
2040252a:	1000                	addi	s0,sp,32
2040252c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:58
    led->vtable->led_on(led);
20402530:	fec42783          	lw	a5,-20(s0)
20402534:	439c                	lw	a5,0(a5)
20402536:	479c                	lw	a5,8(a5)
20402538:	fec42503          	lw	a0,-20(s0)
2040253c:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:59
}
2040253e:	0001                	nop
20402540:	40f2                	lw	ra,28(sp)
20402542:	4462                	lw	s0,24(sp)
20402544:	6105                	addi	sp,sp,32
20402546:	8082                	ret

20402548 <metal_led_off>:
metal_led_off():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:65

/*!
 * @brief Turn an LED off
 * @param led The handle for the LED
 */
__inline__ void metal_led_off(struct metal_led *led) {
20402548:	1101                	addi	sp,sp,-32
2040254a:	ce06                	sw	ra,28(sp)
2040254c:	cc22                	sw	s0,24(sp)
2040254e:	1000                	addi	s0,sp,32
20402550:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:66
    led->vtable->led_off(led);
20402554:	fec42783          	lw	a5,-20(s0)
20402558:	439c                	lw	a5,0(a5)
2040255a:	47dc                	lw	a5,12(a5)
2040255c:	fec42503          	lw	a0,-20(s0)
20402560:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/led.h:67
}
20402562:	0001                	nop
20402564:	40f2                	lw	ra,28(sp)
20402566:	4462                	lw	s0,24(sp)
20402568:	6105                	addi	sp,sp,32
2040256a:	8082                	ret

2040256c <metal_led_get_rgb>:
metal_led_get_rgb():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:8

#include <metal/led.h>
#include <metal/machine.h>
#include <string.h>

struct metal_led *metal_led_get_rgb(char *label, char *color) {
2040256c:	7175                	addi	sp,sp,-144
2040256e:	c706                	sw	ra,140(sp)
20402570:	c522                	sw	s0,136(sp)
20402572:	0900                	addi	s0,sp,144
20402574:	f6a42e23          	sw	a0,-132(s0)
20402578:	f6b42c23          	sw	a1,-136(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:13
    int i;
    struct metal_led *led;
    char led_label[100];

    if ((__METAL_DT_MAX_LEDS == 0) || (label == NULL) || (color == NULL)) {
2040257c:	f7c42783          	lw	a5,-132(s0)
20402580:	c781                	beqz	a5,20402588 <metal_led_get_rgb+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:13 (discriminator 1)
20402582:	f7842783          	lw	a5,-136(s0)
20402586:	e399                	bnez	a5,2040258c <metal_led_get_rgb+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:14
        return NULL;
20402588:	4781                	li	a5,0
2040258a:	a0bd                	j	204025f8 <metal_led_get_rgb+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:17
    }

    strcpy(led_label, label);
2040258c:	f8440793          	addi	a5,s0,-124
20402590:	f7c42583          	lw	a1,-132(s0)
20402594:	853e                	mv	a0,a5
20402596:	43f040ef          	jal	ra,204071d4 <strcpy>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:18
    strcat(led_label, color);
2040259a:	f8440793          	addi	a5,s0,-124
2040259e:	f7842583          	lw	a1,-136(s0)
204025a2:	853e                	mv	a0,a5
204025a4:	3f9040ef          	jal	ra,2040719c <strcat>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:19
    for (i = 0; i < __METAL_DT_MAX_LEDS; i++) {
204025a8:	fe042623          	sw	zero,-20(s0)
204025ac:	a081                	j	204025ec <metal_led_get_rgb+0x80>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:20
        led = (struct metal_led *)__metal_led_table[i];
204025ae:	800007b7          	lui	a5,0x80000
204025b2:	06078713          	addi	a4,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8d0>
204025b6:	fec42783          	lw	a5,-20(s0)
204025ba:	078a                	slli	a5,a5,0x2
204025bc:	97ba                	add	a5,a5,a4
204025be:	439c                	lw	a5,0(a5)
204025c0:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:21
        if (led->vtable->led_exist(led, led_label)) {
204025c4:	fe842783          	lw	a5,-24(s0)
204025c8:	439c                	lw	a5,0(a5)
204025ca:	4398                	lw	a4,0(a5)
204025cc:	f8440793          	addi	a5,s0,-124
204025d0:	85be                	mv	a1,a5
204025d2:	fe842503          	lw	a0,-24(s0)
204025d6:	9702                	jalr	a4
204025d8:	87aa                	mv	a5,a0
204025da:	c781                	beqz	a5,204025e2 <metal_led_get_rgb+0x76>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:22
            return led;
204025dc:	fe842783          	lw	a5,-24(s0)
204025e0:	a821                	j	204025f8 <metal_led_get_rgb+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:19 (discriminator 2)
    for (i = 0; i < __METAL_DT_MAX_LEDS; i++) {
204025e2:	fec42783          	lw	a5,-20(s0)
204025e6:	0785                	addi	a5,a5,1
204025e8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:19 (discriminator 1)
204025ec:	fec42703          	lw	a4,-20(s0)
204025f0:	4789                	li	a5,2
204025f2:	fae7dee3          	bge	a5,a4,204025ae <metal_led_get_rgb+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:25
        }
    }
    return NULL;
204025f6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/led.c:26 (discriminator 1)
}
204025f8:	853e                	mv	a0,a5
204025fa:	40ba                	lw	ra,140(sp)
204025fc:	442a                	lw	s0,136(sp)
204025fe:	6149                	addi	sp,sp,144
20402600:	8082                	ret

20402602 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:208
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20402602:	1101                	addi	sp,sp,-32
20402604:	ce22                	sw	s0,28(sp)
20402606:	1000                	addi	s0,sp,32
20402608:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:209
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2040260c:	fec42703          	lw	a4,-20(s0)
20402610:	800017b7          	lui	a5,0x80001
20402614:	a8c78793          	addi	a5,a5,-1396 # 80000a8c <metal_segment_heap_target_end+0xfffff2fc>
20402618:	00f71563          	bne	a4,a5,20402622 <__metal_driver_sifive_clint0_control_base+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:210
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
2040261c:	020007b7          	lui	a5,0x2000
20402620:	a011                	j	20402624 <__metal_driver_sifive_clint0_control_base+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:213
	}
	else {
		return 0;
20402622:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:215
	}
}
20402624:	853e                	mv	a0,a5
20402626:	4472                	lw	s0,28(sp)
20402628:	6105                	addi	sp,sp,32
2040262a:	8082                	ret

2040262c <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:228
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
2040262c:	1101                	addi	sp,sp,-32
2040262e:	ce22                	sw	s0,28(sp)
20402630:	1000                	addi	s0,sp,32
20402632:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:229
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402636:	fec42703          	lw	a4,-20(s0)
2040263a:	800017b7          	lui	a5,0x80001
2040263e:	a8c78793          	addi	a5,a5,-1396 # 80000a8c <metal_segment_heap_target_end+0xfffff2fc>
20402642:	00f71463          	bne	a4,a5,2040264a <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:230
		return METAL_MAX_CLINT_INTERRUPTS;
20402646:	4789                	li	a5,2
20402648:	a011                	j	2040264c <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:233
	}
	else {
		return 0;
2040264a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:235
	}
}
2040264c:	853e                	mv	a0,a5
2040264e:	4472                	lw	s0,28(sp)
20402650:	6105                	addi	sp,sp,32
20402652:	8082                	ret

20402654 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:238

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20402654:	1101                	addi	sp,sp,-32
20402656:	ce22                	sw	s0,28(sp)
20402658:	1000                	addi	s0,sp,32
2040265a:	fea42623          	sw	a0,-20(s0)
2040265e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:239
	if (idx == 0) {
20402662:	fe842783          	lw	a5,-24(s0)
20402666:	e791                	bnez	a5,20402672 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:240
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402668:	800007b7          	lui	a5,0x80000
2040266c:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe900>
20402670:	a821                	j	20402688 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:242
	}
	else if (idx == 1) {
20402672:	fe842703          	lw	a4,-24(s0)
20402676:	4785                	li	a5,1
20402678:	00f71763          	bne	a4,a5,20402686 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:243
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2040267c:	800007b7          	lui	a5,0x80000
20402680:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe900>
20402684:	a011                	j	20402688 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:246
	}
	else {
		return NULL;
20402686:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:248
	}
}
20402688:	853e                	mv	a0,a5
2040268a:	4472                	lw	s0,28(sp)
2040268c:	6105                	addi	sp,sp,32
2040268e:	8082                	ret

20402690 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:251

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20402690:	1101                	addi	sp,sp,-32
20402692:	ce22                	sw	s0,28(sp)
20402694:	1000                	addi	s0,sp,32
20402696:	fea42623          	sw	a0,-20(s0)
2040269a:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:252
	if (idx == 0) {
2040269e:	fe842783          	lw	a5,-24(s0)
204026a2:	e399                	bnez	a5,204026a8 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:253
		return 3;
204026a4:	478d                	li	a5,3
204026a6:	a809                	j	204026b8 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:255
	}
	else if (idx == 1) {
204026a8:	fe842703          	lw	a4,-24(s0)
204026ac:	4785                	li	a5,1
204026ae:	00f71463          	bne	a4,a5,204026b6 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:256
		return 7;
204026b2:	479d                	li	a5,7
204026b4:	a011                	j	204026b8 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:259
	}
	else {
		return 0;
204026b6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:261
	}
}
204026b8:	853e                	mv	a0,a5
204026ba:	4472                	lw	s0,28(sp)
204026bc:	6105                	addi	sp,sp,32
204026be:	8082                	ret

204026c0 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
204026c0:	715d                	addi	sp,sp,-80
204026c2:	c686                	sw	ra,76(sp)
204026c4:	c4a2                	sw	s0,72(sp)
204026c6:	c2ca                	sw	s2,68(sp)
204026c8:	c0ce                	sw	s3,64(sp)
204026ca:	de52                	sw	s4,60(sp)
204026cc:	dc56                	sw	s5,56(sp)
204026ce:	da5a                	sw	s6,52(sp)
204026d0:	d85e                	sw	s7,48(sp)
204026d2:	d662                	sw	s8,44(sp)
204026d4:	d466                	sw	s9,40(sp)
204026d6:	0880                	addi	s0,sp,80
204026d8:	faa42e23          	sw	a0,-68(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
204026dc:	fbc42783          	lw	a5,-68(s0)
204026e0:	853e                	mv	a0,a5
204026e2:	3705                	jal	20402602 <__metal_driver_sifive_clint0_control_base>
204026e4:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
204026e8:	fcc42703          	lw	a4,-52(s0)
204026ec:	67b1                	lui	a5,0xc
204026ee:	17f1                	addi	a5,a5,-4
204026f0:	97ba                	add	a5,a5,a4
204026f2:	439c                	lw	a5,0(a5)
204026f4:	fcf42423          	sw	a5,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
204026f8:	fcc42703          	lw	a4,-52(s0)
204026fc:	67b1                	lui	a5,0xc
204026fe:	17e1                	addi	a5,a5,-8
20402700:	97ba                	add	a5,a5,a4
20402702:	439c                	lw	a5,0(a5)
20402704:	fcf42223          	sw	a5,-60(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20402708:	fcc42703          	lw	a4,-52(s0)
2040270c:	67b1                	lui	a5,0xc
2040270e:	17f1                	addi	a5,a5,-4
20402710:	97ba                	add	a5,a5,a4
20402712:	439c                	lw	a5,0(a5)
20402714:	fc842703          	lw	a4,-56(s0)
20402718:	fcf718e3          	bne	a4,a5,204026e8 <__metal_clint0_mtime_get+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
2040271c:	fc842783          	lw	a5,-56(s0)
20402720:	8c3e                	mv	s8,a5
20402722:	4c81                	li	s9,0
20402724:	000c1993          	slli	s3,s8,0x0
20402728:	4901                	li	s2,0
2040272a:	fc442783          	lw	a5,-60(s0)
2040272e:	8a3e                	mv	s4,a5
20402730:	4a81                	li	s5,0
20402732:	01496b33          	or	s6,s2,s4
20402736:	0159ebb3          	or	s7,s3,s5
2040273a:	87da                	mv	a5,s6
2040273c:	885e                	mv	a6,s7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30
}
2040273e:	853e                	mv	a0,a5
20402740:	85c2                	mv	a1,a6
20402742:	40b6                	lw	ra,76(sp)
20402744:	4426                	lw	s0,72(sp)
20402746:	4916                	lw	s2,68(sp)
20402748:	4986                	lw	s3,64(sp)
2040274a:	5a72                	lw	s4,60(sp)
2040274c:	5ae2                	lw	s5,56(sp)
2040274e:	5b52                	lw	s6,52(sp)
20402750:	5bc2                	lw	s7,48(sp)
20402752:	5c32                	lw	s8,44(sp)
20402754:	5ca2                	lw	s9,40(sp)
20402756:	6161                	addi	sp,sp,80
20402758:	8082                	ret

2040275a <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
2040275a:	7179                	addi	sp,sp,-48
2040275c:	d606                	sw	ra,44(sp)
2040275e:	d422                	sw	s0,40(sp)
20402760:	d24a                	sw	s2,36(sp)
20402762:	d04e                	sw	s3,32(sp)
20402764:	1800                	addi	s0,sp,48
20402766:	fca42e23          	sw	a0,-36(s0)
2040276a:	fcb42c23          	sw	a1,-40(s0)
2040276e:	fcc42823          	sw	a2,-48(s0)
20402772:	fcd42a23          	sw	a3,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20402776:	fdc42783          	lw	a5,-36(s0)
2040277a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2040277e:	fec42783          	lw	a5,-20(s0)
20402782:	853e                	mv	a0,a5
20402784:	3dbd                	jal	20402602 <__metal_driver_sifive_clint0_control_base>
20402786:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2040278a:	fd842783          	lw	a5,-40(s0)
2040278e:	078e                	slli	a5,a5,0x3
20402790:	873e                	mv	a4,a5
20402792:	fe842783          	lw	a5,-24(s0)
20402796:	973e                	add	a4,a4,a5
20402798:	6791                	lui	a5,0x4
2040279a:	0791                	addi	a5,a5,4
2040279c:	97ba                	add	a5,a5,a4
2040279e:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
204027a0:	57fd                	li	a5,-1
204027a2:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204027a4:	fd842783          	lw	a5,-40(s0)
204027a8:	078e                	slli	a5,a5,0x3
204027aa:	873e                	mv	a4,a5
204027ac:	fe842783          	lw	a5,-24(s0)
204027b0:	973e                	add	a4,a4,a5
204027b2:	6791                	lui	a5,0x4
204027b4:	97ba                	add	a5,a5,a4
204027b6:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
204027b8:	fd042783          	lw	a5,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
204027bc:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
204027be:	fd442783          	lw	a5,-44(s0)
204027c2:	0007d913          	srli	s2,a5,0x0
204027c6:	4981                	li	s3,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204027c8:	fd842783          	lw	a5,-40(s0)
204027cc:	078e                	slli	a5,a5,0x3
204027ce:	873e                	mv	a4,a5
204027d0:	fe842783          	lw	a5,-24(s0)
204027d4:	973e                	add	a4,a4,a5
204027d6:	6791                	lui	a5,0x4
204027d8:	0791                	addi	a5,a5,4
204027da:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
204027dc:	874a                	mv	a4,s2
204027de:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
204027e0:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
204027e2:	853e                	mv	a0,a5
204027e4:	50b2                	lw	ra,44(sp)
204027e6:	5422                	lw	s0,40(sp)
204027e8:	5912                	lw	s2,36(sp)
204027ea:	5982                	lw	s3,32(sp)
204027ec:	6145                	addi	sp,sp,48
204027ee:	8082                	ret

204027f0 <_get_cpu_intc>:
_get_cpu_intc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
204027f0:	1101                	addi	sp,sp,-32
204027f2:	ce06                	sw	ra,28(sp)
204027f4:	cc22                	sw	s0,24(sp)
204027f6:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
204027f8:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
204027fc:	f14027f3          	csrr	a5,mhartid
20402800:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20402804:	fec42783          	lw	a5,-20(s0)
20402808:	853e                	mv	a0,a5
2040280a:	3ec5                	jal	204023fa <metal_cpu_get>
2040280c:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20402810:	fe842503          	lw	a0,-24(s0)
20402814:	36c1                	jal	204023d4 <metal_cpu_interrupt_controller>
20402816:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
}
20402818:	853e                	mv	a0,a5
2040281a:	40f2                	lw	ra,28(sp)
2040281c:	4462                	lw	s0,24(sp)
2040281e:	6105                	addi	sp,sp,32
20402820:	8082                	ret

20402822 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20402822:	7139                	addi	sp,sp,-64
20402824:	de06                	sw	ra,60(sp)
20402826:	dc22                	sw	s0,56(sp)
20402828:	0080                	addi	s0,sp,64
2040282a:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2040282e:	fcc42503          	lw	a0,-52(s0)
20402832:	3bed                	jal	2040262c <__metal_driver_sifive_clint0_num_interrupts>
20402834:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20402838:	fcc42783          	lw	a5,-52(s0)
2040283c:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20402840:	fe442783          	lw	a5,-28(s0)
20402844:	43dc                	lw	a5,4(a5)
20402846:	efa9                	bnez	a5,204028a0 <__metal_driver_riscv_clint0_init+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20402848:	fe042623          	sw	zero,-20(s0)
2040284c:	a081                	j	2040288c <__metal_driver_riscv_clint0_init+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040284e:	fec42583          	lw	a1,-20(s0)
20402852:	fcc42503          	lw	a0,-52(s0)
20402856:	3bfd                	jal	20402654 <__metal_driver_sifive_clint0_interrupt_parents>
20402858:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040285c:	fec42583          	lw	a1,-20(s0)
20402860:	fcc42503          	lw	a0,-52(s0)
20402864:	3535                	jal	20402690 <__metal_driver_sifive_clint0_interrupt_lines>
20402866:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
2040286a:	fe042783          	lw	a5,-32(s0)
2040286e:	439c                	lw	a5,0(a5)
20402870:	4fdc                	lw	a5,28(a5)
20402872:	fcc42683          	lw	a3,-52(s0)
20402876:	4601                	li	a2,0
20402878:	fdc42583          	lw	a1,-36(s0)
2040287c:	fe042503          	lw	a0,-32(s0)
20402880:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20402882:	fec42783          	lw	a5,-20(s0)
20402886:	0785                	addi	a5,a5,1
20402888:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
2040288c:	fec42703          	lw	a4,-20(s0)
20402890:	fe842783          	lw	a5,-24(s0)
20402894:	faf74de3          	blt	a4,a5,2040284e <__metal_driver_riscv_clint0_init+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20402898:	fe442783          	lw	a5,-28(s0)
2040289c:	4705                	li	a4,1
2040289e:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
204028a0:	0001                	nop
204028a2:	50f2                	lw	ra,60(sp)
204028a4:	5462                	lw	s0,56(sp)
204028a6:	6121                	addi	sp,sp,64
204028a8:	8082                	ret

204028aa <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
204028aa:	7139                	addi	sp,sp,-64
204028ac:	de06                	sw	ra,60(sp)
204028ae:	dc22                	sw	s0,56(sp)
204028b0:	0080                	addi	s0,sp,64
204028b2:	fca42623          	sw	a0,-52(s0)
204028b6:	fcb42423          	sw	a1,-56(s0)
204028ba:	fcc42223          	sw	a2,-60(s0)
204028be:	fcd42023          	sw	a3,-64(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
204028c2:	57fd                	li	a5,-1
204028c4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
204028c8:	492010ef          	jal	ra,20403d5a <__metal_controller_interrupt_vector_mode>
204028cc:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
204028d0:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
204028d4:	3f31                	jal	204027f0 <_get_cpu_intc>
204028d6:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
204028da:	fcc42503          	lw	a0,-52(s0)
204028de:	33b9                	jal	2040262c <__metal_driver_sifive_clint0_num_interrupts>
204028e0:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
204028e4:	fe042703          	lw	a4,-32(s0)
204028e8:	4785                	li	a5,1
204028ea:	00f70863          	beq	a4,a5,204028fa <__metal_driver_riscv_clint0_register+0x50>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
204028ee:	fe042783          	lw	a5,-32(s0)
204028f2:	c781                	beqz	a5,204028fa <__metal_driver_riscv_clint0_register+0x50>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
204028f4:	fec42783          	lw	a5,-20(s0)
204028f8:	a049                	j	2040297a <__metal_driver_riscv_clint0_register+0xd0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
204028fa:	fe042223          	sw	zero,-28(s0)
204028fe:	a091                	j	20402942 <__metal_driver_riscv_clint0_register+0x98>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402900:	fe442583          	lw	a1,-28(s0)
20402904:	fcc42503          	lw	a0,-52(s0)
20402908:	3361                	jal	20402690 <__metal_driver_sifive_clint0_interrupt_lines>
2040290a:	fca42a23          	sw	a0,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040290e:	fe442583          	lw	a1,-28(s0)
20402912:	fcc42503          	lw	a0,-52(s0)
20402916:	3b3d                	jal	20402654 <__metal_driver_sifive_clint0_interrupt_parents>
20402918:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2040291c:	fdc42703          	lw	a4,-36(s0)
20402920:	fe842783          	lw	a5,-24(s0)
20402924:	00f71863          	bne	a4,a5,20402934 <__metal_driver_riscv_clint0_register+0x8a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20402928:	fc842703          	lw	a4,-56(s0)
2040292c:	fd442783          	lw	a5,-44(s0)
20402930:	02f70063          	beq	a4,a5,20402950 <__metal_driver_riscv_clint0_register+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20402934:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20402938:	fe442783          	lw	a5,-28(s0)
2040293c:	0785                	addi	a5,a5,1
2040293e:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20402942:	fe442703          	lw	a4,-28(s0)
20402946:	fd842783          	lw	a5,-40(s0)
2040294a:	faf74be3          	blt	a4,a5,20402900 <__metal_driver_riscv_clint0_register+0x56>
2040294e:	a011                	j	20402952 <__metal_driver_riscv_clint0_register+0xa8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20402950:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20402952:	fe842783          	lw	a5,-24(s0)
20402956:	c385                	beqz	a5,20402976 <__metal_driver_riscv_clint0_register+0xcc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20402958:	fe842783          	lw	a5,-24(s0)
2040295c:	439c                	lw	a5,0(a5)
2040295e:	4fdc                	lw	a5,28(a5)
20402960:	fc042683          	lw	a3,-64(s0)
20402964:	fc442603          	lw	a2,-60(s0)
20402968:	fc842583          	lw	a1,-56(s0)
2040296c:	fe842503          	lw	a0,-24(s0)
20402970:	9782                	jalr	a5
20402972:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20402976:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
}
2040297a:	853e                	mv	a0,a5
2040297c:	50f2                	lw	ra,60(sp)
2040297e:	5462                	lw	s0,56(sp)
20402980:	6121                	addi	sp,sp,64
20402982:	8082                	ret

20402984 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20402984:	7179                	addi	sp,sp,-48
20402986:	d622                	sw	s0,44(sp)
20402988:	1800                	addi	s0,sp,48
2040298a:	fca42e23          	sw	a0,-36(s0)
2040298e:	fcb42c23          	sw	a1,-40(s0)
20402992:	fcc42a23          	sw	a2,-44(s0)
20402996:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
2040299a:	57fd                	li	a5,-1
2040299c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
204029a0:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123
}
204029a4:	853e                	mv	a0,a5
204029a6:	5432                	lw	s0,44(sp)
204029a8:	6145                	addi	sp,sp,48
204029aa:	8082                	ret

204029ac <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
204029ac:	1101                	addi	sp,sp,-32
204029ae:	ce06                	sw	ra,28(sp)
204029b0:	cc22                	sw	s0,24(sp)
204029b2:	1000                	addi	s0,sp,32
204029b4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
204029b8:	3a2010ef          	jal	ra,20403d5a <__metal_controller_interrupt_vector_mode>
204029bc:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
}
204029be:	853e                	mv	a0,a5
204029c0:	40f2                	lw	ra,28(sp)
204029c2:	4462                	lw	s0,24(sp)
204029c4:	6105                	addi	sp,sp,32
204029c6:	8082                	ret

204029c8 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
204029c8:	7179                	addi	sp,sp,-48
204029ca:	d606                	sw	ra,44(sp)
204029cc:	d422                	sw	s0,40(sp)
204029ce:	1800                	addi	s0,sp,48
204029d0:	fca42e23          	sw	a0,-36(s0)
204029d4:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
204029d8:	57fd                	li	a5,-1
204029da:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
204029de:	3d09                	jal	204027f0 <_get_cpu_intc>
204029e0:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
204029e4:	fe842783          	lw	a5,-24(s0)
204029e8:	c395                	beqz	a5,20402a0c <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
204029ea:	fd842703          	lw	a4,-40(s0)
204029ee:	4785                	li	a5,1
204029f0:	02e7e063          	bltu	a5,a4,20402a10 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
204029f4:	fe842783          	lw	a5,-24(s0)
204029f8:	439c                	lw	a5,0(a5)
204029fa:	43dc                	lw	a5,4(a5)
204029fc:	fd842583          	lw	a1,-40(s0)
20402a00:	fe842503          	lw	a0,-24(s0)
20402a04:	9782                	jalr	a5
20402a06:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20402a0a:	a021                	j	20402a12 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20402a0c:	0001                	nop
20402a0e:	a011                	j	20402a12 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20402a10:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20402a12:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
}
20402a16:	853e                	mv	a0,a5
20402a18:	50b2                	lw	ra,44(sp)
20402a1a:	5422                	lw	s0,40(sp)
20402a1c:	6145                	addi	sp,sp,48
20402a1e:	8082                	ret

20402a20 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20402a20:	7139                	addi	sp,sp,-64
20402a22:	de06                	sw	ra,60(sp)
20402a24:	dc22                	sw	s0,56(sp)
20402a26:	0080                	addi	s0,sp,64
20402a28:	fca42623          	sw	a0,-52(s0)
20402a2c:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20402a30:	57fd                	li	a5,-1
20402a32:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20402a36:	fc842783          	lw	a5,-56(s0)
20402a3a:	c7c9                	beqz	a5,20402ac4 <__metal_driver_riscv_clint0_enable+0xa4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20402a3c:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402a40:	3b45                	jal	204027f0 <_get_cpu_intc>
20402a42:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20402a46:	fcc42503          	lw	a0,-52(s0)
20402a4a:	36cd                	jal	2040262c <__metal_driver_sifive_clint0_num_interrupts>
20402a4c:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20402a50:	fe042223          	sw	zero,-28(s0)
20402a54:	a091                	j	20402a98 <__metal_driver_riscv_clint0_enable+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402a56:	fe442583          	lw	a1,-28(s0)
20402a5a:	fcc42503          	lw	a0,-52(s0)
20402a5e:	390d                	jal	20402690 <__metal_driver_sifive_clint0_interrupt_lines>
20402a60:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402a64:	fe442583          	lw	a1,-28(s0)
20402a68:	fcc42503          	lw	a0,-52(s0)
20402a6c:	36e5                	jal	20402654 <__metal_driver_sifive_clint0_interrupt_parents>
20402a6e:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20402a72:	fe042703          	lw	a4,-32(s0)
20402a76:	fe842783          	lw	a5,-24(s0)
20402a7a:	00f71863          	bne	a4,a5,20402a8a <__metal_driver_riscv_clint0_enable+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20402a7e:	fc842703          	lw	a4,-56(s0)
20402a82:	fd842783          	lw	a5,-40(s0)
20402a86:	02f70063          	beq	a4,a5,20402aa6 <__metal_driver_riscv_clint0_enable+0x86>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20402a8a:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20402a8e:	fe442783          	lw	a5,-28(s0)
20402a92:	0785                	addi	a5,a5,1
20402a94:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20402a98:	fe442703          	lw	a4,-28(s0)
20402a9c:	fdc42783          	lw	a5,-36(s0)
20402aa0:	faf74be3          	blt	a4,a5,20402a56 <__metal_driver_riscv_clint0_enable+0x36>
20402aa4:	a011                	j	20402aa8 <__metal_driver_riscv_clint0_enable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20402aa6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20402aa8:	fe842783          	lw	a5,-24(s0)
20402aac:	cf81                	beqz	a5,20402ac4 <__metal_driver_riscv_clint0_enable+0xa4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20402aae:	fe842783          	lw	a5,-24(s0)
20402ab2:	439c                	lw	a5,0(a5)
20402ab4:	53dc                	lw	a5,36(a5)
20402ab6:	fc842583          	lw	a1,-56(s0)
20402aba:	fe842503          	lw	a0,-24(s0)
20402abe:	9782                	jalr	a5
20402ac0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20402ac4:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:178
}
20402ac8:	853e                	mv	a0,a5
20402aca:	50f2                	lw	ra,60(sp)
20402acc:	5462                	lw	s0,56(sp)
20402ace:	6121                	addi	sp,sp,64
20402ad0:	8082                	ret

20402ad2 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20402ad2:	7139                	addi	sp,sp,-64
20402ad4:	de06                	sw	ra,60(sp)
20402ad6:	dc22                	sw	s0,56(sp)
20402ad8:	0080                	addi	s0,sp,64
20402ada:	fca42623          	sw	a0,-52(s0)
20402ade:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20402ae2:	57fd                	li	a5,-1
20402ae4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20402ae8:	fc842783          	lw	a5,-56(s0)
20402aec:	c7d9                	beqz	a5,20402b7a <__metal_driver_riscv_clint0_disable+0xa8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20402aee:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402af2:	39fd                	jal	204027f0 <_get_cpu_intc>
20402af4:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20402af8:	fcc42503          	lw	a0,-52(s0)
20402afc:	b31ff0ef          	jal	ra,2040262c <__metal_driver_sifive_clint0_num_interrupts>
20402b00:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20402b04:	fe042223          	sw	zero,-28(s0)
20402b08:	a099                	j	20402b4e <__metal_driver_riscv_clint0_disable+0x7c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402b0a:	fe442583          	lw	a1,-28(s0)
20402b0e:	fcc42503          	lw	a0,-52(s0)
20402b12:	3ebd                	jal	20402690 <__metal_driver_sifive_clint0_interrupt_lines>
20402b14:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402b18:	fe442583          	lw	a1,-28(s0)
20402b1c:	fcc42503          	lw	a0,-52(s0)
20402b20:	b35ff0ef          	jal	ra,20402654 <__metal_driver_sifive_clint0_interrupt_parents>
20402b24:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20402b28:	fe042703          	lw	a4,-32(s0)
20402b2c:	fe842783          	lw	a5,-24(s0)
20402b30:	00f71863          	bne	a4,a5,20402b40 <__metal_driver_riscv_clint0_disable+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20402b34:	fc842703          	lw	a4,-56(s0)
20402b38:	fd842783          	lw	a5,-40(s0)
20402b3c:	02f70063          	beq	a4,a5,20402b5c <__metal_driver_riscv_clint0_disable+0x8a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20402b40:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20402b44:	fe442783          	lw	a5,-28(s0)
20402b48:	0785                	addi	a5,a5,1
20402b4a:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20402b4e:	fe442703          	lw	a4,-28(s0)
20402b52:	fdc42783          	lw	a5,-36(s0)
20402b56:	faf74ae3          	blt	a4,a5,20402b0a <__metal_driver_riscv_clint0_disable+0x38>
20402b5a:	a011                	j	20402b5e <__metal_driver_riscv_clint0_disable+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20402b5c:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20402b5e:	fe842783          	lw	a5,-24(s0)
20402b62:	cf81                	beqz	a5,20402b7a <__metal_driver_riscv_clint0_disable+0xa8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20402b64:	fe842783          	lw	a5,-24(s0)
20402b68:	439c                	lw	a5,0(a5)
20402b6a:	579c                	lw	a5,40(a5)
20402b6c:	fc842583          	lw	a1,-56(s0)
20402b70:	fe842503          	lw	a0,-24(s0)
20402b74:	9782                	jalr	a5
20402b76:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20402b7a:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
}
20402b7e:	853e                	mv	a0,a5
20402b80:	50f2                	lw	ra,60(sp)
20402b82:	5462                	lw	s0,56(sp)
20402b84:	6121                	addi	sp,sp,64
20402b86:	8082                	ret

20402b88 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20402b88:	7179                	addi	sp,sp,-48
20402b8a:	d606                	sw	ra,44(sp)
20402b8c:	d422                	sw	s0,40(sp)
20402b8e:	1800                	addi	s0,sp,48
20402b90:	fca42e23          	sw	a0,-36(s0)
20402b94:	fcb42c23          	sw	a1,-40(s0)
20402b98:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20402b9c:	57fd                	li	a5,-1
20402b9e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20402ba2:	fdc42783          	lw	a5,-36(s0)
20402ba6:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20402baa:	fdc42503          	lw	a0,-36(s0)
20402bae:	a55ff0ef          	jal	ra,20402602 <__metal_driver_sifive_clint0_control_base>
20402bb2:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20402bb6:	fd842703          	lw	a4,-40(s0)
20402bba:	4789                	li	a5,2
20402bbc:	04f70963          	beq	a4,a5,20402c0e <__metal_driver_riscv_clint0_command_request+0x86>
20402bc0:	fd842703          	lw	a4,-40(s0)
20402bc4:	4789                	li	a5,2
20402bc6:	00e7c863          	blt	a5,a4,20402bd6 <__metal_driver_riscv_clint0_command_request+0x4e>
20402bca:	fd842703          	lw	a4,-40(s0)
20402bce:	4785                	li	a5,1
20402bd0:	00f70e63          	beq	a4,a5,20402bec <__metal_driver_riscv_clint0_command_request+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20402bd4:	a8f1                	j	20402cb0 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20402bd6:	fd842703          	lw	a4,-40(s0)
20402bda:	478d                	li	a5,3
20402bdc:	04f70d63          	beq	a4,a5,20402c36 <__metal_driver_riscv_clint0_command_request+0xae>
20402be0:	fd842703          	lw	a4,-40(s0)
20402be4:	4791                	li	a5,4
20402be6:	08f70963          	beq	a4,a5,20402c78 <__metal_driver_riscv_clint0_command_request+0xf0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20402bea:	a0d9                	j	20402cb0 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20402bec:	fd442783          	lw	a5,-44(s0)
20402bf0:	cbcd                	beqz	a5,20402ca2 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20402bf2:	fe842503          	lw	a0,-24(s0)
20402bf6:	acbff0ef          	jal	ra,204026c0 <__metal_clint0_mtime_get>
20402bfa:	87aa                	mv	a5,a0
20402bfc:	882e                	mv	a6,a1
20402bfe:	fd442703          	lw	a4,-44(s0)
20402c02:	c31c                	sw	a5,0(a4)
20402c04:	01072223          	sw	a6,4(a4) # fffff004 <metal_segment_heap_target_end+0x7fffd874>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20402c08:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20402c0c:	a859                	j	20402ca2 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20402c0e:	fd442783          	lw	a5,-44(s0)
20402c12:	cbd1                	beqz	a5,20402ca6 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20402c14:	fd442783          	lw	a5,-44(s0)
20402c18:	439c                	lw	a5,0(a5)
20402c1a:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20402c1e:	fe042783          	lw	a5,-32(s0)
20402c22:	078a                	slli	a5,a5,0x2
20402c24:	873e                	mv	a4,a5
20402c26:	fe442783          	lw	a5,-28(s0)
20402c2a:	97ba                	add	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20402c2c:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20402c30:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20402c34:	a88d                	j	20402ca6 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20402c36:	fd442783          	lw	a5,-44(s0)
20402c3a:	cba5                	beqz	a5,20402caa <__metal_driver_riscv_clint0_command_request+0x122>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20402c3c:	fd442783          	lw	a5,-44(s0)
20402c40:	439c                	lw	a5,0(a5)
20402c42:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20402c46:	fe042783          	lw	a5,-32(s0)
20402c4a:	078a                	slli	a5,a5,0x2
20402c4c:	873e                	mv	a4,a5
20402c4e:	fe442783          	lw	a5,-28(s0)
20402c52:	97ba                	add	a5,a5,a4
20402c54:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20402c56:	4785                	li	a5,1
20402c58:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20402c5a:	0480000f          	fence	o,i
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20402c5e:	fe042783          	lw	a5,-32(s0)
20402c62:	078a                	slli	a5,a5,0x2
20402c64:	873e                	mv	a4,a5
20402c66:	fe442783          	lw	a5,-28(s0)
20402c6a:	97ba                	add	a5,a5,a4
20402c6c:	439c                	lw	a5,0(a5)
20402c6e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20402c72:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20402c76:	a815                	j	20402caa <__metal_driver_riscv_clint0_command_request+0x122>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20402c78:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20402c7c:	fd442783          	lw	a5,-44(s0)
20402c80:	c79d                	beqz	a5,20402cae <__metal_driver_riscv_clint0_command_request+0x126>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20402c82:	fd442783          	lw	a5,-44(s0)
20402c86:	439c                	lw	a5,0(a5)
20402c88:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20402c8c:	fe042783          	lw	a5,-32(s0)
20402c90:	078a                	slli	a5,a5,0x2
20402c92:	873e                	mv	a4,a5
20402c94:	fe442783          	lw	a5,-28(s0)
20402c98:	97ba                	add	a5,a5,a4
20402c9a:	439c                	lw	a5,0(a5)
20402c9c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20402ca0:	a039                	j	20402cae <__metal_driver_riscv_clint0_command_request+0x126>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20402ca2:	0001                	nop
20402ca4:	a031                	j	20402cb0 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20402ca6:	0001                	nop
20402ca8:	a021                	j	20402cb0 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20402caa:	0001                	nop
20402cac:	a011                	j	20402cb0 <__metal_driver_riscv_clint0_command_request+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20402cae:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20402cb0:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:267
}
20402cb4:	853e                	mv	a0,a5
20402cb6:	50b2                	lw	ra,44(sp)
20402cb8:	5422                	lw	s0,40(sp)
20402cba:	6145                	addi	sp,sp,48
20402cbc:	8082                	ret

20402cbe <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20402cbe:	7179                	addi	sp,sp,-48
20402cc0:	d606                	sw	ra,44(sp)
20402cc2:	d422                	sw	s0,40(sp)
20402cc4:	1800                	addi	s0,sp,48
20402cc6:	fca42e23          	sw	a0,-36(s0)
20402cca:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20402cce:	f5aff0ef          	jal	ra,20402428 <metal_cpu_get_current_hartid>
20402cd2:	87aa                	mv	a5,a0
20402cd4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20402cd8:	fec40793          	addi	a5,s0,-20
20402cdc:	863e                	mv	a2,a5
20402cde:	4589                	li	a1,2
20402ce0:	fdc42503          	lw	a0,-36(s0)
20402ce4:	3555                	jal	20402b88 <__metal_driver_riscv_clint0_command_request>
20402ce6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20402ce8:	853e                	mv	a0,a5
20402cea:	50b2                	lw	ra,44(sp)
20402cec:	5422                	lw	s0,40(sp)
20402cee:	6145                	addi	sp,sp,48
20402cf0:	8082                	ret

20402cf2 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20402cf2:	7179                	addi	sp,sp,-48
20402cf4:	d606                	sw	ra,44(sp)
20402cf6:	d422                	sw	s0,40(sp)
20402cf8:	1800                	addi	s0,sp,48
20402cfa:	fca42e23          	sw	a0,-36(s0)
20402cfe:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20402d02:	f26ff0ef          	jal	ra,20402428 <metal_cpu_get_current_hartid>
20402d06:	87aa                	mv	a5,a0
20402d08:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20402d0c:	fec40793          	addi	a5,s0,-20
20402d10:	863e                	mv	a2,a5
20402d12:	458d                	li	a1,3
20402d14:	fdc42503          	lw	a0,-36(s0)
20402d18:	3d85                	jal	20402b88 <__metal_driver_riscv_clint0_command_request>
20402d1a:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20402d1c:	853e                	mv	a0,a5
20402d1e:	50b2                	lw	ra,44(sp)
20402d20:	5422                	lw	s0,40(sp)
20402d22:	6145                	addi	sp,sp,48
20402d24:	8082                	ret

20402d26 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:267



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20402d26:	1101                	addi	sp,sp,-32
20402d28:	ce22                	sw	s0,28(sp)
20402d2a:	1000                	addi	s0,sp,32
20402d2c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:268
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402d30:	fec42703          	lw	a4,-20(s0)
20402d34:	81418793          	addi	a5,gp,-2028 # 80000a94 <__metal_dt_cpu_0>
20402d38:	00f71463          	bne	a4,a5,20402d40 <__metal_driver_cpu_hartid+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:269
		return 0;
20402d3c:	4781                	li	a5,0
20402d3e:	a011                	j	20402d42 <__metal_driver_cpu_hartid+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:272
	}
	else {
		return -1;
20402d40:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:274
	}
}
20402d42:	853e                	mv	a0,a5
20402d44:	4472                	lw	s0,28(sp)
20402d46:	6105                	addi	sp,sp,32
20402d48:	8082                	ret

20402d4a <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:277

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20402d4a:	1101                	addi	sp,sp,-32
20402d4c:	ce22                	sw	s0,28(sp)
20402d4e:	1000                	addi	s0,sp,32
20402d50:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:278
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402d54:	fec42703          	lw	a4,-20(s0)
20402d58:	81418793          	addi	a5,gp,-2028 # 80000a94 <__metal_dt_cpu_0>
20402d5c:	00f71763          	bne	a4,a5,20402d6a <__metal_driver_cpu_timebase+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:279
		return 1000000;
20402d60:	000f47b7          	lui	a5,0xf4
20402d64:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20402d68:	a011                	j	20402d6c <__metal_driver_cpu_timebase+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:282
	}
	else {
		return 0;
20402d6a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:284
	}
}
20402d6c:	853e                	mv	a0,a5
20402d6e:	4472                	lw	s0,28(sp)
20402d70:	6105                	addi	sp,sp,32
20402d72:	8082                	ret

20402d74 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:287

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20402d74:	1101                	addi	sp,sp,-32
20402d76:	ce22                	sw	s0,28(sp)
20402d78:	1000                	addi	s0,sp,32
20402d7a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:288
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402d7e:	fec42703          	lw	a4,-20(s0)
20402d82:	81418793          	addi	a5,gp,-2028 # 80000a94 <__metal_dt_cpu_0>
20402d86:	00f71763          	bne	a4,a5,20402d94 <__metal_driver_cpu_interrupt_controller+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:289
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20402d8a:	800007b7          	lui	a5,0x80000
20402d8e:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe900>
20402d92:	a011                	j	20402d96 <__metal_driver_cpu_interrupt_controller+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:292
	}
	else {
		return NULL;
20402d94:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:294
	}
}
20402d96:	853e                	mv	a0,a5
20402d98:	4472                	lw	s0,28(sp)
20402d9a:	6105                	addi	sp,sp,32
20402d9c:	8082                	ret

20402d9e <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:307
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20402d9e:	1101                	addi	sp,sp,-32
20402da0:	ce22                	sw	s0,28(sp)
20402da2:	1000                	addi	s0,sp,32
20402da4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:308
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402da8:	fec42703          	lw	a4,-20(s0)
20402dac:	81418793          	addi	a5,gp,-2028 # 80000a94 <__metal_dt_cpu_0>
20402db0:	00f71463          	bne	a4,a5,20402db8 <__metal_driver_cpu_buserror+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:309
		return NULL;
20402db4:	4781                	li	a5,0
20402db6:	a011                	j	20402dba <__metal_driver_cpu_buserror+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:312
	}
	else {
		return NULL;
20402db8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:314
	}
}
20402dba:	853e                	mv	a0,a5
20402dbc:	4472                	lw	s0,28(sp)
20402dbe:	6105                	addi	sp,sp,32
20402dc0:	8082                	ret

20402dc2 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20402dc2:	1101                	addi	sp,sp,-32
20402dc4:	ce22                	sw	s0,28(sp)
20402dc6:	1000                	addi	s0,sp,32
20402dc8:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20402dcc:	fec42783          	lw	a5,-20(s0)
20402dd0:	00f04c63          	bgtz	a5,20402de8 <__metal_driver_cpu_get+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20402dd4:	800017b7          	lui	a5,0x80001
20402dd8:	fec42703          	lw	a4,-20(s0)
20402ddc:	070a                	slli	a4,a4,0x2
20402dde:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20402de2:	97ba                	add	a5,a5,a4
20402de4:	439c                	lw	a5,0(a5)
20402de6:	a011                	j	20402dea <__metal_driver_cpu_get+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20402de8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:30
}
20402dea:	853e                	mv	a0,a5
20402dec:	4472                	lw	s0,28(sp)
20402dee:	6105                	addi	sp,sp,32
20402df0:	8082                	ret

20402df2 <__metal_myhart_id>:
__metal_myhart_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20402df2:	1101                	addi	sp,sp,-32
20402df4:	ce22                	sw	s0,28(sp)
20402df6:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20402df8:	f14027f3          	csrr	a5,mhartid
20402dfc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20402e00:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
}
20402e04:	853e                	mv	a0,a5
20402e06:	4472                	lw	s0,28(sp)
20402e08:	6105                	addi	sp,sp,32
20402e0a:	8082                	ret

20402e0c <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20402e0c:	1101                	addi	sp,sp,-32
20402e0e:	ce22                	sw	s0,28(sp)
20402e10:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20402e12:	47a1                	li	a5,8
20402e14:	3007a7f3          	csrrs	a5,mstatus,a5
20402e18:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20402e1c:	0001                	nop
20402e1e:	4472                	lw	s0,28(sp)
20402e20:	6105                	addi	sp,sp,32
20402e22:	8082                	ret

20402e24 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20402e24:	1101                	addi	sp,sp,-32
20402e26:	ce22                	sw	s0,28(sp)
20402e28:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20402e2a:	47a1                	li	a5,8
20402e2c:	3007b7f3          	csrrc	a5,mstatus,a5
20402e30:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20402e34:	0001                	nop
20402e36:	4472                	lw	s0,28(sp)
20402e38:	6105                	addi	sp,sp,32
20402e3a:	8082                	ret

20402e3c <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20402e3c:	1101                	addi	sp,sp,-32
20402e3e:	ce22                	sw	s0,28(sp)
20402e40:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20402e42:	47a1                	li	a5,8
20402e44:	3047a7f3          	csrrs	a5,mie,a5
20402e48:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20402e4c:	0001                	nop
20402e4e:	4472                	lw	s0,28(sp)
20402e50:	6105                	addi	sp,sp,32
20402e52:	8082                	ret

20402e54 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20402e54:	1101                	addi	sp,sp,-32
20402e56:	ce22                	sw	s0,28(sp)
20402e58:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20402e5a:	47a1                	li	a5,8
20402e5c:	3047b7f3          	csrrc	a5,mie,a5
20402e60:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20402e64:	0001                	nop
20402e66:	4472                	lw	s0,28(sp)
20402e68:	6105                	addi	sp,sp,32
20402e6a:	8082                	ret

20402e6c <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20402e6c:	1101                	addi	sp,sp,-32
20402e6e:	ce22                	sw	s0,28(sp)
20402e70:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20402e72:	08000793          	li	a5,128
20402e76:	3047a7f3          	csrrs	a5,mie,a5
20402e7a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20402e7e:	0001                	nop
20402e80:	4472                	lw	s0,28(sp)
20402e82:	6105                	addi	sp,sp,32
20402e84:	8082                	ret

20402e86 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20402e86:	1101                	addi	sp,sp,-32
20402e88:	ce22                	sw	s0,28(sp)
20402e8a:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20402e8c:	08000793          	li	a5,128
20402e90:	3047b7f3          	csrrc	a5,mie,a5
20402e94:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20402e98:	0001                	nop
20402e9a:	4472                	lw	s0,28(sp)
20402e9c:	6105                	addi	sp,sp,32
20402e9e:	8082                	ret

20402ea0 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20402ea0:	1101                	addi	sp,sp,-32
20402ea2:	ce22                	sw	s0,28(sp)
20402ea4:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20402ea6:	6785                	lui	a5,0x1
20402ea8:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402eac:	3047a7f3          	csrrs	a5,mie,a5
20402eb0:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20402eb4:	0001                	nop
20402eb6:	4472                	lw	s0,28(sp)
20402eb8:	6105                	addi	sp,sp,32
20402eba:	8082                	ret

20402ebc <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20402ebc:	1101                	addi	sp,sp,-32
20402ebe:	ce22                	sw	s0,28(sp)
20402ec0:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20402ec2:	6785                	lui	a5,0x1
20402ec4:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402ec8:	3047b7f3          	csrrc	a5,mie,a5
20402ecc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20402ed0:	0001                	nop
20402ed2:	4472                	lw	s0,28(sp)
20402ed4:	6105                	addi	sp,sp,32
20402ed6:	8082                	ret

20402ed8 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20402ed8:	7179                	addi	sp,sp,-48
20402eda:	d622                	sw	s0,44(sp)
20402edc:	1800                	addi	s0,sp,48
20402ede:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20402ee2:	fdc42783          	lw	a5,-36(s0)
20402ee6:	4705                	li	a4,1
20402ee8:	00f717b3          	sll	a5,a4,a5
20402eec:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20402ef0:	fec42783          	lw	a5,-20(s0)
20402ef4:	3047a7f3          	csrrs	a5,mie,a5
20402ef8:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
}
20402efc:	0001                	nop
20402efe:	5432                	lw	s0,44(sp)
20402f00:	6145                	addi	sp,sp,48
20402f02:	8082                	ret

20402f04 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20402f04:	7179                	addi	sp,sp,-48
20402f06:	d622                	sw	s0,44(sp)
20402f08:	1800                	addi	s0,sp,48
20402f0a:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20402f0e:	fdc42783          	lw	a5,-36(s0)
20402f12:	4705                	li	a4,1
20402f14:	00f717b3          	sll	a5,a4,a5
20402f18:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20402f1c:	fec42783          	lw	a5,-20(s0)
20402f20:	3047b7f3          	csrrc	a5,mie,a5
20402f24:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
}
20402f28:	0001                	nop
20402f2a:	5432                	lw	s0,44(sp)
20402f2c:	6145                	addi	sp,sp,48
20402f2e:	8082                	ret

20402f30 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20402f30:	1101                	addi	sp,sp,-32
20402f32:	ce06                	sw	ra,28(sp)
20402f34:	cc22                	sw	s0,24(sp)
20402f36:	1000                	addi	s0,sp,32
20402f38:	fea42623          	sw	a0,-20(s0)
20402f3c:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20402f40:	06400513          	li	a0,100
20402f44:	621030ef          	jal	ra,20406d64 <metal_shutdown>

20402f48 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20402f48:	1101                	addi	sp,sp,-32
20402f4a:	ce06                	sw	ra,28(sp)
20402f4c:	cc22                	sw	s0,24(sp)
20402f4e:	1000                	addi	s0,sp,32
20402f50:	fea42623          	sw	a0,-20(s0)
20402f54:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20402f58:	0c800513          	li	a0,200
20402f5c:	609030ef          	jal	ra,20406d64 <metal_shutdown>

20402f60 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20402f60:	715d                	addi	sp,sp,-80
20402f62:	c686                	sw	ra,76(sp)
20402f64:	c496                	sw	t0,72(sp)
20402f66:	c29a                	sw	t1,68(sp)
20402f68:	c09e                	sw	t2,64(sp)
20402f6a:	de22                	sw	s0,60(sp)
20402f6c:	dc2a                	sw	a0,56(sp)
20402f6e:	da2e                	sw	a1,52(sp)
20402f70:	d832                	sw	a2,48(sp)
20402f72:	d636                	sw	a3,44(sp)
20402f74:	d43a                	sw	a4,40(sp)
20402f76:	d23e                	sw	a5,36(sp)
20402f78:	d042                	sw	a6,32(sp)
20402f7a:	ce46                	sw	a7,28(sp)
20402f7c:	cc72                	sw	t3,24(sp)
20402f7e:	ca76                	sw	t4,20(sp)
20402f80:	c87a                	sw	t5,16(sp)
20402f82:	c67e                	sw	t6,12(sp)
20402f84:	0880                	addi	s0,sp,80
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20402f86:	12c00513          	li	a0,300
20402f8a:	5db030ef          	jal	ra,20406d64 <metal_shutdown>

20402f8e <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20402f8e:	711d                	addi	sp,sp,-96
20402f90:	ce86                	sw	ra,92(sp)
20402f92:	cc96                	sw	t0,88(sp)
20402f94:	ca9a                	sw	t1,84(sp)
20402f96:	c89e                	sw	t2,80(sp)
20402f98:	c6a2                	sw	s0,76(sp)
20402f9a:	c4aa                	sw	a0,72(sp)
20402f9c:	c2ae                	sw	a1,68(sp)
20402f9e:	c0b2                	sw	a2,64(sp)
20402fa0:	de36                	sw	a3,60(sp)
20402fa2:	dc3a                	sw	a4,56(sp)
20402fa4:	da3e                	sw	a5,52(sp)
20402fa6:	d842                	sw	a6,48(sp)
20402fa8:	d646                	sw	a7,44(sp)
20402faa:	d472                	sw	t3,40(sp)
20402fac:	d276                	sw	t4,36(sp)
20402fae:	d07a                	sw	t5,32(sp)
20402fb0:	ce7e                	sw	t6,28(sp)
20402fb2:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20402fb4:	3d3d                	jal	20402df2 <__metal_myhart_id>
20402fb6:	872a                	mv	a4,a0
20402fb8:	800017b7          	lui	a5,0x80001
20402fbc:	070a                	slli	a4,a4,0x2
20402fbe:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20402fc2:	97ba                	add	a5,a5,a4
20402fc4:	439c                	lw	a5,0(a5)
20402fc6:	faf42623          	sw	a5,-84(s0)
20402fca:	fac42783          	lw	a5,-84(s0)
20402fce:	c785                	beqz	a5,20402ff6 <metal_software_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20402fd0:	fac42503          	lw	a0,-84(s0)
20402fd4:	3345                	jal	20402d74 <__metal_driver_cpu_interrupt_controller>
20402fd6:	faa42423          	sw	a0,-88(s0)
20402fda:	fa842783          	lw	a5,-88(s0)
20402fde:	0e07a783          	lw	a5,224(a5)
20402fe2:	faf42223          	sw	a5,-92(s0)
20402fe6:	fa842783          	lw	a5,-88(s0)
20402fea:	0d87a783          	lw	a5,216(a5)
20402fee:	fa442583          	lw	a1,-92(s0)
20402ff2:	450d                	li	a0,3
20402ff4:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:130
}
20402ff6:	0001                	nop
20402ff8:	40f6                	lw	ra,92(sp)
20402ffa:	42e6                	lw	t0,88(sp)
20402ffc:	4356                	lw	t1,84(sp)
20402ffe:	43c6                	lw	t2,80(sp)
20403000:	4436                	lw	s0,76(sp)
20403002:	4526                	lw	a0,72(sp)
20403004:	4596                	lw	a1,68(sp)
20403006:	4606                	lw	a2,64(sp)
20403008:	56f2                	lw	a3,60(sp)
2040300a:	5762                	lw	a4,56(sp)
2040300c:	57d2                	lw	a5,52(sp)
2040300e:	5842                	lw	a6,48(sp)
20403010:	58b2                	lw	a7,44(sp)
20403012:	5e22                	lw	t3,40(sp)
20403014:	5e92                	lw	t4,36(sp)
20403016:	5f02                	lw	t5,32(sp)
20403018:	4ff2                	lw	t6,28(sp)
2040301a:	6125                	addi	sp,sp,96
2040301c:	30200073          	mret

20403020 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20403020:	7179                	addi	sp,sp,-48
20403022:	d606                	sw	ra,44(sp)
20403024:	d422                	sw	s0,40(sp)
20403026:	1800                	addi	s0,sp,48
20403028:	fca42e23          	sw	a0,-36(s0)
2040302c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403030:	33c9                	jal	20402df2 <__metal_myhart_id>
20403032:	872a                	mv	a4,a0
20403034:	800017b7          	lui	a5,0x80001
20403038:	070a                	slli	a4,a4,0x2
2040303a:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
2040303e:	97ba                	add	a5,a5,a4
20403040:	439c                	lw	a5,0(a5)
20403042:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403046:	342027f3          	csrr	a5,mcause
2040304a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
2040304e:	fec42783          	lw	a5,-20(s0)
20403052:	c795                	beqz	a5,2040307e <__metal_default_sw_handler+0x5e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403054:	fec42503          	lw	a0,-20(s0)
20403058:	3b31                	jal	20402d74 <__metal_driver_cpu_interrupt_controller>
2040305a:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
2040305e:	fe842783          	lw	a5,-24(s0)
20403062:	3ff7f793          	andi	a5,a5,1023
20403066:	fe442703          	lw	a4,-28(s0)
2040306a:	0e878793          	addi	a5,a5,232
2040306e:	078a                	slli	a5,a5,0x2
20403070:	97ba                	add	a5,a5,a4
20403072:	439c                	lw	a5,0(a5)
20403074:	fdc42583          	lw	a1,-36(s0)
20403078:	fec42503          	lw	a0,-20(s0)
2040307c:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
2040307e:	0001                	nop
20403080:	50b2                	lw	ra,44(sp)
20403082:	5422                	lw	s0,40(sp)
20403084:	6145                	addi	sp,sp,48
20403086:	8082                	ret

20403088 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20403088:	711d                	addi	sp,sp,-96
2040308a:	ce86                	sw	ra,92(sp)
2040308c:	cc96                	sw	t0,88(sp)
2040308e:	ca9a                	sw	t1,84(sp)
20403090:	c89e                	sw	t2,80(sp)
20403092:	c6a2                	sw	s0,76(sp)
20403094:	c4aa                	sw	a0,72(sp)
20403096:	c2ae                	sw	a1,68(sp)
20403098:	c0b2                	sw	a2,64(sp)
2040309a:	de36                	sw	a3,60(sp)
2040309c:	dc3a                	sw	a4,56(sp)
2040309e:	da3e                	sw	a5,52(sp)
204030a0:	d842                	sw	a6,48(sp)
204030a2:	d646                	sw	a7,44(sp)
204030a4:	d472                	sw	t3,40(sp)
204030a6:	d276                	sw	t4,36(sp)
204030a8:	d07a                	sw	t5,32(sp)
204030aa:	ce7e                	sw	t6,28(sp)
204030ac:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
204030ae:	3391                	jal	20402df2 <__metal_myhart_id>
204030b0:	872a                	mv	a4,a0
204030b2:	800017b7          	lui	a5,0x80001
204030b6:	070a                	slli	a4,a4,0x2
204030b8:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
204030bc:	97ba                	add	a5,a5,a4
204030be:	439c                	lw	a5,0(a5)
204030c0:	faf42623          	sw	a5,-84(s0)
204030c4:	fac42783          	lw	a5,-84(s0)
204030c8:	c785                	beqz	a5,204030f0 <metal_timer_interrupt_vector_handler+0x68>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
204030ca:	fac42503          	lw	a0,-84(s0)
204030ce:	315d                	jal	20402d74 <__metal_driver_cpu_interrupt_controller>
204030d0:	faa42423          	sw	a0,-88(s0)
204030d4:	fa842783          	lw	a5,-88(s0)
204030d8:	1407a783          	lw	a5,320(a5)
204030dc:	faf42223          	sw	a5,-92(s0)
204030e0:	fa842783          	lw	a5,-88(s0)
204030e4:	1387a783          	lw	a5,312(a5)
204030e8:	fa442583          	lw	a1,-92(s0)
204030ec:	451d                	li	a0,7
204030ee:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:150
}
204030f0:	0001                	nop
204030f2:	40f6                	lw	ra,92(sp)
204030f4:	42e6                	lw	t0,88(sp)
204030f6:	4356                	lw	t1,84(sp)
204030f8:	43c6                	lw	t2,80(sp)
204030fa:	4436                	lw	s0,76(sp)
204030fc:	4526                	lw	a0,72(sp)
204030fe:	4596                	lw	a1,68(sp)
20403100:	4606                	lw	a2,64(sp)
20403102:	56f2                	lw	a3,60(sp)
20403104:	5762                	lw	a4,56(sp)
20403106:	57d2                	lw	a5,52(sp)
20403108:	5842                	lw	a6,48(sp)
2040310a:	58b2                	lw	a7,44(sp)
2040310c:	5e22                	lw	t3,40(sp)
2040310e:	5e92                	lw	t4,36(sp)
20403110:	5f02                	lw	t5,32(sp)
20403112:	4ff2                	lw	t6,28(sp)
20403114:	6125                	addi	sp,sp,96
20403116:	30200073          	mret

2040311a <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
2040311a:	1101                	addi	sp,sp,-32
2040311c:	ce22                	sw	s0,28(sp)
2040311e:	1000                	addi	s0,sp,32
20403120:	fea42623          	sw	a0,-20(s0)
20403124:	feb42423          	sw	a1,-24(s0)
20403128:	0001                	nop
2040312a:	4472                	lw	s0,28(sp)
2040312c:	6105                	addi	sp,sp,32
2040312e:	8082                	ret

20403130 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20403130:	7179                	addi	sp,sp,-48
20403132:	d606                	sw	ra,44(sp)
20403134:	d422                	sw	s0,40(sp)
20403136:	1800                	addi	s0,sp,48
20403138:	fca42e23          	sw	a0,-36(s0)
2040313c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20403140:	394d                	jal	20402df2 <__metal_myhart_id>
20403142:	87aa                	mv	a5,a0
20403144:	853e                	mv	a0,a5
20403146:	39b5                	jal	20402dc2 <__metal_driver_cpu_get>
20403148:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
2040314c:	fec42503          	lw	a0,-20(s0)
20403150:	2b6010ef          	jal	ra,20404406 <__metal_driver_cpu_mtime_get>
20403154:	fea42023          	sw	a0,-32(s0)
20403158:	feb42223          	sw	a1,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
2040315c:	fe042783          	lw	a5,-32(s0)
20403160:	fe442803          	lw	a6,-28(s0)
20403164:	45a9                	li	a1,10
20403166:	4601                	li	a2,0
20403168:	00b786b3          	add	a3,a5,a1
2040316c:	8536                	mv	a0,a3
2040316e:	00f53533          	sltu	a0,a0,a5
20403172:	00c80733          	add	a4,a6,a2
20403176:	00e507b3          	add	a5,a0,a4
2040317a:	873e                	mv	a4,a5
2040317c:	87b6                	mv	a5,a3
2040317e:	883a                	mv	a6,a4
20403180:	85be                	mv	a1,a5
20403182:	8642                	mv	a2,a6
20403184:	fec42503          	lw	a0,-20(s0)
20403188:	2e4010ef          	jal	ra,2040446c <__metal_driver_cpu_mtimecmp_set>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:160
}
2040318c:	0001                	nop
2040318e:	50b2                	lw	ra,44(sp)
20403190:	5422                	lw	s0,40(sp)
20403192:	6145                	addi	sp,sp,48
20403194:	8082                	ret
	...

20403200 <__metal_exception_handler>:
__metal_exception_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403200:	7119                	addi	sp,sp,-128
20403202:	de86                	sw	ra,124(sp)
20403204:	dc96                	sw	t0,120(sp)
20403206:	da9a                	sw	t1,116(sp)
20403208:	d89e                	sw	t2,112(sp)
2040320a:	d6a2                	sw	s0,108(sp)
2040320c:	d4aa                	sw	a0,104(sp)
2040320e:	d2ae                	sw	a1,100(sp)
20403210:	d0b2                	sw	a2,96(sp)
20403212:	ceb6                	sw	a3,92(sp)
20403214:	ccba                	sw	a4,88(sp)
20403216:	cabe                	sw	a5,84(sp)
20403218:	c8c2                	sw	a6,80(sp)
2040321a:	c6c6                	sw	a7,76(sp)
2040321c:	c4f2                	sw	t3,72(sp)
2040321e:	c2f6                	sw	t4,68(sp)
20403220:	c0fa                	sw	t5,64(sp)
20403222:	de7e                	sw	t6,60(sp)
20403224:	0100                	addi	s0,sp,128
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403226:	bcdff0ef          	jal	ra,20402df2 <__metal_myhart_id>
2040322a:	872a                	mv	a4,a0
2040322c:	800017b7          	lui	a5,0x80001
20403230:	070a                	slli	a4,a4,0x2
20403232:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403236:	97ba                	add	a5,a5,a4
20403238:	439c                	lw	a5,0(a5)
2040323a:	faf42623          	sw	a5,-84(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2040323e:	342027f3          	csrr	a5,mcause
20403242:	faf42423          	sw	a5,-88(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20403246:	341027f3          	csrr	a5,mepc
2040324a:	faf42223          	sw	a5,-92(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
2040324e:	343027f3          	csrr	a5,mtval
20403252:	faf42023          	sw	a5,-96(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403256:	305027f3          	csrr	a5,mtvec
2040325a:	f8f42e23          	sw	a5,-100(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
2040325e:	fac42783          	lw	a5,-84(s0)
20403262:	cbfd                	beqz	a5,20403358 <__metal_exception_handler+0x158>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403264:	fac42503          	lw	a0,-84(s0)
20403268:	b0dff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
2040326c:	f8a42c23          	sw	a0,-104(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20403270:	fa842783          	lw	a5,-88(s0)
20403274:	3ff7f793          	andi	a5,a5,1023
20403278:	f8f42a23          	sw	a5,-108(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
2040327c:	fa842783          	lw	a5,-88(s0)
20403280:	0a07de63          	bgez	a5,2040333c <__metal_exception_handler+0x13c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20403284:	f9442703          	lw	a4,-108(s0)
20403288:	08000793          	li	a5,128
2040328c:	02f71263          	bne	a4,a5,204032b0 <__metal_exception_handler+0xb0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20403290:	f9842783          	lw	a5,-104(s0)
20403294:	3987a783          	lw	a5,920(a5)
20403298:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2040329c:	f9842783          	lw	a5,-104(s0)
204032a0:	3907a783          	lw	a5,912(a5)
204032a4:	f9042583          	lw	a1,-112(s0)
204032a8:	f9442503          	lw	a0,-108(s0)
204032ac:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
204032ae:	a06d                	j	20403358 <__metal_exception_handler+0x158>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
204032b0:	f9442703          	lw	a4,-108(s0)
204032b4:	47ad                	li	a5,11
204032b6:	00e7d763          	bge	a5,a4,204032c4 <__metal_exception_handler+0xc4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
204032ba:	f9c42783          	lw	a5,-100(s0)
204032be:	03f7f793          	andi	a5,a5,63
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
204032c2:	ef9d                	bnez	a5,20403300 <__metal_exception_handler+0x100>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
204032c4:	f9842683          	lw	a3,-104(s0)
204032c8:	f9442703          	lw	a4,-108(s0)
204032cc:	87ba                	mv	a5,a4
204032ce:	0786                	slli	a5,a5,0x1
204032d0:	97ba                	add	a5,a5,a4
204032d2:	078e                	slli	a5,a5,0x3
204032d4:	97b6                	add	a5,a5,a3
204032d6:	0987a783          	lw	a5,152(a5)
204032da:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
204032de:	f9842683          	lw	a3,-104(s0)
204032e2:	f9442703          	lw	a4,-108(s0)
204032e6:	87ba                	mv	a5,a4
204032e8:	0786                	slli	a5,a5,0x1
204032ea:	97ba                	add	a5,a5,a4
204032ec:	078e                	slli	a5,a5,0x3
204032ee:	97b6                	add	a5,a5,a3
204032f0:	0907a783          	lw	a5,144(a5)
204032f4:	f9042583          	lw	a1,-112(s0)
204032f8:	f9442503          	lw	a0,-108(s0)
204032fc:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
204032fe:	a8a9                	j	20403358 <__metal_exception_handler+0x158>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20403300:	f9c42783          	lw	a5,-100(s0)
20403304:	03f7f713          	andi	a4,a5,63
20403308:	4789                	li	a5,2
2040330a:	04f71763          	bne	a4,a5,20403358 <__metal_exception_handler+0x158>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2040330e:	307027f3          	csrr	a5,mtvt
20403312:	f8f42623          	sw	a5,-116(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403316:	f9842783          	lw	a5,-104(s0)
2040331a:	0dc7a783          	lw	a5,220(a5)
2040331e:	f8f42823          	sw	a5,-112(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20403322:	f8c42783          	lw	a5,-116(s0)
20403326:	439c                	lw	a5,0(a5)
20403328:	f8f42423          	sw	a5,-120(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
2040332c:	f8842783          	lw	a5,-120(s0)
20403330:	f9042583          	lw	a1,-112(s0)
20403334:	f9442503          	lw	a0,-108(s0)
20403338:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
2040333a:	a839                	j	20403358 <__metal_exception_handler+0x158>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
2040333c:	f9842703          	lw	a4,-104(s0)
20403340:	f9442783          	lw	a5,-108(s0)
20403344:	0e878793          	addi	a5,a5,232
20403348:	078a                	slli	a5,a5,0x2
2040334a:	97ba                	add	a5,a5,a4
2040334c:	439c                	lw	a5,0(a5)
2040334e:	f9442583          	lw	a1,-108(s0)
20403352:	fac42503          	lw	a0,-84(s0)
20403356:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403358:	50f6                	lw	ra,124(sp)
2040335a:	52e6                	lw	t0,120(sp)
2040335c:	5356                	lw	t1,116(sp)
2040335e:	53c6                	lw	t2,112(sp)
20403360:	5436                	lw	s0,108(sp)
20403362:	5526                	lw	a0,104(sp)
20403364:	5596                	lw	a1,100(sp)
20403366:	5606                	lw	a2,96(sp)
20403368:	46f6                	lw	a3,92(sp)
2040336a:	4766                	lw	a4,88(sp)
2040336c:	47d6                	lw	a5,84(sp)
2040336e:	4846                	lw	a6,80(sp)
20403370:	48b6                	lw	a7,76(sp)
20403372:	4e26                	lw	t3,72(sp)
20403374:	4e96                	lw	t4,68(sp)
20403376:	4f06                	lw	t5,64(sp)
20403378:	5ff2                	lw	t6,60(sp)
2040337a:	6109                	addi	sp,sp,128
2040337c:	30200073          	mret
	...

204033fa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
204033fa:	711d                	addi	sp,sp,-96
204033fc:	ce86                	sw	ra,92(sp)
204033fe:	cc96                	sw	t0,88(sp)
20403400:	ca9a                	sw	t1,84(sp)
20403402:	c89e                	sw	t2,80(sp)
20403404:	c6a2                	sw	s0,76(sp)
20403406:	c4aa                	sw	a0,72(sp)
20403408:	c2ae                	sw	a1,68(sp)
2040340a:	c0b2                	sw	a2,64(sp)
2040340c:	de36                	sw	a3,60(sp)
2040340e:	dc3a                	sw	a4,56(sp)
20403410:	da3e                	sw	a5,52(sp)
20403412:	d842                	sw	a6,48(sp)
20403414:	d646                	sw	a7,44(sp)
20403416:	d472                	sw	t3,40(sp)
20403418:	d276                	sw	t4,36(sp)
2040341a:	d07a                	sw	t5,32(sp)
2040341c:	ce7e                	sw	t6,28(sp)
2040341e:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20403420:	9d3ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403424:	872a                	mv	a4,a0
20403426:	800017b7          	lui	a5,0x80001
2040342a:	070a                	slli	a4,a4,0x2
2040342c:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403430:	97ba                	add	a5,a5,a4
20403432:	439c                	lw	a5,0(a5)
20403434:	faf42623          	sw	a5,-84(s0)
20403438:	fac42783          	lw	a5,-84(s0)
2040343c:	c78d                	beqz	a5,20403466 <metal_lc0_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
2040343e:	fac42503          	lw	a0,-84(s0)
20403442:	933ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403446:	faa42423          	sw	a0,-88(s0)
2040344a:	fa842783          	lw	a5,-88(s0)
2040344e:	2187a783          	lw	a5,536(a5)
20403452:	faf42223          	sw	a5,-92(s0)
20403456:	fa842783          	lw	a5,-88(s0)
2040345a:	2107a783          	lw	a5,528(a5)
2040345e:	fa442583          	lw	a1,-92(s0)
20403462:	4541                	li	a0,16
20403464:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
}
20403466:	0001                	nop
20403468:	40f6                	lw	ra,92(sp)
2040346a:	42e6                	lw	t0,88(sp)
2040346c:	4356                	lw	t1,84(sp)
2040346e:	43c6                	lw	t2,80(sp)
20403470:	4436                	lw	s0,76(sp)
20403472:	4526                	lw	a0,72(sp)
20403474:	4596                	lw	a1,68(sp)
20403476:	4606                	lw	a2,64(sp)
20403478:	56f2                	lw	a3,60(sp)
2040347a:	5762                	lw	a4,56(sp)
2040347c:	57d2                	lw	a5,52(sp)
2040347e:	5842                	lw	a6,48(sp)
20403480:	58b2                	lw	a7,44(sp)
20403482:	5e22                	lw	t3,40(sp)
20403484:	5e92                	lw	t4,36(sp)
20403486:	5f02                	lw	t5,32(sp)
20403488:	4ff2                	lw	t6,28(sp)
2040348a:	6125                	addi	sp,sp,96
2040348c:	30200073          	mret

20403490 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20403490:	711d                	addi	sp,sp,-96
20403492:	ce86                	sw	ra,92(sp)
20403494:	cc96                	sw	t0,88(sp)
20403496:	ca9a                	sw	t1,84(sp)
20403498:	c89e                	sw	t2,80(sp)
2040349a:	c6a2                	sw	s0,76(sp)
2040349c:	c4aa                	sw	a0,72(sp)
2040349e:	c2ae                	sw	a1,68(sp)
204034a0:	c0b2                	sw	a2,64(sp)
204034a2:	de36                	sw	a3,60(sp)
204034a4:	dc3a                	sw	a4,56(sp)
204034a6:	da3e                	sw	a5,52(sp)
204034a8:	d842                	sw	a6,48(sp)
204034aa:	d646                	sw	a7,44(sp)
204034ac:	d472                	sw	t3,40(sp)
204034ae:	d276                	sw	t4,36(sp)
204034b0:	d07a                	sw	t5,32(sp)
204034b2:	ce7e                	sw	t6,28(sp)
204034b4:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
204034b6:	93dff0ef          	jal	ra,20402df2 <__metal_myhart_id>
204034ba:	872a                	mv	a4,a0
204034bc:	800017b7          	lui	a5,0x80001
204034c0:	070a                	slli	a4,a4,0x2
204034c2:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
204034c6:	97ba                	add	a5,a5,a4
204034c8:	439c                	lw	a5,0(a5)
204034ca:	faf42623          	sw	a5,-84(s0)
204034ce:	fac42783          	lw	a5,-84(s0)
204034d2:	c78d                	beqz	a5,204034fc <metal_lc1_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
204034d4:	fac42503          	lw	a0,-84(s0)
204034d8:	89dff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
204034dc:	faa42423          	sw	a0,-88(s0)
204034e0:	fa842783          	lw	a5,-88(s0)
204034e4:	2307a783          	lw	a5,560(a5)
204034e8:	faf42223          	sw	a5,-92(s0)
204034ec:	fa842783          	lw	a5,-88(s0)
204034f0:	2287a783          	lw	a5,552(a5)
204034f4:	fa442583          	lw	a1,-92(s0)
204034f8:	4545                	li	a0,17
204034fa:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:221
}
204034fc:	0001                	nop
204034fe:	40f6                	lw	ra,92(sp)
20403500:	42e6                	lw	t0,88(sp)
20403502:	4356                	lw	t1,84(sp)
20403504:	43c6                	lw	t2,80(sp)
20403506:	4436                	lw	s0,76(sp)
20403508:	4526                	lw	a0,72(sp)
2040350a:	4596                	lw	a1,68(sp)
2040350c:	4606                	lw	a2,64(sp)
2040350e:	56f2                	lw	a3,60(sp)
20403510:	5762                	lw	a4,56(sp)
20403512:	57d2                	lw	a5,52(sp)
20403514:	5842                	lw	a6,48(sp)
20403516:	58b2                	lw	a7,44(sp)
20403518:	5e22                	lw	t3,40(sp)
2040351a:	5e92                	lw	t4,36(sp)
2040351c:	5f02                	lw	t5,32(sp)
2040351e:	4ff2                	lw	t6,28(sp)
20403520:	6125                	addi	sp,sp,96
20403522:	30200073          	mret

20403526 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20403526:	711d                	addi	sp,sp,-96
20403528:	ce86                	sw	ra,92(sp)
2040352a:	cc96                	sw	t0,88(sp)
2040352c:	ca9a                	sw	t1,84(sp)
2040352e:	c89e                	sw	t2,80(sp)
20403530:	c6a2                	sw	s0,76(sp)
20403532:	c4aa                	sw	a0,72(sp)
20403534:	c2ae                	sw	a1,68(sp)
20403536:	c0b2                	sw	a2,64(sp)
20403538:	de36                	sw	a3,60(sp)
2040353a:	dc3a                	sw	a4,56(sp)
2040353c:	da3e                	sw	a5,52(sp)
2040353e:	d842                	sw	a6,48(sp)
20403540:	d646                	sw	a7,44(sp)
20403542:	d472                	sw	t3,40(sp)
20403544:	d276                	sw	t4,36(sp)
20403546:	d07a                	sw	t5,32(sp)
20403548:	ce7e                	sw	t6,28(sp)
2040354a:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2040354c:	8a7ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403550:	872a                	mv	a4,a0
20403552:	800017b7          	lui	a5,0x80001
20403556:	070a                	slli	a4,a4,0x2
20403558:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
2040355c:	97ba                	add	a5,a5,a4
2040355e:	439c                	lw	a5,0(a5)
20403560:	faf42623          	sw	a5,-84(s0)
20403564:	fac42783          	lw	a5,-84(s0)
20403568:	c78d                	beqz	a5,20403592 <metal_lc2_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
2040356a:	fac42503          	lw	a0,-84(s0)
2040356e:	807ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403572:	faa42423          	sw	a0,-88(s0)
20403576:	fa842783          	lw	a5,-88(s0)
2040357a:	2487a783          	lw	a5,584(a5)
2040357e:	faf42223          	sw	a5,-92(s0)
20403582:	fa842783          	lw	a5,-88(s0)
20403586:	2407a783          	lw	a5,576(a5)
2040358a:	fa442583          	lw	a1,-92(s0)
2040358e:	4549                	li	a0,18
20403590:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403592:	0001                	nop
20403594:	40f6                	lw	ra,92(sp)
20403596:	42e6                	lw	t0,88(sp)
20403598:	4356                	lw	t1,84(sp)
2040359a:	43c6                	lw	t2,80(sp)
2040359c:	4436                	lw	s0,76(sp)
2040359e:	4526                	lw	a0,72(sp)
204035a0:	4596                	lw	a1,68(sp)
204035a2:	4606                	lw	a2,64(sp)
204035a4:	56f2                	lw	a3,60(sp)
204035a6:	5762                	lw	a4,56(sp)
204035a8:	57d2                	lw	a5,52(sp)
204035aa:	5842                	lw	a6,48(sp)
204035ac:	58b2                	lw	a7,44(sp)
204035ae:	5e22                	lw	t3,40(sp)
204035b0:	5e92                	lw	t4,36(sp)
204035b2:	5f02                	lw	t5,32(sp)
204035b4:	4ff2                	lw	t6,28(sp)
204035b6:	6125                	addi	sp,sp,96
204035b8:	30200073          	mret

204035bc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
204035bc:	711d                	addi	sp,sp,-96
204035be:	ce86                	sw	ra,92(sp)
204035c0:	cc96                	sw	t0,88(sp)
204035c2:	ca9a                	sw	t1,84(sp)
204035c4:	c89e                	sw	t2,80(sp)
204035c6:	c6a2                	sw	s0,76(sp)
204035c8:	c4aa                	sw	a0,72(sp)
204035ca:	c2ae                	sw	a1,68(sp)
204035cc:	c0b2                	sw	a2,64(sp)
204035ce:	de36                	sw	a3,60(sp)
204035d0:	dc3a                	sw	a4,56(sp)
204035d2:	da3e                	sw	a5,52(sp)
204035d4:	d842                	sw	a6,48(sp)
204035d6:	d646                	sw	a7,44(sp)
204035d8:	d472                	sw	t3,40(sp)
204035da:	d276                	sw	t4,36(sp)
204035dc:	d07a                	sw	t5,32(sp)
204035de:	ce7e                	sw	t6,28(sp)
204035e0:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
204035e2:	811ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
204035e6:	872a                	mv	a4,a0
204035e8:	800017b7          	lui	a5,0x80001
204035ec:	070a                	slli	a4,a4,0x2
204035ee:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
204035f2:	97ba                	add	a5,a5,a4
204035f4:	439c                	lw	a5,0(a5)
204035f6:	faf42623          	sw	a5,-84(s0)
204035fa:	fac42783          	lw	a5,-84(s0)
204035fe:	c78d                	beqz	a5,20403628 <metal_lc3_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20403600:	fac42503          	lw	a0,-84(s0)
20403604:	f70ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403608:	faa42423          	sw	a0,-88(s0)
2040360c:	fa842783          	lw	a5,-88(s0)
20403610:	2607a783          	lw	a5,608(a5)
20403614:	faf42223          	sw	a5,-92(s0)
20403618:	fa842783          	lw	a5,-88(s0)
2040361c:	2587a783          	lw	a5,600(a5)
20403620:	fa442583          	lw	a1,-92(s0)
20403624:	454d                	li	a0,19
20403626:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:231
}
20403628:	0001                	nop
2040362a:	40f6                	lw	ra,92(sp)
2040362c:	42e6                	lw	t0,88(sp)
2040362e:	4356                	lw	t1,84(sp)
20403630:	43c6                	lw	t2,80(sp)
20403632:	4436                	lw	s0,76(sp)
20403634:	4526                	lw	a0,72(sp)
20403636:	4596                	lw	a1,68(sp)
20403638:	4606                	lw	a2,64(sp)
2040363a:	56f2                	lw	a3,60(sp)
2040363c:	5762                	lw	a4,56(sp)
2040363e:	57d2                	lw	a5,52(sp)
20403640:	5842                	lw	a6,48(sp)
20403642:	58b2                	lw	a7,44(sp)
20403644:	5e22                	lw	t3,40(sp)
20403646:	5e92                	lw	t4,36(sp)
20403648:	5f02                	lw	t5,32(sp)
2040364a:	4ff2                	lw	t6,28(sp)
2040364c:	6125                	addi	sp,sp,96
2040364e:	30200073          	mret

20403652 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20403652:	711d                	addi	sp,sp,-96
20403654:	ce86                	sw	ra,92(sp)
20403656:	cc96                	sw	t0,88(sp)
20403658:	ca9a                	sw	t1,84(sp)
2040365a:	c89e                	sw	t2,80(sp)
2040365c:	c6a2                	sw	s0,76(sp)
2040365e:	c4aa                	sw	a0,72(sp)
20403660:	c2ae                	sw	a1,68(sp)
20403662:	c0b2                	sw	a2,64(sp)
20403664:	de36                	sw	a3,60(sp)
20403666:	dc3a                	sw	a4,56(sp)
20403668:	da3e                	sw	a5,52(sp)
2040366a:	d842                	sw	a6,48(sp)
2040366c:	d646                	sw	a7,44(sp)
2040366e:	d472                	sw	t3,40(sp)
20403670:	d276                	sw	t4,36(sp)
20403672:	d07a                	sw	t5,32(sp)
20403674:	ce7e                	sw	t6,28(sp)
20403676:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20403678:	f7aff0ef          	jal	ra,20402df2 <__metal_myhart_id>
2040367c:	872a                	mv	a4,a0
2040367e:	800017b7          	lui	a5,0x80001
20403682:	070a                	slli	a4,a4,0x2
20403684:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403688:	97ba                	add	a5,a5,a4
2040368a:	439c                	lw	a5,0(a5)
2040368c:	faf42623          	sw	a5,-84(s0)
20403690:	fac42783          	lw	a5,-84(s0)
20403694:	c78d                	beqz	a5,204036be <metal_lc4_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20403696:	fac42503          	lw	a0,-84(s0)
2040369a:	edaff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
2040369e:	faa42423          	sw	a0,-88(s0)
204036a2:	fa842783          	lw	a5,-88(s0)
204036a6:	2787a783          	lw	a5,632(a5)
204036aa:	faf42223          	sw	a5,-92(s0)
204036ae:	fa842783          	lw	a5,-88(s0)
204036b2:	2707a783          	lw	a5,624(a5)
204036b6:	fa442583          	lw	a1,-92(s0)
204036ba:	4551                	li	a0,20
204036bc:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
}
204036be:	0001                	nop
204036c0:	40f6                	lw	ra,92(sp)
204036c2:	42e6                	lw	t0,88(sp)
204036c4:	4356                	lw	t1,84(sp)
204036c6:	43c6                	lw	t2,80(sp)
204036c8:	4436                	lw	s0,76(sp)
204036ca:	4526                	lw	a0,72(sp)
204036cc:	4596                	lw	a1,68(sp)
204036ce:	4606                	lw	a2,64(sp)
204036d0:	56f2                	lw	a3,60(sp)
204036d2:	5762                	lw	a4,56(sp)
204036d4:	57d2                	lw	a5,52(sp)
204036d6:	5842                	lw	a6,48(sp)
204036d8:	58b2                	lw	a7,44(sp)
204036da:	5e22                	lw	t3,40(sp)
204036dc:	5e92                	lw	t4,36(sp)
204036de:	5f02                	lw	t5,32(sp)
204036e0:	4ff2                	lw	t6,28(sp)
204036e2:	6125                	addi	sp,sp,96
204036e4:	30200073          	mret

204036e8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
204036e8:	711d                	addi	sp,sp,-96
204036ea:	ce86                	sw	ra,92(sp)
204036ec:	cc96                	sw	t0,88(sp)
204036ee:	ca9a                	sw	t1,84(sp)
204036f0:	c89e                	sw	t2,80(sp)
204036f2:	c6a2                	sw	s0,76(sp)
204036f4:	c4aa                	sw	a0,72(sp)
204036f6:	c2ae                	sw	a1,68(sp)
204036f8:	c0b2                	sw	a2,64(sp)
204036fa:	de36                	sw	a3,60(sp)
204036fc:	dc3a                	sw	a4,56(sp)
204036fe:	da3e                	sw	a5,52(sp)
20403700:	d842                	sw	a6,48(sp)
20403702:	d646                	sw	a7,44(sp)
20403704:	d472                	sw	t3,40(sp)
20403706:	d276                	sw	t4,36(sp)
20403708:	d07a                	sw	t5,32(sp)
2040370a:	ce7e                	sw	t6,28(sp)
2040370c:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2040370e:	ee4ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403712:	872a                	mv	a4,a0
20403714:	800017b7          	lui	a5,0x80001
20403718:	070a                	slli	a4,a4,0x2
2040371a:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
2040371e:	97ba                	add	a5,a5,a4
20403720:	439c                	lw	a5,0(a5)
20403722:	faf42623          	sw	a5,-84(s0)
20403726:	fac42783          	lw	a5,-84(s0)
2040372a:	c78d                	beqz	a5,20403754 <metal_lc5_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2040372c:	fac42503          	lw	a0,-84(s0)
20403730:	e44ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403734:	faa42423          	sw	a0,-88(s0)
20403738:	fa842783          	lw	a5,-88(s0)
2040373c:	2907a783          	lw	a5,656(a5)
20403740:	faf42223          	sw	a5,-92(s0)
20403744:	fa842783          	lw	a5,-88(s0)
20403748:	2887a783          	lw	a5,648(a5)
2040374c:	fa442583          	lw	a1,-92(s0)
20403750:	4555                	li	a0,21
20403752:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
}
20403754:	0001                	nop
20403756:	40f6                	lw	ra,92(sp)
20403758:	42e6                	lw	t0,88(sp)
2040375a:	4356                	lw	t1,84(sp)
2040375c:	43c6                	lw	t2,80(sp)
2040375e:	4436                	lw	s0,76(sp)
20403760:	4526                	lw	a0,72(sp)
20403762:	4596                	lw	a1,68(sp)
20403764:	4606                	lw	a2,64(sp)
20403766:	56f2                	lw	a3,60(sp)
20403768:	5762                	lw	a4,56(sp)
2040376a:	57d2                	lw	a5,52(sp)
2040376c:	5842                	lw	a6,48(sp)
2040376e:	58b2                	lw	a7,44(sp)
20403770:	5e22                	lw	t3,40(sp)
20403772:	5e92                	lw	t4,36(sp)
20403774:	5f02                	lw	t5,32(sp)
20403776:	4ff2                	lw	t6,28(sp)
20403778:	6125                	addi	sp,sp,96
2040377a:	30200073          	mret

2040377e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2040377e:	711d                	addi	sp,sp,-96
20403780:	ce86                	sw	ra,92(sp)
20403782:	cc96                	sw	t0,88(sp)
20403784:	ca9a                	sw	t1,84(sp)
20403786:	c89e                	sw	t2,80(sp)
20403788:	c6a2                	sw	s0,76(sp)
2040378a:	c4aa                	sw	a0,72(sp)
2040378c:	c2ae                	sw	a1,68(sp)
2040378e:	c0b2                	sw	a2,64(sp)
20403790:	de36                	sw	a3,60(sp)
20403792:	dc3a                	sw	a4,56(sp)
20403794:	da3e                	sw	a5,52(sp)
20403796:	d842                	sw	a6,48(sp)
20403798:	d646                	sw	a7,44(sp)
2040379a:	d472                	sw	t3,40(sp)
2040379c:	d276                	sw	t4,36(sp)
2040379e:	d07a                	sw	t5,32(sp)
204037a0:	ce7e                	sw	t6,28(sp)
204037a2:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
204037a4:	e4eff0ef          	jal	ra,20402df2 <__metal_myhart_id>
204037a8:	872a                	mv	a4,a0
204037aa:	800017b7          	lui	a5,0x80001
204037ae:	070a                	slli	a4,a4,0x2
204037b0:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
204037b4:	97ba                	add	a5,a5,a4
204037b6:	439c                	lw	a5,0(a5)
204037b8:	faf42623          	sw	a5,-84(s0)
204037bc:	fac42783          	lw	a5,-84(s0)
204037c0:	c78d                	beqz	a5,204037ea <metal_lc6_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
204037c2:	fac42503          	lw	a0,-84(s0)
204037c6:	daeff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
204037ca:	faa42423          	sw	a0,-88(s0)
204037ce:	fa842783          	lw	a5,-88(s0)
204037d2:	2a87a783          	lw	a5,680(a5)
204037d6:	faf42223          	sw	a5,-92(s0)
204037da:	fa842783          	lw	a5,-88(s0)
204037de:	2a07a783          	lw	a5,672(a5)
204037e2:	fa442583          	lw	a1,-92(s0)
204037e6:	4559                	li	a0,22
204037e8:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:246
}
204037ea:	0001                	nop
204037ec:	40f6                	lw	ra,92(sp)
204037ee:	42e6                	lw	t0,88(sp)
204037f0:	4356                	lw	t1,84(sp)
204037f2:	43c6                	lw	t2,80(sp)
204037f4:	4436                	lw	s0,76(sp)
204037f6:	4526                	lw	a0,72(sp)
204037f8:	4596                	lw	a1,68(sp)
204037fa:	4606                	lw	a2,64(sp)
204037fc:	56f2                	lw	a3,60(sp)
204037fe:	5762                	lw	a4,56(sp)
20403800:	57d2                	lw	a5,52(sp)
20403802:	5842                	lw	a6,48(sp)
20403804:	58b2                	lw	a7,44(sp)
20403806:	5e22                	lw	t3,40(sp)
20403808:	5e92                	lw	t4,36(sp)
2040380a:	5f02                	lw	t5,32(sp)
2040380c:	4ff2                	lw	t6,28(sp)
2040380e:	6125                	addi	sp,sp,96
20403810:	30200073          	mret

20403814 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20403814:	711d                	addi	sp,sp,-96
20403816:	ce86                	sw	ra,92(sp)
20403818:	cc96                	sw	t0,88(sp)
2040381a:	ca9a                	sw	t1,84(sp)
2040381c:	c89e                	sw	t2,80(sp)
2040381e:	c6a2                	sw	s0,76(sp)
20403820:	c4aa                	sw	a0,72(sp)
20403822:	c2ae                	sw	a1,68(sp)
20403824:	c0b2                	sw	a2,64(sp)
20403826:	de36                	sw	a3,60(sp)
20403828:	dc3a                	sw	a4,56(sp)
2040382a:	da3e                	sw	a5,52(sp)
2040382c:	d842                	sw	a6,48(sp)
2040382e:	d646                	sw	a7,44(sp)
20403830:	d472                	sw	t3,40(sp)
20403832:	d276                	sw	t4,36(sp)
20403834:	d07a                	sw	t5,32(sp)
20403836:	ce7e                	sw	t6,28(sp)
20403838:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2040383a:	db8ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
2040383e:	872a                	mv	a4,a0
20403840:	800017b7          	lui	a5,0x80001
20403844:	070a                	slli	a4,a4,0x2
20403846:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
2040384a:	97ba                	add	a5,a5,a4
2040384c:	439c                	lw	a5,0(a5)
2040384e:	faf42623          	sw	a5,-84(s0)
20403852:	fac42783          	lw	a5,-84(s0)
20403856:	c78d                	beqz	a5,20403880 <metal_lc7_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20403858:	fac42503          	lw	a0,-84(s0)
2040385c:	d18ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403860:	faa42423          	sw	a0,-88(s0)
20403864:	fa842783          	lw	a5,-88(s0)
20403868:	2c07a783          	lw	a5,704(a5)
2040386c:	faf42223          	sw	a5,-92(s0)
20403870:	fa842783          	lw	a5,-88(s0)
20403874:	2b87a783          	lw	a5,696(a5)
20403878:	fa442583          	lw	a1,-92(s0)
2040387c:	455d                	li	a0,23
2040387e:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:251
}
20403880:	0001                	nop
20403882:	40f6                	lw	ra,92(sp)
20403884:	42e6                	lw	t0,88(sp)
20403886:	4356                	lw	t1,84(sp)
20403888:	43c6                	lw	t2,80(sp)
2040388a:	4436                	lw	s0,76(sp)
2040388c:	4526                	lw	a0,72(sp)
2040388e:	4596                	lw	a1,68(sp)
20403890:	4606                	lw	a2,64(sp)
20403892:	56f2                	lw	a3,60(sp)
20403894:	5762                	lw	a4,56(sp)
20403896:	57d2                	lw	a5,52(sp)
20403898:	5842                	lw	a6,48(sp)
2040389a:	58b2                	lw	a7,44(sp)
2040389c:	5e22                	lw	t3,40(sp)
2040389e:	5e92                	lw	t4,36(sp)
204038a0:	5f02                	lw	t5,32(sp)
204038a2:	4ff2                	lw	t6,28(sp)
204038a4:	6125                	addi	sp,sp,96
204038a6:	30200073          	mret

204038aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
204038aa:	711d                	addi	sp,sp,-96
204038ac:	ce86                	sw	ra,92(sp)
204038ae:	cc96                	sw	t0,88(sp)
204038b0:	ca9a                	sw	t1,84(sp)
204038b2:	c89e                	sw	t2,80(sp)
204038b4:	c6a2                	sw	s0,76(sp)
204038b6:	c4aa                	sw	a0,72(sp)
204038b8:	c2ae                	sw	a1,68(sp)
204038ba:	c0b2                	sw	a2,64(sp)
204038bc:	de36                	sw	a3,60(sp)
204038be:	dc3a                	sw	a4,56(sp)
204038c0:	da3e                	sw	a5,52(sp)
204038c2:	d842                	sw	a6,48(sp)
204038c4:	d646                	sw	a7,44(sp)
204038c6:	d472                	sw	t3,40(sp)
204038c8:	d276                	sw	t4,36(sp)
204038ca:	d07a                	sw	t5,32(sp)
204038cc:	ce7e                	sw	t6,28(sp)
204038ce:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
204038d0:	d22ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
204038d4:	872a                	mv	a4,a0
204038d6:	800017b7          	lui	a5,0x80001
204038da:	070a                	slli	a4,a4,0x2
204038dc:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
204038e0:	97ba                	add	a5,a5,a4
204038e2:	439c                	lw	a5,0(a5)
204038e4:	faf42623          	sw	a5,-84(s0)
204038e8:	fac42783          	lw	a5,-84(s0)
204038ec:	c78d                	beqz	a5,20403916 <metal_lc8_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
204038ee:	fac42503          	lw	a0,-84(s0)
204038f2:	c82ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
204038f6:	faa42423          	sw	a0,-88(s0)
204038fa:	fa842783          	lw	a5,-88(s0)
204038fe:	2d87a783          	lw	a5,728(a5)
20403902:	faf42223          	sw	a5,-92(s0)
20403906:	fa842783          	lw	a5,-88(s0)
2040390a:	2d07a783          	lw	a5,720(a5)
2040390e:	fa442583          	lw	a1,-92(s0)
20403912:	4561                	li	a0,24
20403914:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
}
20403916:	0001                	nop
20403918:	40f6                	lw	ra,92(sp)
2040391a:	42e6                	lw	t0,88(sp)
2040391c:	4356                	lw	t1,84(sp)
2040391e:	43c6                	lw	t2,80(sp)
20403920:	4436                	lw	s0,76(sp)
20403922:	4526                	lw	a0,72(sp)
20403924:	4596                	lw	a1,68(sp)
20403926:	4606                	lw	a2,64(sp)
20403928:	56f2                	lw	a3,60(sp)
2040392a:	5762                	lw	a4,56(sp)
2040392c:	57d2                	lw	a5,52(sp)
2040392e:	5842                	lw	a6,48(sp)
20403930:	58b2                	lw	a7,44(sp)
20403932:	5e22                	lw	t3,40(sp)
20403934:	5e92                	lw	t4,36(sp)
20403936:	5f02                	lw	t5,32(sp)
20403938:	4ff2                	lw	t6,28(sp)
2040393a:	6125                	addi	sp,sp,96
2040393c:	30200073          	mret

20403940 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20403940:	711d                	addi	sp,sp,-96
20403942:	ce86                	sw	ra,92(sp)
20403944:	cc96                	sw	t0,88(sp)
20403946:	ca9a                	sw	t1,84(sp)
20403948:	c89e                	sw	t2,80(sp)
2040394a:	c6a2                	sw	s0,76(sp)
2040394c:	c4aa                	sw	a0,72(sp)
2040394e:	c2ae                	sw	a1,68(sp)
20403950:	c0b2                	sw	a2,64(sp)
20403952:	de36                	sw	a3,60(sp)
20403954:	dc3a                	sw	a4,56(sp)
20403956:	da3e                	sw	a5,52(sp)
20403958:	d842                	sw	a6,48(sp)
2040395a:	d646                	sw	a7,44(sp)
2040395c:	d472                	sw	t3,40(sp)
2040395e:	d276                	sw	t4,36(sp)
20403960:	d07a                	sw	t5,32(sp)
20403962:	ce7e                	sw	t6,28(sp)
20403964:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20403966:	c8cff0ef          	jal	ra,20402df2 <__metal_myhart_id>
2040396a:	872a                	mv	a4,a0
2040396c:	800017b7          	lui	a5,0x80001
20403970:	070a                	slli	a4,a4,0x2
20403972:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403976:	97ba                	add	a5,a5,a4
20403978:	439c                	lw	a5,0(a5)
2040397a:	faf42623          	sw	a5,-84(s0)
2040397e:	fac42783          	lw	a5,-84(s0)
20403982:	c78d                	beqz	a5,204039ac <metal_lc9_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20403984:	fac42503          	lw	a0,-84(s0)
20403988:	becff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
2040398c:	faa42423          	sw	a0,-88(s0)
20403990:	fa842783          	lw	a5,-88(s0)
20403994:	2f07a783          	lw	a5,752(a5)
20403998:	faf42223          	sw	a5,-92(s0)
2040399c:	fa842783          	lw	a5,-88(s0)
204039a0:	2e87a783          	lw	a5,744(a5)
204039a4:	fa442583          	lw	a1,-92(s0)
204039a8:	4565                	li	a0,25
204039aa:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261
}
204039ac:	0001                	nop
204039ae:	40f6                	lw	ra,92(sp)
204039b0:	42e6                	lw	t0,88(sp)
204039b2:	4356                	lw	t1,84(sp)
204039b4:	43c6                	lw	t2,80(sp)
204039b6:	4436                	lw	s0,76(sp)
204039b8:	4526                	lw	a0,72(sp)
204039ba:	4596                	lw	a1,68(sp)
204039bc:	4606                	lw	a2,64(sp)
204039be:	56f2                	lw	a3,60(sp)
204039c0:	5762                	lw	a4,56(sp)
204039c2:	57d2                	lw	a5,52(sp)
204039c4:	5842                	lw	a6,48(sp)
204039c6:	58b2                	lw	a7,44(sp)
204039c8:	5e22                	lw	t3,40(sp)
204039ca:	5e92                	lw	t4,36(sp)
204039cc:	5f02                	lw	t5,32(sp)
204039ce:	4ff2                	lw	t6,28(sp)
204039d0:	6125                	addi	sp,sp,96
204039d2:	30200073          	mret

204039d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
204039d6:	711d                	addi	sp,sp,-96
204039d8:	ce86                	sw	ra,92(sp)
204039da:	cc96                	sw	t0,88(sp)
204039dc:	ca9a                	sw	t1,84(sp)
204039de:	c89e                	sw	t2,80(sp)
204039e0:	c6a2                	sw	s0,76(sp)
204039e2:	c4aa                	sw	a0,72(sp)
204039e4:	c2ae                	sw	a1,68(sp)
204039e6:	c0b2                	sw	a2,64(sp)
204039e8:	de36                	sw	a3,60(sp)
204039ea:	dc3a                	sw	a4,56(sp)
204039ec:	da3e                	sw	a5,52(sp)
204039ee:	d842                	sw	a6,48(sp)
204039f0:	d646                	sw	a7,44(sp)
204039f2:	d472                	sw	t3,40(sp)
204039f4:	d276                	sw	t4,36(sp)
204039f6:	d07a                	sw	t5,32(sp)
204039f8:	ce7e                	sw	t6,28(sp)
204039fa:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
204039fc:	bf6ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403a00:	872a                	mv	a4,a0
20403a02:	800017b7          	lui	a5,0x80001
20403a06:	070a                	slli	a4,a4,0x2
20403a08:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403a0c:	97ba                	add	a5,a5,a4
20403a0e:	439c                	lw	a5,0(a5)
20403a10:	faf42623          	sw	a5,-84(s0)
20403a14:	fac42783          	lw	a5,-84(s0)
20403a18:	c78d                	beqz	a5,20403a42 <metal_lc10_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20403a1a:	fac42503          	lw	a0,-84(s0)
20403a1e:	b56ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403a22:	faa42423          	sw	a0,-88(s0)
20403a26:	fa842783          	lw	a5,-88(s0)
20403a2a:	3087a783          	lw	a5,776(a5)
20403a2e:	faf42223          	sw	a5,-92(s0)
20403a32:	fa842783          	lw	a5,-88(s0)
20403a36:	3007a783          	lw	a5,768(a5)
20403a3a:	fa442583          	lw	a1,-92(s0)
20403a3e:	4569                	li	a0,26
20403a40:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:267
}
20403a42:	0001                	nop
20403a44:	40f6                	lw	ra,92(sp)
20403a46:	42e6                	lw	t0,88(sp)
20403a48:	4356                	lw	t1,84(sp)
20403a4a:	43c6                	lw	t2,80(sp)
20403a4c:	4436                	lw	s0,76(sp)
20403a4e:	4526                	lw	a0,72(sp)
20403a50:	4596                	lw	a1,68(sp)
20403a52:	4606                	lw	a2,64(sp)
20403a54:	56f2                	lw	a3,60(sp)
20403a56:	5762                	lw	a4,56(sp)
20403a58:	57d2                	lw	a5,52(sp)
20403a5a:	5842                	lw	a6,48(sp)
20403a5c:	58b2                	lw	a7,44(sp)
20403a5e:	5e22                	lw	t3,40(sp)
20403a60:	5e92                	lw	t4,36(sp)
20403a62:	5f02                	lw	t5,32(sp)
20403a64:	4ff2                	lw	t6,28(sp)
20403a66:	6125                	addi	sp,sp,96
20403a68:	30200073          	mret

20403a6c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20403a6c:	711d                	addi	sp,sp,-96
20403a6e:	ce86                	sw	ra,92(sp)
20403a70:	cc96                	sw	t0,88(sp)
20403a72:	ca9a                	sw	t1,84(sp)
20403a74:	c89e                	sw	t2,80(sp)
20403a76:	c6a2                	sw	s0,76(sp)
20403a78:	c4aa                	sw	a0,72(sp)
20403a7a:	c2ae                	sw	a1,68(sp)
20403a7c:	c0b2                	sw	a2,64(sp)
20403a7e:	de36                	sw	a3,60(sp)
20403a80:	dc3a                	sw	a4,56(sp)
20403a82:	da3e                	sw	a5,52(sp)
20403a84:	d842                	sw	a6,48(sp)
20403a86:	d646                	sw	a7,44(sp)
20403a88:	d472                	sw	t3,40(sp)
20403a8a:	d276                	sw	t4,36(sp)
20403a8c:	d07a                	sw	t5,32(sp)
20403a8e:	ce7e                	sw	t6,28(sp)
20403a90:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20403a92:	b60ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403a96:	872a                	mv	a4,a0
20403a98:	800017b7          	lui	a5,0x80001
20403a9c:	070a                	slli	a4,a4,0x2
20403a9e:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403aa2:	97ba                	add	a5,a5,a4
20403aa4:	439c                	lw	a5,0(a5)
20403aa6:	faf42623          	sw	a5,-84(s0)
20403aaa:	fac42783          	lw	a5,-84(s0)
20403aae:	c78d                	beqz	a5,20403ad8 <metal_lc11_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20403ab0:	fac42503          	lw	a0,-84(s0)
20403ab4:	ac0ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403ab8:	faa42423          	sw	a0,-88(s0)
20403abc:	fa842783          	lw	a5,-88(s0)
20403ac0:	3207a783          	lw	a5,800(a5)
20403ac4:	faf42223          	sw	a5,-92(s0)
20403ac8:	fa842783          	lw	a5,-88(s0)
20403acc:	3187a783          	lw	a5,792(a5)
20403ad0:	fa442583          	lw	a1,-92(s0)
20403ad4:	456d                	li	a0,27
20403ad6:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:273
}
20403ad8:	0001                	nop
20403ada:	40f6                	lw	ra,92(sp)
20403adc:	42e6                	lw	t0,88(sp)
20403ade:	4356                	lw	t1,84(sp)
20403ae0:	43c6                	lw	t2,80(sp)
20403ae2:	4436                	lw	s0,76(sp)
20403ae4:	4526                	lw	a0,72(sp)
20403ae6:	4596                	lw	a1,68(sp)
20403ae8:	4606                	lw	a2,64(sp)
20403aea:	56f2                	lw	a3,60(sp)
20403aec:	5762                	lw	a4,56(sp)
20403aee:	57d2                	lw	a5,52(sp)
20403af0:	5842                	lw	a6,48(sp)
20403af2:	58b2                	lw	a7,44(sp)
20403af4:	5e22                	lw	t3,40(sp)
20403af6:	5e92                	lw	t4,36(sp)
20403af8:	5f02                	lw	t5,32(sp)
20403afa:	4ff2                	lw	t6,28(sp)
20403afc:	6125                	addi	sp,sp,96
20403afe:	30200073          	mret

20403b02 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20403b02:	711d                	addi	sp,sp,-96
20403b04:	ce86                	sw	ra,92(sp)
20403b06:	cc96                	sw	t0,88(sp)
20403b08:	ca9a                	sw	t1,84(sp)
20403b0a:	c89e                	sw	t2,80(sp)
20403b0c:	c6a2                	sw	s0,76(sp)
20403b0e:	c4aa                	sw	a0,72(sp)
20403b10:	c2ae                	sw	a1,68(sp)
20403b12:	c0b2                	sw	a2,64(sp)
20403b14:	de36                	sw	a3,60(sp)
20403b16:	dc3a                	sw	a4,56(sp)
20403b18:	da3e                	sw	a5,52(sp)
20403b1a:	d842                	sw	a6,48(sp)
20403b1c:	d646                	sw	a7,44(sp)
20403b1e:	d472                	sw	t3,40(sp)
20403b20:	d276                	sw	t4,36(sp)
20403b22:	d07a                	sw	t5,32(sp)
20403b24:	ce7e                	sw	t6,28(sp)
20403b26:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20403b28:	acaff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403b2c:	872a                	mv	a4,a0
20403b2e:	800017b7          	lui	a5,0x80001
20403b32:	070a                	slli	a4,a4,0x2
20403b34:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403b38:	97ba                	add	a5,a5,a4
20403b3a:	439c                	lw	a5,0(a5)
20403b3c:	faf42623          	sw	a5,-84(s0)
20403b40:	fac42783          	lw	a5,-84(s0)
20403b44:	c78d                	beqz	a5,20403b6e <metal_lc12_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20403b46:	fac42503          	lw	a0,-84(s0)
20403b4a:	a2aff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403b4e:	faa42423          	sw	a0,-88(s0)
20403b52:	fa842783          	lw	a5,-88(s0)
20403b56:	3387a783          	lw	a5,824(a5)
20403b5a:	faf42223          	sw	a5,-92(s0)
20403b5e:	fa842783          	lw	a5,-88(s0)
20403b62:	3307a783          	lw	a5,816(a5)
20403b66:	fa442583          	lw	a1,-92(s0)
20403b6a:	4571                	li	a0,28
20403b6c:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:279
}
20403b6e:	0001                	nop
20403b70:	40f6                	lw	ra,92(sp)
20403b72:	42e6                	lw	t0,88(sp)
20403b74:	4356                	lw	t1,84(sp)
20403b76:	43c6                	lw	t2,80(sp)
20403b78:	4436                	lw	s0,76(sp)
20403b7a:	4526                	lw	a0,72(sp)
20403b7c:	4596                	lw	a1,68(sp)
20403b7e:	4606                	lw	a2,64(sp)
20403b80:	56f2                	lw	a3,60(sp)
20403b82:	5762                	lw	a4,56(sp)
20403b84:	57d2                	lw	a5,52(sp)
20403b86:	5842                	lw	a6,48(sp)
20403b88:	58b2                	lw	a7,44(sp)
20403b8a:	5e22                	lw	t3,40(sp)
20403b8c:	5e92                	lw	t4,36(sp)
20403b8e:	5f02                	lw	t5,32(sp)
20403b90:	4ff2                	lw	t6,28(sp)
20403b92:	6125                	addi	sp,sp,96
20403b94:	30200073          	mret

20403b98 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20403b98:	711d                	addi	sp,sp,-96
20403b9a:	ce86                	sw	ra,92(sp)
20403b9c:	cc96                	sw	t0,88(sp)
20403b9e:	ca9a                	sw	t1,84(sp)
20403ba0:	c89e                	sw	t2,80(sp)
20403ba2:	c6a2                	sw	s0,76(sp)
20403ba4:	c4aa                	sw	a0,72(sp)
20403ba6:	c2ae                	sw	a1,68(sp)
20403ba8:	c0b2                	sw	a2,64(sp)
20403baa:	de36                	sw	a3,60(sp)
20403bac:	dc3a                	sw	a4,56(sp)
20403bae:	da3e                	sw	a5,52(sp)
20403bb0:	d842                	sw	a6,48(sp)
20403bb2:	d646                	sw	a7,44(sp)
20403bb4:	d472                	sw	t3,40(sp)
20403bb6:	d276                	sw	t4,36(sp)
20403bb8:	d07a                	sw	t5,32(sp)
20403bba:	ce7e                	sw	t6,28(sp)
20403bbc:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20403bbe:	a34ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403bc2:	872a                	mv	a4,a0
20403bc4:	800017b7          	lui	a5,0x80001
20403bc8:	070a                	slli	a4,a4,0x2
20403bca:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403bce:	97ba                	add	a5,a5,a4
20403bd0:	439c                	lw	a5,0(a5)
20403bd2:	faf42623          	sw	a5,-84(s0)
20403bd6:	fac42783          	lw	a5,-84(s0)
20403bda:	c78d                	beqz	a5,20403c04 <metal_lc13_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20403bdc:	fac42503          	lw	a0,-84(s0)
20403be0:	994ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403be4:	faa42423          	sw	a0,-88(s0)
20403be8:	fa842783          	lw	a5,-88(s0)
20403bec:	3507a783          	lw	a5,848(a5)
20403bf0:	faf42223          	sw	a5,-92(s0)
20403bf4:	fa842783          	lw	a5,-88(s0)
20403bf8:	3487a783          	lw	a5,840(a5)
20403bfc:	fa442583          	lw	a1,-92(s0)
20403c00:	4575                	li	a0,29
20403c02:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:285
}
20403c04:	0001                	nop
20403c06:	40f6                	lw	ra,92(sp)
20403c08:	42e6                	lw	t0,88(sp)
20403c0a:	4356                	lw	t1,84(sp)
20403c0c:	43c6                	lw	t2,80(sp)
20403c0e:	4436                	lw	s0,76(sp)
20403c10:	4526                	lw	a0,72(sp)
20403c12:	4596                	lw	a1,68(sp)
20403c14:	4606                	lw	a2,64(sp)
20403c16:	56f2                	lw	a3,60(sp)
20403c18:	5762                	lw	a4,56(sp)
20403c1a:	57d2                	lw	a5,52(sp)
20403c1c:	5842                	lw	a6,48(sp)
20403c1e:	58b2                	lw	a7,44(sp)
20403c20:	5e22                	lw	t3,40(sp)
20403c22:	5e92                	lw	t4,36(sp)
20403c24:	5f02                	lw	t5,32(sp)
20403c26:	4ff2                	lw	t6,28(sp)
20403c28:	6125                	addi	sp,sp,96
20403c2a:	30200073          	mret

20403c2e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20403c2e:	711d                	addi	sp,sp,-96
20403c30:	ce86                	sw	ra,92(sp)
20403c32:	cc96                	sw	t0,88(sp)
20403c34:	ca9a                	sw	t1,84(sp)
20403c36:	c89e                	sw	t2,80(sp)
20403c38:	c6a2                	sw	s0,76(sp)
20403c3a:	c4aa                	sw	a0,72(sp)
20403c3c:	c2ae                	sw	a1,68(sp)
20403c3e:	c0b2                	sw	a2,64(sp)
20403c40:	de36                	sw	a3,60(sp)
20403c42:	dc3a                	sw	a4,56(sp)
20403c44:	da3e                	sw	a5,52(sp)
20403c46:	d842                	sw	a6,48(sp)
20403c48:	d646                	sw	a7,44(sp)
20403c4a:	d472                	sw	t3,40(sp)
20403c4c:	d276                	sw	t4,36(sp)
20403c4e:	d07a                	sw	t5,32(sp)
20403c50:	ce7e                	sw	t6,28(sp)
20403c52:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20403c54:	99eff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403c58:	872a                	mv	a4,a0
20403c5a:	800017b7          	lui	a5,0x80001
20403c5e:	070a                	slli	a4,a4,0x2
20403c60:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403c64:	97ba                	add	a5,a5,a4
20403c66:	439c                	lw	a5,0(a5)
20403c68:	faf42623          	sw	a5,-84(s0)
20403c6c:	fac42783          	lw	a5,-84(s0)
20403c70:	c78d                	beqz	a5,20403c9a <metal_lc14_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20403c72:	fac42503          	lw	a0,-84(s0)
20403c76:	8feff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403c7a:	faa42423          	sw	a0,-88(s0)
20403c7e:	fa842783          	lw	a5,-88(s0)
20403c82:	3687a783          	lw	a5,872(a5)
20403c86:	faf42223          	sw	a5,-92(s0)
20403c8a:	fa842783          	lw	a5,-88(s0)
20403c8e:	3607a783          	lw	a5,864(a5)
20403c92:	fa442583          	lw	a1,-92(s0)
20403c96:	4579                	li	a0,30
20403c98:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:291
}
20403c9a:	0001                	nop
20403c9c:	40f6                	lw	ra,92(sp)
20403c9e:	42e6                	lw	t0,88(sp)
20403ca0:	4356                	lw	t1,84(sp)
20403ca2:	43c6                	lw	t2,80(sp)
20403ca4:	4436                	lw	s0,76(sp)
20403ca6:	4526                	lw	a0,72(sp)
20403ca8:	4596                	lw	a1,68(sp)
20403caa:	4606                	lw	a2,64(sp)
20403cac:	56f2                	lw	a3,60(sp)
20403cae:	5762                	lw	a4,56(sp)
20403cb0:	57d2                	lw	a5,52(sp)
20403cb2:	5842                	lw	a6,48(sp)
20403cb4:	58b2                	lw	a7,44(sp)
20403cb6:	5e22                	lw	t3,40(sp)
20403cb8:	5e92                	lw	t4,36(sp)
20403cba:	5f02                	lw	t5,32(sp)
20403cbc:	4ff2                	lw	t6,28(sp)
20403cbe:	6125                	addi	sp,sp,96
20403cc0:	30200073          	mret

20403cc4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20403cc4:	711d                	addi	sp,sp,-96
20403cc6:	ce86                	sw	ra,92(sp)
20403cc8:	cc96                	sw	t0,88(sp)
20403cca:	ca9a                	sw	t1,84(sp)
20403ccc:	c89e                	sw	t2,80(sp)
20403cce:	c6a2                	sw	s0,76(sp)
20403cd0:	c4aa                	sw	a0,72(sp)
20403cd2:	c2ae                	sw	a1,68(sp)
20403cd4:	c0b2                	sw	a2,64(sp)
20403cd6:	de36                	sw	a3,60(sp)
20403cd8:	dc3a                	sw	a4,56(sp)
20403cda:	da3e                	sw	a5,52(sp)
20403cdc:	d842                	sw	a6,48(sp)
20403cde:	d646                	sw	a7,44(sp)
20403ce0:	d472                	sw	t3,40(sp)
20403ce2:	d276                	sw	t4,36(sp)
20403ce4:	d07a                	sw	t5,32(sp)
20403ce6:	ce7e                	sw	t6,28(sp)
20403ce8:	1080                	addi	s0,sp,96
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20403cea:	908ff0ef          	jal	ra,20402df2 <__metal_myhart_id>
20403cee:	872a                	mv	a4,a0
20403cf0:	800017b7          	lui	a5,0x80001
20403cf4:	070a                	slli	a4,a4,0x2
20403cf6:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff2f8>
20403cfa:	97ba                	add	a5,a5,a4
20403cfc:	439c                	lw	a5,0(a5)
20403cfe:	faf42623          	sw	a5,-84(s0)
20403d02:	fac42783          	lw	a5,-84(s0)
20403d06:	c78d                	beqz	a5,20403d30 <metal_lc15_interrupt_vector_handler+0x6c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20403d08:	fac42503          	lw	a0,-84(s0)
20403d0c:	868ff0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20403d10:	faa42423          	sw	a0,-88(s0)
20403d14:	fa842783          	lw	a5,-88(s0)
20403d18:	3807a783          	lw	a5,896(a5)
20403d1c:	faf42223          	sw	a5,-92(s0)
20403d20:	fa842783          	lw	a5,-88(s0)
20403d24:	3787a783          	lw	a5,888(a5)
20403d28:	fa442583          	lw	a1,-92(s0)
20403d2c:	457d                	li	a0,31
20403d2e:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
}
20403d30:	0001                	nop
20403d32:	40f6                	lw	ra,92(sp)
20403d34:	42e6                	lw	t0,88(sp)
20403d36:	4356                	lw	t1,84(sp)
20403d38:	43c6                	lw	t2,80(sp)
20403d3a:	4436                	lw	s0,76(sp)
20403d3c:	4526                	lw	a0,72(sp)
20403d3e:	4596                	lw	a1,68(sp)
20403d40:	4606                	lw	a2,64(sp)
20403d42:	56f2                	lw	a3,60(sp)
20403d44:	5762                	lw	a4,56(sp)
20403d46:	57d2                	lw	a5,52(sp)
20403d48:	5842                	lw	a6,48(sp)
20403d4a:	58b2                	lw	a7,44(sp)
20403d4c:	5e22                	lw	t3,40(sp)
20403d4e:	5e92                	lw	t4,36(sp)
20403d50:	5f02                	lw	t5,32(sp)
20403d52:	4ff2                	lw	t6,28(sp)
20403d54:	6125                	addi	sp,sp,96
20403d56:	30200073          	mret

20403d5a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20403d5a:	1101                	addi	sp,sp,-32
20403d5c:	ce22                	sw	s0,28(sp)
20403d5e:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20403d60:	305027f3          	csrr	a5,mtvec
20403d64:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20403d68:	fec42783          	lw	a5,-20(s0)
20403d6c:	03f7f793          	andi	a5,a5,63
20403d70:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20403d74:	fec42703          	lw	a4,-20(s0)
20403d78:	4789                	li	a5,2
20403d7a:	00f70d63          	beq	a4,a5,20403d94 <__metal_controller_interrupt_vector_mode+0x3a>
20403d7e:	fec42703          	lw	a4,-20(s0)
20403d82:	478d                	li	a5,3
20403d84:	00f70a63          	beq	a4,a5,20403d98 <__metal_controller_interrupt_vector_mode+0x3e>
20403d88:	fec42703          	lw	a4,-20(s0)
20403d8c:	4785                	li	a5,1
20403d8e:	00f70763          	beq	a4,a5,20403d9c <__metal_controller_interrupt_vector_mode+0x42>
20403d92:	a039                	j	20403da0 <__metal_controller_interrupt_vector_mode+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20403d94:	478d                	li	a5,3
20403d96:	a031                	j	20403da2 <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20403d98:	4791                	li	a5,4
20403d9a:	a021                	j	20403da2 <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20403d9c:	4785                	li	a5,1
20403d9e:	a011                	j	20403da2 <__metal_controller_interrupt_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20403da0:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
}
20403da2:	853e                	mv	a0,a5
20403da4:	4472                	lw	s0,28(sp)
20403da6:	6105                	addi	sp,sp,32
20403da8:	8082                	ret

20403daa <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20403daa:	7179                	addi	sp,sp,-48
20403dac:	d622                	sw	s0,44(sp)
20403dae:	1800                	addi	s0,sp,48
20403db0:	fca42e23          	sw	a0,-36(s0)
20403db4:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20403db8:	305027f3          	csrr	a5,mtvec
20403dbc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20403dc0:	fec42783          	lw	a5,-20(s0)
20403dc4:	fc07f793          	andi	a5,a5,-64
20403dc8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20403dcc:	fd842783          	lw	a5,-40(s0)
20403dd0:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20403dd4:	fdc42703          	lw	a4,-36(s0)
20403dd8:	4791                	li	a5,4
20403dda:	06e7e063          	bltu	a5,a4,20403e3a <__metal_controller_interrupt_vector+0x90>
20403dde:	fdc42783          	lw	a5,-36(s0)
20403de2:	00279713          	slli	a4,a5,0x2
20403de6:	204017b7          	lui	a5,0x20401
20403dea:	89878793          	addi	a5,a5,-1896 # 20400898 <__metal_driver_vtable_riscv_clint0+0x64>
20403dee:	97ba                	add	a5,a5,a4
20403df0:	439c                	lw	a5,0(a5)
20403df2:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20403df4:	fe842783          	lw	a5,-24(s0)
20403df8:	30779073          	csrw	mtvt,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20403dfc:	fec42783          	lw	a5,-20(s0)
20403e00:	0027e793          	ori	a5,a5,2
20403e04:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20403e08:	a80d                	j	20403e3a <__metal_controller_interrupt_vector+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20403e0a:	fe842783          	lw	a5,-24(s0)
20403e0e:	30779073          	csrw	mtvt,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20403e12:	fec42783          	lw	a5,-20(s0)
20403e16:	0037e793          	ori	a5,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20403e1a:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20403e1e:	a831                	j	20403e3a <__metal_controller_interrupt_vector+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20403e20:	fe842783          	lw	a5,-24(s0)
20403e24:	0017e793          	ori	a5,a5,1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20403e28:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20403e2c:	a039                	j	20403e3a <__metal_controller_interrupt_vector+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20403e2e:	fe842783          	lw	a5,-24(s0)
20403e32:	9bf1                	andi	a5,a5,-4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20403e34:	30579073          	csrw	mtvec,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20403e38:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20403e3a:	0001                	nop
20403e3c:	5432                	lw	s0,44(sp)
20403e3e:	6145                	addi	sp,sp,48
20403e40:	8082                	ret

20403e42 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20403e42:	1101                	addi	sp,sp,-32
20403e44:	ce22                	sw	s0,28(sp)
20403e46:	1000                	addi	s0,sp,32
20403e48:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20403e4c:	fec42703          	lw	a4,-20(s0)
20403e50:	47ad                	li	a5,11
20403e52:	04f70263          	beq	a4,a5,20403e96 <__metal_valid_interrupt_id+0x54>
20403e56:	fec42703          	lw	a4,-20(s0)
20403e5a:	47ad                	li	a5,11
20403e5c:	00e7cd63          	blt	a5,a4,20403e76 <__metal_valid_interrupt_id+0x34>
20403e60:	fec42703          	lw	a4,-20(s0)
20403e64:	478d                	li	a5,3
20403e66:	02f70863          	beq	a4,a5,20403e96 <__metal_valid_interrupt_id+0x54>
20403e6a:	fec42703          	lw	a4,-20(s0)
20403e6e:	479d                	li	a5,7
20403e70:	02f70363          	beq	a4,a5,20403e96 <__metal_valid_interrupt_id+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20403e74:	a01d                	j	20403e9a <__metal_valid_interrupt_id+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20403e76:	fec42703          	lw	a4,-20(s0)
20403e7a:	47c1                	li	a5,16
20403e7c:	00f74f63          	blt	a4,a5,20403e9a <__metal_valid_interrupt_id+0x58>
20403e80:	fec42703          	lw	a4,-20(s0)
20403e84:	47fd                	li	a5,31
20403e86:	00e7d863          	bge	a5,a4,20403e96 <__metal_valid_interrupt_id+0x54>
20403e8a:	fec42703          	lw	a4,-20(s0)
20403e8e:	08000793          	li	a5,128
20403e92:	00f71463          	bne	a4,a5,20403e9a <__metal_valid_interrupt_id+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20403e96:	4785                	li	a5,1
20403e98:	a019                	j	20403e9e <__metal_valid_interrupt_id+0x5c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20403e9a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20403e9c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:374
}
20403e9e:	853e                	mv	a0,a5
20403ea0:	4472                	lw	s0,28(sp)
20403ea2:	6105                	addi	sp,sp,32
20403ea4:	8082                	ret

20403ea6 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20403ea6:	7179                	addi	sp,sp,-48
20403ea8:	d606                	sw	ra,44(sp)
20403eaa:	d422                	sw	s0,40(sp)
20403eac:	1800                	addi	s0,sp,48
20403eae:	fca42e23          	sw	a0,-36(s0)
20403eb2:	fcb42c23          	sw	a1,-40(s0)
20403eb6:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20403eba:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20403ebe:	fdc42783          	lw	a5,-36(s0)
20403ec2:	e399                	bnez	a5,20403ec8 <__metal_local_interrupt_enable+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20403ec4:	57fd                	li	a5,-1
20403ec6:	a849                	j	20403f58 <__metal_local_interrupt_enable+0xb2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20403ec8:	fd842703          	lw	a4,-40(s0)
20403ecc:	47fd                	li	a5,31
20403ece:	08e7e063          	bltu	a5,a4,20403f4e <__metal_local_interrupt_enable+0xa8>
20403ed2:	fd842783          	lw	a5,-40(s0)
20403ed6:	00279713          	slli	a4,a5,0x2
20403eda:	204017b7          	lui	a5,0x20401
20403ede:	8ac78793          	addi	a5,a5,-1876 # 204008ac <__metal_driver_vtable_riscv_clint0+0x78>
20403ee2:	97ba                	add	a5,a5,a4
20403ee4:	439c                	lw	a5,0(a5)
20403ee6:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20403ee8:	fd442783          	lw	a5,-44(s0)
20403eec:	c781                	beqz	a5,20403ef4 <__metal_local_interrupt_enable+0x4e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20403eee:	f1ffe0ef          	jal	ra,20402e0c <__metal_interrupt_global_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20403ef2:	a08d                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20403ef4:	f31fe0ef          	jal	ra,20402e24 <__metal_interrupt_global_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20403ef8:	a8b1                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20403efa:	fd442783          	lw	a5,-44(s0)
20403efe:	c781                	beqz	a5,20403f06 <__metal_local_interrupt_enable+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20403f00:	f3dfe0ef          	jal	ra,20402e3c <__metal_interrupt_software_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20403f04:	a881                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20403f06:	f4ffe0ef          	jal	ra,20402e54 <__metal_interrupt_software_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20403f0a:	a0a9                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20403f0c:	fd442783          	lw	a5,-44(s0)
20403f10:	c781                	beqz	a5,20403f18 <__metal_local_interrupt_enable+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20403f12:	f5bfe0ef          	jal	ra,20402e6c <__metal_interrupt_timer_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20403f16:	a83d                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20403f18:	f6ffe0ef          	jal	ra,20402e86 <__metal_interrupt_timer_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20403f1c:	a825                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20403f1e:	fd442783          	lw	a5,-44(s0)
20403f22:	c781                	beqz	a5,20403f2a <__metal_local_interrupt_enable+0x84>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20403f24:	f7dfe0ef          	jal	ra,20402ea0 <__metal_interrupt_external_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20403f28:	a035                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20403f2a:	f93fe0ef          	jal	ra,20402ebc <__metal_interrupt_external_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20403f2e:	a01d                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20403f30:	fd442783          	lw	a5,-44(s0)
20403f34:	c799                	beqz	a5,20403f42 <__metal_local_interrupt_enable+0x9c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20403f36:	fd842783          	lw	a5,-40(s0)
20403f3a:	853e                	mv	a0,a5
20403f3c:	f9dfe0ef          	jal	ra,20402ed8 <__metal_interrupt_local_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20403f40:	a811                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20403f42:	fd842783          	lw	a5,-40(s0)
20403f46:	853e                	mv	a0,a5
20403f48:	fbdfe0ef          	jal	ra,20402f04 <__metal_interrupt_local_disable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20403f4c:	a021                	j	20403f54 <__metal_local_interrupt_enable+0xae>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20403f4e:	57fd                	li	a5,-1
20403f50:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20403f54:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
}
20403f58:	853e                	mv	a0,a5
20403f5a:	50b2                	lw	ra,44(sp)
20403f5c:	5422                	lw	s0,40(sp)
20403f5e:	6145                	addi	sp,sp,48
20403f60:	8082                	ret

20403f62 <__metal_exception_register>:
__metal_exception_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20403f62:	7179                	addi	sp,sp,-48
20403f64:	d622                	sw	s0,44(sp)
20403f66:	1800                	addi	s0,sp,48
20403f68:	fca42e23          	sw	a0,-36(s0)
20403f6c:	fcb42c23          	sw	a1,-40(s0)
20403f70:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20403f74:	fdc42783          	lw	a5,-36(s0)
20403f78:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20403f7c:	fd842703          	lw	a4,-40(s0)
20403f80:	47ad                	li	a5,11
20403f82:	02e7c263          	blt	a5,a4,20403fa6 <__metal_exception_register+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20403f86:	fd442783          	lw	a5,-44(s0)
20403f8a:	cf91                	beqz	a5,20403fa6 <__metal_exception_register+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20403f8c:	fec42703          	lw	a4,-20(s0)
20403f90:	fd842783          	lw	a5,-40(s0)
20403f94:	0e878793          	addi	a5,a5,232
20403f98:	078a                	slli	a5,a5,0x2
20403f9a:	97ba                	add	a5,a5,a4
20403f9c:	fd442703          	lw	a4,-44(s0)
20403fa0:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20403fa2:	4781                	li	a5,0
20403fa4:	a011                	j	20403fa8 <__metal_exception_register+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20403fa6:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
}
20403fa8:	853e                	mv	a0,a5
20403faa:	5432                	lw	s0,44(sp)
20403fac:	6145                	addi	sp,sp,48
20403fae:	8082                	ret

20403fb0 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20403fb0:	7179                	addi	sp,sp,-48
20403fb2:	d606                	sw	ra,44(sp)
20403fb4:	d422                	sw	s0,40(sp)
20403fb6:	1800                	addi	s0,sp,48
20403fb8:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20403fbc:	fdc42783          	lw	a5,-36(s0)
20403fc0:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20403fc4:	fe442783          	lw	a5,-28(s0)
20403fc8:	43dc                	lw	a5,4(a5)
20403fca:	efdd                	bnez	a5,20404088 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20403fcc:	fe042623          	sw	zero,-20(s0)
20403fd0:	a0b9                	j	2040401e <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20403fd2:	fe442683          	lw	a3,-28(s0)
20403fd6:	fec42703          	lw	a4,-20(s0)
20403fda:	87ba                	mv	a5,a4
20403fdc:	0786                	slli	a5,a5,0x1
20403fde:	97ba                	add	a5,a5,a4
20403fe0:	078e                	slli	a5,a5,0x3
20403fe2:	97b6                	add	a5,a5,a3
20403fe4:	0807a823          	sw	zero,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20403fe8:	fe442683          	lw	a3,-28(s0)
20403fec:	fec42703          	lw	a4,-20(s0)
20403ff0:	87ba                	mv	a5,a4
20403ff2:	0786                	slli	a5,a5,0x1
20403ff4:	97ba                	add	a5,a5,a4
20403ff6:	078e                	slli	a5,a5,0x3
20403ff8:	97b6                	add	a5,a5,a3
20403ffa:	0807aa23          	sw	zero,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20403ffe:	fe442683          	lw	a3,-28(s0)
20404002:	fec42703          	lw	a4,-20(s0)
20404006:	87ba                	mv	a5,a4
20404008:	0786                	slli	a5,a5,0x1
2040400a:	97ba                	add	a5,a5,a4
2040400c:	078e                	slli	a5,a5,0x3
2040400e:	97b6                	add	a5,a5,a3
20404010:	0807ac23          	sw	zero,152(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404014:	fec42783          	lw	a5,-20(s0)
20404018:	0785                	addi	a5,a5,1
2040401a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
2040401e:	fec42703          	lw	a4,-20(s0)
20404022:	47fd                	li	a5,31
20404024:	fae7d7e3          	bge	a5,a4,20403fd2 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20404028:	fe042423          	sw	zero,-24(s0)
2040402c:	a01d                	j	20404052 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
2040402e:	fe442703          	lw	a4,-28(s0)
20404032:	fe842783          	lw	a5,-24(s0)
20404036:	0e878793          	addi	a5,a5,232
2040403a:	078a                	slli	a5,a5,0x2
2040403c:	97ba                	add	a5,a5,a4
2040403e:	20403737          	lui	a4,0x20403
20404042:	f3070713          	addi	a4,a4,-208 # 20402f30 <__metal_default_exception_handler>
20404046:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20404048:	fe842783          	lw	a5,-24(s0)
2040404c:	0785                	addi	a5,a5,1
2040404e:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20404052:	fe842703          	lw	a4,-24(s0)
20404056:	47ad                	li	a5,11
20404058:	fce7dbe3          	bge	a5,a4,2040402e <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
2040405c:	305027f3          	csrr	a5,mtvec
20404060:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20404064:	204007b7          	lui	a5,0x20400
20404068:	13c78793          	addi	a5,a5,316 # 2040013c <early_trap_vector>
2040406c:	fe042703          	lw	a4,-32(s0)
20404070:	00f71863          	bne	a4,a5,20404080 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20404074:	204037b7          	lui	a5,0x20403
20404078:	20078593          	addi	a1,a5,512 # 20403200 <__metal_exception_handler>
2040407c:	4501                	li	a0,0
2040407e:	3335                	jal	20403daa <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404080:	fe442783          	lw	a5,-28(s0)
20404084:	4705                	li	a4,1
20404086:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20404088:	0001                	nop
2040408a:	50b2                	lw	ra,44(sp)
2040408c:	5422                	lw	s0,40(sp)
2040408e:	6145                	addi	sp,sp,48
20404090:	8082                	ret

20404092 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20404092:	7179                	addi	sp,sp,-48
20404094:	d606                	sw	ra,44(sp)
20404096:	d422                	sw	s0,40(sp)
20404098:	1800                	addi	s0,sp,48
2040409a:	fca42e23          	sw	a0,-36(s0)
2040409e:	fcb42c23          	sw	a1,-40(s0)
204040a2:	fcc42a23          	sw	a2,-44(s0)
204040a6:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
204040aa:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204040ae:	fdc42783          	lw	a5,-36(s0)
204040b2:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
204040b6:	fd842503          	lw	a0,-40(s0)
204040ba:	3361                	jal	20403e42 <__metal_valid_interrupt_id>
204040bc:	87aa                	mv	a5,a0
204040be:	e399                	bnez	a5,204040c4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
204040c0:	57d5                	li	a5,-11
204040c2:	aa79                	j	20404260 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204040c4:	fd842703          	lw	a4,-40(s0)
204040c8:	08000793          	li	a5,128
204040cc:	00f71863          	bne	a4,a5,204040dc <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
204040d0:	c8bff0ef          	jal	ra,20403d5a <__metal_controller_interrupt_vector_mode>
204040d4:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204040d6:	c399                	beqz	a5,204040dc <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
204040d8:	57cd                	li	a5,-13
204040da:	a259                	j	20404260 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
204040dc:	fd442783          	lw	a5,-44(s0)
204040e0:	cfb9                	beqz	a5,2040413e <__metal_driver_riscv_cpu_controller_interrupt_register+0xac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
204040e2:	fd842703          	lw	a4,-40(s0)
204040e6:	08000793          	li	a5,128
204040ea:	00f71f63          	bne	a4,a5,20404108 <__metal_driver_riscv_cpu_controller_interrupt_register+0x76>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
204040ee:	fe842783          	lw	a5,-24(s0)
204040f2:	fd442703          	lw	a4,-44(s0)
204040f6:	38e7a823          	sw	a4,912(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
204040fa:	fe842783          	lw	a5,-24(s0)
204040fe:	fd042703          	lw	a4,-48(s0)
20404102:	38e7ac23          	sw	a4,920(a5)
20404106:	aa99                	j	2040425c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ca>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20404108:	fe842683          	lw	a3,-24(s0)
2040410c:	fd842703          	lw	a4,-40(s0)
20404110:	87ba                	mv	a5,a4
20404112:	0786                	slli	a5,a5,0x1
20404114:	97ba                	add	a5,a5,a4
20404116:	078e                	slli	a5,a5,0x3
20404118:	97b6                	add	a5,a5,a3
2040411a:	fd442703          	lw	a4,-44(s0)
2040411e:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20404122:	fe842683          	lw	a3,-24(s0)
20404126:	fd842703          	lw	a4,-40(s0)
2040412a:	87ba                	mv	a5,a4
2040412c:	0786                	slli	a5,a5,0x1
2040412e:	97ba                	add	a5,a5,a4
20404130:	078e                	slli	a5,a5,0x3
20404132:	97b6                	add	a5,a5,a3
20404134:	fd042703          	lw	a4,-48(s0)
20404138:	08e7ac23          	sw	a4,152(a5)
2040413c:	a205                	j	2040425c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ca>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
2040413e:	fd842703          	lw	a4,-40(s0)
20404142:	47ad                	li	a5,11
20404144:	0cf70c63          	beq	a4,a5,2040421c <__metal_driver_riscv_cpu_controller_interrupt_register+0x18a>
20404148:	fd842703          	lw	a4,-40(s0)
2040414c:	47ad                	li	a5,11
2040414e:	00e7cd63          	blt	a5,a4,20404168 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd6>
20404152:	fd842703          	lw	a4,-40(s0)
20404156:	478d                	li	a5,3
20404158:	02f70963          	beq	a4,a5,2040418a <__metal_driver_riscv_cpu_controller_interrupt_register+0xf8>
2040415c:	fd842703          	lw	a4,-40(s0)
20404160:	479d                	li	a5,7
20404162:	06f70163          	beq	a4,a5,204041c4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x132>
20404166:	a8c5                	j	20404256 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c4>
20404168:	fd842703          	lw	a4,-40(s0)
2040416c:	47c1                	li	a5,16
2040416e:	0ef74463          	blt	a4,a5,20404256 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c4>
20404172:	fd842703          	lw	a4,-40(s0)
20404176:	47fd                	li	a5,31
20404178:	0ae7d263          	bge	a5,a4,2040421c <__metal_driver_riscv_cpu_controller_interrupt_register+0x18a>
2040417c:	fd842703          	lw	a4,-40(s0)
20404180:	08000793          	li	a5,128
20404184:	06f70d63          	beq	a4,a5,204041fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x16c>
20404188:	a0f9                	j	20404256 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
2040418a:	fe842683          	lw	a3,-24(s0)
2040418e:	fd842703          	lw	a4,-40(s0)
20404192:	87ba                	mv	a5,a4
20404194:	0786                	slli	a5,a5,0x1
20404196:	97ba                	add	a5,a5,a4
20404198:	078e                	slli	a5,a5,0x3
2040419a:	97b6                	add	a5,a5,a3
2040419c:	20403737          	lui	a4,0x20403
204041a0:	02070713          	addi	a4,a4,32 # 20403020 <__metal_default_sw_handler>
204041a4:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
204041a8:	fe842683          	lw	a3,-24(s0)
204041ac:	fd842703          	lw	a4,-40(s0)
204041b0:	87ba                	mv	a5,a4
204041b2:	0786                	slli	a5,a5,0x1
204041b4:	97ba                	add	a5,a5,a4
204041b6:	078e                	slli	a5,a5,0x3
204041b8:	97b6                	add	a5,a5,a3
204041ba:	fd042703          	lw	a4,-48(s0)
204041be:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
204041c2:	a869                	j	2040425c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ca>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
204041c4:	fe842683          	lw	a3,-24(s0)
204041c8:	fd842703          	lw	a4,-40(s0)
204041cc:	87ba                	mv	a5,a4
204041ce:	0786                	slli	a5,a5,0x1
204041d0:	97ba                	add	a5,a5,a4
204041d2:	078e                	slli	a5,a5,0x3
204041d4:	97b6                	add	a5,a5,a3
204041d6:	20403737          	lui	a4,0x20403
204041da:	13070713          	addi	a4,a4,304 # 20403130 <__metal_default_timer_handler>
204041de:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
204041e2:	fe842683          	lw	a3,-24(s0)
204041e6:	fd842703          	lw	a4,-40(s0)
204041ea:	87ba                	mv	a5,a4
204041ec:	0786                	slli	a5,a5,0x1
204041ee:	97ba                	add	a5,a5,a4
204041f0:	078e                	slli	a5,a5,0x3
204041f2:	97b6                	add	a5,a5,a3
204041f4:	fd042703          	lw	a4,-48(s0)
204041f8:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
204041fc:	a085                	j	2040425c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ca>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
204041fe:	fe842783          	lw	a5,-24(s0)
20404202:	20403737          	lui	a4,0x20403
20404206:	11a70713          	addi	a4,a4,282 # 2040311a <__metal_default_beu_handler>
2040420a:	38e7a823          	sw	a4,912(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
2040420e:	fe842783          	lw	a5,-24(s0)
20404212:	fd042703          	lw	a4,-48(s0)
20404216:	38e7ac23          	sw	a4,920(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
2040421a:	a089                	j	2040425c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ca>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
2040421c:	fe842683          	lw	a3,-24(s0)
20404220:	fd842703          	lw	a4,-40(s0)
20404224:	87ba                	mv	a5,a4
20404226:	0786                	slli	a5,a5,0x1
20404228:	97ba                	add	a5,a5,a4
2040422a:	078e                	slli	a5,a5,0x3
2040422c:	97b6                	add	a5,a5,a3
2040422e:	20403737          	lui	a4,0x20403
20404232:	f4870713          	addi	a4,a4,-184 # 20402f48 <__metal_default_interrupt_handler>
20404236:	08e7a823          	sw	a4,144(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
2040423a:	fe842683          	lw	a3,-24(s0)
2040423e:	fd842703          	lw	a4,-40(s0)
20404242:	87ba                	mv	a5,a4
20404244:	0786                	slli	a5,a5,0x1
20404246:	97ba                	add	a5,a5,a4
20404248:	078e                	slli	a5,a5,0x3
2040424a:	97b6                	add	a5,a5,a3
2040424c:	fd042703          	lw	a4,-48(s0)
20404250:	08e7aa23          	sw	a4,148(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20404254:	a021                	j	2040425c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ca>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20404256:	57d1                	li	a5,-12
20404258:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
2040425c:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:549
}
20404260:	853e                	mv	a0,a5
20404262:	50b2                	lw	ra,44(sp)
20404264:	5422                	lw	s0,40(sp)
20404266:	6145                	addi	sp,sp,48
20404268:	8082                	ret

2040426a <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
2040426a:	1101                	addi	sp,sp,-32
2040426c:	ce06                	sw	ra,28(sp)
2040426e:	cc22                	sw	s0,24(sp)
20404270:	1000                	addi	s0,sp,32
20404272:	fea42623          	sw	a0,-20(s0)
20404276:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
2040427a:	fe842783          	lw	a5,-24(s0)
2040427e:	4605                	li	a2,1
20404280:	85be                	mv	a1,a5
20404282:	fec42503          	lw	a0,-20(s0)
20404286:	c21ff0ef          	jal	ra,20403ea6 <__metal_local_interrupt_enable>
2040428a:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:554
}
2040428c:	853e                	mv	a0,a5
2040428e:	40f2                	lw	ra,28(sp)
20404290:	4462                	lw	s0,24(sp)
20404292:	6105                	addi	sp,sp,32
20404294:	8082                	ret

20404296 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20404296:	1101                	addi	sp,sp,-32
20404298:	ce06                	sw	ra,28(sp)
2040429a:	cc22                	sw	s0,24(sp)
2040429c:	1000                	addi	s0,sp,32
2040429e:	fea42623          	sw	a0,-20(s0)
204042a2:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
204042a6:	fe842783          	lw	a5,-24(s0)
204042aa:	4601                	li	a2,0
204042ac:	85be                	mv	a1,a5
204042ae:	fec42503          	lw	a0,-20(s0)
204042b2:	bf5ff0ef          	jal	ra,20403ea6 <__metal_local_interrupt_enable>
204042b6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
}
204042b8:	853e                	mv	a0,a5
204042ba:	40f2                	lw	ra,28(sp)
204042bc:	4462                	lw	s0,24(sp)
204042be:	6105                	addi	sp,sp,32
204042c0:	8082                	ret

204042c2 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
204042c2:	1101                	addi	sp,sp,-32
204042c4:	ce06                	sw	ra,28(sp)
204042c6:	cc22                	sw	s0,24(sp)
204042c8:	1000                	addi	s0,sp,32
204042ca:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
204042ce:	a8dff0ef          	jal	ra,20403d5a <__metal_controller_interrupt_vector_mode>
204042d2:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:593
}
204042d4:	853e                	mv	a0,a5
204042d6:	40f2                	lw	ra,28(sp)
204042d8:	4462                	lw	s0,24(sp)
204042da:	6105                	addi	sp,sp,32
204042dc:	8082                	ret

204042de <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
204042de:	1101                	addi	sp,sp,-32
204042e0:	ce06                	sw	ra,28(sp)
204042e2:	cc22                	sw	s0,24(sp)
204042e4:	1000                	addi	s0,sp,32
204042e6:	fea42623          	sw	a0,-20(s0)
204042ea:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
204042ee:	fe842783          	lw	a5,-24(s0)
204042f2:	eb99                	bnez	a5,20404308 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
204042f4:	204037b7          	lui	a5,0x20403
204042f8:	20078593          	addi	a1,a5,512 # 20403200 <__metal_exception_handler>
204042fc:	fe842503          	lw	a0,-24(s0)
20404300:	aabff0ef          	jal	ra,20403daa <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20404304:	4781                	li	a5,0
20404306:	a00d                	j	20404328 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20404308:	fe842703          	lw	a4,-24(s0)
2040430c:	4785                	li	a5,1
2040430e:	00f71c63          	bne	a4,a5,20404326 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20404312:	204077b7          	lui	a5,0x20407
20404316:	e0078593          	addi	a1,a5,-512 # 20406e00 <__metal_vector_table>
2040431a:	fe842503          	lw	a0,-24(s0)
2040431e:	a8dff0ef          	jal	ra,20403daa <__metal_controller_interrupt_vector>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20404322:	4781                	li	a5,0
20404324:	a011                	j	20404328 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20404326:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:609
}
20404328:	853e                	mv	a0,a5
2040432a:	40f2                	lw	ra,28(sp)
2040432c:	4462                	lw	s0,24(sp)
2040432e:	6105                	addi	sp,sp,32
20404330:	8082                	ret

20404332 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20404332:	1101                	addi	sp,sp,-32
20404334:	ce22                	sw	s0,28(sp)
20404336:	1000                	addi	s0,sp,32
20404338:	fea42623          	sw	a0,-20(s0)
2040433c:	feb42423          	sw	a1,-24(s0)
20404340:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20404344:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
}
20404346:	853e                	mv	a0,a5
20404348:	4472                	lw	s0,28(sp)
2040434a:	6105                	addi	sp,sp,32
2040434c:	8082                	ret

2040434e <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
2040434e:	7139                	addi	sp,sp,-64
20404350:	de22                	sw	s0,60(sp)
20404352:	0080                	addi	s0,sp,64
20404354:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20404358:	4301                	li	t1,0
2040435a:	4381                	li	t2,0
2040435c:	fe642423          	sw	t1,-24(s0)
20404360:	fe742623          	sw	t2,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20404364:	b8002573          	csrr	a0,mcycleh
20404368:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
2040436c:	b0002573          	csrr	a0,mcycle
20404370:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20404374:	b8002573          	csrr	a0,mcycleh
20404378:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
2040437c:	fe442883          	lw	a7,-28(s0)
20404380:	fdc42503          	lw	a0,-36(s0)
20404384:	fea890e3          	bne	a7,a0,20404364 <__metal_driver_cpu_mcycle_get+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20404388:	fe442503          	lw	a0,-28(s0)
2040438c:	85aa                	mv	a1,a0
2040438e:	4601                	li	a2,0
20404390:	00059813          	slli	a6,a1,0x0
20404394:	4781                	li	a5,0
20404396:	fe042603          	lw	a2,-32(s0)
2040439a:	86b2                	mv	a3,a2
2040439c:	4701                	li	a4,0
2040439e:	00d7e633          	or	a2,a5,a3
204043a2:	fec42423          	sw	a2,-24(s0)
204043a6:	00e867b3          	or	a5,a6,a4
204043aa:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
204043ae:	fe842783          	lw	a5,-24(s0)
204043b2:	fec42803          	lw	a6,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:640
}
204043b6:	853e                	mv	a0,a5
204043b8:	85c2                	mv	a1,a6
204043ba:	5472                	lw	s0,60(sp)
204043bc:	6121                	addi	sp,sp,64
204043be:	8082                	ret

204043c0 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
204043c0:	7179                	addi	sp,sp,-48
204043c2:	d606                	sw	ra,44(sp)
204043c4:	d422                	sw	s0,40(sp)
204043c6:	d24a                	sw	s2,36(sp)
204043c8:	d04e                	sw	s3,32(sp)
204043ca:	1800                	addi	s0,sp,48
204043cc:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
204043d0:	fdc42783          	lw	a5,-36(s0)
204043d4:	e781                	bnez	a5,204043dc <__metal_driver_cpu_timebase_get+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
204043d6:	4901                	li	s2,0
204043d8:	4981                	li	s3,0
204043da:	a821                	j	204043f2 <__metal_driver_cpu_timebase_get+0x32>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
204043dc:	fdc42503          	lw	a0,-36(s0)
204043e0:	96bfe0ef          	jal	ra,20402d4a <__metal_driver_cpu_timebase>
204043e4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
204043e8:	fec42783          	lw	a5,-20(s0)
204043ec:	893e                	mv	s2,a5
204043ee:	87fd                	srai	a5,a5,0x1f
204043f0:	89be                	mv	s3,a5
204043f2:	87ca                	mv	a5,s2
204043f4:	884e                	mv	a6,s3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:650
}
204043f6:	853e                	mv	a0,a5
204043f8:	85c2                	mv	a1,a6
204043fa:	50b2                	lw	ra,44(sp)
204043fc:	5422                	lw	s0,40(sp)
204043fe:	5912                	lw	s2,36(sp)
20404400:	5982                	lw	s3,32(sp)
20404402:	6145                	addi	sp,sp,48
20404404:	8082                	ret

20404406 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20404406:	7179                	addi	sp,sp,-48
20404408:	d606                	sw	ra,44(sp)
2040440a:	d422                	sw	s0,40(sp)
2040440c:	1800                	addi	s0,sp,48
2040440e:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20404412:	4781                	li	a5,0
20404414:	4801                	li	a6,0
20404416:	fef42023          	sw	a5,-32(s0)
2040441a:	ff042223          	sw	a6,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2040441e:	fdc42503          	lw	a0,-36(s0)
20404422:	953fe0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20404426:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
2040442a:	fec42783          	lw	a5,-20(s0)
2040442e:	c78d                	beqz	a5,20404458 <__metal_driver_cpu_mtime_get+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404430:	fec42783          	lw	a5,-20(s0)
20404434:	13c7a783          	lw	a5,316(a5)
20404438:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
2040443c:	fe842783          	lw	a5,-24(s0)
20404440:	cf81                	beqz	a5,20404458 <__metal_driver_cpu_mtime_get+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20404442:	fe842783          	lw	a5,-24(s0)
20404446:	439c                	lw	a5,0(a5)
20404448:	47f8                	lw	a4,76(a5)
2040444a:	fe040793          	addi	a5,s0,-32
2040444e:	863e                	mv	a2,a5
20404450:	4585                	li	a1,1
20404452:	fe842503          	lw	a0,-24(s0)
20404456:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20404458:	fe042783          	lw	a5,-32(s0)
2040445c:	fe442803          	lw	a6,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:667
}
20404460:	853e                	mv	a0,a5
20404462:	85c2                	mv	a1,a6
20404464:	50b2                	lw	ra,44(sp)
20404466:	5422                	lw	s0,40(sp)
20404468:	6145                	addi	sp,sp,48
2040446a:	8082                	ret

2040446c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
2040446c:	7179                	addi	sp,sp,-48
2040446e:	d606                	sw	ra,44(sp)
20404470:	d422                	sw	s0,40(sp)
20404472:	d226                	sw	s1,36(sp)
20404474:	1800                	addi	s0,sp,48
20404476:	fca42e23          	sw	a0,-36(s0)
2040447a:	fcb42823          	sw	a1,-48(s0)
2040447e:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20404482:	57fd                	li	a5,-1
20404484:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404488:	fdc42503          	lw	a0,-36(s0)
2040448c:	8e9fe0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20404490:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20404494:	fe842783          	lw	a5,-24(s0)
20404498:	cf8d                	beqz	a5,204044d2 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
2040449a:	fe842783          	lw	a5,-24(s0)
2040449e:	13c7a783          	lw	a5,316(a5)
204044a2:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
204044a6:	fe442783          	lw	a5,-28(s0)
204044aa:	c785                	beqz	a5,204044d2 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
204044ac:	fe442783          	lw	a5,-28(s0)
204044b0:	439c                	lw	a5,0(a5)
204044b2:	4ba4                	lw	s1,80(a5)
204044b4:	fdc42503          	lw	a0,-36(s0)
204044b8:	86ffe0ef          	jal	ra,20402d26 <__metal_driver_cpu_hartid>
204044bc:	87aa                	mv	a5,a0
204044be:	fd042603          	lw	a2,-48(s0)
204044c2:	fd442683          	lw	a3,-44(s0)
204044c6:	85be                	mv	a1,a5
204044c8:	fe442503          	lw	a0,-28(s0)
204044cc:	9482                	jalr	s1
204044ce:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
204044d2:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
204044d6:	853e                	mv	a0,a5
204044d8:	50b2                	lw	ra,44(sp)
204044da:	5422                	lw	s0,40(sp)
204044dc:	5492                	lw	s1,36(sp)
204044de:	6145                	addi	sp,sp,48
204044e0:	8082                	ret

204044e2 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
204044e2:	1101                	addi	sp,sp,-32
204044e4:	ce22                	sw	s0,28(sp)
204044e6:	1000                	addi	s0,sp,32
204044e8:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
204044ec:	800017b7          	lui	a5,0x80001
204044f0:	a8c78793          	addi	a5,a5,-1396 # 80000a8c <metal_segment_heap_target_end+0xfffff2fc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
204044f4:	853e                	mv	a0,a5
204044f6:	4472                	lw	s0,28(sp)
204044f8:	6105                	addi	sp,sp,32
204044fa:	8082                	ret

204044fc <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
204044fc:	1101                	addi	sp,sp,-32
204044fe:	ce22                	sw	s0,28(sp)
20404500:	1000                	addi	s0,sp,32
20404502:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20404506:	479d                	li	a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:703
}
20404508:	853e                	mv	a0,a5
2040450a:	4472                	lw	s0,28(sp)
2040450c:	6105                	addi	sp,sp,32
2040450e:	8082                	ret

20404510 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20404510:	1101                	addi	sp,sp,-32
20404512:	ce22                	sw	s0,28(sp)
20404514:	1000                	addi	s0,sp,32
20404516:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040451a:	800017b7          	lui	a5,0x80001
2040451e:	a8c78793          	addi	a5,a5,-1396 # 80000a8c <metal_segment_heap_target_end+0xfffff2fc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20404522:	853e                	mv	a0,a5
20404524:	4472                	lw	s0,28(sp)
20404526:	6105                	addi	sp,sp,32
20404528:	8082                	ret

2040452a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
2040452a:	1101                	addi	sp,sp,-32
2040452c:	ce22                	sw	s0,28(sp)
2040452e:	1000                	addi	s0,sp,32
20404530:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20404534:	478d                	li	a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:721
}
20404536:	853e                	mv	a0,a5
20404538:	4472                	lw	s0,28(sp)
2040453a:	6105                	addi	sp,sp,32
2040453c:	8082                	ret

2040453e <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
2040453e:	7179                	addi	sp,sp,-48
20404540:	d606                	sw	ra,44(sp)
20404542:	d422                	sw	s0,40(sp)
20404544:	1800                	addi	s0,sp,48
20404546:	fca42e23          	sw	a0,-36(s0)
2040454a:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
2040454e:	57fd                	li	a5,-1
20404550:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404554:	fdc42503          	lw	a0,-36(s0)
20404558:	81dfe0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
2040455c:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20404560:	fe842783          	lw	a5,-24(s0)
20404564:	c79d                	beqz	a5,20404592 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404566:	fe842783          	lw	a5,-24(s0)
2040456a:	0dc7a783          	lw	a5,220(a5)
2040456e:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20404572:	fe442783          	lw	a5,-28(s0)
20404576:	cf91                	beqz	a5,20404592 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20404578:	fe442783          	lw	a5,-28(s0)
2040457c:	439c                	lw	a5,0(a5)
2040457e:	47f8                	lw	a4,76(a5)
20404580:	fd840793          	addi	a5,s0,-40
20404584:	863e                	mv	a2,a5
20404586:	458d                	li	a1,3
20404588:	fe442503          	lw	a0,-28(s0)
2040458c:	9702                	jalr	a4
2040458e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20404592:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:738
}
20404596:	853e                	mv	a0,a5
20404598:	50b2                	lw	ra,44(sp)
2040459a:	5422                	lw	s0,40(sp)
2040459c:	6145                	addi	sp,sp,48
2040459e:	8082                	ret

204045a0 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
204045a0:	7179                	addi	sp,sp,-48
204045a2:	d606                	sw	ra,44(sp)
204045a4:	d422                	sw	s0,40(sp)
204045a6:	1800                	addi	s0,sp,48
204045a8:	fca42e23          	sw	a0,-36(s0)
204045ac:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
204045b0:	57fd                	li	a5,-1
204045b2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204045b6:	fdc42503          	lw	a0,-36(s0)
204045ba:	fbafe0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
204045be:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
204045c2:	fe842783          	lw	a5,-24(s0)
204045c6:	c79d                	beqz	a5,204045f4 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204045c8:	fe842783          	lw	a5,-24(s0)
204045cc:	0dc7a783          	lw	a5,220(a5)
204045d0:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
204045d4:	fe442783          	lw	a5,-28(s0)
204045d8:	cf91                	beqz	a5,204045f4 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
204045da:	fe442783          	lw	a5,-28(s0)
204045de:	439c                	lw	a5,0(a5)
204045e0:	47f8                	lw	a4,76(a5)
204045e2:	fd840793          	addi	a5,s0,-40
204045e6:	863e                	mv	a2,a5
204045e8:	4589                	li	a1,2
204045ea:	fe442503          	lw	a0,-28(s0)
204045ee:	9702                	jalr	a4
204045f0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
204045f4:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:755
}
204045f8:	853e                	mv	a0,a5
204045fa:	50b2                	lw	ra,44(sp)
204045fc:	5422                	lw	s0,40(sp)
204045fe:	6145                	addi	sp,sp,48
20404600:	8082                	ret

20404602 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20404602:	7179                	addi	sp,sp,-48
20404604:	d606                	sw	ra,44(sp)
20404606:	d422                	sw	s0,40(sp)
20404608:	1800                	addi	s0,sp,48
2040460a:	fca42e23          	sw	a0,-36(s0)
2040460e:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20404612:	fe042623          	sw	zero,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404616:	fdc42503          	lw	a0,-36(s0)
2040461a:	f5afe0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
2040461e:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20404622:	fe842783          	lw	a5,-24(s0)
20404626:	c79d                	beqz	a5,20404654 <__metal_driver_cpu_get_msip+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404628:	fe842783          	lw	a5,-24(s0)
2040462c:	0dc7a783          	lw	a5,220(a5)
20404630:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20404634:	fe442783          	lw	a5,-28(s0)
20404638:	cf91                	beqz	a5,20404654 <__metal_driver_cpu_get_msip+0x52>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
2040463a:	fe442783          	lw	a5,-28(s0)
2040463e:	439c                	lw	a5,0(a5)
20404640:	47f8                	lw	a4,76(a5)
20404642:	fd840793          	addi	a5,s0,-40
20404646:	863e                	mv	a2,a5
20404648:	4591                	li	a1,4
2040464a:	fe442503          	lw	a0,-28(s0)
2040464e:	9702                	jalr	a4
20404650:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20404654:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772
}
20404658:	853e                	mv	a0,a5
2040465a:	50b2                	lw	ra,44(sp)
2040465c:	5422                	lw	s0,40(sp)
2040465e:	6145                	addi	sp,sp,48
20404660:	8082                	ret

20404662 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20404662:	1101                	addi	sp,sp,-32
20404664:	ce06                	sw	ra,28(sp)
20404666:	cc22                	sw	s0,24(sp)
20404668:	1000                	addi	s0,sp,32
2040466a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2040466e:	fec42503          	lw	a0,-20(s0)
20404672:	f02fe0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
20404676:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:777
}
20404678:	853e                	mv	a0,a5
2040467a:	40f2                	lw	ra,28(sp)
2040467c:	4462                	lw	s0,24(sp)
2040467e:	6105                	addi	sp,sp,32
20404680:	8082                	ret

20404682 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20404682:	7179                	addi	sp,sp,-48
20404684:	d606                	sw	ra,44(sp)
20404686:	d422                	sw	s0,40(sp)
20404688:	1800                	addi	s0,sp,48
2040468a:	fca42e23          	sw	a0,-36(s0)
2040468e:	fcb42c23          	sw	a1,-40(s0)
20404692:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404696:	fdc42503          	lw	a0,-36(s0)
2040469a:	edafe0ef          	jal	ra,20402d74 <__metal_driver_cpu_interrupt_controller>
2040469e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
204046a2:	fec42783          	lw	a5,-20(s0)
204046a6:	cb99                	beqz	a5,204046bc <__metal_driver_cpu_exception_register+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
204046a8:	fd442603          	lw	a2,-44(s0)
204046ac:	fd842583          	lw	a1,-40(s0)
204046b0:	fec42503          	lw	a0,-20(s0)
204046b4:	8afff0ef          	jal	ra,20403f62 <__metal_exception_register>
204046b8:	87aa                	mv	a5,a0
204046ba:	a011                	j	204046be <__metal_driver_cpu_exception_register+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
204046bc:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
}
204046be:	853e                	mv	a0,a5
204046c0:	50b2                	lw	ra,44(sp)
204046c2:	5422                	lw	s0,40(sp)
204046c4:	6145                	addi	sp,sp,48
204046c6:	8082                	ret

204046c8 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
204046c8:	1101                	addi	sp,sp,-32
204046ca:	ce22                	sw	s0,28(sp)
204046cc:	1000                	addi	s0,sp,32
204046ce:	fea42623          	sw	a0,-20(s0)
204046d2:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
204046d6:	fe842783          	lw	a5,-24(s0)
204046da:	0007d783          	lhu	a5,0(a5)
204046de:	0037f713          	andi	a4,a5,3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
204046e2:	478d                	li	a5,3
204046e4:	00f71463          	bne	a4,a5,204046ec <__metal_driver_cpu_get_instruction_length+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
204046e8:	4791                	li	a5,4
204046ea:	a011                	j	204046ee <__metal_driver_cpu_get_instruction_length+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
204046ec:	4789                	li	a5,2
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
204046ee:	853e                	mv	a0,a5
204046f0:	4472                	lw	s0,28(sp)
204046f2:	6105                	addi	sp,sp,32
204046f4:	8082                	ret

204046f6 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
204046f6:	7179                	addi	sp,sp,-48
204046f8:	d622                	sw	s0,44(sp)
204046fa:	1800                	addi	s0,sp,48
204046fc:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20404700:	341027f3          	csrr	a5,mepc
20404704:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20404708:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:827
}
2040470c:	853e                	mv	a0,a5
2040470e:	5432                	lw	s0,44(sp)
20404710:	6145                	addi	sp,sp,48
20404712:	8082                	ret

20404714 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20404714:	1101                	addi	sp,sp,-32
20404716:	ce22                	sw	s0,28(sp)
20404718:	1000                	addi	s0,sp,32
2040471a:	fea42623          	sw	a0,-20(s0)
2040471e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20404722:	fe842783          	lw	a5,-24(s0)
20404726:	34179073          	csrw	mepc,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2040472a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:832
}
2040472c:	853e                	mv	a0,a5
2040472e:	4472                	lw	s0,28(sp)
20404730:	6105                	addi	sp,sp,32
20404732:	8082                	ret

20404734 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20404734:	1101                	addi	sp,sp,-32
20404736:	ce06                	sw	ra,28(sp)
20404738:	cc22                	sw	s0,24(sp)
2040473a:	1000                	addi	s0,sp,32
2040473c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20404740:	fec42503          	lw	a0,-20(s0)
20404744:	e5afe0ef          	jal	ra,20402d9e <__metal_driver_cpu_buserror>
20404748:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:836
}
2040474a:	853e                	mv	a0,a5
2040474c:	40f2                	lw	ra,28(sp)
2040474e:	4462                	lw	s0,24(sp)
20404750:	6105                	addi	sp,sp,32
20404752:	8082                	ret

20404754 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:320



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20404754:	1101                	addi	sp,sp,-32
20404756:	ce22                	sw	s0,28(sp)
20404758:	1000                	addi	s0,sp,32
2040475a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:321
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040475e:	fec42703          	lw	a4,-20(s0)
20404762:	800007b7          	lui	a5,0x80000
20404766:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecd0>
2040476a:	00f71563          	bne	a4,a5,20404774 <__metal_driver_sifive_plic0_control_base+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:322
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040476e:	0c0007b7          	lui	a5,0xc000
20404772:	a011                	j	20404776 <__metal_driver_sifive_plic0_control_base+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:325
	}
	else {
		return 0;
20404774:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:327
	}
}
20404776:	853e                	mv	a0,a5
20404778:	4472                	lw	s0,28(sp)
2040477a:	6105                	addi	sp,sp,32
2040477c:	8082                	ret

2040477e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:340
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040477e:	1101                	addi	sp,sp,-32
20404780:	ce22                	sw	s0,28(sp)
20404782:	1000                	addi	s0,sp,32
20404784:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:341
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404788:	fec42703          	lw	a4,-20(s0)
2040478c:	800007b7          	lui	a5,0x80000
20404790:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecd0>
20404794:	00f71563          	bne	a4,a5,2040479e <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:342
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20404798:	03500793          	li	a5,53
2040479c:	a011                	j	204047a0 <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:345
	}
	else {
		return 0;
2040479e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:347
	}
}
204047a0:	853e                	mv	a0,a5
204047a2:	4472                	lw	s0,28(sp)
204047a4:	6105                	addi	sp,sp,32
204047a6:	8082                	ret

204047a8 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:350

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204047a8:	1101                	addi	sp,sp,-32
204047aa:	ce22                	sw	s0,28(sp)
204047ac:	1000                	addi	s0,sp,32
204047ae:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:351
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204047b2:	fec42703          	lw	a4,-20(s0)
204047b6:	800007b7          	lui	a5,0x80000
204047ba:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecd0>
204047be:	00f71463          	bne	a4,a5,204047c6 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:352
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204047c2:	479d                	li	a5,7
204047c4:	a011                	j	204047c8 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:355
	}
	else {
		return 0;
204047c6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:357
	}
}
204047c8:	853e                	mv	a0,a5
204047ca:	4472                	lw	s0,28(sp)
204047cc:	6105                	addi	sp,sp,32
204047ce:	8082                	ret

204047d0 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:360

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204047d0:	1101                	addi	sp,sp,-32
204047d2:	ce22                	sw	s0,28(sp)
204047d4:	1000                	addi	s0,sp,32
204047d6:	fea42623          	sw	a0,-20(s0)
204047da:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:361
	if (idx == 0) {
204047de:	fe842783          	lw	a5,-24(s0)
204047e2:	e791                	bnez	a5,204047ee <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:362
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204047e4:	800007b7          	lui	a5,0x80000
204047e8:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe900>
204047ec:	a011                	j	204047f0 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:365
	}
	else {
		return NULL;
204047ee:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:367
	}
}
204047f0:	853e                	mv	a0,a5
204047f2:	4472                	lw	s0,28(sp)
204047f4:	6105                	addi	sp,sp,32
204047f6:	8082                	ret

204047f8 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:370

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
204047f8:	1101                	addi	sp,sp,-32
204047fa:	ce22                	sw	s0,28(sp)
204047fc:	1000                	addi	s0,sp,32
204047fe:	fea42623          	sw	a0,-20(s0)
20404802:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:371
	if (idx == 0) {
20404806:	fe842783          	lw	a5,-24(s0)
2040480a:	e399                	bnez	a5,20404810 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:372
		return 11;
2040480c:	47ad                	li	a5,11
2040480e:	a011                	j	20404812 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:375
	}
	else {
		return 0;
20404810:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:377
	}
}
20404812:	853e                	mv	a0,a5
20404814:	4472                	lw	s0,28(sp)
20404816:	6105                	addi	sp,sp,32
20404818:	8082                	ret

2040481a <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:380

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2040481a:	1101                	addi	sp,sp,-32
2040481c:	ce22                	sw	s0,28(sp)
2040481e:	1000                	addi	s0,sp,32
20404820:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:381
	if (hartid == 0) {
20404824:	fec42783          	lw	a5,-20(s0)
20404828:	e399                	bnez	a5,2040482e <__metal_driver_sifive_plic0_context_ids+0x14>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:382
		return 0;
2040482a:	4781                	li	a5,0
2040482c:	a011                	j	20404830 <__metal_driver_sifive_plic0_context_ids+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:385
	}
	else {
		return -1;
2040482e:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:387
	}
}
20404830:	853e                	mv	a0,a5
20404832:	4472                	lw	s0,28(sp)
20404834:	6105                	addi	sp,sp,32
20404836:	8082                	ret

20404838 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20404838:	7179                	addi	sp,sp,-48
2040483a:	d606                	sw	ra,44(sp)
2040483c:	d422                	sw	s0,40(sp)
2040483e:	1800                	addi	s0,sp,48
20404840:	fca42e23          	sw	a0,-36(s0)
20404844:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404848:	fdc42503          	lw	a0,-36(s0)
2040484c:	3721                	jal	20404754 <__metal_driver_sifive_plic0_control_base>
2040484e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20404852:	fd842783          	lw	a5,-40(s0)
20404856:	00c79713          	slli	a4,a5,0xc
2040485a:	fec42783          	lw	a5,-20(s0)
2040485e:	973e                	add	a4,a4,a5
20404860:	002007b7          	lui	a5,0x200
20404864:	0791                	addi	a5,a5,4
20404866:	97ba                	add	a5,a5,a4
20404868:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
2040486a:	853e                	mv	a0,a5
2040486c:	50b2                	lw	ra,44(sp)
2040486e:	5422                	lw	s0,40(sp)
20404870:	6145                	addi	sp,sp,48
20404872:	8082                	ret

20404874 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20404874:	7179                	addi	sp,sp,-48
20404876:	d606                	sw	ra,44(sp)
20404878:	d422                	sw	s0,40(sp)
2040487a:	1800                	addi	s0,sp,48
2040487c:	fca42e23          	sw	a0,-36(s0)
20404880:	fcb42c23          	sw	a1,-40(s0)
20404884:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404888:	fdc42503          	lw	a0,-36(s0)
2040488c:	35e1                	jal	20404754 <__metal_driver_sifive_plic0_control_base>
2040488e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20404892:	fd842783          	lw	a5,-40(s0)
20404896:	00c79713          	slli	a4,a5,0xc
2040489a:	fec42783          	lw	a5,-20(s0)
2040489e:	973e                	add	a4,a4,a5
204048a0:	002007b7          	lui	a5,0x200
204048a4:	0791                	addi	a5,a5,4
204048a6:	97ba                	add	a5,a5,a4
204048a8:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
204048aa:	fd442783          	lw	a5,-44(s0)
204048ae:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:35
}
204048b0:	0001                	nop
204048b2:	50b2                	lw	ra,44(sp)
204048b4:	5422                	lw	s0,40(sp)
204048b6:	6145                	addi	sp,sp,48
204048b8:	8082                	ret

204048ba <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
204048ba:	7179                	addi	sp,sp,-48
204048bc:	d606                	sw	ra,44(sp)
204048be:	d422                	sw	s0,40(sp)
204048c0:	1800                	addi	s0,sp,48
204048c2:	fca42e23          	sw	a0,-36(s0)
204048c6:	fcb42c23          	sw	a1,-40(s0)
204048ca:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204048ce:	fdc42503          	lw	a0,-36(s0)
204048d2:	3549                	jal	20404754 <__metal_driver_sifive_plic0_control_base>
204048d4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
204048d8:	fd842783          	lw	a5,-40(s0)
204048dc:	00c79713          	slli	a4,a5,0xc
204048e0:	fec42783          	lw	a5,-20(s0)
204048e4:	973e                	add	a4,a4,a5
204048e6:	002007b7          	lui	a5,0x200
204048ea:	97ba                	add	a5,a5,a4
204048ec:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
204048ee:	fd442783          	lw	a5,-44(s0)
204048f2:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
204048f4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
}
204048f6:	853e                	mv	a0,a5
204048f8:	50b2                	lw	ra,44(sp)
204048fa:	5422                	lw	s0,40(sp)
204048fc:	6145                	addi	sp,sp,48
204048fe:	8082                	ret

20404900 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20404900:	7179                	addi	sp,sp,-48
20404902:	d606                	sw	ra,44(sp)
20404904:	d422                	sw	s0,40(sp)
20404906:	1800                	addi	s0,sp,48
20404908:	fca42e23          	sw	a0,-36(s0)
2040490c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404910:	fdc42503          	lw	a0,-36(s0)
20404914:	3581                	jal	20404754 <__metal_driver_sifive_plic0_control_base>
20404916:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
2040491a:	fd842783          	lw	a5,-40(s0)
2040491e:	00c79713          	slli	a4,a5,0xc
20404922:	fec42783          	lw	a5,-20(s0)
20404926:	973e                	add	a4,a4,a5
20404928:	002007b7          	lui	a5,0x200
2040492c:	97ba                	add	a5,a5,a4
2040492e:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20404930:	853e                	mv	a0,a5
20404932:	50b2                	lw	ra,44(sp)
20404934:	5422                	lw	s0,40(sp)
20404936:	6145                	addi	sp,sp,48
20404938:	8082                	ret

2040493a <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
2040493a:	7179                	addi	sp,sp,-48
2040493c:	d606                	sw	ra,44(sp)
2040493e:	d422                	sw	s0,40(sp)
20404940:	1800                	addi	s0,sp,48
20404942:	fca42e23          	sw	a0,-36(s0)
20404946:	fcb42c23          	sw	a1,-40(s0)
2040494a:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2040494e:	fdc42503          	lw	a0,-36(s0)
20404952:	3509                	jal	20404754 <__metal_driver_sifive_plic0_control_base>
20404954:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20404958:	fdc42503          	lw	a0,-36(s0)
2040495c:	35b1                	jal	204047a8 <__metal_driver_sifive_plic0_max_priority>
2040495e:	87aa                	mv	a5,a0
20404960:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20404964:	fe842783          	lw	a5,-24(s0)
20404968:	c785                	beqz	a5,20404990 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
2040496a:	fd442703          	lw	a4,-44(s0)
2040496e:	fe842783          	lw	a5,-24(s0)
20404972:	00f77f63          	bgeu	a4,a5,20404990 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20404976:	fd842783          	lw	a5,-40(s0)
2040497a:	078a                	slli	a5,a5,0x2
2040497c:	873e                	mv	a4,a5
2040497e:	fec42783          	lw	a5,-20(s0)
20404982:	97ba                	add	a5,a5,a4
20404984:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20404986:	fd442783          	lw	a5,-44(s0)
2040498a:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
2040498c:	4781                	li	a5,0
2040498e:	a011                	j	20404992 <__metal_driver_riscv_plic0_set_priority+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20404990:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:72
}
20404992:	853e                	mv	a0,a5
20404994:	50b2                	lw	ra,44(sp)
20404996:	5422                	lw	s0,40(sp)
20404998:	6145                	addi	sp,sp,48
2040499a:	8082                	ret

2040499c <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2040499c:	7179                	addi	sp,sp,-48
2040499e:	d606                	sw	ra,44(sp)
204049a0:	d422                	sw	s0,40(sp)
204049a2:	1800                	addi	s0,sp,48
204049a4:	fca42e23          	sw	a0,-36(s0)
204049a8:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204049ac:	fdc42503          	lw	a0,-36(s0)
204049b0:	3355                	jal	20404754 <__metal_driver_sifive_plic0_control_base>
204049b2:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
204049b6:	fd842783          	lw	a5,-40(s0)
204049ba:	078a                	slli	a5,a5,0x2
204049bc:	873e                	mv	a4,a5
204049be:	fec42783          	lw	a5,-20(s0)
204049c2:	97ba                	add	a5,a5,a4
204049c4:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
204049c6:	853e                	mv	a0,a5
204049c8:	50b2                	lw	ra,44(sp)
204049ca:	5422                	lw	s0,40(sp)
204049cc:	6145                	addi	sp,sp,48
204049ce:	8082                	ret

204049d0 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
204049d0:	7179                	addi	sp,sp,-48
204049d2:	d606                	sw	ra,44(sp)
204049d4:	d422                	sw	s0,40(sp)
204049d6:	1800                	addi	s0,sp,48
204049d8:	fca42e23          	sw	a0,-36(s0)
204049dc:	fcb42c23          	sw	a1,-40(s0)
204049e0:	fcc42a23          	sw	a2,-44(s0)
204049e4:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204049e8:	fdc42503          	lw	a0,-36(s0)
204049ec:	33a5                	jal	20404754 <__metal_driver_sifive_plic0_control_base>
204049ee:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
204049f2:	fd842783          	lw	a5,-40(s0)
204049f6:	00779713          	slli	a4,a5,0x7
204049fa:	fec42783          	lw	a5,-20(s0)
204049fe:	97ba                	add	a5,a5,a4
20404a00:	fd442703          	lw	a4,-44(s0)
20404a04:	8715                	srai	a4,a4,0x5
20404a06:	070a                	slli	a4,a4,0x2
20404a08:	973e                	add	a4,a4,a5
20404a0a:	6789                	lui	a5,0x2
20404a0c:	97ba                	add	a5,a5,a4
20404a0e:	439c                	lw	a5,0(a5)
20404a10:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20404a14:	fd042783          	lw	a5,-48(s0)
20404a18:	cf81                	beqz	a5,20404a30 <__metal_plic0_enable+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20404a1a:	fd442783          	lw	a5,-44(s0)
20404a1e:	8bfd                	andi	a5,a5,31
20404a20:	4705                	li	a4,1
20404a22:	00f717b3          	sll	a5,a4,a5
20404a26:	873e                	mv	a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20404a28:	fe842783          	lw	a5,-24(s0)
20404a2c:	8fd9                	or	a5,a5,a4
20404a2e:	a829                	j	20404a48 <__metal_plic0_enable+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20404a30:	fd442783          	lw	a5,-44(s0)
20404a34:	8bfd                	andi	a5,a5,31
20404a36:	4705                	li	a4,1
20404a38:	00f717b3          	sll	a5,a4,a5
20404a3c:	fff7c793          	not	a5,a5
20404a40:	873e                	mv	a4,a5
20404a42:	fe842783          	lw	a5,-24(s0)
20404a46:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20404a48:	fd842703          	lw	a4,-40(s0)
20404a4c:	00771693          	slli	a3,a4,0x7
20404a50:	fec42703          	lw	a4,-20(s0)
20404a54:	9736                	add	a4,a4,a3
20404a56:	fd442683          	lw	a3,-44(s0)
20404a5a:	8695                	srai	a3,a3,0x5
20404a5c:	068a                	slli	a3,a3,0x2
20404a5e:	96ba                	add	a3,a3,a4
20404a60:	6709                	lui	a4,0x2
20404a62:	9736                	add	a4,a4,a3
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20404a64:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20404a66:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103
}
20404a68:	853e                	mv	a0,a5
20404a6a:	50b2                	lw	ra,44(sp)
20404a6c:	5422                	lw	s0,40(sp)
20404a6e:	6145                	addi	sp,sp,48
20404a70:	8082                	ret

20404a72 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20404a72:	1101                	addi	sp,sp,-32
20404a74:	ce06                	sw	ra,28(sp)
20404a76:	cc22                	sw	s0,24(sp)
20404a78:	1000                	addi	s0,sp,32
20404a7a:	fea42623          	sw	a0,-20(s0)
20404a7e:	feb42423          	sw	a1,-24(s0)
20404a82:	12c00513          	li	a0,300
20404a86:	2de020ef          	jal	ra,20406d64 <metal_shutdown>

20404a8a <__metal_plic0_handler>:
__metal_plic0_handler():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20404a8a:	7179                	addi	sp,sp,-48
20404a8c:	d606                	sw	ra,44(sp)
20404a8e:	d422                	sw	s0,40(sp)
20404a90:	1800                	addi	s0,sp,48
20404a92:	fca42e23          	sw	a0,-36(s0)
20404a96:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20404a9a:	fd842783          	lw	a5,-40(s0)
20404a9e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20404aa2:	b50fe0ef          	jal	ra,20402df2 <__metal_myhart_id>
20404aa6:	87aa                	mv	a5,a0
20404aa8:	853e                	mv	a0,a5
20404aaa:	3b85                	jal	2040481a <__metal_driver_sifive_plic0_context_ids>
20404aac:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20404ab0:	fe842583          	lw	a1,-24(s0)
20404ab4:	fec42503          	lw	a0,-20(s0)
20404ab8:	3341                	jal	20404838 <__metal_plic0_claim_interrupt>
20404aba:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20404abe:	fec42503          	lw	a0,-20(s0)
20404ac2:	cbdff0ef          	jal	ra,2040477e <__metal_driver_sifive_plic0_num_interrupts>
20404ac6:	87aa                	mv	a5,a0
20404ac8:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20404acc:	fe442703          	lw	a4,-28(s0)
20404ad0:	fe042783          	lw	a5,-32(s0)
20404ad4:	04f77263          	bgeu	a4,a5,20404b18 <__metal_plic0_handler+0x8e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20404ad8:	fec42703          	lw	a4,-20(s0)
20404adc:	fe442783          	lw	a5,-28(s0)
20404ae0:	078a                	slli	a5,a5,0x2
20404ae2:	97ba                	add	a5,a5,a4
20404ae4:	479c                	lw	a5,8(a5)
20404ae6:	cb8d                	beqz	a5,20404b18 <__metal_plic0_handler+0x8e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20404ae8:	fec42703          	lw	a4,-20(s0)
20404aec:	fe442783          	lw	a5,-28(s0)
20404af0:	078a                	slli	a5,a5,0x2
20404af2:	97ba                	add	a5,a5,a4
20404af4:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20404af8:	fe442603          	lw	a2,-28(s0)
20404afc:	fec42683          	lw	a3,-20(s0)
20404b00:	fe442703          	lw	a4,-28(s0)
20404b04:	87ba                	mv	a5,a4
20404b06:	0786                	slli	a5,a5,0x1
20404b08:	97ba                	add	a5,a5,a4
20404b0a:	078e                	slli	a5,a5,0x3
20404b0c:	97b6                	add	a5,a5,a3
20404b0e:	0f07a783          	lw	a5,240(a5)
20404b12:	85be                	mv	a1,a5
20404b14:	8532                	mv	a0,a2
20404b16:	9802                	jalr	a6
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20404b18:	fe442603          	lw	a2,-28(s0)
20404b1c:	fe842583          	lw	a1,-24(s0)
20404b20:	fec42503          	lw	a0,-20(s0)
20404b24:	3b81                	jal	20404874 <__metal_plic0_complete_interrupt>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:121
}
20404b26:	0001                	nop
20404b28:	50b2                	lw	ra,44(sp)
20404b2a:	5422                	lw	s0,40(sp)
20404b2c:	6145                	addi	sp,sp,48
20404b2e:	8082                	ret

20404b30 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20404b30:	7139                	addi	sp,sp,-64
20404b32:	de06                	sw	ra,60(sp)
20404b34:	dc22                	sw	s0,56(sp)
20404b36:	0080                	addi	s0,sp,64
20404b38:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404b3c:	fcc42783          	lw	a5,-52(s0)
20404b40:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20404b44:	fe442783          	lw	a5,-28(s0)
20404b48:	43dc                	lw	a5,4(a5)
20404b4a:	12079a63          	bnez	a5,20404c7e <__metal_driver_riscv_plic0_init+0x14e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20404b4e:	fe042623          	sw	zero,-20(s0)
20404b52:	aa31                	j	20404c6e <__metal_driver_riscv_plic0_init+0x13e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20404b54:	fcc42503          	lw	a0,-52(s0)
20404b58:	c27ff0ef          	jal	ra,2040477e <__metal_driver_sifive_plic0_num_interrupts>
20404b5c:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20404b60:	fec42583          	lw	a1,-20(s0)
20404b64:	fcc42503          	lw	a0,-52(s0)
20404b68:	c69ff0ef          	jal	ra,204047d0 <__metal_driver_sifive_plic0_interrupt_parents>
20404b6c:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20404b70:	fec42583          	lw	a1,-20(s0)
20404b74:	fcc42503          	lw	a0,-52(s0)
20404b78:	c81ff0ef          	jal	ra,204047f8 <__metal_driver_sifive_plic0_interrupt_lines>
20404b7c:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20404b80:	fdc42783          	lw	a5,-36(s0)
20404b84:	439c                	lw	a5,0(a5)
20404b86:	439c                	lw	a5,0(a5)
20404b88:	fdc42503          	lw	a0,-36(s0)
20404b8c:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20404b8e:	fe042423          	sw	zero,-24(s0)
20404b92:	a885                	j	20404c02 <__metal_driver_riscv_plic0_init+0xd2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20404b94:	4681                	li	a3,0
20404b96:	fe842603          	lw	a2,-24(s0)
20404b9a:	fec42583          	lw	a1,-20(s0)
20404b9e:	fe442503          	lw	a0,-28(s0)
20404ba2:	353d                	jal	204049d0 <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20404ba4:	fe842703          	lw	a4,-24(s0)
20404ba8:	fe042783          	lw	a5,-32(s0)
20404bac:	04f75663          	bge	a4,a5,20404bf8 <__metal_driver_riscv_plic0_init+0xc8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20404bb0:	4601                	li	a2,0
20404bb2:	fe842583          	lw	a1,-24(s0)
20404bb6:	fcc42503          	lw	a0,-52(s0)
20404bba:	3341                	jal	2040493a <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20404bbc:	fe442703          	lw	a4,-28(s0)
20404bc0:	fe842783          	lw	a5,-24(s0)
20404bc4:	078a                	slli	a5,a5,0x2
20404bc6:	97ba                	add	a5,a5,a4
20404bc8:	0007a423          	sw	zero,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20404bcc:	fe442683          	lw	a3,-28(s0)
20404bd0:	fe842703          	lw	a4,-24(s0)
20404bd4:	87ba                	mv	a5,a4
20404bd6:	0786                	slli	a5,a5,0x1
20404bd8:	97ba                	add	a5,a5,a4
20404bda:	078e                	slli	a5,a5,0x3
20404bdc:	97b6                	add	a5,a5,a3
20404bde:	0e07a623          	sw	zero,236(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20404be2:	fe442683          	lw	a3,-28(s0)
20404be6:	fe842703          	lw	a4,-24(s0)
20404bea:	87ba                	mv	a5,a4
20404bec:	0786                	slli	a5,a5,0x1
20404bee:	97ba                	add	a5,a5,a4
20404bf0:	078e                	slli	a5,a5,0x3
20404bf2:	97b6                	add	a5,a5,a3
20404bf4:	0e07a823          	sw	zero,240(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20404bf8:	fe842783          	lw	a5,-24(s0)
20404bfc:	0785                	addi	a5,a5,1
20404bfe:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20404c02:	fe842703          	lw	a4,-24(s0)
20404c06:	3ff00793          	li	a5,1023
20404c0a:	f8e7d5e3          	bge	a5,a4,20404b94 <__metal_driver_riscv_plic0_init+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20404c0e:	4601                	li	a2,0
20404c10:	fec42583          	lw	a1,-20(s0)
20404c14:	fcc42503          	lw	a0,-52(s0)
20404c18:	ca3ff0ef          	jal	ra,204048ba <__metal_plic0_set_threshold>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20404c1c:	fdc42783          	lw	a5,-36(s0)
20404c20:	439c                	lw	a5,0(a5)
20404c22:	4fdc                	lw	a5,28(a5)
20404c24:	fe442683          	lw	a3,-28(s0)
20404c28:	4601                	li	a2,0
20404c2a:	fd842583          	lw	a1,-40(s0)
20404c2e:	fdc42503          	lw	a0,-36(s0)
20404c32:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20404c34:	fdc42783          	lw	a5,-36(s0)
20404c38:	439c                	lw	a5,0(a5)
20404c3a:	4fd8                	lw	a4,28(a5)
20404c3c:	fe442683          	lw	a3,-28(s0)
20404c40:	204057b7          	lui	a5,0x20405
20404c44:	a8a78613          	addi	a2,a5,-1398 # 20404a8a <__metal_plic0_handler>
20404c48:	fd842583          	lw	a1,-40(s0)
20404c4c:	fdc42503          	lw	a0,-36(s0)
20404c50:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20404c52:	fdc42783          	lw	a5,-36(s0)
20404c56:	439c                	lw	a5,0(a5)
20404c58:	53dc                	lw	a5,36(a5)
20404c5a:	fd842583          	lw	a1,-40(s0)
20404c5e:	fdc42503          	lw	a0,-36(s0)
20404c62:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20404c64:	fec42783          	lw	a5,-20(s0)
20404c68:	0785                	addi	a5,a5,1
20404c6a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20404c6e:	fec42783          	lw	a5,-20(s0)
20404c72:	eef051e3          	blez	a5,20404b54 <__metal_driver_riscv_plic0_init+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20404c76:	fe442783          	lw	a5,-28(s0)
20404c7a:	4705                	li	a4,1
20404c7c:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20404c7e:	0001                	nop
20404c80:	50f2                	lw	ra,60(sp)
20404c82:	5462                	lw	s0,56(sp)
20404c84:	6121                	addi	sp,sp,64
20404c86:	8082                	ret

20404c88 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20404c88:	7179                	addi	sp,sp,-48
20404c8a:	d606                	sw	ra,44(sp)
20404c8c:	d422                	sw	s0,40(sp)
20404c8e:	1800                	addi	s0,sp,48
20404c90:	fca42e23          	sw	a0,-36(s0)
20404c94:	fcb42c23          	sw	a1,-40(s0)
20404c98:	fcc42a23          	sw	a2,-44(s0)
20404c9c:	fcd42823          	sw	a3,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404ca0:	fdc42783          	lw	a5,-36(s0)
20404ca4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404ca8:	fdc42503          	lw	a0,-36(s0)
20404cac:	ad3ff0ef          	jal	ra,2040477e <__metal_driver_sifive_plic0_num_interrupts>
20404cb0:	872a                	mv	a4,a0
20404cb2:	fd842783          	lw	a5,-40(s0)
20404cb6:	00e7c463          	blt	a5,a4,20404cbe <__metal_driver_riscv_plic0_register+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20404cba:	57fd                	li	a5,-1
20404cbc:	a051                	j	20404d40 <__metal_driver_riscv_plic0_register+0xb8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20404cbe:	fd442783          	lw	a5,-44(s0)
20404cc2:	cf9d                	beqz	a5,20404d00 <__metal_driver_riscv_plic0_register+0x78>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20404cc4:	4609                	li	a2,2
20404cc6:	fd842583          	lw	a1,-40(s0)
20404cca:	fdc42503          	lw	a0,-36(s0)
20404cce:	c6dff0ef          	jal	ra,2040493a <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20404cd2:	fec42703          	lw	a4,-20(s0)
20404cd6:	fd842783          	lw	a5,-40(s0)
20404cda:	078a                	slli	a5,a5,0x2
20404cdc:	97ba                	add	a5,a5,a4
20404cde:	fd442703          	lw	a4,-44(s0)
20404ce2:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20404ce4:	fec42683          	lw	a3,-20(s0)
20404ce8:	fd842703          	lw	a4,-40(s0)
20404cec:	87ba                	mv	a5,a4
20404cee:	0786                	slli	a5,a5,0x1
20404cf0:	97ba                	add	a5,a5,a4
20404cf2:	078e                	slli	a5,a5,0x3
20404cf4:	97b6                	add	a5,a5,a3
20404cf6:	fd042703          	lw	a4,-48(s0)
20404cfa:	0ee7a823          	sw	a4,240(a5)
20404cfe:	a081                	j	20404d3e <__metal_driver_riscv_plic0_register+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20404d00:	4605                	li	a2,1
20404d02:	fd842583          	lw	a1,-40(s0)
20404d06:	fdc42503          	lw	a0,-36(s0)
20404d0a:	c31ff0ef          	jal	ra,2040493a <__metal_driver_riscv_plic0_set_priority>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20404d0e:	fec42703          	lw	a4,-20(s0)
20404d12:	fd842783          	lw	a5,-40(s0)
20404d16:	078a                	slli	a5,a5,0x2
20404d18:	97ba                	add	a5,a5,a4
20404d1a:	20405737          	lui	a4,0x20405
20404d1e:	a7270713          	addi	a4,a4,-1422 # 20404a72 <__metal_plic0_default_handler>
20404d22:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20404d24:	fec42683          	lw	a3,-20(s0)
20404d28:	fd842703          	lw	a4,-40(s0)
20404d2c:	87ba                	mv	a5,a4
20404d2e:	0786                	slli	a5,a5,0x1
20404d30:	97ba                	add	a5,a5,a4
20404d32:	078e                	slli	a5,a5,0x3
20404d34:	97b6                	add	a5,a5,a3
20404d36:	fd042703          	lw	a4,-48(s0)
20404d3a:	0ee7a623          	sw	a4,236(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20404d3e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:185
}
20404d40:	853e                	mv	a0,a5
20404d42:	50b2                	lw	ra,44(sp)
20404d44:	5422                	lw	s0,40(sp)
20404d46:	6145                	addi	sp,sp,48
20404d48:	8082                	ret

20404d4a <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20404d4a:	7179                	addi	sp,sp,-48
20404d4c:	d606                	sw	ra,44(sp)
20404d4e:	d422                	sw	s0,40(sp)
20404d50:	1800                	addi	s0,sp,48
20404d52:	fca42e23          	sw	a0,-36(s0)
20404d56:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404d5a:	fdc42783          	lw	a5,-36(s0)
20404d5e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404d62:	fdc42503          	lw	a0,-36(s0)
20404d66:	a19ff0ef          	jal	ra,2040477e <__metal_driver_sifive_plic0_num_interrupts>
20404d6a:	872a                	mv	a4,a0
20404d6c:	fd842783          	lw	a5,-40(s0)
20404d70:	00e7c463          	blt	a5,a4,20404d78 <__metal_driver_riscv_plic0_enable+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20404d74:	57fd                	li	a5,-1
20404d76:	a829                	j	20404d90 <__metal_driver_riscv_plic0_enable+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20404d78:	87afe0ef          	jal	ra,20402df2 <__metal_myhart_id>
20404d7c:	87aa                	mv	a5,a0
20404d7e:	4685                	li	a3,1
20404d80:	fd842603          	lw	a2,-40(s0)
20404d84:	85be                	mv	a1,a5
20404d86:	fec42503          	lw	a0,-20(s0)
20404d8a:	c47ff0ef          	jal	ra,204049d0 <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20404d8e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:197
}
20404d90:	853e                	mv	a0,a5
20404d92:	50b2                	lw	ra,44(sp)
20404d94:	5422                	lw	s0,40(sp)
20404d96:	6145                	addi	sp,sp,48
20404d98:	8082                	ret

20404d9a <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20404d9a:	7179                	addi	sp,sp,-48
20404d9c:	d606                	sw	ra,44(sp)
20404d9e:	d422                	sw	s0,40(sp)
20404da0:	1800                	addi	s0,sp,48
20404da2:	fca42e23          	sw	a0,-36(s0)
20404da6:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404daa:	fdc42783          	lw	a5,-36(s0)
20404dae:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404db2:	fdc42503          	lw	a0,-36(s0)
20404db6:	9c9ff0ef          	jal	ra,2040477e <__metal_driver_sifive_plic0_num_interrupts>
20404dba:	872a                	mv	a4,a0
20404dbc:	fd842783          	lw	a5,-40(s0)
20404dc0:	00e7c463          	blt	a5,a4,20404dc8 <__metal_driver_riscv_plic0_disable+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20404dc4:	57fd                	li	a5,-1
20404dc6:	a829                	j	20404de0 <__metal_driver_riscv_plic0_disable+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20404dc8:	82afe0ef          	jal	ra,20402df2 <__metal_myhart_id>
20404dcc:	87aa                	mv	a5,a0
20404dce:	4681                	li	a3,0
20404dd0:	fd842603          	lw	a2,-40(s0)
20404dd4:	85be                	mv	a1,a5
20404dd6:	fec42503          	lw	a0,-20(s0)
20404dda:	bf7ff0ef          	jal	ra,204049d0 <__metal_plic0_enable>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20404dde:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:208
}
20404de0:	853e                	mv	a0,a5
20404de2:	50b2                	lw	ra,44(sp)
20404de4:	5422                	lw	s0,40(sp)
20404de6:	6145                	addi	sp,sp,48
20404de8:	8082                	ret

20404dea <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20404dea:	1101                	addi	sp,sp,-32
20404dec:	ce06                	sw	ra,28(sp)
20404dee:	cc22                	sw	s0,24(sp)
20404df0:	1000                	addi	s0,sp,32
20404df2:	fea42623          	sw	a0,-20(s0)
20404df6:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20404dfa:	ff9fd0ef          	jal	ra,20402df2 <__metal_myhart_id>
20404dfe:	87aa                	mv	a5,a0
20404e00:	fe842603          	lw	a2,-24(s0)
20404e04:	85be                	mv	a1,a5
20404e06:	fec42503          	lw	a0,-20(s0)
20404e0a:	ab1ff0ef          	jal	ra,204048ba <__metal_plic0_set_threshold>
20404e0e:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20404e10:	853e                	mv	a0,a5
20404e12:	40f2                	lw	ra,28(sp)
20404e14:	4462                	lw	s0,24(sp)
20404e16:	6105                	addi	sp,sp,32
20404e18:	8082                	ret

20404e1a <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20404e1a:	1101                	addi	sp,sp,-32
20404e1c:	ce06                	sw	ra,28(sp)
20404e1e:	cc22                	sw	s0,24(sp)
20404e20:	1000                	addi	s0,sp,32
20404e22:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20404e26:	fcdfd0ef          	jal	ra,20402df2 <__metal_myhart_id>
20404e2a:	87aa                	mv	a5,a0
20404e2c:	85be                	mv	a1,a5
20404e2e:	fec42503          	lw	a0,-20(s0)
20404e32:	acfff0ef          	jal	ra,20404900 <__metal_plic0_get_threshold>
20404e36:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:219
}
20404e38:	853e                	mv	a0,a5
20404e3a:	40f2                	lw	ra,28(sp)
20404e3c:	4462                	lw	s0,24(sp)
20404e3e:	6105                	addi	sp,sp,32
20404e40:	8082                	ret

20404e42 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20404e42:	7179                	addi	sp,sp,-48
20404e44:	d606                	sw	ra,44(sp)
20404e46:	d422                	sw	s0,40(sp)
20404e48:	1800                	addi	s0,sp,48
20404e4a:	fca42e23          	sw	a0,-36(s0)
20404e4e:	fcb42c23          	sw	a1,-40(s0)
20404e52:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20404e56:	fe042223          	sw	zero,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404e5a:	fdc42783          	lw	a5,-36(s0)
20404e5e:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404e62:	fdc42503          	lw	a0,-36(s0)
20404e66:	919ff0ef          	jal	ra,2040477e <__metal_driver_sifive_plic0_num_interrupts>
20404e6a:	872a                	mv	a4,a0
20404e6c:	fd442783          	lw	a5,-44(s0)
20404e70:	00e7c863          	blt	a5,a4,20404e80 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20404e74:	57fd                	li	a5,-1
20404e76:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20404e7a:	fe442783          	lw	a5,-28(s0)
20404e7e:	a899                	j	20404ed4 <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20404e80:	fe042623          	sw	zero,-20(s0)
20404e84:	a099                	j	20404eca <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20404e86:	fec42783          	lw	a5,-20(s0)
20404e8a:	c795                	beqz	a5,20404eb6 <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20404e8c:	4685                	li	a3,1
20404e8e:	fd442603          	lw	a2,-44(s0)
20404e92:	fec42583          	lw	a1,-20(s0)
20404e96:	fe842503          	lw	a0,-24(s0)
20404e9a:	b37ff0ef          	jal	ra,204049d0 <__metal_plic0_enable>
20404e9e:	87aa                	mv	a5,a0
20404ea0:	0017f713          	andi	a4,a5,1
20404ea4:	fec42783          	lw	a5,-20(s0)
20404ea8:	00f71733          	sll	a4,a4,a5
20404eac:	fe442783          	lw	a5,-28(s0)
20404eb0:	8fd9                	or	a5,a5,a4
20404eb2:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20404eb6:	fec42783          	lw	a5,-20(s0)
20404eba:	0785                	addi	a5,a5,1
20404ebc:	fef42623          	sw	a5,-20(s0)
20404ec0:	fd842783          	lw	a5,-40(s0)
20404ec4:	8385                	srli	a5,a5,0x1
20404ec6:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20404eca:	fd842783          	lw	a5,-40(s0)
20404ece:	ffc5                	bnez	a5,20404e86 <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20404ed0:	fe442783          	lw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20404ed4:	853e                	mv	a0,a5
20404ed6:	50b2                	lw	ra,44(sp)
20404ed8:	5422                	lw	s0,40(sp)
20404eda:	6145                	addi	sp,sp,48
20404edc:	8082                	ret

20404ede <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20404ede:	7179                	addi	sp,sp,-48
20404ee0:	d606                	sw	ra,44(sp)
20404ee2:	d422                	sw	s0,40(sp)
20404ee4:	1800                	addi	s0,sp,48
20404ee6:	fca42e23          	sw	a0,-36(s0)
20404eea:	fcb42c23          	sw	a1,-40(s0)
20404eee:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20404ef2:	fe042223          	sw	zero,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404ef6:	fdc42783          	lw	a5,-36(s0)
20404efa:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404efe:	fdc42503          	lw	a0,-36(s0)
20404f02:	87dff0ef          	jal	ra,2040477e <__metal_driver_sifive_plic0_num_interrupts>
20404f06:	872a                	mv	a4,a0
20404f08:	fd442783          	lw	a5,-44(s0)
20404f0c:	00e7c863          	blt	a5,a4,20404f1c <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20404f10:	57fd                	li	a5,-1
20404f12:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20404f16:	fe442783          	lw	a5,-28(s0)
20404f1a:	a899                	j	20404f70 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20404f1c:	fe042623          	sw	zero,-20(s0)
20404f20:	a099                	j	20404f66 <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20404f22:	fec42783          	lw	a5,-20(s0)
20404f26:	c795                	beqz	a5,20404f52 <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20404f28:	4681                	li	a3,0
20404f2a:	fd442603          	lw	a2,-44(s0)
20404f2e:	fec42583          	lw	a1,-20(s0)
20404f32:	fe842503          	lw	a0,-24(s0)
20404f36:	a9bff0ef          	jal	ra,204049d0 <__metal_plic0_enable>
20404f3a:	87aa                	mv	a5,a0
20404f3c:	0017f713          	andi	a4,a5,1
20404f40:	fec42783          	lw	a5,-20(s0)
20404f44:	00f71733          	sll	a4,a4,a5
20404f48:	fe442783          	lw	a5,-28(s0)
20404f4c:	8fd9                	or	a5,a5,a4
20404f4e:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20404f52:	fec42783          	lw	a5,-20(s0)
20404f56:	0785                	addi	a5,a5,1
20404f58:	fef42623          	sw	a5,-20(s0)
20404f5c:	fd842783          	lw	a5,-40(s0)
20404f60:	8385                	srli	a5,a5,0x1
20404f62:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20404f66:	fd842783          	lw	a5,-40(s0)
20404f6a:	ffc5                	bnez	a5,20404f22 <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20404f6c:	fe442783          	lw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20404f70:	853e                	mv	a0,a5
20404f72:	50b2                	lw	ra,44(sp)
20404f74:	5422                	lw	s0,40(sp)
20404f76:	6145                	addi	sp,sp,48
20404f78:	8082                	ret

20404f7a <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20404f7a:	7179                	addi	sp,sp,-48
20404f7c:	d606                	sw	ra,44(sp)
20404f7e:	d422                	sw	s0,40(sp)
20404f80:	1800                	addi	s0,sp,48
20404f82:	fca42e23          	sw	a0,-36(s0)
20404f86:	fcb42c23          	sw	a1,-40(s0)
20404f8a:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20404f8e:	fe042423          	sw	zero,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20404f92:	fe042623          	sw	zero,-20(s0)
20404f96:	a091                	j	20404fda <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20404f98:	fec42783          	lw	a5,-20(s0)
20404f9c:	c78d                	beqz	a5,20404fc6 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20404f9e:	fd442603          	lw	a2,-44(s0)
20404fa2:	fec42583          	lw	a1,-20(s0)
20404fa6:	fdc42503          	lw	a0,-36(s0)
20404faa:	911ff0ef          	jal	ra,204048ba <__metal_plic0_set_threshold>
20404fae:	87aa                	mv	a5,a0
20404fb0:	0017f713          	andi	a4,a5,1
20404fb4:	fec42783          	lw	a5,-20(s0)
20404fb8:	00f71733          	sll	a4,a4,a5
20404fbc:	fe842783          	lw	a5,-24(s0)
20404fc0:	8fd9                	or	a5,a5,a4
20404fc2:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20404fc6:	fec42783          	lw	a5,-20(s0)
20404fca:	0785                	addi	a5,a5,1
20404fcc:	fef42623          	sw	a5,-20(s0)
20404fd0:	fd842783          	lw	a5,-40(s0)
20404fd4:	8385                	srli	a5,a5,0x1
20404fd6:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20404fda:	fd842783          	lw	a5,-40(s0)
20404fde:	ffcd                	bnez	a5,20404f98 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20404fe0:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:281
}
20404fe4:	853e                	mv	a0,a5
20404fe6:	50b2                	lw	ra,44(sp)
20404fe8:	5422                	lw	s0,40(sp)
20404fea:	6145                	addi	sp,sp,48
20404fec:	8082                	ret

20404fee <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20404fee:	1101                	addi	sp,sp,-32
20404ff0:	ce06                	sw	ra,28(sp)
20404ff2:	cc22                	sw	s0,24(sp)
20404ff4:	1000                	addi	s0,sp,32
20404ff6:	fea42623          	sw	a0,-20(s0)
20404ffa:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20404ffe:	fe842583          	lw	a1,-24(s0)
20405002:	fec42503          	lw	a0,-20(s0)
20405006:	8fbff0ef          	jal	ra,20404900 <__metal_plic0_get_threshold>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
2040500a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:287
}
2040500c:	853e                	mv	a0,a5
2040500e:	40f2                	lw	ra,28(sp)
20405010:	4462                	lw	s0,24(sp)
20405012:	6105                	addi	sp,sp,32
20405014:	8082                	ret

20405016 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1101



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20405016:	1101                	addi	sp,sp,-32
20405018:	ce22                	sw	s0,28(sp)
2040501a:	1000                	addi	s0,sp,32
2040501c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1102
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20405020:	800007b7          	lui	a5,0x80000
20405024:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe8e8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1103
}
20405028:	853e                	mv	a0,a5
2040502a:	4472                	lw	s0,28(sp)
2040502c:	6105                	addi	sp,sp,32
2040502e:	8082                	ret

20405030 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1106

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20405030:	1101                	addi	sp,sp,-32
20405032:	ce22                	sw	s0,28(sp)
20405034:	1000                	addi	s0,sp,32
20405036:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1107
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2040503a:	82c18793          	addi	a5,gp,-2004 # 80000aac <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1108
}
2040503e:	853e                	mv	a0,a5
20405040:	4472                	lw	s0,28(sp)
20405042:	6105                	addi	sp,sp,32
20405044:	8082                	ret

20405046 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1116
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20405046:	1101                	addi	sp,sp,-32
20405048:	ce22                	sw	s0,28(sp)
2040504a:	1000                	addi	s0,sp,32
2040504c:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1117
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20405050:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1118
}
20405052:	853e                	mv	a0,a5
20405054:	4472                	lw	s0,28(sp)
20405056:	6105                	addi	sp,sp,32
20405058:	8082                	ret

2040505a <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
2040505a:	1141                	addi	sp,sp,-16
2040505c:	c622                	sw	s0,12(sp)
2040505e:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405060:	84018793          	addi	a5,gp,-1984 # 80000ac0 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
20405064:	853e                	mv	a0,a5
20405066:	4432                	lw	s0,12(sp)
20405068:	0141                	addi	sp,sp,16
2040506a:	8082                	ret

2040506c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
2040506c:	7139                	addi	sp,sp,-64
2040506e:	de06                	sw	ra,60(sp)
20405070:	dc22                	sw	s0,56(sp)
20405072:	0080                	addi	s0,sp,64
20405074:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405078:	fcc42503          	lw	a0,-52(s0)
2040507c:	3f69                	jal	20405016 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
2040507e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20405082:	fcc42503          	lw	a0,-52(s0)
20405086:	37c1                	jal	20405046 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20405088:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
2040508c:	fcc42503          	lw	a0,-52(s0)
20405090:	3745                	jal	20405030 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20405092:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405096:	37d1                	jal	2040505a <__metal_driver_sifive_fe310_g000_prci_vtable>
20405098:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
2040509c:	fe042783          	lw	a5,-32(s0)
204050a0:	439c                	lw	a5,0(a5)
204050a2:	fe842583          	lw	a1,-24(s0)
204050a6:	fe442503          	lw	a0,-28(s0)
204050aa:	9782                	jalr	a5
204050ac:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
204050b0:	fdc42703          	lw	a4,-36(s0)
204050b4:	400007b7          	lui	a5,0x40000
204050b8:	8ff9                	and	a5,a5,a4
204050ba:	e399                	bnez	a5,204050c0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
204050bc:	57fd                	li	a5,-1
204050be:	a025                	j	204050e6 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
204050c0:	fdc42783          	lw	a5,-36(s0)
204050c4:	0007c463          	bltz	a5,204050cc <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
204050c8:	57fd                	li	a5,-1
204050ca:	a831                	j	204050e6 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
204050cc:	fec42503          	lw	a0,-20(s0)
204050d0:	297010ef          	jal	ra,20406b66 <metal_clock_get_rate_hz>
204050d4:	87aa                	mv	a5,a0
204050d6:	873e                	mv	a4,a5
204050d8:	fdc42783          	lw	a5,-36(s0)
204050dc:	03f7f793          	andi	a5,a5,63
204050e0:	0785                	addi	a5,a5,1
204050e2:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
204050e6:	853e                	mv	a0,a5
204050e8:	50f2                	lw	ra,60(sp)
204050ea:	5462                	lw	s0,56(sp)
204050ec:	6121                	addi	sp,sp,64
204050ee:	8082                	ret

204050f0 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
204050f0:	1101                	addi	sp,sp,-32
204050f2:	ce06                	sw	ra,28(sp)
204050f4:	cc22                	sw	s0,24(sp)
204050f6:	1000                	addi	s0,sp,32
204050f8:	fea42623          	sw	a0,-20(s0)
204050fc:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20405100:	fec42503          	lw	a0,-20(s0)
20405104:	37a5                	jal	2040506c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20405106:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20405108:	853e                	mv	a0,a5
2040510a:	40f2                	lw	ra,28(sp)
2040510c:	4462                	lw	s0,24(sp)
2040510e:	6105                	addi	sp,sp,32
20405110:	8082                	ret

20405112 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1124
{
20405112:	1101                	addi	sp,sp,-32
20405114:	ce22                	sw	s0,28(sp)
20405116:	1000                	addi	s0,sp,32
20405118:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1125
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
2040511c:	800007b7          	lui	a5,0x80000
20405120:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8dc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1126
}
20405124:	853e                	mv	a0,a5
20405126:	4472                	lw	s0,28(sp)
20405128:	6105                	addi	sp,sp,32
2040512a:	8082                	ret

2040512c <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1129
{
2040512c:	1101                	addi	sp,sp,-32
2040512e:	ce22                	sw	s0,28(sp)
20405130:	1000                	addi	s0,sp,32
20405132:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1130
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405136:	82c18793          	addi	a5,gp,-2004 # 80000aac <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1131
}
2040513a:	853e                	mv	a0,a5
2040513c:	4472                	lw	s0,28(sp)
2040513e:	6105                	addi	sp,sp,32
20405140:	8082                	ret

20405142 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1134
{
20405142:	1101                	addi	sp,sp,-32
20405144:	ce22                	sw	s0,28(sp)
20405146:	1000                	addi	s0,sp,32
20405148:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1135
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
2040514c:	4791                	li	a5,4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1136
}
2040514e:	853e                	mv	a0,a5
20405150:	4472                	lw	s0,28(sp)
20405152:	6105                	addi	sp,sp,32
20405154:	8082                	ret

20405156 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
20405156:	1141                	addi	sp,sp,-16
20405158:	c622                	sw	s0,12(sp)
2040515a:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2040515c:	84018793          	addi	a5,gp,-1984 # 80000ac0 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
20405160:	853e                	mv	a0,a5
20405162:	4432                	lw	s0,12(sp)
20405164:	0141                	addi	sp,sp,16
20405166:	8082                	ret

20405168 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405168:	7139                	addi	sp,sp,-64
2040516a:	de06                	sw	ra,60(sp)
2040516c:	dc22                	sw	s0,56(sp)
2040516e:	0080                	addi	s0,sp,64
20405170:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405174:	fcc42503          	lw	a0,-52(s0)
20405178:	3f69                	jal	20405112 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
2040517a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
2040517e:	fcc42503          	lw	a0,-52(s0)
20405182:	37c1                	jal	20405142 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20405184:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20405188:	fcc42503          	lw	a0,-52(s0)
2040518c:	3745                	jal	2040512c <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
2040518e:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405192:	37d1                	jal	20405156 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405194:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20405198:	fe042783          	lw	a5,-32(s0)
2040519c:	439c                	lw	a5,0(a5)
2040519e:	fe842583          	lw	a1,-24(s0)
204051a2:	fe442503          	lw	a0,-28(s0)
204051a6:	9782                	jalr	a5
204051a8:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
204051ac:	fdc42703          	lw	a4,-36(s0)
204051b0:	400007b7          	lui	a5,0x40000
204051b4:	8ff9                	and	a5,a5,a4
204051b6:	e399                	bnez	a5,204051bc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
204051b8:	57fd                	li	a5,-1
204051ba:	a821                	j	204051d2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
204051bc:	fdc42783          	lw	a5,-36(s0)
204051c0:	0007c463          	bltz	a5,204051c8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
204051c4:	57fd                	li	a5,-1
204051c6:	a031                	j	204051d2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
204051c8:	fec42503          	lw	a0,-20(s0)
204051cc:	19b010ef          	jal	ra,20406b66 <metal_clock_get_rate_hz>
204051d0:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
204051d2:	853e                	mv	a0,a5
204051d4:	50f2                	lw	ra,60(sp)
204051d6:	5462                	lw	s0,56(sp)
204051d8:	6121                	addi	sp,sp,64
204051da:	8082                	ret

204051dc <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
204051dc:	1101                	addi	sp,sp,-32
204051de:	ce06                	sw	ra,28(sp)
204051e0:	cc22                	sw	s0,24(sp)
204051e2:	1000                	addi	s0,sp,32
204051e4:	fea42623          	sw	a0,-20(s0)
204051e8:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
204051ec:	fec42503          	lw	a0,-20(s0)
204051f0:	3fa5                	jal	20405168 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
204051f2:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
204051f4:	853e                	mv	a0,a5
204051f6:	40f2                	lw	ra,28(sp)
204051f8:	4462                	lw	s0,24(sp)
204051fa:	6105                	addi	sp,sp,32
204051fc:	8082                	ret

204051fe <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1185
{
204051fe:	1101                	addi	sp,sp,-32
20405200:	ce22                	sw	s0,28(sp)
20405202:	1000                	addi	s0,sp,32
20405204:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1186
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20405208:	800017b7          	lui	a5,0x80001
2040520c:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xfffff2c8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1187
}
20405210:	853e                	mv	a0,a5
20405212:	4472                	lw	s0,28(sp)
20405214:	6105                	addi	sp,sp,32
20405216:	8082                	ret

20405218 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1190
{
20405218:	1101                	addi	sp,sp,-32
2040521a:	ce22                	sw	s0,28(sp)
2040521c:	1000                	addi	s0,sp,32
2040521e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1191
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20405222:	800017b7          	lui	a5,0x80001
20405226:	a6478793          	addi	a5,a5,-1436 # 80000a64 <metal_segment_heap_target_end+0xfffff2d4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1192
}
2040522a:	853e                	mv	a0,a5
2040522c:	4472                	lw	s0,28(sp)
2040522e:	6105                	addi	sp,sp,32
20405230:	8082                	ret

20405232 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1195
{
20405232:	1101                	addi	sp,sp,-32
20405234:	ce22                	sw	s0,28(sp)
20405236:	1000                	addi	s0,sp,32
20405238:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1196
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2040523c:	82c18793          	addi	a5,gp,-2004 # 80000aac <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1197
}
20405240:	853e                	mv	a0,a5
20405242:	4472                	lw	s0,28(sp)
20405244:	6105                	addi	sp,sp,32
20405246:	8082                	ret

20405248 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1200
{
20405248:	1101                	addi	sp,sp,-32
2040524a:	ce22                	sw	s0,28(sp)
2040524c:	1000                	addi	s0,sp,32
2040524e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1201
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20405252:	47b1                	li	a5,12
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1202
}
20405254:	853e                	mv	a0,a5
20405256:	4472                	lw	s0,28(sp)
20405258:	6105                	addi	sp,sp,32
2040525a:	8082                	ret

2040525c <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1205
{
2040525c:	1141                	addi	sp,sp,-16
2040525e:	c622                	sw	s0,12(sp)
20405260:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1206
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405262:	82c18793          	addi	a5,gp,-2004 # 80000aac <__metal_dt_prci_10008000>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1207
}
20405266:	853e                	mv	a0,a5
20405268:	4432                	lw	s0,12(sp)
2040526a:	0141                	addi	sp,sp,16
2040526c:	8082                	ret

2040526e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1210
{
2040526e:	1141                	addi	sp,sp,-16
20405270:	c622                	sw	s0,12(sp)
20405272:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1211
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20405274:	47a1                	li	a5,8
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1212
}
20405276:	853e                	mv	a0,a5
20405278:	4432                	lw	s0,12(sp)
2040527a:	0141                	addi	sp,sp,16
2040527c:	8082                	ret

2040527e <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1215
{
2040527e:	1141                	addi	sp,sp,-16
20405280:	c622                	sw	s0,12(sp)
20405282:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1216
		return 16000000;
20405284:	00f427b7          	lui	a5,0xf42
20405288:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1217
}
2040528c:	853e                	mv	a0,a5
2040528e:	4432                	lw	s0,12(sp)
20405290:	0141                	addi	sp,sp,16
20405292:	8082                	ret

20405294 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1223
{
20405294:	1141                	addi	sp,sp,-16
20405296:	c622                	sw	s0,12(sp)
20405298:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1224
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2040529a:	100087b7          	lui	a5,0x10008
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1225
}
2040529e:	853e                	mv	a0,a5
204052a0:	4432                	lw	s0,12(sp)
204052a2:	0141                	addi	sp,sp,16
204052a4:	8082                	ret

204052a6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1233
{
204052a6:	1141                	addi	sp,sp,-16
204052a8:	c622                	sw	s0,12(sp)
204052aa:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1234
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
204052ac:	84018793          	addi	a5,gp,-1984 # 80000ac0 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1235
}
204052b0:	853e                	mv	a0,a5
204052b2:	4432                	lw	s0,12(sp)
204052b4:	0141                	addi	sp,sp,16
204052b6:	8082                	ret

204052b8 <get_pll_config_freq>:
get_pll_config_freq():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
204052b8:	1101                	addi	sp,sp,-32
204052ba:	ce22                	sw	s0,28(sp)
204052bc:	1000                	addi	s0,sp,32
204052be:	fea42623          	sw	a0,-20(s0)
204052c2:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
204052c6:	fe842783          	lw	a5,-24(s0)
204052ca:	479c                	lw	a5,8(a5)
204052cc:	fec42703          	lw	a4,-20(s0)
204052d0:	00f76963          	bltu	a4,a5,204052e2 <get_pll_config_freq+0x2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
204052d4:	fe842783          	lw	a5,-24(s0)
204052d8:	47dc                	lw	a5,12(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
204052da:	fec42703          	lw	a4,-20(s0)
204052de:	00e7f463          	bgeu	a5,a4,204052e6 <get_pll_config_freq+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
204052e2:	57fd                	li	a5,-1
204052e4:	a829                	j	204052fe <get_pll_config_freq+0x46>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
204052e6:	fe842783          	lw	a5,-24(s0)
204052ea:	4398                	lw	a4,0(a5)
204052ec:	fec42783          	lw	a5,-20(s0)
204052f0:	02f70733          	mul	a4,a4,a5
204052f4:	fe842783          	lw	a5,-24(s0)
204052f8:	43dc                	lw	a5,4(a5)
204052fa:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
204052fe:	853e                	mv	a0,a5
20405300:	4472                	lw	s0,28(sp)
20405302:	6105                	addi	sp,sp,32
20405304:	8082                	ret

20405306 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20405306:	7139                	addi	sp,sp,-64
20405308:	de06                	sw	ra,60(sp)
2040530a:	dc22                	sw	s0,56(sp)
2040530c:	0080                	addi	s0,sp,64
2040530e:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20405312:	fcc42783          	lw	a5,-52(s0)
20405316:	853e                	mv	a0,a5
20405318:	3701                	jal	20405218 <__metal_driver_sifive_fe310_g000_pll_pllref>
2040531a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2040531e:	3785                	jal	2040527e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20405320:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20405324:	37a9                	jal	2040526e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405326:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2040532a:	37ad                	jal	20405294 <__metal_driver_sifive_fe310_g000_prci_base>
2040532c:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405330:	fe042703          	lw	a4,-32(s0)
20405334:	fe442783          	lw	a5,-28(s0)
20405338:	97ba                	add	a5,a5,a4
2040533a:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
2040533e:	fcc42783          	lw	a5,-52(s0)
20405342:	43dc                	lw	a5,4(a5)
20405344:	853e                	mv	a0,a5
20405346:	78c010ef          	jal	ra,20406ad2 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
2040534a:	fdc42783          	lw	a5,-36(s0)
2040534e:	4398                	lw	a4,0(a5)
20405350:	67c1                	lui	a5,0x10
20405352:	8ff9                	and	a5,a5,a4
20405354:	cb91                	beqz	a5,20405368 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405356:	fdc42783          	lw	a5,-36(s0)
2040535a:	4398                	lw	a4,0(a5)
2040535c:	77c1                	lui	a5,0xffff0
2040535e:	17fd                	addi	a5,a5,-1
20405360:	8f7d                	and	a4,a4,a5
20405362:	fdc42783          	lw	a5,-36(s0)
20405366:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20405368:	fec42783          	lw	a5,-20(s0)
2040536c:	cb91                	beqz	a5,20405380 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
2040536e:	fdc42783          	lw	a5,-36(s0)
20405372:	4398                	lw	a4,0(a5)
20405374:	000207b7          	lui	a5,0x20
20405378:	8f5d                	or	a4,a4,a5
2040537a:	fdc42783          	lw	a5,-36(s0)
2040537e:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20405380:	fcc42783          	lw	a5,-52(s0)
20405384:	439c                	lw	a5,0(a5)
20405386:	43d8                	lw	a4,4(a5)
20405388:	fcc42783          	lw	a5,-52(s0)
2040538c:	fe842583          	lw	a1,-24(s0)
20405390:	853e                	mv	a0,a5
20405392:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20405394:	fcc42783          	lw	a5,-52(s0)
20405398:	479c                	lw	a5,8(a5)
2040539a:	853e                	mv	a0,a5
2040539c:	736010ef          	jal	ra,20406ad2 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
204053a0:	0001                	nop
204053a2:	50f2                	lw	ra,60(sp)
204053a4:	5462                	lw	s0,56(sp)
204053a6:	6121                	addi	sp,sp,64
204053a8:	8082                	ret

204053aa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
204053aa:	711d                	addi	sp,sp,-96
204053ac:	ce86                	sw	ra,92(sp)
204053ae:	cca2                	sw	s0,88(sp)
204053b0:	1080                	addi	s0,sp,96
204053b2:	faa42623          	sw	a0,-84(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204053b6:	fac42503          	lw	a0,-84(s0)
204053ba:	3db9                	jal	20405218 <__metal_driver_sifive_fe310_g000_pll_pllref>
204053bc:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204053c0:	fac42503          	lw	a0,-84(s0)
204053c4:	3d2d                	jal	204051fe <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204053c6:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204053ca:	fac42503          	lw	a0,-84(s0)
204053ce:	3545                	jal	2040526e <__metal_driver_sifive_fe310_g000_pll_config_offset>
204053d0:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
204053d4:	fac42503          	lw	a0,-84(s0)
204053d8:	3551                	jal	2040525c <__metal_driver_sifive_fe310_g000_pll_config_base>
204053da:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
204053de:	fac42503          	lw	a0,-84(s0)
204053e2:	359d                	jal	20405248 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
204053e4:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
204053e8:	fac42503          	lw	a0,-84(s0)
204053ec:	3599                	jal	20405232 <__metal_driver_sifive_fe310_g000_pll_divider_base>
204053ee:	fca42c23          	sw	a0,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
204053f2:	3d55                	jal	204052a6 <__metal_driver_sifive_fe310_g000_prci_vtable>
204053f4:	fca42a23          	sw	a0,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
204053f8:	fd442783          	lw	a5,-44(s0)
204053fc:	439c                	lw	a5,0(a5)
204053fe:	fe442583          	lw	a1,-28(s0)
20405402:	fe042503          	lw	a0,-32(s0)
20405406:	9782                	jalr	a5
20405408:	fca42823          	sw	a0,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
2040540c:	fd442783          	lw	a5,-44(s0)
20405410:	439c                	lw	a5,0(a5)
20405412:	fdc42583          	lw	a1,-36(s0)
20405416:	fd842503          	lw	a0,-40(s0)
2040541a:	9782                	jalr	a5
2040541c:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20405420:	fd042703          	lw	a4,-48(s0)
20405424:	67c1                	lui	a5,0x10
20405426:	8f7d                	and	a4,a4,a5
20405428:	67c1                	lui	a5,0x10
2040542a:	00f77863          	bgeu	a4,a5,2040543a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
2040542e:	fe842503          	lw	a0,-24(s0)
20405432:	734010ef          	jal	ra,20406b66 <metal_clock_get_rate_hz>
20405436:	87aa                	mv	a5,a0
20405438:	a8e1                	j	20405510 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
2040543a:	fd042703          	lw	a4,-48(s0)
2040543e:	000207b7          	lui	a5,0x20
20405442:	8f7d                	and	a4,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20405444:	000207b7          	lui	a5,0x20
20405448:	00f76563          	bltu	a4,a5,20405452 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
2040544c:	fec42783          	lw	a5,-20(s0)
20405450:	a019                	j	20405456 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20405452:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20405456:	853e                	mv	a0,a5
20405458:	70e010ef          	jal	ra,20406b66 <metal_clock_get_rate_hz>
2040545c:	fca42423          	sw	a0,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20405460:	fd042703          	lw	a4,-48(s0)
20405464:	000407b7          	lui	a5,0x40
20405468:	8f7d                	and	a4,a4,a5
2040546a:	000407b7          	lui	a5,0x40
2040546e:	00f76563          	bltu	a4,a5,20405478 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20405472:	fc842783          	lw	a5,-56(s0)
20405476:	a869                	j	20405510 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20405478:	fd042783          	lw	a5,-48(s0)
2040547c:	8b9d                	andi	a5,a5,7
2040547e:	0785                	addi	a5,a5,1
20405480:	fcf42223          	sw	a5,-60(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20405484:	fd042783          	lw	a5,-48(s0)
20405488:	3f07f793          	andi	a5,a5,1008
2040548c:	8391                	srli	a5,a5,0x4
2040548e:	0785                	addi	a5,a5,1
20405490:	0786                	slli	a5,a5,0x1
20405492:	fcf42023          	sw	a5,-64(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20405496:	fd042703          	lw	a4,-48(s0)
2040549a:	6785                	lui	a5,0x1
2040549c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204054a0:	8f7d                	and	a4,a4,a5
204054a2:	3ff00793          	li	a5,1023
204054a6:	00e7e463          	bltu	a5,a4,204054ae <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
204054aa:	57fd                	li	a5,-1
204054ac:	a095                	j	20405510 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
204054ae:	fd042703          	lw	a4,-48(s0)
204054b2:	6785                	lui	a5,0x1
204054b4:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204054b8:	8ff9                	and	a5,a5,a4
204054ba:	83a9                	srli	a5,a5,0xa
204054bc:	4705                	li	a4,1
204054be:	00f717b3          	sll	a5,a4,a5
204054c2:	faf42e23          	sw	a5,-68(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
204054c6:	fc842703          	lw	a4,-56(s0)
204054ca:	fc442783          	lw	a5,-60(s0)
204054ce:	02f74733          	div	a4,a4,a5
204054d2:	fc042783          	lw	a5,-64(s0)
204054d6:	02f70733          	mul	a4,a4,a5
204054da:	fbc42783          	lw	a5,-68(s0)
204054de:	02f747b3          	div	a5,a4,a5
204054e2:	faf42c23          	sw	a5,-72(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
204054e6:	fcc42783          	lw	a5,-52(s0)
204054ea:	1007f713          	andi	a4,a5,256
204054ee:	0ff00793          	li	a5,255
204054f2:	00e7f563          	bgeu	a5,a4,204054fc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
204054f6:	fb842783          	lw	a5,-72(s0)
204054fa:	a819                	j	20405510 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
204054fc:	fb842703          	lw	a4,-72(s0)
20405500:	fcc42783          	lw	a5,-52(s0)
20405504:	03f7f793          	andi	a5,a5,63
20405508:	0785                	addi	a5,a5,1
2040550a:	0786                	slli	a5,a5,0x1
2040550c:	02f757b3          	divu	a5,a4,a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20405510:	853e                	mv	a0,a5
20405512:	40f6                	lw	ra,92(sp)
20405514:	4466                	lw	s0,88(sp)
20405516:	6125                	addi	sp,sp,96
20405518:	8082                	ret

2040551a <find_closest_config>:
find_closest_config():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2040551a:	7139                	addi	sp,sp,-64
2040551c:	de06                	sw	ra,60(sp)
2040551e:	dc22                	sw	s0,56(sp)
20405520:	0080                	addi	s0,sp,64
20405522:	fca42623          	sw	a0,-52(s0)
20405526:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2040552a:	57fd                	li	a5,-1
2040552c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20405530:	800007b7          	lui	a5,0x80000
20405534:	fff7c793          	not	a5,a5
20405538:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2040553c:	04300793          	li	a5,67
20405540:	fef42223          	sw	a5,-28(s0)
20405544:	a0b5                	j	204055b0 <find_closest_config+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20405546:	fcc42683          	lw	a3,-52(s0)
2040554a:	fe442783          	lw	a5,-28(s0)
2040554e:	00579713          	slli	a4,a5,0x5
20405552:	204017b7          	lui	a5,0x20401
20405556:	a3878793          	addi	a5,a5,-1480 # 20400a38 <pll_configs>
2040555a:	97ba                	add	a5,a5,a4
2040555c:	85be                	mv	a1,a5
2040555e:	8536                	mv	a0,a3
20405560:	d59ff0ef          	jal	ra,204052b8 <get_pll_config_freq>
20405564:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20405568:	fe042703          	lw	a4,-32(s0)
2040556c:	57fd                	li	a5,-1
2040556e:	02f70c63          	beq	a4,a5,204055a6 <find_closest_config+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20405572:	fe042703          	lw	a4,-32(s0)
20405576:	fc842783          	lw	a5,-56(s0)
2040557a:	8f1d                	sub	a4,a4,a5
2040557c:	41f75793          	srai	a5,a4,0x1f
20405580:	8f3d                	xor	a4,a4,a5
20405582:	40f707b3          	sub	a5,a4,a5
20405586:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
2040558a:	fdc42703          	lw	a4,-36(s0)
2040558e:	fe842783          	lw	a5,-24(s0)
20405592:	00f75a63          	bge	a4,a5,204055a6 <find_closest_config+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20405596:	fe442783          	lw	a5,-28(s0)
2040559a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
2040559e:	fdc42783          	lw	a5,-36(s0)
204055a2:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
204055a6:	fe442783          	lw	a5,-28(s0)
204055aa:	17fd                	addi	a5,a5,-1
204055ac:	fef42223          	sw	a5,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
204055b0:	fe442783          	lw	a5,-28(s0)
204055b4:	f807d9e3          	bgez	a5,20405546 <find_closest_config+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
204055b8:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
204055bc:	853e                	mv	a0,a5
204055be:	50f2                	lw	ra,60(sp)
204055c0:	5462                	lw	s0,56(sp)
204055c2:	6121                	addi	sp,sp,64
204055c4:	8082                	ret

204055c6 <configure_pll>:
configure_pll():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
204055c6:	7179                	addi	sp,sp,-48
204055c8:	d606                	sw	ra,44(sp)
204055ca:	d422                	sw	s0,40(sp)
204055cc:	1800                	addi	s0,sp,48
204055ce:	fca42e23          	sw	a0,-36(s0)
204055d2:	fcb42c23          	sw	a1,-40(s0)
204055d6:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
204055da:	fdc42783          	lw	a5,-36(s0)
204055de:	439c                	lw	a5,0(a5)
204055e0:	ff87f713          	andi	a4,a5,-8
204055e4:	fdc42783          	lw	a5,-36(s0)
204055e8:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
204055ea:	fdc42783          	lw	a5,-36(s0)
204055ee:	4398                	lw	a4,0(a5)
204055f0:	fd442783          	lw	a5,-44(s0)
204055f4:	4b9c                	lw	a5,16(a5)
204055f6:	8b9d                	andi	a5,a5,7
204055f8:	8f5d                	or	a4,a4,a5
204055fa:	fdc42783          	lw	a5,-36(s0)
204055fe:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20405600:	fdc42783          	lw	a5,-36(s0)
20405604:	439c                	lw	a5,0(a5)
20405606:	c0f7f713          	andi	a4,a5,-1009
2040560a:	fdc42783          	lw	a5,-36(s0)
2040560e:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20405610:	fdc42783          	lw	a5,-36(s0)
20405614:	4398                	lw	a4,0(a5)
20405616:	fd442783          	lw	a5,-44(s0)
2040561a:	4bdc                	lw	a5,20(a5)
2040561c:	0792                	slli	a5,a5,0x4
2040561e:	3f07f793          	andi	a5,a5,1008
20405622:	8f5d                	or	a4,a4,a5
20405624:	fdc42783          	lw	a5,-36(s0)
20405628:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2040562a:	fdc42783          	lw	a5,-36(s0)
2040562e:	4398                	lw	a4,0(a5)
20405630:	77fd                	lui	a5,0xfffff
20405632:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc6f>
20405636:	8f7d                	and	a4,a4,a5
20405638:	fdc42783          	lw	a5,-36(s0)
2040563c:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
2040563e:	fdc42783          	lw	a5,-36(s0)
20405642:	4398                	lw	a4,0(a5)
20405644:	fd442783          	lw	a5,-44(s0)
20405648:	4f9c                	lw	a5,24(a5)
2040564a:	00a79693          	slli	a3,a5,0xa
2040564e:	6785                	lui	a5,0x1
20405650:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405654:	8ff5                	and	a5,a5,a3
20405656:	8f5d                	or	a4,a4,a5
20405658:	fdc42783          	lw	a5,-36(s0)
2040565c:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
2040565e:	fd442783          	lw	a5,-44(s0)
20405662:	4fdc                	lw	a5,28(a5)
20405664:	0207db63          	bgez	a5,2040569a <configure_pll+0xd4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20405668:	fd842783          	lw	a5,-40(s0)
2040566c:	439c                	lw	a5,0(a5)
2040566e:	1007e713          	ori	a4,a5,256
20405672:	fd842783          	lw	a5,-40(s0)
20405676:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405678:	fd842783          	lw	a5,-40(s0)
2040567c:	439c                	lw	a5,0(a5)
2040567e:	fc07f713          	andi	a4,a5,-64
20405682:	fd842783          	lw	a5,-40(s0)
20405686:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20405688:	fd842783          	lw	a5,-40(s0)
2040568c:	439c                	lw	a5,0(a5)
2040568e:	0017e713          	ori	a4,a5,1
20405692:	fd842783          	lw	a5,-40(s0)
20405696:	c398                	sw	a4,0(a5)
20405698:	a82d                	j	204056d2 <configure_pll+0x10c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
2040569a:	fd842783          	lw	a5,-40(s0)
2040569e:	439c                	lw	a5,0(a5)
204056a0:	eff7f713          	andi	a4,a5,-257
204056a4:	fd842783          	lw	a5,-40(s0)
204056a8:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
204056aa:	fd842783          	lw	a5,-40(s0)
204056ae:	439c                	lw	a5,0(a5)
204056b0:	fc07f713          	andi	a4,a5,-64
204056b4:	fd842783          	lw	a5,-40(s0)
204056b8:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
204056ba:	fd842783          	lw	a5,-40(s0)
204056be:	4398                	lw	a4,0(a5)
204056c0:	fd442783          	lw	a5,-44(s0)
204056c4:	4fdc                	lw	a5,28(a5)
204056c6:	03f7f793          	andi	a5,a5,63
204056ca:	8f5d                	or	a4,a4,a5
204056cc:	fd842783          	lw	a5,-40(s0)
204056d0:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
204056d2:	fdc42783          	lw	a5,-36(s0)
204056d6:	4398                	lw	a4,0(a5)
204056d8:	fffc07b7          	lui	a5,0xfffc0
204056dc:	17fd                	addi	a5,a5,-1
204056de:	8f7d                	and	a4,a4,a5
204056e0:	fdc42783          	lw	a5,-36(s0)
204056e4:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
204056e6:	fe040793          	addi	a5,s0,-32
204056ea:	863e                	mv	a2,a5
204056ec:	4585                	li	a1,1
204056ee:	800017b7          	lui	a5,0x80001
204056f2:	a8c78513          	addi	a0,a5,-1396 # 80000a8c <metal_segment_heap_target_end+0xfffff2fc>
204056f6:	c92fd0ef          	jal	ra,20402b88 <__metal_driver_riscv_clint0_command_request>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
204056fa:	fe042683          	lw	a3,-32(s0)
204056fe:	fe442703          	lw	a4,-28(s0)
20405702:	4591                	li	a1,4
20405704:	4601                	li	a2,0
20405706:	00b687b3          	add	a5,a3,a1
2040570a:	853e                	mv	a0,a5
2040570c:	00d53533          	sltu	a0,a0,a3
20405710:	00c70833          	add	a6,a4,a2
20405714:	01050733          	add	a4,a0,a6
20405718:	883a                	mv	a6,a4
2040571a:	fef42423          	sw	a5,-24(s0)
2040571e:	ff042623          	sw	a6,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405722:	a819                	j	20405738 <configure_pll+0x172>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20405724:	fe040793          	addi	a5,s0,-32
20405728:	863e                	mv	a2,a5
2040572a:	4585                	li	a1,1
2040572c:	800017b7          	lui	a5,0x80001
20405730:	a8c78513          	addi	a0,a5,-1396 # 80000a8c <metal_segment_heap_target_end+0xfffff2fc>
20405734:	c54fd0ef          	jal	ra,20402b88 <__metal_driver_riscv_clint0_command_request>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405738:	fe042783          	lw	a5,-32(s0)
2040573c:	fe442803          	lw	a6,-28(s0)
20405740:	fec42703          	lw	a4,-20(s0)
20405744:	86c2                	mv	a3,a6
20405746:	00d76b63          	bltu	a4,a3,2040575c <configure_pll+0x196>
2040574a:	fec42703          	lw	a4,-20(s0)
2040574e:	86c2                	mv	a3,a6
20405750:	fcd71ae3          	bne	a4,a3,20405724 <configure_pll+0x15e>
20405754:	fe842703          	lw	a4,-24(s0)
20405758:	fcf776e3          	bgeu	a4,a5,20405724 <configure_pll+0x15e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
2040575c:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
2040575e:	fdc42783          	lw	a5,-36(s0)
20405762:	439c                	lw	a5,0(a5)
20405764:	fe07dde3          	bgez	a5,2040575e <configure_pll+0x198>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20405768:	0001                	nop
2040576a:	50b2                	lw	ra,44(sp)
2040576c:	5422                	lw	s0,40(sp)
2040576e:	6145                	addi	sp,sp,48
20405770:	8082                	ret

20405772 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20405772:	715d                	addi	sp,sp,-80
20405774:	c686                	sw	ra,76(sp)
20405776:	c4a2                	sw	s0,72(sp)
20405778:	0880                	addi	s0,sp,80
2040577a:	faa42e23          	sw	a0,-68(s0)
2040577e:	fab42c23          	sw	a1,-72(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405782:	fbc42503          	lw	a0,-68(s0)
20405786:	a93ff0ef          	jal	ra,20405218 <__metal_driver_sifive_fe310_g000_pll_pllref>
2040578a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2040578e:	fbc42503          	lw	a0,-68(s0)
20405792:	a6dff0ef          	jal	ra,204051fe <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405796:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2040579a:	fbc42503          	lw	a0,-68(s0)
2040579e:	ad1ff0ef          	jal	ra,2040526e <__metal_driver_sifive_fe310_g000_pll_config_offset>
204057a2:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
204057a6:	fbc42503          	lw	a0,-68(s0)
204057aa:	a9fff0ef          	jal	ra,20405248 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
204057ae:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
204057b2:	ae3ff0ef          	jal	ra,20405294 <__metal_driver_sifive_fe310_g000_prci_base>
204057b6:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
204057ba:	fdc42703          	lw	a4,-36(s0)
204057be:	fe442783          	lw	a5,-28(s0)
204057c2:	97ba                	add	a5,a5,a4
204057c4:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
204057c8:	fdc42703          	lw	a4,-36(s0)
204057cc:	fe042783          	lw	a5,-32(s0)
204057d0:	97ba                	add	a5,a5,a4
204057d2:	fcf42a23          	sw	a5,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
204057d6:	fd842783          	lw	a5,-40(s0)
204057da:	4398                	lw	a4,0(a5)
204057dc:	67c1                	lui	a5,0x10
204057de:	8ff9                	and	a5,a5,a4
204057e0:	cb91                	beqz	a5,204057f4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
204057e2:	fd842783          	lw	a5,-40(s0)
204057e6:	4398                	lw	a4,0(a5)
204057e8:	77c1                	lui	a5,0xffff0
204057ea:	17fd                	addi	a5,a5,-1
204057ec:	8f7d                	and	a4,a4,a5
204057ee:	fd842783          	lw	a5,-40(s0)
204057f2:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
204057f4:	fd842783          	lw	a5,-40(s0)
204057f8:	4398                	lw	a4,0(a5)
204057fa:	000207b7          	lui	a5,0x20
204057fe:	8ff9                	and	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20405800:	c781                	beqz	a5,20405808 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20405802:	fec42783          	lw	a5,-20(s0)
20405806:	a019                	j	2040580c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20405808:	fe842783          	lw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
2040580c:	853e                	mv	a0,a5
2040580e:	358010ef          	jal	ra,20406b66 <metal_clock_get_rate_hz>
20405812:	fca42823          	sw	a0,-48(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20405816:	fd042703          	lw	a4,-48(s0)
2040581a:	87ba                	mv	a5,a4
2040581c:	0786                	slli	a5,a5,0x1
2040581e:	97ba                	add	a5,a5,a4
20405820:	41f7d713          	srai	a4,a5,0x1f
20405824:	8b0d                	andi	a4,a4,3
20405826:	97ba                	add	a5,a5,a4
20405828:	8789                	srai	a5,a5,0x2
2040582a:	873e                	mv	a4,a5
2040582c:	fb842783          	lw	a5,-72(s0)
20405830:	02e7cb63          	blt	a5,a4,20405866 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20405834:	fd042703          	lw	a4,-48(s0)
20405838:	87ba                	mv	a5,a4
2040583a:	078a                	slli	a5,a5,0x2
2040583c:	97ba                	add	a5,a5,a4
2040583e:	41f7d713          	srai	a4,a5,0x1f
20405842:	8b0d                	andi	a4,a4,3
20405844:	97ba                	add	a5,a5,a4
20405846:	8789                	srai	a5,a5,0x2
20405848:	873e                	mv	a4,a5
2040584a:	fb842783          	lw	a5,-72(s0)
2040584e:	00f74c63          	blt	a4,a5,20405866 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20405852:	fd842783          	lw	a5,-40(s0)
20405856:	4398                	lw	a4,0(a5)
20405858:	000407b7          	lui	a5,0x40
2040585c:	8f5d                	or	a4,a4,a5
2040585e:	fd842783          	lw	a5,-40(s0)
20405862:	c398                	sw	a4,0(a5)
20405864:	a881                	j	204058b4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20405866:	fb842583          	lw	a1,-72(s0)
2040586a:	fd042503          	lw	a0,-48(s0)
2040586e:	cadff0ef          	jal	ra,2040551a <find_closest_config>
20405872:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20405876:	fcc42703          	lw	a4,-52(s0)
2040587a:	57fd                	li	a5,-1
2040587c:	02f70363          	beq	a4,a5,204058a2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20405880:	fcc42783          	lw	a5,-52(s0)
20405884:	00579713          	slli	a4,a5,0x5
20405888:	204017b7          	lui	a5,0x20401
2040588c:	a3878793          	addi	a5,a5,-1480 # 20400a38 <pll_configs>
20405890:	97ba                	add	a5,a5,a4
20405892:	863e                	mv	a2,a5
20405894:	fd442583          	lw	a1,-44(s0)
20405898:	fd842503          	lw	a0,-40(s0)
2040589c:	d2bff0ef          	jal	ra,204055c6 <configure_pll>
204058a0:	a811                	j	204058b4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204058a2:	fd842783          	lw	a5,-40(s0)
204058a6:	4398                	lw	a4,0(a5)
204058a8:	000407b7          	lui	a5,0x40
204058ac:	8f5d                	or	a4,a4,a5
204058ae:	fd842783          	lw	a5,-40(s0)
204058b2:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
204058b4:	fd842783          	lw	a5,-40(s0)
204058b8:	4398                	lw	a4,0(a5)
204058ba:	67c1                	lui	a5,0x10
204058bc:	8f5d                	or	a4,a4,a5
204058be:	fd842783          	lw	a5,-40(s0)
204058c2:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
204058c4:	fbc42503          	lw	a0,-68(s0)
204058c8:	ae3ff0ef          	jal	ra,204053aa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
204058cc:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
204058ce:	853e                	mv	a0,a5
204058d0:	40b6                	lw	ra,76(sp)
204058d2:	4426                	lw	s0,72(sp)
204058d4:	6161                	addi	sp,sp,80
204058d6:	8082                	ret

204058d8 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1223
{
204058d8:	1141                	addi	sp,sp,-16
204058da:	c622                	sw	s0,12(sp)
204058dc:	0800                	addi	s0,sp,16
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1224
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
204058de:	100087b7          	lui	a5,0x10008
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1225
}
204058e2:	853e                	mv	a0,a5
204058e4:	4432                	lw	s0,12(sp)
204058e6:	0141                	addi	sp,sp,16
204058e8:	8082                	ret

204058ea <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
204058ea:	7179                	addi	sp,sp,-48
204058ec:	d606                	sw	ra,44(sp)
204058ee:	d422                	sw	s0,40(sp)
204058f0:	1800                	addi	s0,sp,48
204058f2:	fca42e23          	sw	a0,-36(s0)
204058f6:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
204058fa:	3ff9                	jal	204058d8 <__metal_driver_sifive_fe310_g000_prci_base>
204058fc:	87aa                	mv	a5,a0
204058fe:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20405902:	fd842703          	lw	a4,-40(s0)
20405906:	fec42783          	lw	a5,-20(s0)
2040590a:	97ba                	add	a5,a5,a4
2040590c:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
2040590e:	853e                	mv	a0,a5
20405910:	50b2                	lw	ra,44(sp)
20405912:	5422                	lw	s0,40(sp)
20405914:	6145                	addi	sp,sp,48
20405916:	8082                	ret

20405918 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20405918:	7179                	addi	sp,sp,-48
2040591a:	d606                	sw	ra,44(sp)
2040591c:	d422                	sw	s0,40(sp)
2040591e:	1800                	addi	s0,sp,48
20405920:	fca42e23          	sw	a0,-36(s0)
20405924:	fcb42c23          	sw	a1,-40(s0)
20405928:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2040592c:	3775                	jal	204058d8 <__metal_driver_sifive_fe310_g000_prci_base>
2040592e:	87aa                	mv	a5,a0
20405930:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20405934:	fd842703          	lw	a4,-40(s0)
20405938:	fec42783          	lw	a5,-20(s0)
2040593c:	97ba                	add	a5,a5,a4
2040593e:	873e                	mv	a4,a5
20405940:	fd442783          	lw	a5,-44(s0)
20405944:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20405946:	853e                	mv	a0,a5
20405948:	50b2                	lw	ra,44(sp)
2040594a:	5422                	lw	s0,40(sp)
2040594c:	6145                	addi	sp,sp,48
2040594e:	8082                	ret

20405950 <__metal_driver_sifive_gpio_led_gpio>:
__metal_driver_sifive_gpio_led_gpio():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:581
{
20405950:	1101                	addi	sp,sp,-32
20405952:	ce22                	sw	s0,28(sp)
20405954:	1000                	addi	s0,sp,32
20405956:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:582
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
2040595a:	fec42703          	lw	a4,-20(s0)
2040595e:	82018793          	addi	a5,gp,-2016 # 80000aa0 <__metal_dt_led_0>
20405962:	00f71563          	bne	a4,a5,2040596c <__metal_driver_sifive_gpio_led_gpio+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:583
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
20405966:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
2040596a:	a025                	j	20405992 <__metal_driver_sifive_gpio_led_gpio+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:585
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
2040596c:	fec42703          	lw	a4,-20(s0)
20405970:	82418793          	addi	a5,gp,-2012 # 80000aa4 <__metal_dt_led_1>
20405974:	00f71563          	bne	a4,a5,2040597e <__metal_driver_sifive_gpio_led_gpio+0x2e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:586
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
20405978:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
2040597c:	a819                	j	20405992 <__metal_driver_sifive_gpio_led_gpio+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:588
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
2040597e:	fec42703          	lw	a4,-20(s0)
20405982:	82818793          	addi	a5,gp,-2008 # 80000aa8 <__metal_dt_led_2>
20405986:	00f71563          	bne	a4,a5,20405990 <__metal_driver_sifive_gpio_led_gpio+0x40>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:589
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
2040598a:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
2040598e:	a011                	j	20405992 <__metal_driver_sifive_gpio_led_gpio+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:592
		return NULL;
20405990:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:594
}
20405992:	853e                	mv	a0,a5
20405994:	4472                	lw	s0,28(sp)
20405996:	6105                	addi	sp,sp,32
20405998:	8082                	ret

2040599a <__metal_driver_sifive_gpio_led_pin>:
__metal_driver_sifive_gpio_led_pin():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:597
{
2040599a:	1101                	addi	sp,sp,-32
2040599c:	ce22                	sw	s0,28(sp)
2040599e:	1000                	addi	s0,sp,32
204059a0:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:598
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
204059a4:	fec42703          	lw	a4,-20(s0)
204059a8:	82018793          	addi	a5,gp,-2016 # 80000aa0 <__metal_dt_led_0>
204059ac:	00f71463          	bne	a4,a5,204059b4 <__metal_driver_sifive_gpio_led_pin+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:599
		return 22;
204059b0:	47d9                	li	a5,22
204059b2:	a015                	j	204059d6 <__metal_driver_sifive_gpio_led_pin+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:601
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
204059b4:	fec42703          	lw	a4,-20(s0)
204059b8:	82418793          	addi	a5,gp,-2012 # 80000aa4 <__metal_dt_led_1>
204059bc:	00f71463          	bne	a4,a5,204059c4 <__metal_driver_sifive_gpio_led_pin+0x2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:602
		return 19;
204059c0:	47cd                	li	a5,19
204059c2:	a811                	j	204059d6 <__metal_driver_sifive_gpio_led_pin+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:604
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
204059c4:	fec42703          	lw	a4,-20(s0)
204059c8:	82818793          	addi	a5,gp,-2008 # 80000aa8 <__metal_dt_led_2>
204059cc:	00f71463          	bne	a4,a5,204059d4 <__metal_driver_sifive_gpio_led_pin+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:605
		return 21;
204059d0:	47d5                	li	a5,21
204059d2:	a011                	j	204059d6 <__metal_driver_sifive_gpio_led_pin+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:608
		return 0;
204059d4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:610
}
204059d6:	853e                	mv	a0,a5
204059d8:	4472                	lw	s0,28(sp)
204059da:	6105                	addi	sp,sp,32
204059dc:	8082                	ret

204059de <__metal_driver_sifive_gpio_led_label>:
__metal_driver_sifive_gpio_led_label():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:613
{
204059de:	1101                	addi	sp,sp,-32
204059e0:	ce22                	sw	s0,28(sp)
204059e2:	1000                	addi	s0,sp,32
204059e4:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:614
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
204059e8:	fec42703          	lw	a4,-20(s0)
204059ec:	82018793          	addi	a5,gp,-2016 # 80000aa0 <__metal_dt_led_0>
204059f0:	00f71763          	bne	a4,a5,204059fe <__metal_driver_sifive_gpio_led_label+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:615
		return "LD0red";
204059f4:	204017b7          	lui	a5,0x20401
204059f8:	2c478793          	addi	a5,a5,708 # 204012c4 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
204059fc:	a81d                	j	20405a32 <__metal_driver_sifive_gpio_led_label+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:617
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
204059fe:	fec42703          	lw	a4,-20(s0)
20405a02:	82418793          	addi	a5,gp,-2012 # 80000aa4 <__metal_dt_led_1>
20405a06:	00f71763          	bne	a4,a5,20405a14 <__metal_driver_sifive_gpio_led_label+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:618
		return "LD0green";
20405a0a:	204017b7          	lui	a5,0x20401
20405a0e:	2cc78793          	addi	a5,a5,716 # 204012cc <__metal_driver_vtable_sifive_fe310_g000_pll+0x14>
20405a12:	a005                	j	20405a32 <__metal_driver_sifive_gpio_led_label+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:620
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
20405a14:	fec42703          	lw	a4,-20(s0)
20405a18:	82818793          	addi	a5,gp,-2008 # 80000aa8 <__metal_dt_led_2>
20405a1c:	00f71763          	bne	a4,a5,20405a2a <__metal_driver_sifive_gpio_led_label+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:621
		return "LD0blue";
20405a20:	204017b7          	lui	a5,0x20401
20405a24:	2d878793          	addi	a5,a5,728 # 204012d8 <__metal_driver_vtable_sifive_fe310_g000_pll+0x20>
20405a28:	a029                	j	20405a32 <__metal_driver_sifive_gpio_led_label+0x54>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:624
		return "";
20405a2a:	204017b7          	lui	a5,0x20401
20405a2e:	2e078793          	addi	a5,a5,736 # 204012e0 <__metal_driver_vtable_sifive_fe310_g000_pll+0x28>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:626
}
20405a32:	853e                	mv	a0,a5
20405a34:	4472                	lw	s0,28(sp)
20405a36:	6105                	addi	sp,sp,32
20405a38:	8082                	ret

20405a3a <__metal_driver_led_exist>:
__metal_driver_led_exist():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:13
#include <metal/drivers/sifive_gpio-leds.h>
#include <metal/gpio.h>
#include <metal/machine.h>
#include <string.h>

int __metal_driver_led_exist(struct metal_led *led, char *label) {
20405a3a:	1101                	addi	sp,sp,-32
20405a3c:	ce06                	sw	ra,28(sp)
20405a3e:	cc22                	sw	s0,24(sp)
20405a40:	1000                	addi	s0,sp,32
20405a42:	fea42623          	sw	a0,-20(s0)
20405a46:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:14
    if (strcmp(__metal_driver_sifive_gpio_led_label(led), label) == 0) {
20405a4a:	fec42503          	lw	a0,-20(s0)
20405a4e:	3f41                	jal	204059de <__metal_driver_sifive_gpio_led_label>
20405a50:	87aa                	mv	a5,a0
20405a52:	fe842583          	lw	a1,-24(s0)
20405a56:	853e                	mv	a0,a5
20405a58:	764010ef          	jal	ra,204071bc <strcmp>
20405a5c:	87aa                	mv	a5,a0
20405a5e:	e399                	bnez	a5,20405a64 <__metal_driver_led_exist+0x2a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:15
        return 1;
20405a60:	4785                	li	a5,1
20405a62:	a011                	j	20405a66 <__metal_driver_led_exist+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:17
    }
    return 0;
20405a64:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:18
}
20405a66:	853e                	mv	a0,a5
20405a68:	40f2                	lw	ra,28(sp)
20405a6a:	4462                	lw	s0,24(sp)
20405a6c:	6105                	addi	sp,sp,32
20405a6e:	8082                	ret

20405a70 <__metal_driver_led_enable>:
__metal_driver_led_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:20

void __metal_driver_led_enable(struct metal_led *led) {
20405a70:	7179                	addi	sp,sp,-48
20405a72:	d606                	sw	ra,44(sp)
20405a74:	d422                	sw	s0,40(sp)
20405a76:	1800                	addi	s0,sp,48
20405a78:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:24
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20405a7c:	fdc42503          	lw	a0,-36(s0)
20405a80:	3f29                	jal	2040599a <__metal_driver_sifive_gpio_led_pin>
20405a82:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:25
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20405a86:	fdc42503          	lw	a0,-36(s0)
20405a8a:	ec7ff0ef          	jal	ra,20405950 <__metal_driver_sifive_gpio_led_gpio>
20405a8e:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:27

    if (gpio != NULL) {
20405a92:	fe842783          	lw	a5,-24(s0)
20405a96:	cf89                	beqz	a5,20405ab0 <__metal_driver_led_enable+0x40>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:29
        /* Configure LED as output */
        metal_gpio_disable_input((struct metal_gpio *)gpio, pin);
20405a98:	fec42583          	lw	a1,-20(s0)
20405a9c:	fe842503          	lw	a0,-24(s0)
20405aa0:	19c010ef          	jal	ra,20406c3c <metal_gpio_disable_input>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:30
        metal_gpio_enable_output((struct metal_gpio *)gpio, pin);
20405aa4:	fec42583          	lw	a1,-20(s0)
20405aa8:	fe842503          	lw	a0,-24(s0)
20405aac:	1d0010ef          	jal	ra,20406c7c <metal_gpio_enable_output>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:32
    }
}
20405ab0:	0001                	nop
20405ab2:	50b2                	lw	ra,44(sp)
20405ab4:	5422                	lw	s0,40(sp)
20405ab6:	6145                	addi	sp,sp,48
20405ab8:	8082                	ret

20405aba <__metal_driver_led_on>:
__metal_driver_led_on():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:34

void __metal_driver_led_on(struct metal_led *led) {
20405aba:	7179                	addi	sp,sp,-48
20405abc:	d606                	sw	ra,44(sp)
20405abe:	d422                	sw	s0,40(sp)
20405ac0:	1800                	addi	s0,sp,48
20405ac2:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:38
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20405ac6:	fdc42503          	lw	a0,-36(s0)
20405aca:	ed1ff0ef          	jal	ra,2040599a <__metal_driver_sifive_gpio_led_pin>
20405ace:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:39
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20405ad2:	fdc42503          	lw	a0,-36(s0)
20405ad6:	e7bff0ef          	jal	ra,20405950 <__metal_driver_sifive_gpio_led_gpio>
20405ada:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:41

    if (gpio != NULL) {
20405ade:	fe842783          	lw	a5,-24(s0)
20405ae2:	cb81                	beqz	a5,20405af2 <__metal_driver_led_on+0x38>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:42
        metal_gpio_set_pin((struct metal_gpio *)gpio, pin, 1);
20405ae4:	4605                	li	a2,1
20405ae6:	fec42583          	lw	a1,-20(s0)
20405aea:	fe842503          	lw	a0,-24(s0)
20405aee:	1ce010ef          	jal	ra,20406cbc <metal_gpio_set_pin>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:44
    }
}
20405af2:	0001                	nop
20405af4:	50b2                	lw	ra,44(sp)
20405af6:	5422                	lw	s0,40(sp)
20405af8:	6145                	addi	sp,sp,48
20405afa:	8082                	ret

20405afc <__metal_driver_led_off>:
__metal_driver_led_off():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:46

void __metal_driver_led_off(struct metal_led *led) {
20405afc:	7179                	addi	sp,sp,-48
20405afe:	d606                	sw	ra,44(sp)
20405b00:	d422                	sw	s0,40(sp)
20405b02:	1800                	addi	s0,sp,48
20405b04:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:50
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20405b08:	fdc42503          	lw	a0,-36(s0)
20405b0c:	e8fff0ef          	jal	ra,2040599a <__metal_driver_sifive_gpio_led_pin>
20405b10:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:51
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20405b14:	fdc42503          	lw	a0,-36(s0)
20405b18:	e39ff0ef          	jal	ra,20405950 <__metal_driver_sifive_gpio_led_gpio>
20405b1c:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:53

    if (gpio != NULL) {
20405b20:	fe842783          	lw	a5,-24(s0)
20405b24:	cb81                	beqz	a5,20405b34 <__metal_driver_led_off+0x38>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:54
        metal_gpio_set_pin((struct metal_gpio *)gpio, pin, 0);
20405b26:	4601                	li	a2,0
20405b28:	fec42583          	lw	a1,-20(s0)
20405b2c:	fe842503          	lw	a0,-24(s0)
20405b30:	18c010ef          	jal	ra,20406cbc <metal_gpio_set_pin>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:56
    }
}
20405b34:	0001                	nop
20405b36:	50b2                	lw	ra,44(sp)
20405b38:	5422                	lw	s0,40(sp)
20405b3a:	6145                	addi	sp,sp,48
20405b3c:	8082                	ret

20405b3e <__metal_driver_led_toggle>:
__metal_driver_led_toggle():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:58

void __metal_driver_led_toggle(struct metal_led *led) {
20405b3e:	7179                	addi	sp,sp,-48
20405b40:	d606                	sw	ra,44(sp)
20405b42:	d422                	sw	s0,40(sp)
20405b44:	1800                	addi	s0,sp,48
20405b46:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:62
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20405b4a:	fdc42503          	lw	a0,-36(s0)
20405b4e:	e4dff0ef          	jal	ra,2040599a <__metal_driver_sifive_gpio_led_pin>
20405b52:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:63
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20405b56:	fdc42503          	lw	a0,-36(s0)
20405b5a:	df7ff0ef          	jal	ra,20405950 <__metal_driver_sifive_gpio_led_gpio>
20405b5e:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:65

    if (gpio != NULL) {
20405b62:	fe842783          	lw	a5,-24(s0)
20405b66:	c799                	beqz	a5,20405b74 <__metal_driver_led_toggle+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:66
        metal_gpio_toggle_pin((struct metal_gpio *)gpio, pin);
20405b68:	fec42583          	lw	a1,-20(s0)
20405b6c:	fe842503          	lw	a0,-24(s0)
20405b70:	1b4010ef          	jal	ra,20406d24 <metal_gpio_toggle_pin>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:68
    }
}
20405b74:	0001                	nop
20405b76:	50b2                	lw	ra,44(sp)
20405b78:	5422                	lw	s0,40(sp)
20405b7a:	6145                	addi	sp,sp,48
20405b7c:	8082                	ret

20405b7e <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:480
{
20405b7e:	1101                	addi	sp,sp,-32
20405b80:	ce22                	sw	s0,28(sp)
20405b82:	1000                	addi	s0,sp,32
20405b84:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:481
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20405b88:	fec42703          	lw	a4,-20(s0)
20405b8c:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405b90:	00f71563          	bne	a4,a5,20405b9a <__metal_driver_sifive_gpio0_base+0x1c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:482
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20405b94:	100127b7          	lui	a5,0x10012
20405b98:	a011                	j	20405b9c <__metal_driver_sifive_gpio0_base+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:485
		return 0;
20405b9a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:487
}
20405b9c:	853e                	mv	a0,a5
20405b9e:	4472                	lw	s0,28(sp)
20405ba0:	6105                	addi	sp,sp,32
20405ba2:	8082                	ret

20405ba4 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:510
{
20405ba4:	1101                	addi	sp,sp,-32
20405ba6:	ce22                	sw	s0,28(sp)
20405ba8:	1000                	addi	s0,sp,32
20405baa:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:511
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20405bae:	fec42703          	lw	a4,-20(s0)
20405bb2:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405bb6:	00f71763          	bne	a4,a5,20405bc4 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:512
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20405bba:	800007b7          	lui	a5,0x80000
20405bbe:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecd0>
20405bc2:	a011                	j	20405bc6 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:515
		return 0;
20405bc4:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:517
}
20405bc6:	853e                	mv	a0,a5
20405bc8:	4472                	lw	s0,28(sp)
20405bca:	6105                	addi	sp,sp,32
20405bcc:	8082                	ret

20405bce <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:520
{
20405bce:	1101                	addi	sp,sp,-32
20405bd0:	ce22                	sw	s0,28(sp)
20405bd2:	1000                	addi	s0,sp,32
20405bd4:	fea42623          	sw	a0,-20(s0)
20405bd8:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:521
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20405bdc:	fec42703          	lw	a4,-20(s0)
20405be0:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405be4:	00f71763          	bne	a4,a5,20405bf2 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:521 (discriminator 1)
20405be8:	fe842783          	lw	a5,-24(s0)
20405bec:	e399                	bnez	a5,20405bf2 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:522
		return 7;
20405bee:	479d                	li	a5,7
20405bf0:	a269                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20405bf2:	fec42703          	lw	a4,-20(s0)
20405bf6:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405bfa:	00f71963          	bne	a4,a5,20405c0c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:524 (discriminator 1)
20405bfe:	fe842703          	lw	a4,-24(s0)
20405c02:	4785                	li	a5,1
20405c04:	00f71463          	bne	a4,a5,20405c0c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:525
		return 8;
20405c08:	47a1                	li	a5,8
20405c0a:	aa85                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20405c0c:	fec42703          	lw	a4,-20(s0)
20405c10:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405c14:	00f71963          	bne	a4,a5,20405c26 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:527 (discriminator 1)
20405c18:	fe842703          	lw	a4,-24(s0)
20405c1c:	4789                	li	a5,2
20405c1e:	00f71463          	bne	a4,a5,20405c26 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:528
		return 9;
20405c22:	47a5                	li	a5,9
20405c24:	aa99                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20405c26:	fec42703          	lw	a4,-20(s0)
20405c2a:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405c2e:	00f71963          	bne	a4,a5,20405c40 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:530 (discriminator 1)
20405c32:	fe842703          	lw	a4,-24(s0)
20405c36:	478d                	li	a5,3
20405c38:	00f71463          	bne	a4,a5,20405c40 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:531
		return 10;
20405c3c:	47a9                	li	a5,10
20405c3e:	aa35                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20405c40:	fec42703          	lw	a4,-20(s0)
20405c44:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405c48:	00f71963          	bne	a4,a5,20405c5a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:533 (discriminator 1)
20405c4c:	fe842703          	lw	a4,-24(s0)
20405c50:	4791                	li	a5,4
20405c52:	00f71463          	bne	a4,a5,20405c5a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:534
		return 11;
20405c56:	47ad                	li	a5,11
20405c58:	a20d                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20405c5a:	fec42703          	lw	a4,-20(s0)
20405c5e:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405c62:	00f71963          	bne	a4,a5,20405c74 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:536 (discriminator 1)
20405c66:	fe842703          	lw	a4,-24(s0)
20405c6a:	4795                	li	a5,5
20405c6c:	00f71463          	bne	a4,a5,20405c74 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:537
		return 12;
20405c70:	47b1                	li	a5,12
20405c72:	a221                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20405c74:	fec42703          	lw	a4,-20(s0)
20405c78:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405c7c:	00f71963          	bne	a4,a5,20405c8e <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:539 (discriminator 1)
20405c80:	fe842703          	lw	a4,-24(s0)
20405c84:	4799                	li	a5,6
20405c86:	00f71463          	bne	a4,a5,20405c8e <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:540
		return 13;
20405c8a:	47b5                	li	a5,13
20405c8c:	a0fd                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20405c8e:	fec42703          	lw	a4,-20(s0)
20405c92:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405c96:	00f71963          	bne	a4,a5,20405ca8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:542 (discriminator 1)
20405c9a:	fe842703          	lw	a4,-24(s0)
20405c9e:	479d                	li	a5,7
20405ca0:	00f71463          	bne	a4,a5,20405ca8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:543
		return 14;
20405ca4:	47b9                	li	a5,14
20405ca6:	a8d1                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20405ca8:	fec42703          	lw	a4,-20(s0)
20405cac:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405cb0:	00f71963          	bne	a4,a5,20405cc2 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:545 (discriminator 1)
20405cb4:	fe842703          	lw	a4,-24(s0)
20405cb8:	47a1                	li	a5,8
20405cba:	00f71463          	bne	a4,a5,20405cc2 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:546
		return 15;
20405cbe:	47bd                	li	a5,15
20405cc0:	a86d                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20405cc2:	fec42703          	lw	a4,-20(s0)
20405cc6:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405cca:	00f71963          	bne	a4,a5,20405cdc <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:548 (discriminator 1)
20405cce:	fe842703          	lw	a4,-24(s0)
20405cd2:	47a5                	li	a5,9
20405cd4:	00f71463          	bne	a4,a5,20405cdc <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:549
		return 16;
20405cd8:	47c1                	li	a5,16
20405cda:	a045                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20405cdc:	fec42703          	lw	a4,-20(s0)
20405ce0:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405ce4:	00f71963          	bne	a4,a5,20405cf6 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:551 (discriminator 1)
20405ce8:	fe842703          	lw	a4,-24(s0)
20405cec:	47a9                	li	a5,10
20405cee:	00f71463          	bne	a4,a5,20405cf6 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:552
		return 17;
20405cf2:	47c5                	li	a5,17
20405cf4:	a059                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20405cf6:	fec42703          	lw	a4,-20(s0)
20405cfa:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405cfe:	00f71963          	bne	a4,a5,20405d10 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:554 (discriminator 1)
20405d02:	fe842703          	lw	a4,-24(s0)
20405d06:	47ad                	li	a5,11
20405d08:	00f71463          	bne	a4,a5,20405d10 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:555
		return 18;
20405d0c:	47c9                	li	a5,18
20405d0e:	a0b5                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20405d10:	fec42703          	lw	a4,-20(s0)
20405d14:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405d18:	00f71963          	bne	a4,a5,20405d2a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:557 (discriminator 1)
20405d1c:	fe842703          	lw	a4,-24(s0)
20405d20:	47b1                	li	a5,12
20405d22:	00f71463          	bne	a4,a5,20405d2a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:558
		return 19;
20405d26:	47cd                	li	a5,19
20405d28:	a889                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20405d2a:	fec42703          	lw	a4,-20(s0)
20405d2e:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405d32:	00f71963          	bne	a4,a5,20405d44 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:560 (discriminator 1)
20405d36:	fe842703          	lw	a4,-24(s0)
20405d3a:	47b5                	li	a5,13
20405d3c:	00f71463          	bne	a4,a5,20405d44 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:561
		return 20;
20405d40:	47d1                	li	a5,20
20405d42:	a825                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:563
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20405d44:	fec42703          	lw	a4,-20(s0)
20405d48:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405d4c:	00f71963          	bne	a4,a5,20405d5e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:563 (discriminator 1)
20405d50:	fe842703          	lw	a4,-24(s0)
20405d54:	47b9                	li	a5,14
20405d56:	00f71463          	bne	a4,a5,20405d5e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:564
		return 21;
20405d5a:	47d5                	li	a5,21
20405d5c:	a839                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:566
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20405d5e:	fec42703          	lw	a4,-20(s0)
20405d62:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
20405d66:	00f71963          	bne	a4,a5,20405d78 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:566 (discriminator 1)
20405d6a:	fe842703          	lw	a4,-24(s0)
20405d6e:	47bd                	li	a5,15
20405d70:	00f71463          	bne	a4,a5,20405d78 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:567
		return 22;
20405d74:	47d9                	li	a5,22
20405d76:	a011                	j	20405d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:570
		return 0;
20405d78:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:572
}
20405d7a:	853e                	mv	a0,a5
20405d7c:	4472                	lw	s0,28(sp)
20405d7e:	6105                	addi	sp,sp,32
20405d80:	8082                	ret

20405d82 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20405d82:	7179                	addi	sp,sp,-48
20405d84:	d606                	sw	ra,44(sp)
20405d86:	d422                	sw	s0,40(sp)
20405d88:	1800                	addi	s0,sp,48
20405d8a:	fca42e23          	sw	a0,-36(s0)
20405d8e:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405d92:	fdc42503          	lw	a0,-36(s0)
20405d96:	de9ff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405d9a:	87aa                	mv	a5,a0
20405d9c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20405da0:	fec42783          	lw	a5,-20(s0)
20405da4:	0791                	addi	a5,a5,4
20405da6:	4398                	lw	a4,0(a5)
20405da8:	fd842783          	lw	a5,-40(s0)
20405dac:	fec42683          	lw	a3,-20(s0)
20405db0:	0691                	addi	a3,a3,4
20405db2:	8fd9                	or	a5,a5,a4
20405db4:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20405db6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20405db8:	853e                	mv	a0,a5
20405dba:	50b2                	lw	ra,44(sp)
20405dbc:	5422                	lw	s0,40(sp)
20405dbe:	6145                	addi	sp,sp,48
20405dc0:	8082                	ret

20405dc2 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20405dc2:	7179                	addi	sp,sp,-48
20405dc4:	d606                	sw	ra,44(sp)
20405dc6:	d422                	sw	s0,40(sp)
20405dc8:	1800                	addi	s0,sp,48
20405dca:	fca42e23          	sw	a0,-36(s0)
20405dce:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405dd2:	fdc42503          	lw	a0,-36(s0)
20405dd6:	da9ff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405dda:	87aa                	mv	a5,a0
20405ddc:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20405de0:	fec42783          	lw	a5,-20(s0)
20405de4:	0791                	addi	a5,a5,4
20405de6:	439c                	lw	a5,0(a5)
20405de8:	fd842703          	lw	a4,-40(s0)
20405dec:	fff74713          	not	a4,a4
20405df0:	86ba                	mv	a3,a4
20405df2:	fec42703          	lw	a4,-20(s0)
20405df6:	0711                	addi	a4,a4,4
20405df8:	8ff5                	and	a5,a5,a3
20405dfa:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20405dfc:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20405dfe:	853e                	mv	a0,a5
20405e00:	50b2                	lw	ra,44(sp)
20405e02:	5422                	lw	s0,40(sp)
20405e04:	6145                	addi	sp,sp,48
20405e06:	8082                	ret

20405e08 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20405e08:	7179                	addi	sp,sp,-48
20405e0a:	d606                	sw	ra,44(sp)
20405e0c:	d422                	sw	s0,40(sp)
20405e0e:	1800                	addi	s0,sp,48
20405e10:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405e14:	fdc42503          	lw	a0,-36(s0)
20405e18:	d67ff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405e1c:	87aa                	mv	a5,a0
20405e1e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20405e22:	fec42783          	lw	a5,-20(s0)
20405e26:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20405e28:	853e                	mv	a0,a5
20405e2a:	50b2                	lw	ra,44(sp)
20405e2c:	5422                	lw	s0,40(sp)
20405e2e:	6145                	addi	sp,sp,48
20405e30:	8082                	ret

20405e32 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20405e32:	7179                	addi	sp,sp,-48
20405e34:	d606                	sw	ra,44(sp)
20405e36:	d422                	sw	s0,40(sp)
20405e38:	1800                	addi	s0,sp,48
20405e3a:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405e3e:	fdc42503          	lw	a0,-36(s0)
20405e42:	d3dff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405e46:	87aa                	mv	a5,a0
20405e48:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20405e4c:	fec42783          	lw	a5,-20(s0)
20405e50:	07b1                	addi	a5,a5,12
20405e52:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20405e54:	853e                	mv	a0,a5
20405e56:	50b2                	lw	ra,44(sp)
20405e58:	5422                	lw	s0,40(sp)
20405e5a:	6145                	addi	sp,sp,48
20405e5c:	8082                	ret

20405e5e <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20405e5e:	7179                	addi	sp,sp,-48
20405e60:	d606                	sw	ra,44(sp)
20405e62:	d422                	sw	s0,40(sp)
20405e64:	1800                	addi	s0,sp,48
20405e66:	fca42e23          	sw	a0,-36(s0)
20405e6a:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405e6e:	fdc42503          	lw	a0,-36(s0)
20405e72:	d0dff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405e76:	87aa                	mv	a5,a0
20405e78:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20405e7c:	fec42783          	lw	a5,-20(s0)
20405e80:	07a1                	addi	a5,a5,8
20405e82:	439c                	lw	a5,0(a5)
20405e84:	fd842703          	lw	a4,-40(s0)
20405e88:	fff74713          	not	a4,a4
20405e8c:	86ba                	mv	a3,a4
20405e8e:	fec42703          	lw	a4,-20(s0)
20405e92:	0721                	addi	a4,a4,8
20405e94:	8ff5                	and	a5,a5,a3
20405e96:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20405e98:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20405e9a:	853e                	mv	a0,a5
20405e9c:	50b2                	lw	ra,44(sp)
20405e9e:	5422                	lw	s0,40(sp)
20405ea0:	6145                	addi	sp,sp,48
20405ea2:	8082                	ret

20405ea4 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20405ea4:	7179                	addi	sp,sp,-48
20405ea6:	d606                	sw	ra,44(sp)
20405ea8:	d422                	sw	s0,40(sp)
20405eaa:	1800                	addi	s0,sp,48
20405eac:	fca42e23          	sw	a0,-36(s0)
20405eb0:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405eb4:	fdc42503          	lw	a0,-36(s0)
20405eb8:	cc7ff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405ebc:	87aa                	mv	a5,a0
20405ebe:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20405ec2:	fec42783          	lw	a5,-20(s0)
20405ec6:	07a1                	addi	a5,a5,8
20405ec8:	4398                	lw	a4,0(a5)
20405eca:	fd842783          	lw	a5,-40(s0)
20405ece:	fec42683          	lw	a3,-20(s0)
20405ed2:	06a1                	addi	a3,a3,8
20405ed4:	8fd9                	or	a5,a5,a4
20405ed6:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20405ed8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20405eda:	853e                	mv	a0,a5
20405edc:	50b2                	lw	ra,44(sp)
20405ede:	5422                	lw	s0,40(sp)
20405ee0:	6145                	addi	sp,sp,48
20405ee2:	8082                	ret

20405ee4 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20405ee4:	7179                	addi	sp,sp,-48
20405ee6:	d606                	sw	ra,44(sp)
20405ee8:	d422                	sw	s0,40(sp)
20405eea:	1800                	addi	s0,sp,48
20405eec:	fca42e23          	sw	a0,-36(s0)
20405ef0:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405ef4:	fdc42503          	lw	a0,-36(s0)
20405ef8:	c87ff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405efc:	87aa                	mv	a5,a0
20405efe:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20405f02:	fec42783          	lw	a5,-20(s0)
20405f06:	07b1                	addi	a5,a5,12
20405f08:	4398                	lw	a4,0(a5)
20405f0a:	fd842783          	lw	a5,-40(s0)
20405f0e:	fec42683          	lw	a3,-20(s0)
20405f12:	06b1                	addi	a3,a3,12
20405f14:	8fd9                	or	a5,a5,a4
20405f16:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20405f18:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20405f1a:	853e                	mv	a0,a5
20405f1c:	50b2                	lw	ra,44(sp)
20405f1e:	5422                	lw	s0,40(sp)
20405f20:	6145                	addi	sp,sp,48
20405f22:	8082                	ret

20405f24 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20405f24:	7179                	addi	sp,sp,-48
20405f26:	d606                	sw	ra,44(sp)
20405f28:	d422                	sw	s0,40(sp)
20405f2a:	1800                	addi	s0,sp,48
20405f2c:	fca42e23          	sw	a0,-36(s0)
20405f30:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405f34:	fdc42503          	lw	a0,-36(s0)
20405f38:	c47ff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405f3c:	87aa                	mv	a5,a0
20405f3e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20405f42:	fec42783          	lw	a5,-20(s0)
20405f46:	07b1                	addi	a5,a5,12
20405f48:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20405f4a:	fd842703          	lw	a4,-40(s0)
20405f4e:	fff74713          	not	a4,a4
20405f52:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20405f54:	fec42703          	lw	a4,-20(s0)
20405f58:	0731                	addi	a4,a4,12
20405f5a:	8ff5                	and	a5,a5,a3
20405f5c:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20405f5e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20405f60:	853e                	mv	a0,a5
20405f62:	50b2                	lw	ra,44(sp)
20405f64:	5422                	lw	s0,40(sp)
20405f66:	6145                	addi	sp,sp,48
20405f68:	8082                	ret

20405f6a <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20405f6a:	7179                	addi	sp,sp,-48
20405f6c:	d606                	sw	ra,44(sp)
20405f6e:	d422                	sw	s0,40(sp)
20405f70:	1800                	addi	s0,sp,48
20405f72:	fca42e23          	sw	a0,-36(s0)
20405f76:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405f7a:	fdc42503          	lw	a0,-36(s0)
20405f7e:	c01ff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405f82:	87aa                	mv	a5,a0
20405f84:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20405f88:	fec42783          	lw	a5,-20(s0)
20405f8c:	07b1                	addi	a5,a5,12
20405f8e:	4398                	lw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20405f90:	fd842783          	lw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20405f94:	fec42683          	lw	a3,-20(s0)
20405f98:	06b1                	addi	a3,a3,12
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20405f9a:	8fb9                	xor	a5,a5,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20405f9c:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20405f9e:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20405fa0:	853e                	mv	a0,a5
20405fa2:	50b2                	lw	ra,44(sp)
20405fa4:	5422                	lw	s0,40(sp)
20405fa6:	6145                	addi	sp,sp,48
20405fa8:	8082                	ret

20405faa <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20405faa:	7179                	addi	sp,sp,-48
20405fac:	d606                	sw	ra,44(sp)
20405fae:	d422                	sw	s0,40(sp)
20405fb0:	1800                	addi	s0,sp,48
20405fb2:	fca42e23          	sw	a0,-36(s0)
20405fb6:	fcb42c23          	sw	a1,-40(s0)
20405fba:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405fbe:	fdc42503          	lw	a0,-36(s0)
20405fc2:	bbdff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20405fc6:	87aa                	mv	a5,a0
20405fc8:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20405fcc:	fec42783          	lw	a5,-20(s0)
20405fd0:	03c78793          	addi	a5,a5,60
20405fd4:	4398                	lw	a4,0(a5)
20405fd6:	fd842783          	lw	a5,-40(s0)
20405fda:	fec42683          	lw	a3,-20(s0)
20405fde:	03c68693          	addi	a3,a3,60
20405fe2:	8fd9                	or	a5,a5,a4
20405fe4:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20405fe6:	fec42783          	lw	a5,-20(s0)
20405fea:	03878793          	addi	a5,a5,56
20405fee:	4398                	lw	a4,0(a5)
20405ff0:	fd442783          	lw	a5,-44(s0)
20405ff4:	fec42683          	lw	a3,-20(s0)
20405ff8:	03868693          	addi	a3,a3,56
20405ffc:	8fd9                	or	a5,a5,a4
20405ffe:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20406000:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20406002:	853e                	mv	a0,a5
20406004:	50b2                	lw	ra,44(sp)
20406006:	5422                	lw	s0,40(sp)
20406008:	6145                	addi	sp,sp,48
2040600a:	8082                	ret

2040600c <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
2040600c:	7179                	addi	sp,sp,-48
2040600e:	d606                	sw	ra,44(sp)
20406010:	d422                	sw	s0,40(sp)
20406012:	1800                	addi	s0,sp,48
20406014:	fca42e23          	sw	a0,-36(s0)
20406018:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040601c:	fdc42503          	lw	a0,-36(s0)
20406020:	b5fff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20406024:	87aa                	mv	a5,a0
20406026:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2040602a:	fec42783          	lw	a5,-20(s0)
2040602e:	03878793          	addi	a5,a5,56
20406032:	439c                	lw	a5,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20406034:	fd842703          	lw	a4,-40(s0)
20406038:	fff74713          	not	a4,a4
2040603c:	86ba                	mv	a3,a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2040603e:	fec42703          	lw	a4,-20(s0)
20406042:	03870713          	addi	a4,a4,56
20406046:	8ff5                	and	a5,a5,a3
20406048:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
2040604a:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
}
2040604c:	853e                	mv	a0,a5
2040604e:	50b2                	lw	ra,44(sp)
20406050:	5422                	lw	s0,40(sp)
20406052:	6145                	addi	sp,sp,48
20406054:	8082                	ret

20406056 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20406056:	7179                	addi	sp,sp,-48
20406058:	d606                	sw	ra,44(sp)
2040605a:	d422                	sw	s0,40(sp)
2040605c:	1800                	addi	s0,sp,48
2040605e:	fca42e23          	sw	a0,-36(s0)
20406062:	fcb42c23          	sw	a1,-40(s0)
20406066:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040606a:	fdc42503          	lw	a0,-36(s0)
2040606e:	b11ff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20406072:	87aa                	mv	a5,a0
20406074:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20406078:	fd442703          	lw	a4,-44(s0)
2040607c:	479d                	li	a5,7
2040607e:	1ce7e963          	bltu	a5,a4,20406250 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20406082:	fd442783          	lw	a5,-44(s0)
20406086:	00279713          	slli	a4,a5,0x2
2040608a:	204017b7          	lui	a5,0x20401
2040608e:	2f878793          	addi	a5,a5,760 # 204012f8 <__metal_driver_vtable_sifive_led+0x14>
20406092:	97ba                	add	a5,a5,a4
20406094:	439c                	lw	a5,0(a5)
20406096:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20406098:	fec42783          	lw	a5,-20(s0)
2040609c:	07e1                	addi	a5,a5,24
2040609e:	439c                	lw	a5,0(a5)
204060a0:	fd842703          	lw	a4,-40(s0)
204060a4:	fff74713          	not	a4,a4
204060a8:	86ba                	mv	a3,a4
204060aa:	fec42703          	lw	a4,-20(s0)
204060ae:	0761                	addi	a4,a4,24
204060b0:	8ff5                	and	a5,a5,a3
204060b2:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
204060b4:	fec42783          	lw	a5,-20(s0)
204060b8:	02078793          	addi	a5,a5,32
204060bc:	439c                	lw	a5,0(a5)
204060be:	fd842703          	lw	a4,-40(s0)
204060c2:	fff74713          	not	a4,a4
204060c6:	86ba                	mv	a3,a4
204060c8:	fec42703          	lw	a4,-20(s0)
204060cc:	02070713          	addi	a4,a4,32
204060d0:	8ff5                	and	a5,a5,a3
204060d2:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
204060d4:	fec42783          	lw	a5,-20(s0)
204060d8:	02878793          	addi	a5,a5,40
204060dc:	439c                	lw	a5,0(a5)
204060de:	fd842703          	lw	a4,-40(s0)
204060e2:	fff74713          	not	a4,a4
204060e6:	86ba                	mv	a3,a4
204060e8:	fec42703          	lw	a4,-20(s0)
204060ec:	02870713          	addi	a4,a4,40
204060f0:	8ff5                	and	a5,a5,a3
204060f2:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
204060f4:	fec42783          	lw	a5,-20(s0)
204060f8:	03078793          	addi	a5,a5,48
204060fc:	439c                	lw	a5,0(a5)
204060fe:	fd842703          	lw	a4,-40(s0)
20406102:	fff74713          	not	a4,a4
20406106:	86ba                	mv	a3,a4
20406108:	fec42703          	lw	a4,-20(s0)
2040610c:	03070713          	addi	a4,a4,48
20406110:	8ff5                	and	a5,a5,a3
20406112:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20406114:	aa35                	j	20406250 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406116:	fec42783          	lw	a5,-20(s0)
2040611a:	07e1                	addi	a5,a5,24
2040611c:	4398                	lw	a4,0(a5)
2040611e:	fd842783          	lw	a5,-40(s0)
20406122:	fec42683          	lw	a3,-20(s0)
20406126:	06e1                	addi	a3,a3,24
20406128:	8fd9                	or	a5,a5,a4
2040612a:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
2040612c:	a215                	j	20406250 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2040612e:	fec42783          	lw	a5,-20(s0)
20406132:	02078793          	addi	a5,a5,32
20406136:	4398                	lw	a4,0(a5)
20406138:	fd842783          	lw	a5,-40(s0)
2040613c:	fec42683          	lw	a3,-20(s0)
20406140:	02068693          	addi	a3,a3,32
20406144:	8fd9                	or	a5,a5,a4
20406146:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20406148:	a221                	j	20406250 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2040614a:	fec42783          	lw	a5,-20(s0)
2040614e:	07e1                	addi	a5,a5,24
20406150:	4398                	lw	a4,0(a5)
20406152:	fd842783          	lw	a5,-40(s0)
20406156:	fec42683          	lw	a3,-20(s0)
2040615a:	06e1                	addi	a3,a3,24
2040615c:	8fd9                	or	a5,a5,a4
2040615e:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406160:	fec42783          	lw	a5,-20(s0)
20406164:	02078793          	addi	a5,a5,32
20406168:	4398                	lw	a4,0(a5)
2040616a:	fd842783          	lw	a5,-40(s0)
2040616e:	fec42683          	lw	a3,-20(s0)
20406172:	02068693          	addi	a3,a3,32
20406176:	8fd9                	or	a5,a5,a4
20406178:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
2040617a:	a8d9                	j	20406250 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2040617c:	fec42783          	lw	a5,-20(s0)
20406180:	02878793          	addi	a5,a5,40
20406184:	4398                	lw	a4,0(a5)
20406186:	fd842783          	lw	a5,-40(s0)
2040618a:	fec42683          	lw	a3,-20(s0)
2040618e:	02868693          	addi	a3,a3,40
20406192:	8fd9                	or	a5,a5,a4
20406194:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20406196:	a86d                	j	20406250 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406198:	fec42783          	lw	a5,-20(s0)
2040619c:	03078793          	addi	a5,a5,48
204061a0:	4398                	lw	a4,0(a5)
204061a2:	fd842783          	lw	a5,-40(s0)
204061a6:	fec42683          	lw	a3,-20(s0)
204061aa:	03068693          	addi	a3,a3,48
204061ae:	8fd9                	or	a5,a5,a4
204061b0:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
204061b2:	a879                	j	20406250 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204061b4:	fec42783          	lw	a5,-20(s0)
204061b8:	02878793          	addi	a5,a5,40
204061bc:	4398                	lw	a4,0(a5)
204061be:	fd842783          	lw	a5,-40(s0)
204061c2:	fec42683          	lw	a3,-20(s0)
204061c6:	02868693          	addi	a3,a3,40
204061ca:	8fd9                	or	a5,a5,a4
204061cc:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204061ce:	fec42783          	lw	a5,-20(s0)
204061d2:	03078793          	addi	a5,a5,48
204061d6:	4398                	lw	a4,0(a5)
204061d8:	fd842783          	lw	a5,-40(s0)
204061dc:	fec42683          	lw	a3,-20(s0)
204061e0:	03068693          	addi	a3,a3,48
204061e4:	8fd9                	or	a5,a5,a4
204061e6:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
204061e8:	a0a5                	j	20406250 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
204061ea:	fec42783          	lw	a5,-20(s0)
204061ee:	07e1                	addi	a5,a5,24
204061f0:	4398                	lw	a4,0(a5)
204061f2:	fd842783          	lw	a5,-40(s0)
204061f6:	fec42683          	lw	a3,-20(s0)
204061fa:	06e1                	addi	a3,a3,24
204061fc:	8fd9                	or	a5,a5,a4
204061fe:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406200:	fec42783          	lw	a5,-20(s0)
20406204:	02078793          	addi	a5,a5,32
20406208:	4398                	lw	a4,0(a5)
2040620a:	fd842783          	lw	a5,-40(s0)
2040620e:	fec42683          	lw	a3,-20(s0)
20406212:	02068693          	addi	a3,a3,32
20406216:	8fd9                	or	a5,a5,a4
20406218:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2040621a:	fec42783          	lw	a5,-20(s0)
2040621e:	02878793          	addi	a5,a5,40
20406222:	4398                	lw	a4,0(a5)
20406224:	fd842783          	lw	a5,-40(s0)
20406228:	fec42683          	lw	a3,-20(s0)
2040622c:	02868693          	addi	a3,a3,40
20406230:	8fd9                	or	a5,a5,a4
20406232:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406234:	fec42783          	lw	a5,-20(s0)
20406238:	03078793          	addi	a5,a5,48
2040623c:	4398                	lw	a4,0(a5)
2040623e:	fd842783          	lw	a5,-40(s0)
20406242:	fec42683          	lw	a3,-20(s0)
20406246:	03068693          	addi	a3,a3,48
2040624a:	8fd9                	or	a5,a5,a4
2040624c:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
2040624e:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20406250:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20406252:	853e                	mv	a0,a5
20406254:	50b2                	lw	ra,44(sp)
20406256:	5422                	lw	s0,40(sp)
20406258:	6145                	addi	sp,sp,48
2040625a:	8082                	ret

2040625c <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
2040625c:	7179                	addi	sp,sp,-48
2040625e:	d606                	sw	ra,44(sp)
20406260:	d422                	sw	s0,40(sp)
20406262:	1800                	addi	s0,sp,48
20406264:	fca42e23          	sw	a0,-36(s0)
20406268:	fcb42c23          	sw	a1,-40(s0)
2040626c:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406270:	fdc42503          	lw	a0,-36(s0)
20406274:	90bff0ef          	jal	ra,20405b7e <__metal_driver_sifive_gpio0_base>
20406278:	87aa                	mv	a5,a0
2040627a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
2040627e:	fd442703          	lw	a4,-44(s0)
20406282:	479d                	li	a5,7
20406284:	14e7ea63          	bltu	a5,a4,204063d8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20406288:	fd442783          	lw	a5,-44(s0)
2040628c:	00279713          	slli	a4,a5,0x2
20406290:	204017b7          	lui	a5,0x20401
20406294:	31878793          	addi	a5,a5,792 # 20401318 <__metal_driver_vtable_sifive_led+0x34>
20406298:	97ba                	add	a5,a5,a4
2040629a:	439c                	lw	a5,0(a5)
2040629c:	8782                	jr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2040629e:	fec42783          	lw	a5,-20(s0)
204062a2:	07f1                	addi	a5,a5,28
204062a4:	4398                	lw	a4,0(a5)
204062a6:	fd842783          	lw	a5,-40(s0)
204062aa:	fec42683          	lw	a3,-20(s0)
204062ae:	06f1                	addi	a3,a3,28
204062b0:	8fd9                	or	a5,a5,a4
204062b2:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
204062b4:	a215                	j	204063d8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204062b6:	fec42783          	lw	a5,-20(s0)
204062ba:	02478793          	addi	a5,a5,36
204062be:	4398                	lw	a4,0(a5)
204062c0:	fd842783          	lw	a5,-40(s0)
204062c4:	fec42683          	lw	a3,-20(s0)
204062c8:	02468693          	addi	a3,a3,36
204062cc:	8fd9                	or	a5,a5,a4
204062ce:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
204062d0:	a221                	j	204063d8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
204062d2:	fec42783          	lw	a5,-20(s0)
204062d6:	07f1                	addi	a5,a5,28
204062d8:	4398                	lw	a4,0(a5)
204062da:	fd842783          	lw	a5,-40(s0)
204062de:	fec42683          	lw	a3,-20(s0)
204062e2:	06f1                	addi	a3,a3,28
204062e4:	8fd9                	or	a5,a5,a4
204062e6:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204062e8:	fec42783          	lw	a5,-20(s0)
204062ec:	02478793          	addi	a5,a5,36
204062f0:	4398                	lw	a4,0(a5)
204062f2:	fd842783          	lw	a5,-40(s0)
204062f6:	fec42683          	lw	a3,-20(s0)
204062fa:	02468693          	addi	a3,a3,36
204062fe:	8fd9                	or	a5,a5,a4
20406300:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406302:	a8d9                	j	204063d8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406304:	fec42783          	lw	a5,-20(s0)
20406308:	02c78793          	addi	a5,a5,44
2040630c:	4398                	lw	a4,0(a5)
2040630e:	fd842783          	lw	a5,-40(s0)
20406312:	fec42683          	lw	a3,-20(s0)
20406316:	02c68693          	addi	a3,a3,44
2040631a:	8fd9                	or	a5,a5,a4
2040631c:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
2040631e:	a86d                	j	204063d8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406320:	fec42783          	lw	a5,-20(s0)
20406324:	03478793          	addi	a5,a5,52
20406328:	4398                	lw	a4,0(a5)
2040632a:	fd842783          	lw	a5,-40(s0)
2040632e:	fec42683          	lw	a3,-20(s0)
20406332:	03468693          	addi	a3,a3,52
20406336:	8fd9                	or	a5,a5,a4
20406338:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
2040633a:	a879                	j	204063d8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2040633c:	fec42783          	lw	a5,-20(s0)
20406340:	02c78793          	addi	a5,a5,44
20406344:	4398                	lw	a4,0(a5)
20406346:	fd842783          	lw	a5,-40(s0)
2040634a:	fec42683          	lw	a3,-20(s0)
2040634e:	02c68693          	addi	a3,a3,44
20406352:	8fd9                	or	a5,a5,a4
20406354:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406356:	fec42783          	lw	a5,-20(s0)
2040635a:	03478793          	addi	a5,a5,52
2040635e:	4398                	lw	a4,0(a5)
20406360:	fd842783          	lw	a5,-40(s0)
20406364:	fec42683          	lw	a3,-20(s0)
20406368:	03468693          	addi	a3,a3,52
2040636c:	8fd9                	or	a5,a5,a4
2040636e:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20406370:	a0a5                	j	204063d8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406372:	fec42783          	lw	a5,-20(s0)
20406376:	07f1                	addi	a5,a5,28
20406378:	4398                	lw	a4,0(a5)
2040637a:	fd842783          	lw	a5,-40(s0)
2040637e:	fec42683          	lw	a3,-20(s0)
20406382:	06f1                	addi	a3,a3,28
20406384:	8fd9                	or	a5,a5,a4
20406386:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406388:	fec42783          	lw	a5,-20(s0)
2040638c:	02478793          	addi	a5,a5,36
20406390:	4398                	lw	a4,0(a5)
20406392:	fd842783          	lw	a5,-40(s0)
20406396:	fec42683          	lw	a3,-20(s0)
2040639a:	02468693          	addi	a3,a3,36
2040639e:	8fd9                	or	a5,a5,a4
204063a0:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
204063a2:	fec42783          	lw	a5,-20(s0)
204063a6:	02c78793          	addi	a5,a5,44
204063aa:	4398                	lw	a4,0(a5)
204063ac:	fd842783          	lw	a5,-40(s0)
204063b0:	fec42683          	lw	a3,-20(s0)
204063b4:	02c68693          	addi	a3,a3,44
204063b8:	8fd9                	or	a5,a5,a4
204063ba:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
204063bc:	fec42783          	lw	a5,-20(s0)
204063c0:	03478793          	addi	a5,a5,52
204063c4:	4398                	lw	a4,0(a5)
204063c6:	fd842783          	lw	a5,-40(s0)
204063ca:	fec42683          	lw	a3,-20(s0)
204063ce:	03468693          	addi	a3,a3,52
204063d2:	8fd9                	or	a5,a5,a4
204063d4:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
204063d6:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
204063d8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:222
}
204063da:	853e                	mv	a0,a5
204063dc:	50b2                	lw	ra,44(sp)
204063de:	5422                	lw	s0,40(sp)
204063e0:	6145                	addi	sp,sp,48
204063e2:	8082                	ret

204063e4 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
204063e4:	1101                	addi	sp,sp,-32
204063e6:	ce06                	sw	ra,28(sp)
204063e8:	cc22                	sw	s0,24(sp)
204063ea:	1000                	addi	s0,sp,32
204063ec:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
204063f0:	fec42503          	lw	a0,-20(s0)
204063f4:	fb0ff0ef          	jal	ra,20405ba4 <__metal_driver_sifive_gpio0_interrupt_parent>
204063f8:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:227
}
204063fa:	853e                	mv	a0,a5
204063fc:	40f2                	lw	ra,28(sp)
204063fe:	4462                	lw	s0,24(sp)
20406400:	6105                	addi	sp,sp,32
20406402:	8082                	ret

20406404 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20406404:	7179                	addi	sp,sp,-48
20406406:	d606                	sw	ra,44(sp)
20406408:	d422                	sw	s0,40(sp)
2040640a:	1800                	addi	s0,sp,48
2040640c:	fca42e23          	sw	a0,-36(s0)
20406410:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20406414:	fd842583          	lw	a1,-40(s0)
20406418:	fdc42503          	lw	a0,-36(s0)
2040641c:	fb2ff0ef          	jal	ra,20405bce <__metal_driver_sifive_gpio0_interrupt_lines>
20406420:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20406424:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20406428:	853e                	mv	a0,a5
2040642a:	50b2                	lw	ra,44(sp)
2040642c:	5422                	lw	s0,40(sp)
2040642e:	6145                	addi	sp,sp,48
20406430:	8082                	ret

20406432 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:952
{
20406432:	1101                	addi	sp,sp,-32
20406434:	ce22                	sw	s0,28(sp)
20406436:	1000                	addi	s0,sp,32
20406438:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:953
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040643c:	fec42703          	lw	a4,-20(s0)
20406440:	800017b7          	lui	a5,0x80001
20406444:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
20406448:	00f71563          	bne	a4,a5,20406452 <__metal_driver_sifive_uart0_control_base+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:954
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
2040644c:	100137b7          	lui	a5,0x10013
20406450:	a011                	j	20406454 <__metal_driver_sifive_uart0_control_base+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:957
		return 0;
20406452:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:959
}
20406454:	853e                	mv	a0,a5
20406456:	4472                	lw	s0,28(sp)
20406458:	6105                	addi	sp,sp,32
2040645a:	8082                	ret

2040645c <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:982
{
2040645c:	1101                	addi	sp,sp,-32
2040645e:	ce22                	sw	s0,28(sp)
20406460:	1000                	addi	s0,sp,32
20406462:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:983
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406466:	fec42703          	lw	a4,-20(s0)
2040646a:	800017b7          	lui	a5,0x80001
2040646e:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
20406472:	00f71763          	bne	a4,a5,20406480 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:984
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406476:	800007b7          	lui	a5,0x80000
2040647a:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecd0>
2040647e:	a011                	j	20406482 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:987
		return 0;
20406480:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:989
}
20406482:	853e                	mv	a0,a5
20406484:	4472                	lw	s0,28(sp)
20406486:	6105                	addi	sp,sp,32
20406488:	8082                	ret

2040648a <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:992
{
2040648a:	1101                	addi	sp,sp,-32
2040648c:	ce22                	sw	s0,28(sp)
2040648e:	1000                	addi	s0,sp,32
20406490:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:993
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406494:	fec42703          	lw	a4,-20(s0)
20406498:	800017b7          	lui	a5,0x80001
2040649c:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
204064a0:	00f71463          	bne	a4,a5,204064a8 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:994
		return 5;
204064a4:	4795                	li	a5,5
204064a6:	a011                	j	204064aa <__metal_driver_sifive_uart0_interrupt_line+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:997
		return 0;
204064a8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:999
}
204064aa:	853e                	mv	a0,a5
204064ac:	4472                	lw	s0,28(sp)
204064ae:	6105                	addi	sp,sp,32
204064b0:	8082                	ret

204064b2 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1002
{
204064b2:	1101                	addi	sp,sp,-32
204064b4:	ce22                	sw	s0,28(sp)
204064b6:	1000                	addi	s0,sp,32
204064b8:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1003
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204064bc:	fec42703          	lw	a4,-20(s0)
204064c0:	800017b7          	lui	a5,0x80001
204064c4:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
204064c8:	00f71763          	bne	a4,a5,204064d6 <__metal_driver_sifive_uart0_clock+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1004
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
204064cc:	800017b7          	lui	a5,0x80001
204064d0:	a7078793          	addi	a5,a5,-1424 # 80000a70 <metal_segment_heap_target_end+0xfffff2e0>
204064d4:	a011                	j	204064d8 <__metal_driver_sifive_uart0_clock+0x26>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1007
		return 0;
204064d6:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1009
}
204064d8:	853e                	mv	a0,a5
204064da:	4472                	lw	s0,28(sp)
204064dc:	6105                	addi	sp,sp,32
204064de:	8082                	ret

204064e0 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1012
{
204064e0:	1101                	addi	sp,sp,-32
204064e2:	ce22                	sw	s0,28(sp)
204064e4:	1000                	addi	s0,sp,32
204064e6:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1013
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204064ea:	fec42703          	lw	a4,-20(s0)
204064ee:	800017b7          	lui	a5,0x80001
204064f2:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
204064f6:	00f71563          	bne	a4,a5,20406500 <__metal_driver_sifive_uart0_pinmux+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1014
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
204064fa:	81c18793          	addi	a5,gp,-2020 # 80000a9c <__metal_dt_gpio_10012000>
204064fe:	a011                	j	20406502 <__metal_driver_sifive_uart0_pinmux+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1017
		return 0;
20406500:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1019
}
20406502:	853e                	mv	a0,a5
20406504:	4472                	lw	s0,28(sp)
20406506:	6105                	addi	sp,sp,32
20406508:	8082                	ret

2040650a <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1022
{
2040650a:	1101                	addi	sp,sp,-32
2040650c:	ce22                	sw	s0,28(sp)
2040650e:	1000                	addi	s0,sp,32
20406510:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1023
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406514:	fec42703          	lw	a4,-20(s0)
20406518:	800017b7          	lui	a5,0x80001
2040651c:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
20406520:	00f71463          	bne	a4,a5,20406528 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1024
		return 0;
20406524:	4781                	li	a5,0
20406526:	a011                	j	2040652a <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1027
		return 0;
20406528:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1029
}
2040652a:	853e                	mv	a0,a5
2040652c:	4472                	lw	s0,28(sp)
2040652e:	6105                	addi	sp,sp,32
20406530:	8082                	ret

20406532 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1032
{
20406532:	1101                	addi	sp,sp,-32
20406534:	ce22                	sw	s0,28(sp)
20406536:	1000                	addi	s0,sp,32
20406538:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1033
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040653c:	fec42703          	lw	a4,-20(s0)
20406540:	800017b7          	lui	a5,0x80001
20406544:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
20406548:	00f71563          	bne	a4,a5,20406552 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1034
		return 196608;
2040654c:	000307b7          	lui	a5,0x30
20406550:	a011                	j	20406554 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1037
		return 0;
20406552:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:1039
}
20406554:	853e                	mv	a0,a5
20406556:	4472                	lw	s0,28(sp)
20406558:	6105                	addi	sp,sp,32
2040655a:	8082                	ret

2040655c <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
2040655c:	1101                	addi	sp,sp,-32
2040655e:	ce06                	sw	ra,28(sp)
20406560:	cc22                	sw	s0,24(sp)
20406562:	1000                	addi	s0,sp,32
20406564:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20406568:	fec42503          	lw	a0,-20(s0)
2040656c:	ef1ff0ef          	jal	ra,2040645c <__metal_driver_sifive_uart0_interrupt_parent>
20406570:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
20406572:	853e                	mv	a0,a5
20406574:	40f2                	lw	ra,28(sp)
20406576:	4462                	lw	s0,24(sp)
20406578:	6105                	addi	sp,sp,32
2040657a:	8082                	ret

2040657c <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
2040657c:	1101                	addi	sp,sp,-32
2040657e:	ce06                	sw	ra,28(sp)
20406580:	cc22                	sw	s0,24(sp)
20406582:	1000                	addi	s0,sp,32
20406584:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20406588:	fec42503          	lw	a0,-20(s0)
2040658c:	effff0ef          	jal	ra,2040648a <__metal_driver_sifive_uart0_interrupt_line>
20406590:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43
}
20406592:	853e                	mv	a0,a5
20406594:	40f2                	lw	ra,28(sp)
20406596:	4462                	lw	s0,24(sp)
20406598:	6105                	addi	sp,sp,32
2040659a:	8082                	ret

2040659c <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
2040659c:	7179                	addi	sp,sp,-48
2040659e:	d606                	sw	ra,44(sp)
204065a0:	d422                	sw	s0,40(sp)
204065a2:	1800                	addi	s0,sp,48
204065a4:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204065a8:	fdc42503          	lw	a0,-36(s0)
204065ac:	e87ff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
204065b0:	87aa                	mv	a5,a0
204065b2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
204065b6:	fec42783          	lw	a5,-20(s0)
204065ba:	07c1                	addi	a5,a5,16
204065bc:	439c                	lw	a5,0(a5)
204065be:	fec42703          	lw	a4,-20(s0)
204065c2:	0741                	addi	a4,a4,16
204065c4:	0017e793          	ori	a5,a5,1
204065c8:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
204065ca:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:50
}
204065cc:	853e                	mv	a0,a5
204065ce:	50b2                	lw	ra,44(sp)
204065d0:	5422                	lw	s0,40(sp)
204065d2:	6145                	addi	sp,sp,48
204065d4:	8082                	ret

204065d6 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
204065d6:	7179                	addi	sp,sp,-48
204065d8:	d606                	sw	ra,44(sp)
204065da:	d422                	sw	s0,40(sp)
204065dc:	1800                	addi	s0,sp,48
204065de:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204065e2:	fdc42503          	lw	a0,-36(s0)
204065e6:	e4dff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
204065ea:	87aa                	mv	a5,a0
204065ec:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
204065f0:	fec42783          	lw	a5,-20(s0)
204065f4:	07c1                	addi	a5,a5,16
204065f6:	439c                	lw	a5,0(a5)
204065f8:	fec42703          	lw	a4,-20(s0)
204065fc:	0741                	addi	a4,a4,16
204065fe:	9bf9                	andi	a5,a5,-2
20406600:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20406602:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
}
20406604:	853e                	mv	a0,a5
20406606:	50b2                	lw	ra,44(sp)
20406608:	5422                	lw	s0,40(sp)
2040660a:	6145                	addi	sp,sp,48
2040660c:	8082                	ret

2040660e <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
2040660e:	7179                	addi	sp,sp,-48
20406610:	d606                	sw	ra,44(sp)
20406612:	d422                	sw	s0,40(sp)
20406614:	1800                	addi	s0,sp,48
20406616:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040661a:	fdc42503          	lw	a0,-36(s0)
2040661e:	e15ff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
20406622:	87aa                	mv	a5,a0
20406624:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20406628:	fec42783          	lw	a5,-20(s0)
2040662c:	07c1                	addi	a5,a5,16
2040662e:	439c                	lw	a5,0(a5)
20406630:	fec42703          	lw	a4,-20(s0)
20406634:	0741                	addi	a4,a4,16
20406636:	0027e793          	ori	a5,a5,2
2040663a:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
2040663c:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:64
}
2040663e:	853e                	mv	a0,a5
20406640:	50b2                	lw	ra,44(sp)
20406642:	5422                	lw	s0,40(sp)
20406644:	6145                	addi	sp,sp,48
20406646:	8082                	ret

20406648 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20406648:	7179                	addi	sp,sp,-48
2040664a:	d606                	sw	ra,44(sp)
2040664c:	d422                	sw	s0,40(sp)
2040664e:	1800                	addi	s0,sp,48
20406650:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406654:	fdc42503          	lw	a0,-36(s0)
20406658:	ddbff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
2040665c:	87aa                	mv	a5,a0
2040665e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20406662:	fec42783          	lw	a5,-20(s0)
20406666:	07c1                	addi	a5,a5,16
20406668:	439c                	lw	a5,0(a5)
2040666a:	fec42703          	lw	a4,-20(s0)
2040666e:	0741                	addi	a4,a4,16
20406670:	9bf5                	andi	a5,a5,-3
20406672:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20406674:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
}
20406676:	853e                	mv	a0,a5
20406678:	50b2                	lw	ra,44(sp)
2040667a:	5422                	lw	s0,40(sp)
2040667c:	6145                	addi	sp,sp,48
2040667e:	8082                	ret

20406680 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20406680:	7179                	addi	sp,sp,-48
20406682:	d606                	sw	ra,44(sp)
20406684:	d422                	sw	s0,40(sp)
20406686:	1800                	addi	s0,sp,48
20406688:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040668c:	fdc42503          	lw	a0,-36(s0)
20406690:	da3ff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
20406694:	87aa                	mv	a5,a0
20406696:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
2040669a:	fec42783          	lw	a5,-20(s0)
2040669e:	439c                	lw	a5,0(a5)
204066a0:	83fd                	srli	a5,a5,0x1f
204066a2:	0ff7f793          	andi	a5,a5,255
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:77
}
204066a6:	853e                	mv	a0,a5
204066a8:	50b2                	lw	ra,44(sp)
204066aa:	5422                	lw	s0,40(sp)
204066ac:	6145                	addi	sp,sp,48
204066ae:	8082                	ret

204066b0 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
204066b0:	7179                	addi	sp,sp,-48
204066b2:	d606                	sw	ra,44(sp)
204066b4:	d422                	sw	s0,40(sp)
204066b6:	1800                	addi	s0,sp,48
204066b8:	fca42e23          	sw	a0,-36(s0)
204066bc:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204066c0:	fdc42503          	lw	a0,-36(s0)
204066c4:	d6fff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
204066c8:	87aa                	mv	a5,a0
204066ca:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
204066ce:	fec42783          	lw	a5,-20(s0)
204066d2:	07a1                	addi	a5,a5,8
204066d4:	4398                	lw	a4,0(a5)
204066d6:	fd842783          	lw	a5,-40(s0)
204066da:	01079693          	slli	a3,a5,0x10
204066de:	000707b7          	lui	a5,0x70
204066e2:	8ff5                	and	a5,a5,a3
204066e4:	fec42683          	lw	a3,-20(s0)
204066e8:	06a1                	addi	a3,a3,8
204066ea:	8fd9                	or	a5,a5,a4
204066ec:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
204066ee:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
}
204066f0:	853e                	mv	a0,a5
204066f2:	50b2                	lw	ra,44(sp)
204066f4:	5422                	lw	s0,40(sp)
204066f6:	6145                	addi	sp,sp,48
204066f8:	8082                	ret

204066fa <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
204066fa:	7179                	addi	sp,sp,-48
204066fc:	d606                	sw	ra,44(sp)
204066fe:	d422                	sw	s0,40(sp)
20406700:	1800                	addi	s0,sp,48
20406702:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406706:	fdc42503          	lw	a0,-36(s0)
2040670a:	d29ff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
2040670e:	87aa                	mv	a5,a0
20406710:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20406714:	fec42783          	lw	a5,-20(s0)
20406718:	07a1                	addi	a5,a5,8
2040671a:	439c                	lw	a5,0(a5)
2040671c:	83c1                	srli	a5,a5,0x10
2040671e:	8b9d                	andi	a5,a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91
}
20406720:	853e                	mv	a0,a5
20406722:	50b2                	lw	ra,44(sp)
20406724:	5422                	lw	s0,40(sp)
20406726:	6145                	addi	sp,sp,48
20406728:	8082                	ret

2040672a <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2040672a:	7179                	addi	sp,sp,-48
2040672c:	d606                	sw	ra,44(sp)
2040672e:	d422                	sw	s0,40(sp)
20406730:	1800                	addi	s0,sp,48
20406732:	fca42e23          	sw	a0,-36(s0)
20406736:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040673a:	fdc42503          	lw	a0,-36(s0)
2040673e:	cf5ff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
20406742:	87aa                	mv	a5,a0
20406744:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20406748:	fec42783          	lw	a5,-20(s0)
2040674c:	07b1                	addi	a5,a5,12
2040674e:	4398                	lw	a4,0(a5)
20406750:	fd842783          	lw	a5,-40(s0)
20406754:	01079693          	slli	a3,a5,0x10
20406758:	000707b7          	lui	a5,0x70
2040675c:	8ff5                	and	a5,a5,a3
2040675e:	fec42683          	lw	a3,-20(s0)
20406762:	06b1                	addi	a3,a3,12
20406764:	8fd9                	or	a5,a5,a4
20406766:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20406768:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:99
}
2040676a:	853e                	mv	a0,a5
2040676c:	50b2                	lw	ra,44(sp)
2040676e:	5422                	lw	s0,40(sp)
20406770:	6145                	addi	sp,sp,48
20406772:	8082                	ret

20406774 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20406774:	7179                	addi	sp,sp,-48
20406776:	d606                	sw	ra,44(sp)
20406778:	d422                	sw	s0,40(sp)
2040677a:	1800                	addi	s0,sp,48
2040677c:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406780:	fdc42503          	lw	a0,-36(s0)
20406784:	cafff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
20406788:	87aa                	mv	a5,a0
2040678a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
2040678e:	fec42783          	lw	a5,-20(s0)
20406792:	07b1                	addi	a5,a5,12
20406794:	439c                	lw	a5,0(a5)
20406796:	83c1                	srli	a5,a5,0x10
20406798:	8b9d                	andi	a5,a5,7
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:105
}
2040679a:	853e                	mv	a0,a5
2040679c:	50b2                	lw	ra,44(sp)
2040679e:	5422                	lw	s0,40(sp)
204067a0:	6145                	addi	sp,sp,48
204067a2:	8082                	ret

204067a4 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
204067a4:	7179                	addi	sp,sp,-48
204067a6:	d606                	sw	ra,44(sp)
204067a8:	d422                	sw	s0,40(sp)
204067aa:	1800                	addi	s0,sp,48
204067ac:	fca42e23          	sw	a0,-36(s0)
204067b0:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204067b4:	fdc42503          	lw	a0,-36(s0)
204067b8:	c7bff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
204067bc:	87aa                	mv	a5,a0
204067be:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
204067c2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
204067c4:	fdc42503          	lw	a0,-36(s0)
204067c8:	eb9ff0ef          	jal	ra,20406680 <__metal_driver_sifive_uart0_txready>
204067cc:	87aa                	mv	a5,a0
204067ce:	fbfd                	bnez	a5,204067c4 <__metal_driver_sifive_uart0_putc+0x20>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
204067d0:	fec42783          	lw	a5,-20(s0)
204067d4:	fd842703          	lw	a4,-40(s0)
204067d8:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
204067da:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:115
}
204067dc:	853e                	mv	a0,a5
204067de:	50b2                	lw	ra,44(sp)
204067e0:	5422                	lw	s0,40(sp)
204067e2:	6145                	addi	sp,sp,48
204067e4:	8082                	ret

204067e6 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
204067e6:	7179                	addi	sp,sp,-48
204067e8:	d606                	sw	ra,44(sp)
204067ea:	d422                	sw	s0,40(sp)
204067ec:	1800                	addi	s0,sp,48
204067ee:	fca42e23          	sw	a0,-36(s0)
204067f2:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204067f6:	fdc42503          	lw	a0,-36(s0)
204067fa:	c39ff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
204067fe:	87aa                	mv	a5,a0
20406800:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20406804:	fec42783          	lw	a5,-20(s0)
20406808:	0791                	addi	a5,a5,4
2040680a:	439c                	lw	a5,0(a5)
2040680c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20406810:	fe842783          	lw	a5,-24(s0)
20406814:	0007d763          	bgez	a5,20406822 <__metal_driver_sifive_uart0_getc+0x3c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20406818:	fd842783          	lw	a5,-40(s0)
2040681c:	577d                	li	a4,-1
2040681e:	c398                	sw	a4,0(a5)
20406820:	a801                	j	20406830 <__metal_driver_sifive_uart0_getc+0x4a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20406822:	fe842783          	lw	a5,-24(s0)
20406826:	0ff7f713          	andi	a4,a5,255
2040682a:	fd842783          	lw	a5,-40(s0)
2040682e:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20406830:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
}
20406832:	853e                	mv	a0,a5
20406834:	50b2                	lw	ra,44(sp)
20406836:	5422                	lw	s0,40(sp)
20406838:	6145                	addi	sp,sp,48
2040683a:	8082                	ret

2040683c <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
2040683c:	7179                	addi	sp,sp,-48
2040683e:	d622                	sw	s0,44(sp)
20406840:	1800                	addi	s0,sp,48
20406842:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406846:	fdc42783          	lw	a5,-36(s0)
2040684a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
2040684e:	fec42783          	lw	a5,-20(s0)
20406852:	43dc                	lw	a5,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
}
20406854:	853e                	mv	a0,a5
20406856:	5432                	lw	s0,44(sp)
20406858:	6145                	addi	sp,sp,48
2040685a:	8082                	ret

2040685c <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
2040685c:	7179                	addi	sp,sp,-48
2040685e:	d606                	sw	ra,44(sp)
20406860:	d422                	sw	s0,40(sp)
20406862:	1800                	addi	s0,sp,48
20406864:	fca42e23          	sw	a0,-36(s0)
20406868:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2040686c:	fdc42783          	lw	a5,-36(s0)
20406870:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20406874:	fdc42503          	lw	a0,-36(s0)
20406878:	bbbff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
2040687c:	87aa                	mv	a5,a0
2040687e:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406882:	fdc42503          	lw	a0,-36(s0)
20406886:	c2dff0ef          	jal	ra,204064b2 <__metal_driver_sifive_uart0_clock>
2040688a:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2040688e:	fd842703          	lw	a4,-40(s0)
20406892:	fec42783          	lw	a5,-20(s0)
20406896:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20406898:	fe442783          	lw	a5,-28(s0)
2040689c:	cbb1                	beqz	a5,204068f0 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2040689e:	fe442783          	lw	a5,-28(s0)
204068a2:	439c                	lw	a5,0(a5)
204068a4:	439c                	lw	a5,0(a5)
204068a6:	fe442503          	lw	a0,-28(s0)
204068aa:	9782                	jalr	a5
204068ac:	fea42023          	sw	a0,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
204068b0:	fe042703          	lw	a4,-32(s0)
204068b4:	fd842783          	lw	a5,-40(s0)
204068b8:	02f747b3          	div	a5,a4,a5
204068bc:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
204068c0:	fe842783          	lw	a5,-24(s0)
204068c4:	07e1                	addi	a5,a5,24
204068c6:	c398                	sw	a4,0(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
204068c8:	fe842783          	lw	a5,-24(s0)
204068cc:	07a1                	addi	a5,a5,8
204068ce:	439c                	lw	a5,0(a5)
204068d0:	fe842703          	lw	a4,-24(s0)
204068d4:	0721                	addi	a4,a4,8
204068d6:	0017e793          	ori	a5,a5,1
204068da:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
204068dc:	fe842783          	lw	a5,-24(s0)
204068e0:	07b1                	addi	a5,a5,12
204068e2:	439c                	lw	a5,0(a5)
204068e4:	fe842703          	lw	a4,-24(s0)
204068e8:	0731                	addi	a4,a4,12
204068ea:	0017e793          	ori	a5,a5,1
204068ee:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
204068f0:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
}
204068f2:	853e                	mv	a0,a5
204068f4:	50b2                	lw	ra,44(sp)
204068f6:	5422                	lw	s0,40(sp)
204068f8:	6145                	addi	sp,sp,48
204068fa:	8082                	ret

204068fc <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
204068fc:	7139                	addi	sp,sp,-64
204068fe:	de06                	sw	ra,60(sp)
20406900:	dc22                	sw	s0,56(sp)
20406902:	0080                	addi	s0,sp,64
20406904:	fca42623          	sw	a0,-52(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20406908:	fcc42783          	lw	a5,-52(s0)
2040690c:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20406910:	fcc42503          	lw	a0,-52(s0)
20406914:	b1fff0ef          	jal	ra,20406432 <__metal_driver_sifive_uart0_control_base>
20406918:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
2040691a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2040691e:	fcc42503          	lw	a0,-52(s0)
20406922:	b91ff0ef          	jal	ra,204064b2 <__metal_driver_sifive_uart0_clock>
20406926:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
2040692a:	fe842783          	lw	a5,-24(s0)
2040692e:	07a1                	addi	a5,a5,8
20406930:	4398                	lw	a4,0(a5)
20406932:	fe842783          	lw	a5,-24(s0)
20406936:	07a1                	addi	a5,a5,8
20406938:	86be                	mv	a3,a5
2040693a:	fff907b7          	lui	a5,0xfff90
2040693e:	17fd                	addi	a5,a5,-1
20406940:	8ff9                	and	a5,a5,a4
20406942:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20406944:	fe842783          	lw	a5,-24(s0)
20406948:	07a1                	addi	a5,a5,8
2040694a:	4398                	lw	a4,0(a5)
2040694c:	fe842783          	lw	a5,-24(s0)
20406950:	07a1                	addi	a5,a5,8
20406952:	86be                	mv	a3,a5
20406954:	67c1                	lui	a5,0x10
20406956:	8fd9                	or	a5,a5,a4
20406958:	c29c                	sw	a5,0(a3)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
2040695a:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
2040695c:	fe842783          	lw	a5,-24(s0)
20406960:	07d1                	addi	a5,a5,20
20406962:	439c                	lw	a5,0(a5)
20406964:	8b85                	andi	a5,a5,1
20406966:	dbfd                	beqz	a5,2040695c <pre_rate_change_callback_func+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20406968:	fe842783          	lw	a5,-24(s0)
2040696c:	07a1                	addi	a5,a5,8
2040696e:	439c                	lw	a5,0(a5)
20406970:	8b89                	andi	a5,a5,2
20406972:	c399                	beqz	a5,20406978 <pre_rate_change_callback_func+0x7c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20406974:	47a5                	li	a5,9
20406976:	a011                	j	2040697a <pre_rate_change_callback_func+0x7e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20406978:	47a9                	li	a5,10
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
2040697a:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2040697e:	fe442783          	lw	a5,-28(s0)
20406982:	439c                	lw	a5,0(a5)
20406984:	439c                	lw	a5,0(a5)
20406986:	fe442503          	lw	a0,-28(s0)
2040698a:	9782                	jalr	a5
2040698c:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20406990:	fe042703          	lw	a4,-32(s0)
20406994:	fdc42783          	lw	a5,-36(s0)
20406998:	02f707b3          	mul	a5,a4,a5
2040699c:	873e                	mv	a4,a5
2040699e:	fec42783          	lw	a5,-20(s0)
204069a2:	43dc                	lw	a5,4(a5)
204069a4:	02f757b3          	divu	a5,a4,a5
204069a8:	fcf42c23          	sw	a5,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
204069ac:	fc042a23          	sw	zero,-44(s0)
204069b0:	a039                	j	204069be <pre_rate_change_callback_func+0xc2>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
204069b2:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
204069b4:	fd442783          	lw	a5,-44(s0)
204069b8:	0785                	addi	a5,a5,1
204069ba:	fcf42a23          	sw	a5,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
204069be:	fd442783          	lw	a5,-44(s0)
204069c2:	fd842703          	lw	a4,-40(s0)
204069c6:	fee7c6e3          	blt	a5,a4,204069b2 <pre_rate_change_callback_func+0xb6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:180
}
204069ca:	0001                	nop
204069cc:	50f2                	lw	ra,60(sp)
204069ce:	5462                	lw	s0,56(sp)
204069d0:	6121                	addi	sp,sp,64
204069d2:	8082                	ret

204069d4 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
204069d4:	7179                	addi	sp,sp,-48
204069d6:	d606                	sw	ra,44(sp)
204069d8:	d422                	sw	s0,40(sp)
204069da:	1800                	addi	s0,sp,48
204069dc:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
204069e0:	fdc42783          	lw	a5,-36(s0)
204069e4:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
204069e8:	fec42703          	lw	a4,-20(s0)
204069ec:	fec42783          	lw	a5,-20(s0)
204069f0:	43dc                	lw	a5,4(a5)
204069f2:	85be                	mv	a1,a5
204069f4:	853a                	mv	a0,a4
204069f6:	2ed9                	jal	20406dcc <metal_uart_set_baud_rate>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:185
}
204069f8:	0001                	nop
204069fa:	50b2                	lw	ra,44(sp)
204069fc:	5422                	lw	s0,40(sp)
204069fe:	6145                	addi	sp,sp,48
20406a00:	8082                	ret

20406a02 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
20406a02:	7139                	addi	sp,sp,-64
20406a04:	de06                	sw	ra,60(sp)
20406a06:	dc22                	sw	s0,56(sp)
20406a08:	0080                	addi	s0,sp,64
20406a0a:	fca42623          	sw	a0,-52(s0)
20406a0e:	fcb42423          	sw	a1,-56(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20406a12:	fcc42783          	lw	a5,-52(s0)
20406a16:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406a1a:	fcc42503          	lw	a0,-52(s0)
20406a1e:	a95ff0ef          	jal	ra,204064b2 <__metal_driver_sifive_uart0_clock>
20406a22:	fea42423          	sw	a0,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20406a26:	fcc42503          	lw	a0,-52(s0)
20406a2a:	ab7ff0ef          	jal	ra,204064e0 <__metal_driver_sifive_uart0_pinmux>
20406a2e:	fea42223          	sw	a0,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
20406a32:	fe842783          	lw	a5,-24(s0)
20406a36:	c7b9                	beqz	a5,20406a84 <__metal_driver_sifive_uart0_init+0x82>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20406a38:	fec42783          	lw	a5,-20(s0)
20406a3c:	20407737          	lui	a4,0x20407
20406a40:	8fc70713          	addi	a4,a4,-1796 # 204068fc <pre_rate_change_callback_func>
20406a44:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20406a46:	fec42783          	lw	a5,-20(s0)
20406a4a:	fcc42703          	lw	a4,-52(s0)
20406a4e:	c7d8                	sw	a4,12(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20406a50:	fec42783          	lw	a5,-20(s0)
20406a54:	07a1                	addi	a5,a5,8
20406a56:	85be                	mv	a1,a5
20406a58:	fe842503          	lw	a0,-24(s0)
20406a5c:	2ab5                	jal	20406bd8 <metal_clock_register_pre_rate_change_callback>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20406a5e:	fec42783          	lw	a5,-20(s0)
20406a62:	20407737          	lui	a4,0x20407
20406a66:	9d470713          	addi	a4,a4,-1580 # 204069d4 <post_rate_change_callback_func>
20406a6a:	cbd8                	sw	a4,20(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20406a6c:	fec42783          	lw	a5,-20(s0)
20406a70:	fcc42703          	lw	a4,-52(s0)
20406a74:	cf98                	sw	a4,24(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20406a76:	fec42783          	lw	a5,-20(s0)
20406a7a:	07d1                	addi	a5,a5,20
20406a7c:	85be                	mv	a1,a5
20406a7e:	fe842503          	lw	a0,-24(s0)
20406a82:	2261                	jal	20406c0a <metal_clock_register_post_rate_change_callback>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20406a84:	fec42783          	lw	a5,-20(s0)
20406a88:	fc842583          	lw	a1,-56(s0)
20406a8c:	853e                	mv	a0,a5
20406a8e:	2e3d                	jal	20406dcc <metal_uart_set_baud_rate>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20406a90:	fe442783          	lw	a5,-28(s0)
20406a94:	cb95                	beqz	a5,20406ac8 <__metal_driver_sifive_uart0_init+0xc6>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20406a96:	fcc42503          	lw	a0,-52(s0)
20406a9a:	a71ff0ef          	jal	ra,2040650a <__metal_driver_sifive_uart0_pinmux_output_selector>
20406a9e:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20406aa0:	fef42023          	sw	a5,-32(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20406aa4:	fcc42503          	lw	a0,-52(s0)
20406aa8:	a8bff0ef          	jal	ra,20406532 <__metal_driver_sifive_uart0_pinmux_source_selector>
20406aac:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20406aae:	fcf42e23          	sw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20406ab2:	fe442783          	lw	a5,-28(s0)
20406ab6:	439c                	lw	a5,0(a5)
20406ab8:	53dc                	lw	a5,36(a5)
20406aba:	fdc42603          	lw	a2,-36(s0)
20406abe:	fe042583          	lw	a1,-32(s0)
20406ac2:	fe442503          	lw	a0,-28(s0)
20406ac6:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20406ac8:	0001                	nop
20406aca:	50f2                	lw	ra,60(sp)
20406acc:	5462                	lw	s0,56(sp)
20406ace:	6121                	addi	sp,sp,64
20406ad0:	8082                	ret

20406ad2 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20406ad2:	7179                	addi	sp,sp,-48
20406ad4:	d606                	sw	ra,44(sp)
20406ad6:	d422                	sw	s0,40(sp)
20406ad8:	1800                	addi	s0,sp,48
20406ada:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20406ade:	fdc42783          	lw	a5,-36(s0)
20406ae2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:52
    while (current) {
20406ae6:	a831                	j	20406b02 <_metal_clock_call_all_callbacks+0x30>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20406ae8:	fec42783          	lw	a5,-20(s0)
20406aec:	4398                	lw	a4,0(a5)
20406aee:	fec42783          	lw	a5,-20(s0)
20406af2:	43dc                	lw	a5,4(a5)
20406af4:	853e                	mv	a0,a5
20406af6:	9702                	jalr	a4
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:54
        current = current->_next;
20406af8:	fec42783          	lw	a5,-20(s0)
20406afc:	479c                	lw	a5,8(a5)
20406afe:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:52
    while (current) {
20406b02:	fec42783          	lw	a5,-20(s0)
20406b06:	f3ed                	bnez	a5,20406ae8 <_metal_clock_call_all_callbacks+0x16>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:56
    }
}
20406b08:	0001                	nop
20406b0a:	50b2                	lw	ra,44(sp)
20406b0c:	5422                	lw	s0,40(sp)
20406b0e:	6145                	addi	sp,sp,48
20406b10:	8082                	ret

20406b12 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20406b12:	7179                	addi	sp,sp,-48
20406b14:	d622                	sw	s0,44(sp)
20406b16:	1800                	addi	s0,sp,48
20406b18:	fca42e23          	sw	a0,-36(s0)
20406b1c:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20406b20:	fd842783          	lw	a5,-40(s0)
20406b24:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:66

    if (!list) {
20406b28:	fdc42783          	lw	a5,-36(s0)
20406b2c:	e781                	bnez	a5,20406b34 <_metal_clock_append_to_callbacks+0x22>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:67
        return cb;
20406b2e:	fd842783          	lw	a5,-40(s0)
20406b32:	a035                	j	20406b5e <_metal_clock_append_to_callbacks+0x4c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20406b34:	fdc42783          	lw	a5,-36(s0)
20406b38:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20406b3c:	a031                	j	20406b48 <_metal_clock_append_to_callbacks+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:73
        current = current->_next;
20406b3e:	fec42783          	lw	a5,-20(s0)
20406b42:	479c                	lw	a5,8(a5)
20406b44:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20406b48:	fec42783          	lw	a5,-20(s0)
20406b4c:	479c                	lw	a5,8(a5)
20406b4e:	fbe5                	bnez	a5,20406b3e <_metal_clock_append_to_callbacks+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20406b50:	fec42783          	lw	a5,-20(s0)
20406b54:	fd842703          	lw	a4,-40(s0)
20406b58:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:78

    return list;
20406b5a:	fdc42783          	lw	a5,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:79
}
20406b5e:	853e                	mv	a0,a5
20406b60:	5432                	lw	s0,44(sp)
20406b62:	6145                	addi	sp,sp,48
20406b64:	8082                	ret

20406b66 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20406b66:	1101                	addi	sp,sp,-32
20406b68:	ce06                	sw	ra,28(sp)
20406b6a:	cc22                	sw	s0,24(sp)
20406b6c:	1000                	addi	s0,sp,32
20406b6e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20406b72:	fec42783          	lw	a5,-20(s0)
20406b76:	439c                	lw	a5,0(a5)
20406b78:	439c                	lw	a5,0(a5)
20406b7a:	fec42503          	lw	a0,-20(s0)
20406b7e:	9782                	jalr	a5
20406b80:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:112
}
20406b82:	853e                	mv	a0,a5
20406b84:	40f2                	lw	ra,28(sp)
20406b86:	4462                	lw	s0,24(sp)
20406b88:	6105                	addi	sp,sp,32
20406b8a:	8082                	ret

20406b8c <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20406b8c:	7179                	addi	sp,sp,-48
20406b8e:	d606                	sw	ra,44(sp)
20406b90:	d422                	sw	s0,40(sp)
20406b92:	1800                	addi	s0,sp,48
20406b94:	fca42e23          	sw	a0,-36(s0)
20406b98:	fcb42c23          	sw	a1,-40(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20406b9c:	fdc42783          	lw	a5,-36(s0)
20406ba0:	43dc                	lw	a5,4(a5)
20406ba2:	853e                	mv	a0,a5
20406ba4:	f2fff0ef          	jal	ra,20406ad2 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20406ba8:	fdc42783          	lw	a5,-36(s0)
20406bac:	439c                	lw	a5,0(a5)
20406bae:	43dc                	lw	a5,4(a5)
20406bb0:	fd842583          	lw	a1,-40(s0)
20406bb4:	fdc42503          	lw	a0,-36(s0)
20406bb8:	9782                	jalr	a5
20406bba:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20406bbe:	fdc42783          	lw	a5,-36(s0)
20406bc2:	479c                	lw	a5,8(a5)
20406bc4:	853e                	mv	a0,a5
20406bc6:	f0dff0ef          	jal	ra,20406ad2 <_metal_clock_call_all_callbacks>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:135

    return out;
20406bca:	fec42783          	lw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:136
}
20406bce:	853e                	mv	a0,a5
20406bd0:	50b2                	lw	ra,44(sp)
20406bd2:	5422                	lw	s0,40(sp)
20406bd4:	6145                	addi	sp,sp,48
20406bd6:	8082                	ret

20406bd8 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20406bd8:	1101                	addi	sp,sp,-32
20406bda:	ce06                	sw	ra,28(sp)
20406bdc:	cc22                	sw	s0,24(sp)
20406bde:	1000                	addi	s0,sp,32
20406be0:	fea42623          	sw	a0,-20(s0)
20406be4:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20406be8:	fec42783          	lw	a5,-20(s0)
20406bec:	43dc                	lw	a5,4(a5)
20406bee:	fe842583          	lw	a1,-24(s0)
20406bf2:	853e                	mv	a0,a5
20406bf4:	f1fff0ef          	jal	ra,20406b12 <_metal_clock_append_to_callbacks>
20406bf8:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20406bfa:	fec42783          	lw	a5,-20(s0)
20406bfe:	c3d8                	sw	a4,4(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:149
}
20406c00:	0001                	nop
20406c02:	40f2                	lw	ra,28(sp)
20406c04:	4462                	lw	s0,24(sp)
20406c06:	6105                	addi	sp,sp,32
20406c08:	8082                	ret

20406c0a <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20406c0a:	1101                	addi	sp,sp,-32
20406c0c:	ce06                	sw	ra,28(sp)
20406c0e:	cc22                	sw	s0,24(sp)
20406c10:	1000                	addi	s0,sp,32
20406c12:	fea42623          	sw	a0,-20(s0)
20406c16:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20406c1a:	fec42783          	lw	a5,-20(s0)
20406c1e:	479c                	lw	a5,8(a5)
20406c20:	fe842583          	lw	a1,-24(s0)
20406c24:	853e                	mv	a0,a5
20406c26:	eedff0ef          	jal	ra,20406b12 <_metal_clock_append_to_callbacks>
20406c2a:	872a                	mv	a4,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20406c2c:	fec42783          	lw	a5,-20(s0)
20406c30:	c798                	sw	a4,8(a5)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/clock.h:162
}
20406c32:	0001                	nop
20406c34:	40f2                	lw	ra,28(sp)
20406c36:	4462                	lw	s0,24(sp)
20406c38:	6105                	addi	sp,sp,32
20406c3a:	8082                	ret

20406c3c <metal_gpio_disable_input>:
metal_gpio_disable_input():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:79
 * @brief Disable input on a pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the input is successfully disabled
 */
__inline__ int metal_gpio_disable_input(struct metal_gpio *gpio, int pin) {
20406c3c:	1101                	addi	sp,sp,-32
20406c3e:	ce06                	sw	ra,28(sp)
20406c40:	cc22                	sw	s0,24(sp)
20406c42:	1000                	addi	s0,sp,32
20406c44:	fea42623          	sw	a0,-20(s0)
20406c48:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:80
    if (!gpio) {
20406c4c:	fec42783          	lw	a5,-20(s0)
20406c50:	e399                	bnez	a5,20406c56 <metal_gpio_disable_input+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:81
        return 1;
20406c52:	4785                	li	a5,1
20406c54:	a839                	j	20406c72 <metal_gpio_disable_input+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:84
    }

    return gpio->vtable->disable_input(gpio, (1 << pin));
20406c56:	fec42783          	lw	a5,-20(s0)
20406c5a:	439c                	lw	a5,0(a5)
20406c5c:	4394                	lw	a3,0(a5)
20406c5e:	fe842783          	lw	a5,-24(s0)
20406c62:	4705                	li	a4,1
20406c64:	00f717b3          	sll	a5,a4,a5
20406c68:	85be                	mv	a1,a5
20406c6a:	fec42503          	lw	a0,-20(s0)
20406c6e:	9682                	jalr	a3
20406c70:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:85
}
20406c72:	853e                	mv	a0,a5
20406c74:	40f2                	lw	ra,28(sp)
20406c76:	4462                	lw	s0,24(sp)
20406c78:	6105                	addi	sp,sp,32
20406c7a:	8082                	ret

20406c7c <metal_gpio_enable_output>:
metal_gpio_enable_output():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:93
 * @brief Enable output on a pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the output is successfully enabled
 */
__inline__ int metal_gpio_enable_output(struct metal_gpio *gpio, int pin) {
20406c7c:	1101                	addi	sp,sp,-32
20406c7e:	ce06                	sw	ra,28(sp)
20406c80:	cc22                	sw	s0,24(sp)
20406c82:	1000                	addi	s0,sp,32
20406c84:	fea42623          	sw	a0,-20(s0)
20406c88:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:94
    if (!gpio) {
20406c8c:	fec42783          	lw	a5,-20(s0)
20406c90:	e399                	bnez	a5,20406c96 <metal_gpio_enable_output+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:95
        return 1;
20406c92:	4785                	li	a5,1
20406c94:	a839                	j	20406cb2 <metal_gpio_enable_output+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:98
    }

    return gpio->vtable->enable_output(gpio, (1 << pin));
20406c96:	fec42783          	lw	a5,-20(s0)
20406c9a:	439c                	lw	a5,0(a5)
20406c9c:	4bd4                	lw	a3,20(a5)
20406c9e:	fe842783          	lw	a5,-24(s0)
20406ca2:	4705                	li	a4,1
20406ca4:	00f717b3          	sll	a5,a4,a5
20406ca8:	85be                	mv	a1,a5
20406caa:	fec42503          	lw	a0,-20(s0)
20406cae:	9682                	jalr	a3
20406cb0:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:99
}
20406cb2:	853e                	mv	a0,a5
20406cb4:	40f2                	lw	ra,28(sp)
20406cb6:	4462                	lw	s0,24(sp)
20406cb8:	6105                	addi	sp,sp,32
20406cba:	8082                	ret

20406cbc <metal_gpio_set_pin>:
metal_gpio_set_pin():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:122
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @param value The value to set the pin to
 * @return 0 if the output is successfully set
 */
__inline__ int metal_gpio_set_pin(struct metal_gpio *gpio, int pin, int value) {
20406cbc:	1101                	addi	sp,sp,-32
20406cbe:	ce06                	sw	ra,28(sp)
20406cc0:	cc22                	sw	s0,24(sp)
20406cc2:	1000                	addi	s0,sp,32
20406cc4:	fea42623          	sw	a0,-20(s0)
20406cc8:	feb42423          	sw	a1,-24(s0)
20406ccc:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:123
    if (!gpio) {
20406cd0:	fec42783          	lw	a5,-20(s0)
20406cd4:	e399                	bnez	a5,20406cda <metal_gpio_set_pin+0x1e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:124
        return 1;
20406cd6:	4785                	li	a5,1
20406cd8:	a089                	j	20406d1a <metal_gpio_set_pin+0x5e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:127
    }

    if (value == 0) {
20406cda:	fe442783          	lw	a5,-28(s0)
20406cde:	e385                	bnez	a5,20406cfe <metal_gpio_set_pin+0x42>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:128
        return gpio->vtable->output_clear(gpio, (1 << pin));
20406ce0:	fec42783          	lw	a5,-20(s0)
20406ce4:	439c                	lw	a5,0(a5)
20406ce6:	4fd4                	lw	a3,28(a5)
20406ce8:	fe842783          	lw	a5,-24(s0)
20406cec:	4705                	li	a4,1
20406cee:	00f717b3          	sll	a5,a4,a5
20406cf2:	85be                	mv	a1,a5
20406cf4:	fec42503          	lw	a0,-20(s0)
20406cf8:	9682                	jalr	a3
20406cfa:	87aa                	mv	a5,a0
20406cfc:	a839                	j	20406d1a <metal_gpio_set_pin+0x5e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:130
    } else {
        return gpio->vtable->output_set(gpio, (1 << pin));
20406cfe:	fec42783          	lw	a5,-20(s0)
20406d02:	439c                	lw	a5,0(a5)
20406d04:	4f94                	lw	a3,24(a5)
20406d06:	fe842783          	lw	a5,-24(s0)
20406d0a:	4705                	li	a4,1
20406d0c:	00f717b3          	sll	a5,a4,a5
20406d10:	85be                	mv	a1,a5
20406d12:	fec42503          	lw	a0,-20(s0)
20406d16:	9682                	jalr	a3
20406d18:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:132
    }
}
20406d1a:	853e                	mv	a0,a5
20406d1c:	40f2                	lw	ra,28(sp)
20406d1e:	4462                	lw	s0,24(sp)
20406d20:	6105                	addi	sp,sp,32
20406d22:	8082                	ret

20406d24 <metal_gpio_toggle_pin>:
metal_gpio_toggle_pin():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:194
 * @brief Toggles the value of the GPIO pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the pin is successfully toggled
 */
__inline__ int metal_gpio_toggle_pin(struct metal_gpio *gpio, int pin) {
20406d24:	1101                	addi	sp,sp,-32
20406d26:	ce06                	sw	ra,28(sp)
20406d28:	cc22                	sw	s0,24(sp)
20406d2a:	1000                	addi	s0,sp,32
20406d2c:	fea42623          	sw	a0,-20(s0)
20406d30:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:195
    if (!gpio) {
20406d34:	fec42783          	lw	a5,-20(s0)
20406d38:	e399                	bnez	a5,20406d3e <metal_gpio_toggle_pin+0x1a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:196
        return 1;
20406d3a:	4785                	li	a5,1
20406d3c:	a839                	j	20406d5a <metal_gpio_toggle_pin+0x36>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:199
    }

    return gpio->vtable->output_toggle(gpio, (1 << pin));
20406d3e:	fec42783          	lw	a5,-20(s0)
20406d42:	439c                	lw	a5,0(a5)
20406d44:	5394                	lw	a3,32(a5)
20406d46:	fe842783          	lw	a5,-24(s0)
20406d4a:	4705                	li	a4,1
20406d4c:	00f717b3          	sll	a5,a4,a5
20406d50:	85be                	mv	a1,a5
20406d52:	fec42503          	lw	a0,-20(s0)
20406d56:	9682                	jalr	a3
20406d58:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/gpio.h:200
}
20406d5a:	853e                	mv	a0,a5
20406d5c:	40f2                	lw	ra,28(sp)
20406d5e:	4462                	lw	s0,24(sp)
20406d60:	6105                	addi	sp,sp,32
20406d62:	8082                	ret

20406d64 <metal_shutdown>:
metal_shutdown():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20406d64:	1101                	addi	sp,sp,-32
20406d66:	ce22                	sw	s0,28(sp)
20406d68:	1000                	addi	s0,sp,32
20406d6a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20406d6e:	0001                	nop
20406d70:	bffd                	j	20406d6e <metal_shutdown+0xa>

20406d72 <metal_uart_init>:
metal_uart_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20406d72:	1101                	addi	sp,sp,-32
20406d74:	ce06                	sw	ra,28(sp)
20406d76:	cc22                	sw	s0,24(sp)
20406d78:	1000                	addi	s0,sp,32
20406d7a:	fea42623          	sw	a0,-20(s0)
20406d7e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20406d82:	fec42783          	lw	a5,-20(s0)
20406d86:	439c                	lw	a5,0(a5)
20406d88:	439c                	lw	a5,0(a5)
20406d8a:	fe842583          	lw	a1,-24(s0)
20406d8e:	fec42503          	lw	a0,-20(s0)
20406d92:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:61
}
20406d94:	0001                	nop
20406d96:	40f2                	lw	ra,28(sp)
20406d98:	4462                	lw	s0,24(sp)
20406d9a:	6105                	addi	sp,sp,32
20406d9c:	8082                	ret

20406d9e <metal_uart_putc>:
metal_uart_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20406d9e:	1101                	addi	sp,sp,-32
20406da0:	ce06                	sw	ra,28(sp)
20406da2:	cc22                	sw	s0,24(sp)
20406da4:	1000                	addi	s0,sp,32
20406da6:	fea42623          	sw	a0,-20(s0)
20406daa:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20406dae:	fec42783          	lw	a5,-20(s0)
20406db2:	439c                	lw	a5,0(a5)
20406db4:	43dc                	lw	a5,4(a5)
20406db6:	fe842583          	lw	a1,-24(s0)
20406dba:	fec42503          	lw	a0,-20(s0)
20406dbe:	9782                	jalr	a5
20406dc0:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:71
}
20406dc2:	853e                	mv	a0,a5
20406dc4:	40f2                	lw	ra,28(sp)
20406dc6:	4462                	lw	s0,24(sp)
20406dc8:	6105                	addi	sp,sp,32
20406dca:	8082                	ret

20406dcc <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20406dcc:	1101                	addi	sp,sp,-32
20406dce:	ce06                	sw	ra,28(sp)
20406dd0:	cc22                	sw	s0,24(sp)
20406dd2:	1000                	addi	s0,sp,32
20406dd4:	fea42623          	sw	a0,-20(s0)
20406dd8:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20406ddc:	fec42783          	lw	a5,-20(s0)
20406de0:	439c                	lw	a5,0(a5)
20406de2:	4bdc                	lw	a5,20(a5)
20406de4:	fe842583          	lw	a1,-24(s0)
20406de8:	fec42503          	lw	a0,-20(s0)
20406dec:	9782                	jalr	a5
20406dee:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/metal/uart.h:113
}
20406df0:	853e                	mv	a0,a5
20406df2:	40f2                	lw	ra,28(sp)
20406df4:	4462                	lw	s0,24(sp)
20406df6:	6105                	addi	sp,sp,32
20406df8:	8082                	ret
20406dfa:	0000                	unimp
20406dfc:	0000                	unimp
	...

20406e00 <__metal_vector_table>:
IRQ_0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20406e00:	960fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e04 <IRQ_1>:
IRQ_1():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20406e04:	95cfc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e08 <IRQ_2>:
IRQ_2():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20406e08:	958fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e0c <IRQ_3>:
IRQ_3():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20406e0c:	982fc06f          	j	20402f8e <metal_software_interrupt_vector_handler>

20406e10 <IRQ_4>:
IRQ_4():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20406e10:	950fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e14 <IRQ_5>:
IRQ_5():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20406e14:	94cfc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e18 <IRQ_6>:
IRQ_6():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20406e18:	948fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e1c <IRQ_7>:
IRQ_7():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20406e1c:	a6cfc06f          	j	20403088 <metal_timer_interrupt_vector_handler>

20406e20 <IRQ_8>:
IRQ_8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20406e20:	940fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e24 <IRQ_9>:
IRQ_9():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20406e24:	93cfc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e28 <IRQ_10>:
IRQ_10():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20406e28:	938fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e2c <IRQ_11>:
IRQ_11():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20406e2c:	934fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e30 <IRQ_12>:
IRQ_12():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20406e30:	930fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e34 <IRQ_13>:
IRQ_13():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20406e34:	92cfc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e38 <IRQ_14>:
IRQ_14():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20406e38:	928fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e3c <IRQ_15>:
IRQ_15():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20406e3c:	924fc06f          	j	20402f60 <metal_interrupt_vector_handler>

20406e40 <IRQ_LC0>:
IRQ_LC0():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20406e40:	dbafc06f          	j	204033fa <metal_lc0_interrupt_vector_handler>

20406e44 <IRQ_LC1>:
IRQ_LC1():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20406e44:	e4cfc06f          	j	20403490 <metal_lc1_interrupt_vector_handler>

20406e48 <IRQ_LC2>:
IRQ_LC2():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20406e48:	edefc06f          	j	20403526 <metal_lc2_interrupt_vector_handler>

20406e4c <IRQ_LC3>:
IRQ_LC3():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20406e4c:	f70fc06f          	j	204035bc <metal_lc3_interrupt_vector_handler>

20406e50 <IRQ_LC4>:
IRQ_LC4():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20406e50:	803fc06f          	j	20403652 <metal_lc4_interrupt_vector_handler>

20406e54 <IRQ_LC5>:
IRQ_LC5():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20406e54:	895fc06f          	j	204036e8 <metal_lc5_interrupt_vector_handler>

20406e58 <IRQ_LC6>:
IRQ_LC6():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20406e58:	927fc06f          	j	2040377e <metal_lc6_interrupt_vector_handler>

20406e5c <IRQ_LC7>:
IRQ_LC7():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20406e5c:	9b9fc06f          	j	20403814 <metal_lc7_interrupt_vector_handler>

20406e60 <IRQ_LC8>:
IRQ_LC8():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20406e60:	a4bfc06f          	j	204038aa <metal_lc8_interrupt_vector_handler>

20406e64 <IRQ_LC9>:
IRQ_LC9():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20406e64:	addfc06f          	j	20403940 <metal_lc9_interrupt_vector_handler>

20406e68 <IRQ_LC10>:
IRQ_LC10():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20406e68:	b6ffc06f          	j	204039d6 <metal_lc10_interrupt_vector_handler>

20406e6c <IRQ_LC11>:
IRQ_LC11():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20406e6c:	c01fc06f          	j	20403a6c <metal_lc11_interrupt_vector_handler>

20406e70 <IRQ_LC12>:
IRQ_LC12():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20406e70:	c93fc06f          	j	20403b02 <metal_lc12_interrupt_vector_handler>

20406e74 <IRQ_LC13>:
IRQ_LC13():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20406e74:	d25fc06f          	j	20403b98 <metal_lc13_interrupt_vector_handler>

20406e78 <IRQ_LC14>:
IRQ_LC14():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20406e78:	db7fc06f          	j	20403c2e <metal_lc14_interrupt_vector_handler>

20406e7c <IRQ_LC15>:
IRQ_LC15():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20406e7c:	e49fc06f          	j	20403cc4 <metal_lc15_interrupt_vector_handler>

20406e80 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:186
{
20406e80:	1101                	addi	sp,sp,-32
20406e82:	ce22                	sw	s0,28(sp)
20406e84:	1000                	addi	s0,sp,32
20406e86:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:187
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20406e8a:	fec42703          	lw	a4,-20(s0)
20406e8e:	800007b7          	lui	a5,0x80000
20406e92:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8dc>
20406e96:	00f71763          	bne	a4,a5,20406ea4 <__metal_driver_fixed_clock_rate+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20406e9a:	00f427b7          	lui	a5,0xf42
20406e9e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20406ea2:	a825                	j	20406eda <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:190
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20406ea4:	fec42703          	lw	a4,-20(s0)
20406ea8:	800007b7          	lui	a5,0x80000
20406eac:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe8e8>
20406eb0:	00f71763          	bne	a4,a5,20406ebe <__metal_driver_fixed_clock_rate+0x3e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:191
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20406eb4:	044aa7b7          	lui	a5,0x44aa
20406eb8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20406ebc:	a839                	j	20406eda <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:193
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20406ebe:	fec42703          	lw	a4,-20(s0)
20406ec2:	800007b7          	lui	a5,0x80000
20406ec6:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffe8f4>
20406eca:	00f71763          	bne	a4,a5,20406ed8 <__metal_driver_fixed_clock_rate+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:194
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
20406ece:	01e857b7          	lui	a5,0x1e85
20406ed2:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20406ed6:	a011                	j	20406eda <__metal_driver_fixed_clock_rate+0x5a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:197
		return 0;
20406ed8:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/bsp/sifive-hifive1/build/debug/./metal/machine.h:199
}
20406eda:	853e                	mv	a0,a5
20406edc:	4472                	lw	s0,28(sp)
20406ede:	6105                	addi	sp,sp,32
20406ee0:	8082                	ret

20406ee2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20406ee2:	1101                	addi	sp,sp,-32
20406ee4:	ce06                	sw	ra,28(sp)
20406ee6:	cc22                	sw	s0,24(sp)
20406ee8:	1000                	addi	s0,sp,32
20406eea:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20406eee:	fec42503          	lw	a0,-20(s0)
20406ef2:	f8fff0ef          	jal	ra,20406e80 <__metal_driver_fixed_clock_rate>
20406ef6:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
}
20406ef8:	853e                	mv	a0,a5
20406efa:	40f2                	lw	ra,28(sp)
20406efc:	4462                	lw	s0,24(sp)
20406efe:	6105                	addi	sp,sp,32
20406f00:	8082                	ret

20406f02 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20406f02:	1101                	addi	sp,sp,-32
20406f04:	ce06                	sw	ra,28(sp)
20406f06:	cc22                	sw	s0,24(sp)
20406f08:	1000                	addi	s0,sp,32
20406f0a:	fea42623          	sw	a0,-20(s0)
20406f0e:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20406f12:	fec42503          	lw	a0,-20(s0)
20406f16:	fcdff0ef          	jal	ra,20406ee2 <__metal_driver_fixed_clock_get_rate_hz>
20406f1a:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
}
20406f1c:	853e                	mv	a0,a5
20406f1e:	40f2                	lw	ra,28(sp)
20406f20:	4462                	lw	s0,24(sp)
20406f22:	6105                	addi	sp,sp,32
20406f24:	8082                	ret

20406f26 <_close>:
_close():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20406f26:	1101                	addi	sp,sp,-32
20406f28:	ce06                	sw	ra,28(sp)
20406f2a:	cc22                	sw	s0,24(sp)
20406f2c:	1000                	addi	s0,sp,32
20406f2e:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20406f32:	2a49                	jal	204070c4 <__errno>
20406f34:	872a                	mv	a4,a0
20406f36:	05800793          	li	a5,88
20406f3a:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:5
    return -1;
20406f3c:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_close.c:6
}
20406f3e:	853e                	mv	a0,a5
20406f40:	40f2                	lw	ra,28(sp)
20406f42:	4462                	lw	s0,24(sp)
20406f44:	6105                	addi	sp,sp,32
20406f46:	8082                	ret

20406f48 <_fstat>:
_fstat():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20406f48:	1101                	addi	sp,sp,-32
20406f4a:	ce06                	sw	ra,28(sp)
20406f4c:	cc22                	sw	s0,24(sp)
20406f4e:	1000                	addi	s0,sp,32
20406f50:	fea42623          	sw	a0,-20(s0)
20406f54:	feb42423          	sw	a1,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20406f58:	22b5                	jal	204070c4 <__errno>
20406f5a:	872a                	mv	a4,a0
20406f5c:	fa800793          	li	a5,-88
20406f60:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20406f62:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_fstat.c:7
}
20406f64:	853e                	mv	a0,a5
20406f66:	40f2                	lw	ra,28(sp)
20406f68:	4462                	lw	s0,24(sp)
20406f6a:	6105                	addi	sp,sp,32
20406f6c:	8082                	ret

20406f6e <_isatty>:
_isatty():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20406f6e:	1101                	addi	sp,sp,-32
20406f70:	ce22                	sw	s0,28(sp)
20406f72:	1000                	addi	s0,sp,32
20406f74:	fea42623          	sw	a0,-20(s0)
20406f78:	fec42783          	lw	a5,-20(s0)
20406f7c:	17fd                	addi	a5,a5,-1
20406f7e:	0017b793          	seqz	a5,a5
20406f82:	0ff7f793          	andi	a5,a5,255
20406f86:	853e                	mv	a0,a5
20406f88:	4472                	lw	s0,28(sp)
20406f8a:	6105                	addi	sp,sp,32
20406f8c:	8082                	ret

20406f8e <_lseek>:
_lseek():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20406f8e:	1101                	addi	sp,sp,-32
20406f90:	ce06                	sw	ra,28(sp)
20406f92:	cc22                	sw	s0,24(sp)
20406f94:	1000                	addi	s0,sp,32
20406f96:	fea42623          	sw	a0,-20(s0)
20406f9a:	feb42423          	sw	a1,-24(s0)
20406f9e:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20406fa2:	220d                	jal	204070c4 <__errno>
20406fa4:	872a                	mv	a4,a0
20406fa6:	05800793          	li	a5,88
20406faa:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20406fac:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_lseek.c:7
}
20406fae:	853e                	mv	a0,a5
20406fb0:	40f2                	lw	ra,28(sp)
20406fb2:	4462                	lw	s0,24(sp)
20406fb4:	6105                	addi	sp,sp,32
20406fb6:	8082                	ret

20406fb8 <_read>:
_read():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20406fb8:	1101                	addi	sp,sp,-32
20406fba:	ce06                	sw	ra,28(sp)
20406fbc:	cc22                	sw	s0,24(sp)
20406fbe:	1000                	addi	s0,sp,32
20406fc0:	fea42623          	sw	a0,-20(s0)
20406fc4:	feb42423          	sw	a1,-24(s0)
20406fc8:	fec42223          	sw	a2,-28(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20406fcc:	28e5                	jal	204070c4 <__errno>
20406fce:	872a                	mv	a4,a0
20406fd0:	05800793          	li	a5,88
20406fd4:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:6
    return -1;
20406fd6:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_read.c:7
}
20406fd8:	853e                	mv	a0,a5
20406fda:	40f2                	lw	ra,28(sp)
20406fdc:	4462                	lw	s0,24(sp)
20406fde:	6105                	addi	sp,sp,32
20406fe0:	8082                	ret

20406fe2 <_sbrk>:
_sbrk():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20406fe2:	7179                	addi	sp,sp,-48
20406fe4:	d606                	sw	ra,44(sp)
20406fe6:	d422                	sw	s0,40(sp)
20406fe8:	1800                	addi	s0,sp,48
20406fea:	fca42e23          	sw	a0,-36(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20406fee:	8501a783          	lw	a5,-1968(gp) # 80000ad0 <__brk>
20406ff2:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20406ff6:	d1018713          	addi	a4,gp,-752 # 80000f90 <_sp>
20406ffa:	51018793          	addi	a5,gp,1296 # 80001790 <metal_segment_heap_target_end>
20406ffe:	00f71463          	bne	a4,a5,20407006 <_sbrk+0x24>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20407002:	57fd                	li	a5,-1
20407004:	a83d                	j	20407042 <_sbrk+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20407006:	8501a703          	lw	a4,-1968(gp) # 80000ad0 <__brk>
2040700a:	fdc42783          	lw	a5,-36(s0)
2040700e:	973e                	add	a4,a4,a5
20407010:	51018793          	addi	a5,gp,1296 # 80001790 <metal_segment_heap_target_end>
20407014:	02f77263          	bgeu	a4,a5,20407038 <_sbrk+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20407018:	8501a703          	lw	a4,-1968(gp) # 80000ad0 <__brk>
2040701c:	fdc42783          	lw	a5,-36(s0)
20407020:	973e                	add	a4,a4,a5
20407022:	84e1a823          	sw	a4,-1968(gp) # 80000ad0 <__brk>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20407026:	fdc42583          	lw	a1,-36(s0)
2040702a:	fec42503          	lw	a0,-20(s0)
2040702e:	864f90ef          	jal	ra,20400092 <metal_mem_scrub>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20407032:	fec42783          	lw	a5,-20(s0)
20407036:	a031                	j	20407042 <_sbrk+0x60>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20407038:	51018713          	addi	a4,gp,1296 # 80001790 <metal_segment_heap_target_end>
2040703c:	84e1a823          	sw	a4,-1968(gp) # 80000ad0 <__brk>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20407040:	57fd                	li	a5,-1
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_sbrk.c:43
}
20407042:	853e                	mv	a0,a5
20407044:	50b2                	lw	ra,44(sp)
20407046:	5422                	lw	s0,40(sp)
20407048:	6145                	addi	sp,sp,48
2040704a:	8082                	ret

2040704c <_write>:
_write():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
2040704c:	7179                	addi	sp,sp,-48
2040704e:	d606                	sw	ra,44(sp)
20407050:	d422                	sw	s0,40(sp)
20407052:	1800                	addi	s0,sp,48
20407054:	fca42e23          	sw	a0,-36(s0)
20407058:	fcb42c23          	sw	a1,-40(s0)
2040705c:	fcc42a23          	sw	a2,-44(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20407060:	fdc42703          	lw	a4,-36(s0)
20407064:	4785                	li	a5,1
20407066:	00f70963          	beq	a4,a5,20407078 <_write+0x2c>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
2040706a:	28a9                	jal	204070c4 <__errno>
2040706c:	872a                	mv	a4,a0
2040706e:	05800793          	li	a5,88
20407072:	c31c                	sw	a5,0(a4)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
        return -1;
20407074:	57fd                	li	a5,-1
20407076:	a82d                	j	204070b0 <_write+0x64>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20407078:	fd842783          	lw	a5,-40(s0)
2040707c:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20407080:	fe042623          	sw	zero,-20(s0)
20407084:	a839                	j	204070a2 <_write+0x56>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20407086:	fe842703          	lw	a4,-24(s0)
2040708a:	fec42783          	lw	a5,-20(s0)
2040708e:	97ba                	add	a5,a5,a4
20407090:	0007c783          	lbu	a5,0(a5)
20407094:	853e                	mv	a0,a5
20407096:	2e75                	jal	20407452 <metal_tty_putc>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20407098:	fec42783          	lw	a5,-20(s0)
2040709c:	0785                	addi	a5,a5,1
2040709e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
204070a2:	fec42703          	lw	a4,-20(s0)
204070a6:	fd442783          	lw	a5,-44(s0)
204070aa:	fcf76ee3          	bltu	a4,a5,20407086 <_write+0x3a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
    return 0;
204070ae:	4781                	li	a5,0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_write.c:17
}
204070b0:	853e                	mv	a0,a5
204070b2:	50b2                	lw	ra,44(sp)
204070b4:	5422                	lw	s0,40(sp)
204070b6:	6145                	addi	sp,sp,48
204070b8:	8082                	ret

204070ba <atexit>:
atexit():
204070ba:	85aa                	mv	a1,a0
204070bc:	4681                	li	a3,0
204070be:	4601                	li	a2,0
204070c0:	4501                	li	a0,0
204070c2:	a215                	j	204071e6 <__register_exitproc>

204070c4 <__errno>:
__errno():
204070c4:	5fbfa797          	auipc	a5,0x5fbfa
204070c8:	9bc78793          	addi	a5,a5,-1604 # 80000a80 <_impure_ptr>
204070cc:	4388                	lw	a0,0(a5)
204070ce:	8082                	ret

204070d0 <exit>:
exit():
204070d0:	1141                	addi	sp,sp,-16
204070d2:	c422                	sw	s0,8(sp)
204070d4:	c606                	sw	ra,12(sp)
204070d6:	00000797          	auipc	a5,0x0
204070da:	19878793          	addi	a5,a5,408 # 2040726e <__call_exitprocs>
204070de:	842a                	mv	s0,a0
204070e0:	c399                	beqz	a5,204070e6 <exit+0x16>
204070e2:	4581                	li	a1,0
204070e4:	2269                	jal	2040726e <__call_exitprocs>
204070e6:	5fbfa797          	auipc	a5,0x5fbfa
204070ea:	99e78793          	addi	a5,a5,-1634 # 80000a84 <_global_impure_ptr>
204070ee:	4388                	lw	a0,0(a5)
204070f0:	551c                	lw	a5,40(a0)
204070f2:	c391                	beqz	a5,204070f6 <exit+0x26>
204070f4:	9782                	jalr	a5
204070f6:	8522                	mv	a0,s0
204070f8:	2649                	jal	2040747a <_exit>

204070fa <__libc_fini_array>:
__libc_fini_array():
204070fa:	1141                	addi	sp,sp,-16
204070fc:	ffff9797          	auipc	a5,0xffff9
20407100:	1fc78793          	addi	a5,a5,508 # 204002f8 <__fini_array_end>
20407104:	c422                	sw	s0,8(sp)
20407106:	ffff9417          	auipc	s0,0xffff9
2040710a:	1f240413          	addi	s0,s0,498 # 204002f8 <__fini_array_end>
2040710e:	8c1d                	sub	s0,s0,a5
20407110:	c226                	sw	s1,4(sp)
20407112:	c606                	sw	ra,12(sp)
20407114:	8409                	srai	s0,s0,0x2
20407116:	84be                	mv	s1,a5
20407118:	e411                	bnez	s0,20407124 <__libc_fini_array+0x2a>
2040711a:	40b2                	lw	ra,12(sp)
2040711c:	4422                	lw	s0,8(sp)
2040711e:	4492                	lw	s1,4(sp)
20407120:	0141                	addi	sp,sp,16
20407122:	8082                	ret
20407124:	147d                	addi	s0,s0,-1
20407126:	00241793          	slli	a5,s0,0x2
2040712a:	97a6                	add	a5,a5,s1
2040712c:	439c                	lw	a5,0(a5)
2040712e:	9782                	jalr	a5
20407130:	b7e5                	j	20407118 <__libc_fini_array+0x1e>

20407132 <__libc_init_array>:
__libc_init_array():
20407132:	1141                	addi	sp,sp,-16
20407134:	ffff9797          	auipc	a5,0xffff9
20407138:	1b478793          	addi	a5,a5,436 # 204002e8 <_metal_sifive_fe310_g000_pll_init_ptr>
2040713c:	c422                	sw	s0,8(sp)
2040713e:	ffff9417          	auipc	s0,0xffff9
20407142:	1aa40413          	addi	s0,s0,426 # 204002e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20407146:	8c1d                	sub	s0,s0,a5
20407148:	c226                	sw	s1,4(sp)
2040714a:	c04a                	sw	s2,0(sp)
2040714c:	c606                	sw	ra,12(sp)
2040714e:	8409                	srai	s0,s0,0x2
20407150:	4481                	li	s1,0
20407152:	893e                	mv	s2,a5
20407154:	02849663          	bne	s1,s0,20407180 <__libc_init_array+0x4e>
20407158:	ffff9797          	auipc	a5,0xffff9
2040715c:	19078793          	addi	a5,a5,400 # 204002e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20407160:	ffff9417          	auipc	s0,0xffff9
20407164:	18840413          	addi	s0,s0,392 # 204002e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20407168:	8c1d                	sub	s0,s0,a5
2040716a:	8409                	srai	s0,s0,0x2
2040716c:	4481                	li	s1,0
2040716e:	893e                	mv	s2,a5
20407170:	00849f63          	bne	s1,s0,2040718e <__libc_init_array+0x5c>
20407174:	40b2                	lw	ra,12(sp)
20407176:	4422                	lw	s0,8(sp)
20407178:	4492                	lw	s1,4(sp)
2040717a:	4902                	lw	s2,0(sp)
2040717c:	0141                	addi	sp,sp,16
2040717e:	8082                	ret
20407180:	00249793          	slli	a5,s1,0x2
20407184:	97ca                	add	a5,a5,s2
20407186:	439c                	lw	a5,0(a5)
20407188:	0485                	addi	s1,s1,1
2040718a:	9782                	jalr	a5
2040718c:	b7e1                	j	20407154 <__libc_init_array+0x22>
2040718e:	00249793          	slli	a5,s1,0x2
20407192:	97ca                	add	a5,a5,s2
20407194:	439c                	lw	a5,0(a5)
20407196:	0485                	addi	s1,s1,1
20407198:	9782                	jalr	a5
2040719a:	bfd9                	j	20407170 <__libc_init_array+0x3e>

2040719c <strcat>:
strcat():
2040719c:	87aa                	mv	a5,a0
2040719e:	0007c703          	lbu	a4,0(a5)
204071a2:	00178693          	addi	a3,a5,1
204071a6:	eb09                	bnez	a4,204071b8 <strcat+0x1c>
204071a8:	0585                	addi	a1,a1,1
204071aa:	fff5c703          	lbu	a4,-1(a1)
204071ae:	0785                	addi	a5,a5,1
204071b0:	fee78fa3          	sb	a4,-1(a5)
204071b4:	fb75                	bnez	a4,204071a8 <strcat+0xc>
204071b6:	8082                	ret
204071b8:	87b6                	mv	a5,a3
204071ba:	b7d5                	j	2040719e <strcat+0x2>

204071bc <strcmp>:
strcmp():
204071bc:	00054603          	lbu	a2,0(a0)
204071c0:	0005c683          	lbu	a3,0(a1)
204071c4:	0505                	addi	a0,a0,1
204071c6:	0585                	addi	a1,a1,1
204071c8:	00d61363          	bne	a2,a3,204071ce <strcmp+0x12>
204071cc:	fa65                	bnez	a2,204071bc <strcmp>
204071ce:	40d60533          	sub	a0,a2,a3
204071d2:	8082                	ret

204071d4 <strcpy>:
strcpy():
204071d4:	87aa                	mv	a5,a0
204071d6:	0005c703          	lbu	a4,0(a1)
204071da:	0785                	addi	a5,a5,1
204071dc:	0585                	addi	a1,a1,1
204071de:	fee78fa3          	sb	a4,-1(a5)
204071e2:	fb75                	bnez	a4,204071d6 <strcpy+0x2>
204071e4:	8082                	ret

204071e6 <__register_exitproc>:
__register_exitproc():
204071e6:	5fbfa797          	auipc	a5,0x5fbfa
204071ea:	8fa78793          	addi	a5,a5,-1798 # 80000ae0 <_global_atexit>
204071ee:	439c                	lw	a5,0(a5)
204071f0:	8e2a                	mv	t3,a0
204071f2:	e39d                	bnez	a5,20407218 <__register_exitproc+0x32>
204071f4:	5fbfa717          	auipc	a4,0x5fbfa
204071f8:	8f870713          	addi	a4,a4,-1800 # 80000aec <_global_atexit0>
204071fc:	5fbfa797          	auipc	a5,0x5fbfa
20407200:	8ee7a223          	sw	a4,-1820(a5) # 80000ae0 <_global_atexit>
20407204:	dfbf9517          	auipc	a0,0xdfbf9
20407208:	dfc50513          	addi	a0,a0,-516 # 0 <__metal_boot_hart>
2040720c:	87ba                	mv	a5,a4
2040720e:	c509                	beqz	a0,20407218 <__register_exitproc+0x32>
20407210:	411c                	lw	a5,0(a0)
20407212:	8ef1aa23          	sw	a5,-1804(gp) # 80000b74 <_global_atexit0+0x88>
20407216:	87ba                	mv	a5,a4
20407218:	43d8                	lw	a4,4(a5)
2040721a:	487d                	li	a6,31
2040721c:	557d                	li	a0,-1
2040721e:	04e84763          	blt	a6,a4,2040726c <__register_exitproc+0x86>
20407222:	020e0e63          	beqz	t3,2040725e <__register_exitproc+0x78>
20407226:	0887a803          	lw	a6,136(a5)
2040722a:	04080163          	beqz	a6,2040726c <__register_exitproc+0x86>
2040722e:	00271893          	slli	a7,a4,0x2
20407232:	98c2                	add	a7,a7,a6
20407234:	00c8a023          	sw	a2,0(a7)
20407238:	10082303          	lw	t1,256(a6)
2040723c:	4605                	li	a2,1
2040723e:	00e61633          	sll	a2,a2,a4
20407242:	00c36333          	or	t1,t1,a2
20407246:	10682023          	sw	t1,256(a6)
2040724a:	08d8a023          	sw	a3,128(a7)
2040724e:	4689                	li	a3,2
20407250:	00de1763          	bne	t3,a3,2040725e <__register_exitproc+0x78>
20407254:	10482683          	lw	a3,260(a6)
20407258:	8e55                	or	a2,a2,a3
2040725a:	10c82223          	sw	a2,260(a6)
2040725e:	00170693          	addi	a3,a4,1
20407262:	070a                	slli	a4,a4,0x2
20407264:	c3d4                	sw	a3,4(a5)
20407266:	97ba                	add	a5,a5,a4
20407268:	c78c                	sw	a1,8(a5)
2040726a:	4501                	li	a0,0
2040726c:	8082                	ret

2040726e <__call_exitprocs>:
__call_exitprocs():
2040726e:	7179                	addi	sp,sp,-48
20407270:	cc52                	sw	s4,24(sp)
20407272:	ca56                	sw	s5,20(sp)
20407274:	c85a                	sw	s6,16(sp)
20407276:	c65e                	sw	s7,12(sp)
20407278:	d606                	sw	ra,44(sp)
2040727a:	d422                	sw	s0,40(sp)
2040727c:	d226                	sw	s1,36(sp)
2040727e:	d04a                	sw	s2,32(sp)
20407280:	ce4e                	sw	s3,28(sp)
20407282:	c462                	sw	s8,8(sp)
20407284:	8b2a                	mv	s6,a0
20407286:	8a2e                	mv	s4,a1
20407288:	5fbfaa97          	auipc	s5,0x5fbfa
2040728c:	858a8a93          	addi	s5,s5,-1960 # 80000ae0 <_global_atexit>
20407290:	4b85                	li	s7,1
20407292:	000aa403          	lw	s0,0(s5)
20407296:	c811                	beqz	s0,204072aa <__call_exitprocs+0x3c>
20407298:	4044                	lw	s1,4(s0)
2040729a:	08842983          	lw	s3,136(s0)
2040729e:	fff48913          	addi	s2,s1,-1
204072a2:	048a                	slli	s1,s1,0x2
204072a4:	94a2                	add	s1,s1,s0
204072a6:	00095e63          	bgez	s2,204072c2 <__call_exitprocs+0x54>
204072aa:	50b2                	lw	ra,44(sp)
204072ac:	5422                	lw	s0,40(sp)
204072ae:	5492                	lw	s1,36(sp)
204072b0:	5902                	lw	s2,32(sp)
204072b2:	49f2                	lw	s3,28(sp)
204072b4:	4a62                	lw	s4,24(sp)
204072b6:	4ad2                	lw	s5,20(sp)
204072b8:	4b42                	lw	s6,16(sp)
204072ba:	4bb2                	lw	s7,12(sp)
204072bc:	4c22                	lw	s8,8(sp)
204072be:	6145                	addi	sp,sp,48
204072c0:	8082                	ret
204072c2:	000a0e63          	beqz	s4,204072de <__call_exitprocs+0x70>
204072c6:	00099563          	bnez	s3,204072d0 <__call_exitprocs+0x62>
204072ca:	197d                	addi	s2,s2,-1
204072cc:	14f1                	addi	s1,s1,-4
204072ce:	bfe1                	j	204072a6 <__call_exitprocs+0x38>
204072d0:	00291793          	slli	a5,s2,0x2
204072d4:	97ce                	add	a5,a5,s3
204072d6:	0807a783          	lw	a5,128(a5)
204072da:	ff4798e3          	bne	a5,s4,204072ca <__call_exitprocs+0x5c>
204072de:	4058                	lw	a4,4(s0)
204072e0:	40dc                	lw	a5,4(s1)
204072e2:	177d                	addi	a4,a4,-1
204072e4:	03271863          	bne	a4,s2,20407314 <__call_exitprocs+0xa6>
204072e8:	01242223          	sw	s2,4(s0)
204072ec:	dff9                	beqz	a5,204072ca <__call_exitprocs+0x5c>
204072ee:	00442c03          	lw	s8,4(s0)
204072f2:	00098863          	beqz	s3,20407302 <__call_exitprocs+0x94>
204072f6:	1009a683          	lw	a3,256(s3)
204072fa:	012b9733          	sll	a4,s7,s2
204072fe:	8ef9                	and	a3,a3,a4
20407300:	ee89                	bnez	a3,2040731a <__call_exitprocs+0xac>
20407302:	9782                	jalr	a5
20407304:	4058                	lw	a4,4(s0)
20407306:	000aa783          	lw	a5,0(s5)
2040730a:	f98714e3          	bne	a4,s8,20407292 <__call_exitprocs+0x24>
2040730e:	faf40ee3          	beq	s0,a5,204072ca <__call_exitprocs+0x5c>
20407312:	b741                	j	20407292 <__call_exitprocs+0x24>
20407314:	0004a223          	sw	zero,4(s1)
20407318:	bfd1                	j	204072ec <__call_exitprocs+0x7e>
2040731a:	00291693          	slli	a3,s2,0x2
2040731e:	96ce                	add	a3,a3,s3
20407320:	428c                	lw	a1,0(a3)
20407322:	1049a683          	lw	a3,260(s3)
20407326:	8f75                	and	a4,a4,a3
20407328:	e701                	bnez	a4,20407330 <__call_exitprocs+0xc2>
2040732a:	855a                	mv	a0,s6
2040732c:	9782                	jalr	a5
2040732e:	bfd9                	j	20407304 <__call_exitprocs+0x96>
20407330:	852e                	mv	a0,a1
20407332:	9782                	jalr	a5
20407334:	bfc1                	j	20407304 <__call_exitprocs+0x96>

20407336 <metal_init>:
metal_init():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20407336:	1101                	addi	sp,sp,-32
20407338:	ce06                	sw	ra,28(sp)
2040733a:	cc22                	sw	s0,24(sp)
2040733c:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
2040733e:	800017b7          	lui	a5,0x80001
20407342:	ae47a783          	lw	a5,-1308(a5) # 80000ae4 <metal_segment_heap_target_end+0xfffff354>
20407346:	efa9                	bnez	a5,204073a0 <metal_init+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20407348:	800017b7          	lui	a5,0x80001
2040734c:	4705                	li	a4,1
2040734e:	aee7a223          	sw	a4,-1308(a5) # 80000ae4 <metal_segment_heap_target_end+0xfffff354>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20407352:	204007b7          	lui	a5,0x20400
20407356:	2f478713          	addi	a4,a5,756 # 204002f4 <metal_constructors_end>
2040735a:	204007b7          	lui	a5,0x20400
2040735e:	2e878793          	addi	a5,a5,744 # 204002e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20407362:	04e7f163          	bgeu	a5,a4,204073a4 <metal_init+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20407366:	204007b7          	lui	a5,0x20400
2040736a:	2e878793          	addi	a5,a5,744 # 204002e8 <_metal_sifive_fe310_g000_pll_init_ptr>
2040736e:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20407372:	a831                	j	2040738e <metal_init+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20407374:	fec42783          	lw	a5,-20(s0)
20407378:	439c                	lw	a5,0(a5)
2040737a:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:33

        func();
2040737e:	fe842783          	lw	a5,-24(s0)
20407382:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:35

        funcptr += 1;
20407384:	fec42783          	lw	a5,-20(s0)
20407388:	0791                	addi	a5,a5,4
2040738a:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
2040738e:	fec42703          	lw	a4,-20(s0)
20407392:	204007b7          	lui	a5,0x20400
20407396:	2f478793          	addi	a5,a5,756 # 204002f4 <metal_constructors_end>
2040739a:	fcf71de3          	bne	a4,a5,20407374 <metal_init+0x3e>
2040739e:	a021                	j	204073a6 <metal_init+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:21
        return;
204073a0:	0001                	nop
204073a2:	a011                	j	204073a6 <metal_init+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:26
        return;
204073a4:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:37
    }
}
204073a6:	40f2                	lw	ra,28(sp)
204073a8:	4462                	lw	s0,24(sp)
204073aa:	6105                	addi	sp,sp,32
204073ac:	8082                	ret

204073ae <metal_fini>:
metal_fini():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:39

void metal_fini(void) {
204073ae:	1101                	addi	sp,sp,-32
204073b0:	ce06                	sw	ra,28(sp)
204073b2:	cc22                	sw	s0,24(sp)
204073b4:	1000                	addi	s0,sp,32
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
204073b6:	800017b7          	lui	a5,0x80001
204073ba:	ae87a783          	lw	a5,-1304(a5) # 80000ae8 <metal_segment_heap_target_end+0xfffff358>
204073be:	efa9                	bnez	a5,20407418 <metal_fini+0x6a>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
204073c0:	800017b7          	lui	a5,0x80001
204073c4:	4705                	li	a4,1
204073c6:	aee7a423          	sw	a4,-1304(a5) # 80000ae8 <metal_segment_heap_target_end+0xfffff358>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
204073ca:	204007b7          	lui	a5,0x20400
204073ce:	2f878713          	addi	a4,a5,760 # 204002f8 <__fini_array_end>
204073d2:	204007b7          	lui	a5,0x20400
204073d6:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
204073da:	04e7f163          	bgeu	a5,a4,2040741c <metal_fini+0x6e>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
204073de:	204007b7          	lui	a5,0x20400
204073e2:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
204073e6:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
204073ea:	a831                	j	20407406 <metal_fini+0x58>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
204073ec:	fec42783          	lw	a5,-20(s0)
204073f0:	439c                	lw	a5,0(a5)
204073f2:	fef42423          	sw	a5,-24(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:55

        func();
204073f6:	fe842783          	lw	a5,-24(s0)
204073fa:	9782                	jalr	a5
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:57

        funcptr += 1;
204073fc:	fec42783          	lw	a5,-20(s0)
20407400:	0791                	addi	a5,a5,4
20407402:	fef42623          	sw	a5,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20407406:	fec42703          	lw	a4,-20(s0)
2040740a:	204007b7          	lui	a5,0x20400
2040740e:	2f878793          	addi	a5,a5,760 # 204002f8 <__fini_array_end>
20407412:	fcf71de3          	bne	a4,a5,204073ec <metal_fini+0x3e>
20407416:	a021                	j	2040741e <metal_fini+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:43
        return;
20407418:	0001                	nop
2040741a:	a011                	j	2040741e <metal_fini+0x70>
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:48
        return;
2040741c:	0001                	nop
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:59
    }
}
2040741e:	40f2                	lw	ra,28(sp)
20407420:	4462                	lw	s0,24(sp)
20407422:	6105                	addi	sp,sp,32
20407424:	8082                	ret

20407426 <metal_init_run>:
metal_init_run():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20407426:	1141                	addi	sp,sp,-16
20407428:	c606                	sw	ra,12(sp)
2040742a:	c422                	sw	s0,8(sp)
2040742c:	0800                	addi	s0,sp,16
2040742e:	f09ff0ef          	jal	ra,20407336 <metal_init>
20407432:	0001                	nop
20407434:	40b2                	lw	ra,12(sp)
20407436:	4422                	lw	s0,8(sp)
20407438:	0141                	addi	sp,sp,16
2040743a:	8082                	ret

2040743c <metal_fini_run>:
metal_fini_run():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2040743c:	1141                	addi	sp,sp,-16
2040743e:	c606                	sw	ra,12(sp)
20407440:	c422                	sw	s0,8(sp)
20407442:	0800                	addi	s0,sp,16
20407444:	f6bff0ef          	jal	ra,204073ae <metal_fini>
20407448:	0001                	nop
2040744a:	40b2                	lw	ra,12(sp)
2040744c:	4422                	lw	s0,8(sp)
2040744e:	0141                	addi	sp,sp,16
20407450:	8082                	ret

20407452 <metal_tty_putc>:
metal_tty_putc():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20407452:	1101                	addi	sp,sp,-32
20407454:	ce06                	sw	ra,28(sp)
20407456:	cc22                	sw	s0,24(sp)
20407458:	1000                	addi	s0,sp,32
2040745a:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2040745e:	fec42583          	lw	a1,-20(s0)
20407462:	800017b7          	lui	a5,0x80001
20407466:	a3878513          	addi	a0,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2a8>
2040746a:	935ff0ef          	jal	ra,20406d9e <metal_uart_putc>
2040746e:	87aa                	mv	a5,a0
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/src/tty.c:14
}
20407470:	853e                	mv	a0,a5
20407472:	40f2                	lw	ra,28(sp)
20407474:	4462                	lw	s0,24(sp)
20407476:	6105                	addi	sp,sp,32
20407478:	8082                	ret

2040747a <_exit>:
_exit():
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
2040747a:	1101                	addi	sp,sp,-32
2040747c:	ce06                	sw	ra,28(sp)
2040747e:	cc22                	sw	s0,24(sp)
20407480:	1000                	addi	s0,sp,32
20407482:	fea42623          	sw	a0,-20(s0)
/home/reglisse/Documents/Code/Github/SecPump/SecPump-RISC-V/SiFive-freedom-e-sdk/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20407486:	fec42503          	lw	a0,-20(s0)
2040748a:	8dbff0ef          	jal	ra,20406d64 <metal_shutdown>
