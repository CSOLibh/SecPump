ARM GAS  /tmp/cc1PyfWy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f7xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Transmit_IT,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	UART_Transmit_IT:
  25              	.LFB170:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @file    stm32f7xx_hal_uart.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
ARM GAS  /tmp/cc1PyfWy.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   Tx/Rx parameters.
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         Three operation modes are available within this driver :
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =================================
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** DMA mode IO operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ==============================
ARM GAS  /tmp/cc1PyfWy.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =============================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_IT : Clears the specified UART ISR flag
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/cc1PyfWy.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #include "stm32f7xx_hal.h"
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup STM32F7xx_HAL_Driver
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8))
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
ARM GAS  /tmp/cc1PyfWy.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** ===============================================================================
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in asynchronous mode.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Baud Rate
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Word Length
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Stop Bit
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Hardware flow control
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Over Sampling Method
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the UART mode according to the specified
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
ARM GAS  /tmp/cc1PyfWy.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the half-duplex mode according to the specified
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
ARM GAS  /tmp/cc1PyfWy.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
ARM GAS  /tmp/cc1PyfWy.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_LIN_WORD_LENGTH(huart->Init.WordLength));
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
ARM GAS  /tmp/cc1PyfWy.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the wake up method parameter */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc1PyfWy.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Polarity select the driver enable polarity.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AssertionTime Driver Enable assertion time:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the activation of the DE (Driver 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         signal and the beginning of the start bit. It is expressed in sample ti
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         units (1/8 or 1/16 bit time, depending on the oversampling rate)
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param DeassertionTime Driver Enable deassertion time:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the end of the last stop bit, in 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         transmitted message, and the de-activation of the DE (Driver Enable) si
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         It is expressed in sample time units (1/8 or 1/16 bit time, depending o
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         oversampling rate).
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable UART instance */
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable polarity */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable assertion time */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable deassertion time */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc1PyfWy.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable polarity */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable assertion and deassertion times */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DeInitializes the UART peripheral
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
ARM GAS  /tmp/cc1PyfWy.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DeInit the low level hardware */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlock */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP Init
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP DeInit
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### IO operation functions #####
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
ARM GAS  /tmp/cc1PyfWy.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and Half duplex data transfers.
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) There are two mode of transfer:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            after finishing transfer.
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            using DMA mode.
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Blocking mode API's are :
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Transmit_IT()
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Receive_IT()
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
ARM GAS  /tmp/cc1PyfWy.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
ARM GAS  /tmp/cc1PyfWy.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* as long as data have to be received */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxXferCount--;
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
ARM GAS  /tmp/cc1PyfWy.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  /tmp/cc1PyfWy.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/cc1PyfWy.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->TDR, Size);
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_FLAG_TC);
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
ARM GAS  /tmp/cc1PyfWy.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the parity bit (MSB position).
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA channel */
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, *(uint32_t*)tmp, Size);
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc1PyfWy.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
ARM GAS  /tmp/cc1PyfWy.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If the UART peripheral is still not enabled, enable it */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_UE) == 0U)
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable UART peripheral */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_ENABLE(huart);
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc1PyfWy.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief This function handles UART interrupt request.
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If no error occurs */
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (errorflags == RESET)
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       UART_Receive_IT(huart);
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If some errors occur */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(   (errorflags != RESET)
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
ARM GAS  /tmp/cc1PyfWy.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_Receive_IT(huart);
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          consider error as blocking */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Abort DMA RX */
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           else
ARM GAS  /tmp/cc1PyfWy.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Call user error callback */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         else
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Call user error callback */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Error is notified to user through user error callback */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   } /* End if some error occurs */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_Transmit_IT(huart);
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Tickstart Tick start value
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Timeout Timeout duration
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check for the Timeout */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
ARM GAS  /tmp/cc1PyfWy.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Process Unlocked */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode*/
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Circular mode */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc1PyfWy.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode */
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	/* At end of Rx process, restore huart->RxState to Ready */
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication error callback
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc1PyfWy.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->ErrorCode, HAL_UART_ERROR_DMA);
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication abort callback, when call by HAL services on Error
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        (To be called at end of DMA Abort procedure following error occurrence).
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Tx Transfer completed callbacks
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Rx Transfer completed callbacks
ARM GAS  /tmp/cc1PyfWy.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART error callbacks
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT()
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
  27              		.loc 1 1566 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
ARM GAS  /tmp/cc1PyfWy.s 			page 29


  32              	.LVL0:
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  33              		.loc 1 1570 0
  34 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
  35 0004 DBB2     		uxtb	r3, r3
  36 0006 212B     		cmp	r3, #33
  37 0008 2DD1     		bne	.L6
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
  38              		.loc 1 1573 0
  39 000a B0F85230 		ldrh	r3, [r0, #82]
  40 000e 9BB2     		uxth	r3, r3
  41 0010 5BB9     		cbnz	r3, .L3
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
  42              		.loc 1 1576 0
  43 0012 0268     		ldr	r2, [r0]
  44 0014 1368     		ldr	r3, [r2]
  45 0016 23F08003 		bic	r3, r3, #128
  46 001a 1360     		str	r3, [r2]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
  47              		.loc 1 1579 0
  48 001c 0268     		ldr	r2, [r0]
  49 001e 1368     		ldr	r3, [r2]
  50 0020 43F04003 		orr	r3, r3, #64
  51 0024 1360     		str	r3, [r2]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
  52              		.loc 1 1581 0
  53 0026 0020     		movs	r0, #0
  54              	.LVL1:
  55 0028 7047     		bx	lr
  56              	.LVL2:
  57              	.L3:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
  58              		.loc 1 1585 0
  59 002a 8368     		ldr	r3, [r0, #8]
  60 002c B3F5805F 		cmp	r3, #4096
  61 0030 0BD1     		bne	.L4
  62              		.loc 1 1585 0 is_stmt 0 discriminator 1
  63 0032 0369     		ldr	r3, [r0, #16]
  64 0034 4BB9     		cbnz	r3, .L4
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
  65              		.loc 1 1587 0 is_stmt 1
  66 0036 C36C     		ldr	r3, [r0, #76]
  67              	.LVL3:
ARM GAS  /tmp/cc1PyfWy.s 			page 30


1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
  68              		.loc 1 1588 0
  69 0038 0268     		ldr	r2, [r0]
  70 003a 1B88     		ldrh	r3, [r3]
  71              	.LVL4:
  72 003c C3F30803 		ubfx	r3, r3, #0, #9
  73 0040 9362     		str	r3, [r2, #40]
  74              	.LVL5:
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
  75              		.loc 1 1589 0
  76 0042 C36C     		ldr	r3, [r0, #76]
  77 0044 0233     		adds	r3, r3, #2
  78 0046 C364     		str	r3, [r0, #76]
  79 0048 05E0     		b	.L5
  80              	.L4:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
  81              		.loc 1 1593 0
  82 004a 0268     		ldr	r2, [r0]
  83 004c C36C     		ldr	r3, [r0, #76]
  84 004e 591C     		adds	r1, r3, #1
  85 0050 C164     		str	r1, [r0, #76]
  86 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87 0054 9362     		str	r3, [r2, #40]
  88              	.L5:
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
  89              		.loc 1 1596 0
  90 0056 B0F85230 		ldrh	r3, [r0, #82]
  91 005a 013B     		subs	r3, r3, #1
  92 005c 9BB2     		uxth	r3, r3
  93 005e A0F85230 		strh	r3, [r0, #82]	@ movhi
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
  94              		.loc 1 1598 0
  95 0062 0020     		movs	r0, #0
  96              	.LVL6:
  97 0064 7047     		bx	lr
  98              	.LVL7:
  99              	.L6:
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 100              		.loc 1 1603 0
 101 0066 0220     		movs	r0, #2
 102              	.LVL8:
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 103              		.loc 1 1605 0
 104 0068 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE170:
ARM GAS  /tmp/cc1PyfWy.s 			page 31


 108 006a 00BF     		.section	.text.UART_EndTxTransfer,"ax",%progbits
 109              		.align	2
 110              		.thumb
 111              		.thumb_func
 113              	UART_EndTxTransfer:
 114              	.LFB173:
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
ARM GAS  /tmp/cc1PyfWy.s 			page 32


1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 115              		.loc 1 1686 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL9:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 121              		.loc 1 1688 0
 122 0000 0268     		ldr	r2, [r0]
 123 0002 1368     		ldr	r3, [r2]
 124 0004 23F0C003 		bic	r3, r3, #192
 125 0008 1360     		str	r3, [r2]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 126              		.loc 1 1691 0
 127 000a 2023     		movs	r3, #32
 128 000c 80F86930 		strb	r3, [r0, #105]
 129 0010 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE173:
 133 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
 134              		.align	2
 135              		.thumb
 136              		.thumb_func
 138              	UART_EndRxTransfer:
ARM GAS  /tmp/cc1PyfWy.s 			page 33


 139              	.LFB174:
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 140              		.loc 1 1701 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL10:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 146              		.loc 1 1703 0
 147 0000 0268     		ldr	r2, [r0]
 148 0002 1368     		ldr	r3, [r2]
 149 0004 23F49073 		bic	r3, r3, #288
 150 0008 1360     		str	r3, [r2]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 151              		.loc 1 1704 0
 152 000a 0268     		ldr	r2, [r0]
 153 000c 9368     		ldr	r3, [r2, #8]
 154 000e 23F00103 		bic	r3, r3, #1
 155 0012 9360     		str	r3, [r2, #8]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 156              		.loc 1 1707 0
 157 0014 2023     		movs	r3, #32
 158 0016 80F86A30 		strb	r3, [r0, #106]
 159 001a 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE174:
 163              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 164              		.align	2
 165              		.weak	HAL_UART_MspInit
 166              		.thumb
 167              		.thumb_func
 169              	HAL_UART_MspInit:
 170              	.LFB146:
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 171              		.loc 1 624 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176              	.LVL11:
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE146:
 181 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
ARM GAS  /tmp/cc1PyfWy.s 			page 34


 182              		.align	2
 183              		.weak	HAL_UART_MspDeInit
 184              		.thumb
 185              		.thumb_func
 187              	HAL_UART_MspDeInit:
 188              	.LFB147:
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 189              		.loc 1 639 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL12:
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE147:
 199 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 200              		.align	2
 201              		.global	HAL_UART_DeInit
 202              		.thumb
 203              		.thumb_func
 205              	HAL_UART_DeInit:
 206              	.LFB145:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 207              		.loc 1 586 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              	.LVL13:
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 212              		.loc 1 588 0
 213 0000 D8B1     		cbz	r0, .L13
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 214              		.loc 1 586 0
 215 0002 38B5     		push	{r3, r4, r5, lr}
 216              	.LCFI0:
 217              		.cfi_def_cfa_offset 16
 218              		.cfi_offset 3, -16
 219              		.cfi_offset 4, -12
 220              		.cfi_offset 5, -8
 221              		.cfi_offset 14, -4
 222 0004 0446     		mov	r4, r0
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 223              		.loc 1 596 0
 224 0006 2423     		movs	r3, #36
 225 0008 80F86930 		strb	r3, [r0, #105]
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 226              		.loc 1 599 0
 227 000c 0268     		ldr	r2, [r0]
 228 000e 1368     		ldr	r3, [r2]
 229 0010 23F00103 		bic	r3, r3, #1
 230 0014 1360     		str	r3, [r2]
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 231              		.loc 1 601 0
 232 0016 0368     		ldr	r3, [r0]
 233 0018 0025     		movs	r5, #0
 234 001a 1D60     		str	r5, [r3]
ARM GAS  /tmp/cc1PyfWy.s 			page 35


 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 235              		.loc 1 602 0
 236 001c 0368     		ldr	r3, [r0]
 237 001e 5D60     		str	r5, [r3, #4]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 238              		.loc 1 603 0
 239 0020 0368     		ldr	r3, [r0]
 240 0022 9D60     		str	r5, [r3, #8]
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 241              		.loc 1 606 0
 242 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 243              	.LVL14:
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 244              		.loc 1 608 0
 245 0028 E566     		str	r5, [r4, #108]
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 246              		.loc 1 609 0
 247 002a 84F86950 		strb	r5, [r4, #105]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 248              		.loc 1 610 0
 249 002e 84F86A50 		strb	r5, [r4, #106]
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 250              		.loc 1 613 0
 251 0032 84F86850 		strb	r5, [r4, #104]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 252              		.loc 1 615 0
 253 0036 2846     		mov	r0, r5
 254 0038 38BD     		pop	{r3, r4, r5, pc}
 255              	.LVL15:
 256              	.L13:
 257              	.LCFI1:
 258              		.cfi_def_cfa_offset 0
 259              		.cfi_restore 3
 260              		.cfi_restore 4
 261              		.cfi_restore 5
 262              		.cfi_restore 14
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 263              		.loc 1 590 0
 264 003a 0120     		movs	r0, #1
 265              	.LVL16:
 266 003c 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE145:
 270 003e 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 271              		.align	2
 272              		.global	HAL_UART_Transmit_IT
 273              		.thumb
 274              		.thumb_func
 276              	HAL_UART_Transmit_IT:
 277              	.LFB150:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 278              		.loc 1 857 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283              	.LVL17:
ARM GAS  /tmp/cc1PyfWy.s 			page 36


 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 284              		.loc 1 859 0
 285 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 286 0004 DBB2     		uxtb	r3, r3
 287 0006 202B     		cmp	r3, #32
 288 0008 1AD1     		bne	.L18
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 289              		.loc 1 861 0
 290 000a 002A     		cmp	r2, #0
 291 000c 18BF     		it	ne
 292 000e 0029     		cmpne	r1, #0
 293 0010 18D0     		beq	.L19
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 294              		.loc 1 867 0
 295 0012 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 296 0016 012B     		cmp	r3, #1
 297 0018 16D0     		beq	.L20
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 298              		.loc 1 869 0 discriminator 2
 299 001a C164     		str	r1, [r0, #76]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 300              		.loc 1 870 0 discriminator 2
 301 001c A0F85020 		strh	r2, [r0, #80]	@ movhi
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 302              		.loc 1 871 0 discriminator 2
 303 0020 A0F85220 		strh	r2, [r0, #82]	@ movhi
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 304              		.loc 1 873 0 discriminator 2
 305 0024 0023     		movs	r3, #0
 306 0026 C366     		str	r3, [r0, #108]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 307              		.loc 1 874 0 discriminator 2
 308 0028 2122     		movs	r2, #33
 309              	.LVL18:
 310 002a 80F86920 		strb	r2, [r0, #105]
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 311              		.loc 1 877 0 discriminator 2
 312 002e 80F86830 		strb	r3, [r0, #104]
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 313              		.loc 1 880 0 discriminator 2
 314 0032 0168     		ldr	r1, [r0]
 315              	.LVL19:
 316 0034 0A68     		ldr	r2, [r1]
 317 0036 42F08002 		orr	r2, r2, #128
 318 003a 0A60     		str	r2, [r1]
 319              	.LVL20:
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 320              		.loc 1 882 0 discriminator 2
 321 003c 1846     		mov	r0, r3
 322              	.LVL21:
 323 003e 7047     		bx	lr
 324              	.LVL22:
 325              	.L18:
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 326              		.loc 1 886 0
 327 0040 0220     		movs	r0, #2
 328              	.LVL23:
ARM GAS  /tmp/cc1PyfWy.s 			page 37


 329 0042 7047     		bx	lr
 330              	.LVL24:
 331              	.L19:
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 332              		.loc 1 863 0
 333 0044 0120     		movs	r0, #1
 334              	.LVL25:
 335 0046 7047     		bx	lr
 336              	.LVL26:
 337              	.L20:
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 338              		.loc 1 867 0
 339 0048 0220     		movs	r0, #2
 340              	.LVL27:
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 341              		.loc 1 888 0
 342 004a 7047     		bx	lr
 343              		.cfi_endproc
 344              	.LFE150:
 346              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 347              		.align	2
 348              		.global	HAL_UART_Receive_IT
 349              		.thumb
 350              		.thumb_func
 352              	HAL_UART_Receive_IT:
 353              	.LFB151:
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 354              		.loc 1 898 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359              	.LVL28:
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 360              		.loc 1 900 0
 361 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 362 0004 DBB2     		uxtb	r3, r3
 363 0006 202B     		cmp	r3, #32
 364 0008 48D1     		bne	.L29
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 365              		.loc 1 902 0
 366 000a 002A     		cmp	r2, #0
 367 000c 18BF     		it	ne
 368 000e 0029     		cmpne	r1, #0
 369 0010 46D0     		beq	.L30
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 370              		.loc 1 908 0
 371 0012 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 372 0016 012B     		cmp	r3, #1
 373 0018 44D0     		beq	.L31
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 374              		.loc 1 908 0 is_stmt 0 discriminator 2
 375 001a 0123     		movs	r3, #1
 376 001c 80F86830 		strb	r3, [r0, #104]
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 377              		.loc 1 910 0 is_stmt 1 discriminator 2
 378 0020 4165     		str	r1, [r0, #84]
ARM GAS  /tmp/cc1PyfWy.s 			page 38


 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 379              		.loc 1 911 0 discriminator 2
 380 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 381              		.loc 1 912 0 discriminator 2
 382 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 383              		.loc 1 915 0 discriminator 2
 384 002a 8368     		ldr	r3, [r0, #8]
 385 002c B3F5805F 		cmp	r3, #4096
 386 0030 0AD1     		bne	.L23
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 387              		.loc 1 915 0 is_stmt 0 discriminator 1
 388 0032 0369     		ldr	r3, [r0, #16]
 389 0034 23B9     		cbnz	r3, .L24
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 390              		.loc 1 915 0 discriminator 3
 391 0036 40F2FF13 		movw	r3, #511
 392 003a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 393 003e 1AE0     		b	.L25
 394              	.L24:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 395              		.loc 1 915 0 discriminator 4
 396 0040 FF23     		movs	r3, #255
 397 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 398 0046 16E0     		b	.L25
 399              	.L23:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 400              		.loc 1 915 0 discriminator 2
 401 0048 4BB9     		cbnz	r3, .L26
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 402              		.loc 1 915 0 discriminator 5
 403 004a 0369     		ldr	r3, [r0, #16]
 404 004c 1BB9     		cbnz	r3, .L27
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 405              		.loc 1 915 0 discriminator 7
 406 004e FF23     		movs	r3, #255
 407 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 408 0054 0FE0     		b	.L25
 409              	.L27:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 410              		.loc 1 915 0 discriminator 8
 411 0056 7F23     		movs	r3, #127
 412 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 413 005c 0BE0     		b	.L25
 414              	.L26:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 415              		.loc 1 915 0 discriminator 6
 416 005e B3F1805F 		cmp	r3, #268435456
 417 0062 08D1     		bne	.L25
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 418              		.loc 1 915 0 discriminator 9
 419 0064 0369     		ldr	r3, [r0, #16]
 420 0066 1BB9     		cbnz	r3, .L28
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 421              		.loc 1 915 0 discriminator 10
 422 0068 7F23     		movs	r3, #127
ARM GAS  /tmp/cc1PyfWy.s 			page 39


 423 006a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 424 006e 02E0     		b	.L25
 425              	.L28:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 426              		.loc 1 915 0 discriminator 11
 427 0070 3F23     		movs	r3, #63
 428 0072 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 429              	.L25:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 430              		.loc 1 917 0 is_stmt 1
 431 0076 0023     		movs	r3, #0
 432 0078 C366     		str	r3, [r0, #108]
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 433              		.loc 1 918 0
 434 007a 2222     		movs	r2, #34
 435              	.LVL29:
 436 007c 80F86A20 		strb	r2, [r0, #106]
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 437              		.loc 1 921 0
 438 0080 80F86830 		strb	r3, [r0, #104]
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 439              		.loc 1 924 0
 440 0084 0168     		ldr	r1, [r0]
 441              	.LVL30:
 442 0086 8A68     		ldr	r2, [r1, #8]
 443 0088 42F00102 		orr	r2, r2, #1
 444 008c 8A60     		str	r2, [r1, #8]
 445              	.LVL31:
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 446              		.loc 1 927 0
 447 008e 0168     		ldr	r1, [r0]
 448 0090 0A68     		ldr	r2, [r1]
 449 0092 42F49072 		orr	r2, r2, #288
 450 0096 0A60     		str	r2, [r1]
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 451              		.loc 1 929 0
 452 0098 1846     		mov	r0, r3
 453              	.LVL32:
 454 009a 7047     		bx	lr
 455              	.LVL33:
 456              	.L29:
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 457              		.loc 1 933 0
 458 009c 0220     		movs	r0, #2
 459              	.LVL34:
 460 009e 7047     		bx	lr
 461              	.LVL35:
 462              	.L30:
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 463              		.loc 1 904 0
 464 00a0 0120     		movs	r0, #1
 465              	.LVL36:
 466 00a2 7047     		bx	lr
 467              	.LVL37:
 468              	.L31:
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 469              		.loc 1 908 0
ARM GAS  /tmp/cc1PyfWy.s 			page 40


 470 00a4 0220     		movs	r0, #2
 471              	.LVL38:
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 472              		.loc 1 935 0
 473 00a6 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE151:
 477              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 478              		.align	2
 479              		.global	HAL_UART_Transmit_DMA
 480              		.thumb
 481              		.thumb_func
 483              	HAL_UART_Transmit_DMA:
 484              	.LFB152:
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 485              		.loc 1 945 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              	.LVL39:
 490 0000 38B5     		push	{r3, r4, r5, lr}
 491              	.LCFI2:
 492              		.cfi_def_cfa_offset 16
 493              		.cfi_offset 3, -16
 494              		.cfi_offset 4, -12
 495              		.cfi_offset 5, -8
 496              		.cfi_offset 14, -4
 497 0002 0446     		mov	r4, r0
 498 0004 1346     		mov	r3, r2
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 499              		.loc 1 949 0
 500 0006 90F86920 		ldrb	r2, [r0, #105]	@ zero_extendqisi2
 501              	.LVL40:
 502 000a D2B2     		uxtb	r2, r2
 503 000c 202A     		cmp	r2, #32
 504 000e 30D1     		bne	.L34
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 505              		.loc 1 951 0
 506 0010 002B     		cmp	r3, #0
 507 0012 18BF     		it	ne
 508 0014 0029     		cmpne	r1, #0
 509 0016 2ED0     		beq	.L35
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 510              		.loc 1 957 0
 511 0018 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 512 001c 012A     		cmp	r2, #1
 513 001e 2CD0     		beq	.L36
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 514              		.loc 1 957 0 is_stmt 0 discriminator 2
 515 0020 0122     		movs	r2, #1
 516 0022 80F86820 		strb	r2, [r0, #104]
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 517              		.loc 1 959 0 is_stmt 1 discriminator 2
 518 0026 C164     		str	r1, [r0, #76]
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 519              		.loc 1 960 0 discriminator 2
 520 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
ARM GAS  /tmp/cc1PyfWy.s 			page 41


 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 521              		.loc 1 961 0 discriminator 2
 522 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 523              		.loc 1 963 0 discriminator 2
 524 0030 0025     		movs	r5, #0
 525 0032 C566     		str	r5, [r0, #108]
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 526              		.loc 1 964 0 discriminator 2
 527 0034 2122     		movs	r2, #33
 528 0036 80F86920 		strb	r2, [r0, #105]
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 529              		.loc 1 967 0 discriminator 2
 530 003a 026E     		ldr	r2, [r0, #96]
 531 003c 1048     		ldr	r0, .L38
 532              	.LVL41:
 533 003e D063     		str	r0, [r2, #60]
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 534              		.loc 1 970 0 discriminator 2
 535 0040 226E     		ldr	r2, [r4, #96]
 536 0042 1048     		ldr	r0, .L38+4
 537 0044 1064     		str	r0, [r2, #64]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 538              		.loc 1 973 0 discriminator 2
 539 0046 226E     		ldr	r2, [r4, #96]
 540 0048 0F48     		ldr	r0, .L38+8
 541 004a D064     		str	r0, [r2, #76]
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 542              		.loc 1 976 0 discriminator 2
 543 004c 226E     		ldr	r2, [r4, #96]
 544 004e 1565     		str	r5, [r2, #80]
 545              	.LVL42:
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 546              		.loc 1 980 0 discriminator 2
 547 0050 2268     		ldr	r2, [r4]
 548 0052 206E     		ldr	r0, [r4, #96]
 549 0054 2832     		adds	r2, r2, #40
 550 0056 FFF7FEFF 		bl	HAL_DMA_Start_IT
 551              	.LVL43:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 552              		.loc 1 983 0 discriminator 2
 553 005a 2368     		ldr	r3, [r4]
 554 005c 4022     		movs	r2, #64
 555 005e 1A62     		str	r2, [r3, #32]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 556              		.loc 1 986 0 discriminator 2
 557 0060 84F86850 		strb	r5, [r4, #104]
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 558              		.loc 1 990 0 discriminator 2
 559 0064 2268     		ldr	r2, [r4]
 560 0066 9368     		ldr	r3, [r2, #8]
 561 0068 43F08003 		orr	r3, r3, #128
 562 006c 9360     		str	r3, [r2, #8]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 563              		.loc 1 992 0 discriminator 2
 564 006e 2846     		mov	r0, r5
 565 0070 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc1PyfWy.s 			page 42


 566              	.LVL44:
 567              	.L34:
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 568              		.loc 1 996 0
 569 0072 0220     		movs	r0, #2
 570              	.LVL45:
 571 0074 38BD     		pop	{r3, r4, r5, pc}
 572              	.LVL46:
 573              	.L35:
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 574              		.loc 1 953 0
 575 0076 0120     		movs	r0, #1
 576              	.LVL47:
 577 0078 38BD     		pop	{r3, r4, r5, pc}
 578              	.LVL48:
 579              	.L36:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 580              		.loc 1 957 0
 581 007a 0220     		movs	r0, #2
 582              	.LVL49:
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 583              		.loc 1 998 0
 584 007c 38BD     		pop	{r3, r4, r5, pc}
 585              	.LVL50:
 586              	.L39:
 587 007e 00BF     		.align	2
 588              	.L38:
 589 0080 00000000 		.word	UART_DMATransmitCplt
 590 0084 00000000 		.word	UART_DMATxHalfCplt
 591 0088 00000000 		.word	UART_DMAError
 592              		.cfi_endproc
 593              	.LFE152:
 595              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 596              		.align	2
 597              		.global	HAL_UART_Receive_DMA
 598              		.thumb
 599              		.thumb_func
 601              	HAL_UART_Receive_DMA:
 602              	.LFB153:
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 603              		.loc 1 1010 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              	.LVL51:
 608 0000 70B5     		push	{r4, r5, r6, lr}
 609              	.LCFI3:
 610              		.cfi_def_cfa_offset 16
 611              		.cfi_offset 4, -16
 612              		.cfi_offset 5, -12
 613              		.cfi_offset 6, -8
 614              		.cfi_offset 14, -4
 615 0002 0446     		mov	r4, r0
 616 0004 1346     		mov	r3, r2
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 617              		.loc 1 1014 0
 618 0006 90F86A20 		ldrb	r2, [r0, #106]	@ zero_extendqisi2
ARM GAS  /tmp/cc1PyfWy.s 			page 43


 619              	.LVL52:
 620 000a D2B2     		uxtb	r2, r2
 621 000c 202A     		cmp	r2, #32
 622 000e 37D1     		bne	.L42
 623 0010 0E46     		mov	r6, r1
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 624              		.loc 1 1016 0
 625 0012 002B     		cmp	r3, #0
 626 0014 18BF     		it	ne
 627 0016 0029     		cmpne	r1, #0
 628 0018 34D0     		beq	.L43
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 629              		.loc 1 1022 0
 630 001a 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 631 001e 012A     		cmp	r2, #1
 632 0020 32D0     		beq	.L44
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 633              		.loc 1 1022 0 is_stmt 0 discriminator 2
 634 0022 0122     		movs	r2, #1
 635 0024 80F86820 		strb	r2, [r0, #104]
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 636              		.loc 1 1024 0 is_stmt 1 discriminator 2
 637 0028 6165     		str	r1, [r4, #84]
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 638              		.loc 1 1025 0 discriminator 2
 639 002a A0F85830 		strh	r3, [r0, #88]	@ movhi
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 640              		.loc 1 1027 0 discriminator 2
 641 002e 0025     		movs	r5, #0
 642 0030 C566     		str	r5, [r0, #108]
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 643              		.loc 1 1028 0 discriminator 2
 644 0032 2222     		movs	r2, #34
 645 0034 80F86A20 		strb	r2, [r0, #106]
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 646              		.loc 1 1031 0 discriminator 2
 647 0038 426E     		ldr	r2, [r0, #100]
 648 003a 1449     		ldr	r1, .L46
 649              	.LVL53:
 650 003c D163     		str	r1, [r2, #60]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 651              		.loc 1 1034 0 discriminator 2
 652 003e 426E     		ldr	r2, [r0, #100]
 653 0040 1349     		ldr	r1, .L46+4
 654 0042 1164     		str	r1, [r2, #64]
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 655              		.loc 1 1037 0 discriminator 2
 656 0044 426E     		ldr	r2, [r0, #100]
 657 0046 1349     		ldr	r1, .L46+8
 658 0048 D164     		str	r1, [r2, #76]
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 659              		.loc 1 1040 0 discriminator 2
 660 004a 426E     		ldr	r2, [r0, #100]
 661 004c 1565     		str	r5, [r2, #80]
 662              	.LVL54:
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 663              		.loc 1 1044 0 discriminator 2
ARM GAS  /tmp/cc1PyfWy.s 			page 44


 664 004e 0168     		ldr	r1, [r0]
 665 0050 406E     		ldr	r0, [r0, #100]
 666              	.LVL55:
 667 0052 2431     		adds	r1, r1, #36
 668 0054 3246     		mov	r2, r6
 669 0056 FFF7FEFF 		bl	HAL_DMA_Start_IT
 670              	.LVL56:
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 671              		.loc 1 1047 0 discriminator 2
 672 005a 84F86850 		strb	r5, [r4, #104]
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 673              		.loc 1 1050 0 discriminator 2
 674 005e 2268     		ldr	r2, [r4]
 675 0060 1368     		ldr	r3, [r2]
 676 0062 43F48073 		orr	r3, r3, #256
 677 0066 1360     		str	r3, [r2]
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 678              		.loc 1 1053 0 discriminator 2
 679 0068 2268     		ldr	r2, [r4]
 680 006a 9368     		ldr	r3, [r2, #8]
 681 006c 43F00103 		orr	r3, r3, #1
 682 0070 9360     		str	r3, [r2, #8]
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 683              		.loc 1 1057 0 discriminator 2
 684 0072 2268     		ldr	r2, [r4]
 685 0074 9368     		ldr	r3, [r2, #8]
 686 0076 43F04003 		orr	r3, r3, #64
 687 007a 9360     		str	r3, [r2, #8]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 688              		.loc 1 1059 0 discriminator 2
 689 007c 2846     		mov	r0, r5
 690 007e 70BD     		pop	{r4, r5, r6, pc}
 691              	.LVL57:
 692              	.L42:
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 693              		.loc 1 1063 0
 694 0080 0220     		movs	r0, #2
 695              	.LVL58:
 696 0082 70BD     		pop	{r4, r5, r6, pc}
 697              	.LVL59:
 698              	.L43:
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 699              		.loc 1 1018 0
 700 0084 0120     		movs	r0, #1
 701              	.LVL60:
 702 0086 70BD     		pop	{r4, r5, r6, pc}
 703              	.LVL61:
 704              	.L44:
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 705              		.loc 1 1022 0
 706 0088 0220     		movs	r0, #2
 707              	.LVL62:
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 708              		.loc 1 1065 0
 709 008a 70BD     		pop	{r4, r5, r6, pc}
 710              	.LVL63:
 711              	.L47:
ARM GAS  /tmp/cc1PyfWy.s 			page 45


 712              		.align	2
 713              	.L46:
 714 008c 00000000 		.word	UART_DMAReceiveCplt
 715 0090 00000000 		.word	UART_DMARxHalfCplt
 716 0094 00000000 		.word	UART_DMAError
 717              		.cfi_endproc
 718              	.LFE153:
 720              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 721              		.align	2
 722              		.global	HAL_UART_DMAPause
 723              		.thumb
 724              		.thumb_func
 726              	HAL_UART_DMAPause:
 727              	.LFB154:
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 728              		.loc 1 1073 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733              	.LVL64:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 734              		.loc 1 1075 0
 735 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 736 0004 012B     		cmp	r3, #1
 737 0006 2DD0     		beq	.L52
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 738              		.loc 1 1075 0 is_stmt 0 discriminator 2
 739 0008 0123     		movs	r3, #1
 740 000a 80F86830 		strb	r3, [r0, #104]
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 741              		.loc 1 1077 0 is_stmt 1 discriminator 2
 742 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 743 0012 DBB2     		uxtb	r3, r3
 744 0014 212B     		cmp	r3, #33
 745 0016 08D1     		bne	.L50
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 746              		.loc 1 1078 0 discriminator 1
 747 0018 0368     		ldr	r3, [r0]
 748 001a 9A68     		ldr	r2, [r3, #8]
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 749              		.loc 1 1077 0 discriminator 1
 750 001c 12F0800F 		tst	r2, #128
 751 0020 03D0     		beq	.L50
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 752              		.loc 1 1081 0
 753 0022 9A68     		ldr	r2, [r3, #8]
 754 0024 22F08002 		bic	r2, r2, #128
 755 0028 9A60     		str	r2, [r3, #8]
 756              	.L50:
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 757              		.loc 1 1083 0
 758 002a 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 759 002e DBB2     		uxtb	r3, r3
 760 0030 222B     		cmp	r3, #34
 761 0032 12D1     		bne	.L51
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  /tmp/cc1PyfWy.s 			page 46


 762              		.loc 1 1084 0 discriminator 1
 763 0034 0368     		ldr	r3, [r0]
 764 0036 9A68     		ldr	r2, [r3, #8]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 765              		.loc 1 1083 0 discriminator 1
 766 0038 12F0400F 		tst	r2, #64
 767 003c 0DD0     		beq	.L51
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 768              		.loc 1 1087 0
 769 003e 1A68     		ldr	r2, [r3]
 770 0040 22F48072 		bic	r2, r2, #256
 771 0044 1A60     		str	r2, [r3]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 772              		.loc 1 1088 0
 773 0046 0268     		ldr	r2, [r0]
 774 0048 9368     		ldr	r3, [r2, #8]
 775 004a 23F00103 		bic	r3, r3, #1
 776 004e 9360     		str	r3, [r2, #8]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 777              		.loc 1 1091 0
 778 0050 0268     		ldr	r2, [r0]
 779 0052 9368     		ldr	r3, [r2, #8]
 780 0054 23F04003 		bic	r3, r3, #64
 781 0058 9360     		str	r3, [r2, #8]
 782              	.L51:
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 783              		.loc 1 1095 0
 784 005a 0023     		movs	r3, #0
 785 005c 80F86830 		strb	r3, [r0, #104]
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 786              		.loc 1 1097 0
 787 0060 1846     		mov	r0, r3
 788              	.LVL65:
 789 0062 7047     		bx	lr
 790              	.LVL66:
 791              	.L52:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 792              		.loc 1 1075 0
 793 0064 0220     		movs	r0, #2
 794              	.LVL67:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 795              		.loc 1 1098 0
 796 0066 7047     		bx	lr
 797              		.cfi_endproc
 798              	.LFE154:
 800              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 801              		.align	2
 802              		.global	HAL_UART_DMAResume
 803              		.thumb
 804              		.thumb_func
 806              	HAL_UART_DMAResume:
 807              	.LFB155:
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 808              		.loc 1 1106 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc1PyfWy.s 			page 47


 812              		@ link register save eliminated.
 813              	.LVL68:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 814              		.loc 1 1108 0
 815 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 816 0004 012B     		cmp	r3, #1
 817 0006 2ED0     		beq	.L57
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 818              		.loc 1 1108 0 is_stmt 0 discriminator 2
 819 0008 0123     		movs	r3, #1
 820 000a 80F86830 		strb	r3, [r0, #104]
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 821              		.loc 1 1110 0 is_stmt 1 discriminator 2
 822 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 823 0012 DBB2     		uxtb	r3, r3
 824 0014 212B     		cmp	r3, #33
 825 0016 04D1     		bne	.L55
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 826              		.loc 1 1113 0
 827 0018 0268     		ldr	r2, [r0]
 828 001a 9368     		ldr	r3, [r2, #8]
 829 001c 43F08003 		orr	r3, r3, #128
 830 0020 9360     		str	r3, [r2, #8]
 831              	.L55:
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 832              		.loc 1 1115 0
 833 0022 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 834 0026 DBB2     		uxtb	r3, r3
 835 0028 222B     		cmp	r3, #34
 836 002a 11D1     		bne	.L56
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 837              		.loc 1 1118 0
 838 002c 0368     		ldr	r3, [r0]
 839 002e 0822     		movs	r2, #8
 840 0030 1A62     		str	r2, [r3, #32]
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 841              		.loc 1 1121 0
 842 0032 0268     		ldr	r2, [r0]
 843 0034 1368     		ldr	r3, [r2]
 844 0036 43F48073 		orr	r3, r3, #256
 845 003a 1360     		str	r3, [r2]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 846              		.loc 1 1122 0
 847 003c 0268     		ldr	r2, [r0]
 848 003e 9368     		ldr	r3, [r2, #8]
 849 0040 43F00103 		orr	r3, r3, #1
 850 0044 9360     		str	r3, [r2, #8]
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 851              		.loc 1 1125 0
 852 0046 0268     		ldr	r2, [r0]
 853 0048 9368     		ldr	r3, [r2, #8]
 854 004a 43F04003 		orr	r3, r3, #64
 855 004e 9360     		str	r3, [r2, #8]
 856              	.L56:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 857              		.loc 1 1129 0
 858 0050 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc1PyfWy.s 			page 48


 859 0052 1A68     		ldr	r2, [r3]
 860 0054 12F0010F 		tst	r2, #1
 861 0058 07D1     		bne	.L58
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 862              		.loc 1 1132 0
 863 005a 1A68     		ldr	r2, [r3]
 864 005c 42F00102 		orr	r2, r2, #1
 865 0060 1A60     		str	r2, [r3]
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 866              		.loc 1 1135 0
 867 0062 0020     		movs	r0, #0
 868              	.LVL69:
 869 0064 7047     		bx	lr
 870              	.LVL70:
 871              	.L57:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 872              		.loc 1 1108 0
 873 0066 0220     		movs	r0, #2
 874              	.LVL71:
 875 0068 7047     		bx	lr
 876              	.LVL72:
 877              	.L58:
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 878              		.loc 1 1135 0
 879 006a 0020     		movs	r0, #0
 880              	.LVL73:
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 881              		.loc 1 1136 0
 882 006c 7047     		bx	lr
 883              		.cfi_endproc
 884              	.LFE155:
 886 006e 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 887              		.align	2
 888              		.global	HAL_UART_DMAStop
 889              		.thumb
 890              		.thumb_func
 892              	HAL_UART_DMAStop:
 893              	.LFB156:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 894              		.loc 1 1144 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              	.LVL74:
 899 0000 10B5     		push	{r4, lr}
 900              	.LCFI4:
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 4, -8
 903              		.cfi_offset 14, -4
 904 0002 0446     		mov	r4, r0
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 905              		.loc 1 1153 0
 906 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 907 0008 DBB2     		uxtb	r3, r3
 908 000a 212B     		cmp	r3, #33
 909 000c 0FD1     		bne	.L60
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  /tmp/cc1PyfWy.s 			page 49


 910              		.loc 1 1154 0 discriminator 1
 911 000e 0368     		ldr	r3, [r0]
 912 0010 9A68     		ldr	r2, [r3, #8]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 913              		.loc 1 1153 0 discriminator 1
 914 0012 12F0800F 		tst	r2, #128
 915 0016 0AD0     		beq	.L60
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 916              		.loc 1 1156 0
 917 0018 9A68     		ldr	r2, [r3, #8]
 918 001a 22F08002 		bic	r2, r2, #128
 919 001e 9A60     		str	r2, [r3, #8]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 920              		.loc 1 1159 0
 921 0020 006E     		ldr	r0, [r0, #96]
 922              	.LVL75:
 923 0022 08B1     		cbz	r0, .L61
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 924              		.loc 1 1161 0
 925 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 926              	.LVL76:
 927              	.L61:
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 928              		.loc 1 1164 0
 929 0028 2046     		mov	r0, r4
 930 002a FFF7FEFF 		bl	UART_EndTxTransfer
 931              	.LVL77:
 932              	.L60:
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 933              		.loc 1 1168 0
 934 002e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 935 0032 DBB2     		uxtb	r3, r3
 936 0034 222B     		cmp	r3, #34
 937 0036 0FD1     		bne	.L62
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 938              		.loc 1 1169 0 discriminator 1
 939 0038 2368     		ldr	r3, [r4]
 940 003a 9A68     		ldr	r2, [r3, #8]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 941              		.loc 1 1168 0 discriminator 1
 942 003c 12F0400F 		tst	r2, #64
 943 0040 0AD0     		beq	.L62
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 944              		.loc 1 1171 0
 945 0042 9A68     		ldr	r2, [r3, #8]
 946 0044 22F04002 		bic	r2, r2, #64
 947 0048 9A60     		str	r2, [r3, #8]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 948              		.loc 1 1174 0
 949 004a 606E     		ldr	r0, [r4, #100]
 950 004c 08B1     		cbz	r0, .L63
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 951              		.loc 1 1176 0
 952 004e FFF7FEFF 		bl	HAL_DMA_Abort
 953              	.LVL78:
 954              	.L63:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  /tmp/cc1PyfWy.s 			page 50


 955              		.loc 1 1179 0
 956 0052 2046     		mov	r0, r4
 957 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 958              	.LVL79:
 959              	.L62:
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 960              		.loc 1 1183 0
 961 0058 0020     		movs	r0, #0
 962 005a 10BD     		pop	{r4, pc}
 963              		.cfi_endproc
 964              	.LFE156:
 966              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 967              		.align	2
 968              		.global	UART_WaitOnFlagUntilTimeout
 969              		.thumb
 970              		.thumb_func
 972              	UART_WaitOnFlagUntilTimeout:
 973              	.LFB158:
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
 974              		.loc 1 1336 0
 975              		.cfi_startproc
 976              		@ args = 4, pretend = 0, frame = 0
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 978              	.LVL80:
 979 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 980              	.LCFI5:
 981              		.cfi_def_cfa_offset 24
 982              		.cfi_offset 4, -24
 983              		.cfi_offset 5, -20
 984              		.cfi_offset 6, -16
 985              		.cfi_offset 7, -12
 986              		.cfi_offset 8, -8
 987              		.cfi_offset 14, -4
 988 0004 0646     		mov	r6, r0
 989 0006 0C46     		mov	r4, r1
 990 0008 1746     		mov	r7, r2
 991 000a 9846     		mov	r8, r3
 992 000c 069D     		ldr	r5, [sp, #24]
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 993              		.loc 1 1338 0
 994 000e 1EE0     		b	.L67
 995              	.LVL81:
 996              	.L70:
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 997              		.loc 1 1341 0
 998 0010 B5F1FF3F 		cmp	r5, #-1
 999 0014 1BD0     		beq	.L67
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1000              		.loc 1 1343 0
 1001 0016 2DB1     		cbz	r5, .L68
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1002              		.loc 1 1343 0 is_stmt 0 discriminator 1
 1003 0018 FFF7FEFF 		bl	HAL_GetTick
 1004              	.LVL82:
 1005 001c C8EB0000 		rsb	r0, r8, r0
 1006 0020 A842     		cmp	r0, r5
 1007 0022 14D3     		bcc	.L67
ARM GAS  /tmp/cc1PyfWy.s 			page 51


 1008              	.L68:
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1009              		.loc 1 1346 0 is_stmt 1
 1010 0024 3268     		ldr	r2, [r6]
 1011 0026 1368     		ldr	r3, [r2]
 1012 0028 23F4D073 		bic	r3, r3, #416
 1013 002c 1360     		str	r3, [r2]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1014              		.loc 1 1347 0
 1015 002e 3268     		ldr	r2, [r6]
 1016 0030 9368     		ldr	r3, [r2, #8]
 1017 0032 23F00103 		bic	r3, r3, #1
 1018 0036 9360     		str	r3, [r2, #8]
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1019              		.loc 1 1349 0
 1020 0038 2023     		movs	r3, #32
 1021 003a 86F86930 		strb	r3, [r6, #105]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1022              		.loc 1 1350 0
 1023 003e 86F86A30 		strb	r3, [r6, #106]
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1024              		.loc 1 1353 0
 1025 0042 0023     		movs	r3, #0
 1026 0044 86F86830 		strb	r3, [r6, #104]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1027              		.loc 1 1354 0
 1028 0048 0320     		movs	r0, #3
 1029 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1030              	.LVL83:
 1031              	.L67:
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1032              		.loc 1 1338 0
 1033 004e 3368     		ldr	r3, [r6]
 1034 0050 DB69     		ldr	r3, [r3, #28]
 1035 0052 2340     		ands	r3, r3, r4
 1036 0054 A342     		cmp	r3, r4
 1037 0056 14BF     		ite	ne
 1038 0058 0023     		movne	r3, #0
 1039 005a 0123     		moveq	r3, #1
 1040 005c BB42     		cmp	r3, r7
 1041 005e D7D0     		beq	.L70
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1042              		.loc 1 1358 0
 1043 0060 0020     		movs	r0, #0
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1044              		.loc 1 1359 0
 1045 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1046              		.cfi_endproc
 1047              	.LFE158:
 1049 0066 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1050              		.align	2
 1051              		.global	HAL_UART_Transmit
 1052              		.thumb
 1053              		.thumb_func
 1055              	HAL_UART_Transmit:
 1056              	.LFB148:
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
ARM GAS  /tmp/cc1PyfWy.s 			page 52


 1057              		.loc 1 717 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061              	.LVL84:
 1062 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1063              	.LCFI6:
 1064              		.cfi_def_cfa_offset 24
 1065              		.cfi_offset 4, -24
 1066              		.cfi_offset 5, -20
 1067              		.cfi_offset 6, -16
 1068              		.cfi_offset 7, -12
 1069              		.cfi_offset 8, -8
 1070              		.cfi_offset 14, -4
 1071 0004 82B0     		sub	sp, sp, #8
 1072              	.LCFI7:
 1073              		.cfi_def_cfa_offset 32
 1074 0006 0446     		mov	r4, r0
 1075 0008 1E46     		mov	r6, r3
 1076              	.LVL85:
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1077              		.loc 1 722 0
 1078 000a 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 1079              	.LVL86:
 1080 000e DBB2     		uxtb	r3, r3
 1081 0010 202B     		cmp	r3, #32
 1082 0012 4DD1     		bne	.L78
 1083 0014 0D46     		mov	r5, r1
 1084 0016 9046     		mov	r8, r2
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1085              		.loc 1 724 0
 1086 0018 002A     		cmp	r2, #0
 1087 001a 18BF     		it	ne
 1088 001c 0029     		cmpne	r1, #0
 1089 001e 49D0     		beq	.L79
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1090              		.loc 1 730 0
 1091 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 1092 0024 012B     		cmp	r3, #1
 1093 0026 47D0     		beq	.L80
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1094              		.loc 1 730 0 is_stmt 0 discriminator 2
 1095 0028 0123     		movs	r3, #1
 1096 002a 80F86830 		strb	r3, [r0, #104]
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1097              		.loc 1 732 0 is_stmt 1 discriminator 2
 1098 002e 0023     		movs	r3, #0
 1099 0030 C366     		str	r3, [r0, #108]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1100              		.loc 1 733 0 discriminator 2
 1101 0032 2123     		movs	r3, #33
 1102 0034 80F86930 		strb	r3, [r0, #105]
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1103              		.loc 1 736 0 discriminator 2
 1104 0038 FFF7FEFF 		bl	HAL_GetTick
 1105              	.LVL87:
 1106 003c 0746     		mov	r7, r0
ARM GAS  /tmp/cc1PyfWy.s 			page 53


 1107              	.LVL88:
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1108              		.loc 1 738 0 discriminator 2
 1109 003e A4F85080 		strh	r8, [r4, #80]	@ movhi
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1110              		.loc 1 739 0 discriminator 2
 1111 0042 A4F85280 		strh	r8, [r4, #82]	@ movhi
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1112              		.loc 1 740 0 discriminator 2
 1113 0046 1EE0     		b	.L74
 1114              	.LVL89:
 1115              	.L77:
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 1116              		.loc 1 742 0
 1117 0048 B4F85230 		ldrh	r3, [r4, #82]
 1118 004c 013B     		subs	r3, r3, #1
 1119 004e 9BB2     		uxth	r3, r3
 1120 0050 A4F85230 		strh	r3, [r4, #82]	@ movhi
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1121              		.loc 1 743 0
 1122 0054 0096     		str	r6, [sp]
 1123 0056 2046     		mov	r0, r4
 1124 0058 8021     		movs	r1, #128
 1125 005a 0022     		movs	r2, #0
 1126 005c 3B46     		mov	r3, r7
 1127 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1128              	.LVL90:
 1129 0062 58BB     		cbnz	r0, .L81
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1130              		.loc 1 747 0
 1131 0064 A368     		ldr	r3, [r4, #8]
 1132 0066 B3F5805F 		cmp	r3, #4096
 1133 006a 08D1     		bne	.L75
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1134              		.loc 1 747 0 is_stmt 0 discriminator 1
 1135 006c 2369     		ldr	r3, [r4, #16]
 1136 006e 33B9     		cbnz	r3, .L75
 1137              	.LVL91:
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 1138              		.loc 1 750 0 is_stmt 1
 1139 0070 2268     		ldr	r2, [r4]
 1140 0072 35F8023B 		ldrh	r3, [r5], #2
 1141              	.LVL92:
 1142 0076 C3F30803 		ubfx	r3, r3, #0, #9
 1143 007a 9362     		str	r3, [r2, #40]
 1144              	.LVL93:
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1145              		.loc 1 751 0
 1146 007c 03E0     		b	.L74
 1147              	.LVL94:
 1148              	.L75:
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1149              		.loc 1 755 0
 1150 007e 2368     		ldr	r3, [r4]
 1151              	.LVL95:
 1152 0080 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1153 0082 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/cc1PyfWy.s 			page 54


 1154 0084 0135     		adds	r5, r5, #1
 1155              	.LVL96:
 1156              	.L74:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1157              		.loc 1 740 0
 1158 0086 B4F85230 		ldrh	r3, [r4, #82]
 1159 008a 9BB2     		uxth	r3, r3
 1160 008c 002B     		cmp	r3, #0
 1161 008e DBD1     		bne	.L77
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1162              		.loc 1 758 0
 1163 0090 0096     		str	r6, [sp]
 1164 0092 2046     		mov	r0, r4
 1165 0094 4021     		movs	r1, #64
 1166 0096 0022     		movs	r2, #0
 1167 0098 3B46     		mov	r3, r7
 1168 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1169              	.LVL97:
 1170 009e 0346     		mov	r3, r0
 1171 00a0 70B9     		cbnz	r0, .L82
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1172              		.loc 1 764 0
 1173 00a2 2022     		movs	r2, #32
 1174 00a4 84F86920 		strb	r2, [r4, #105]
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1175              		.loc 1 767 0
 1176 00a8 0022     		movs	r2, #0
 1177 00aa 84F86820 		strb	r2, [r4, #104]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1178              		.loc 1 769 0
 1179 00ae 08E0     		b	.L73
 1180              	.LVL98:
 1181              	.L78:
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1182              		.loc 1 773 0
 1183 00b0 0223     		movs	r3, #2
 1184 00b2 06E0     		b	.L73
 1185              	.L79:
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1186              		.loc 1 726 0
 1187 00b4 0123     		movs	r3, #1
 1188 00b6 04E0     		b	.L73
 1189              	.L80:
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1190              		.loc 1 730 0
 1191 00b8 0223     		movs	r3, #2
 1192 00ba 02E0     		b	.L73
 1193              	.LVL99:
 1194              	.L81:
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1195              		.loc 1 745 0
 1196 00bc 0323     		movs	r3, #3
 1197 00be 00E0     		b	.L73
 1198              	.L82:
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1199              		.loc 1 760 0
 1200 00c0 0323     		movs	r3, #3
ARM GAS  /tmp/cc1PyfWy.s 			page 55


 1201              	.LVL100:
 1202              	.L73:
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1203              		.loc 1 775 0
 1204 00c2 1846     		mov	r0, r3
 1205 00c4 02B0     		add	sp, sp, #8
 1206              	.LCFI8:
 1207              		.cfi_def_cfa_offset 24
 1208              		@ sp needed
 1209 00c6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1210              		.cfi_endproc
 1211              	.LFE148:
 1213 00ca 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 1214              		.align	2
 1215              		.global	HAL_UART_Receive
 1216              		.thumb
 1217              		.thumb_func
 1219              	HAL_UART_Receive:
 1220              	.LFB149:
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1221              		.loc 1 786 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              	.LVL101:
 1226 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1227              	.LCFI9:
 1228              		.cfi_def_cfa_offset 24
 1229              		.cfi_offset 4, -24
 1230              		.cfi_offset 5, -20
 1231              		.cfi_offset 6, -16
 1232              		.cfi_offset 7, -12
 1233              		.cfi_offset 8, -8
 1234              		.cfi_offset 14, -4
 1235 0004 82B0     		sub	sp, sp, #8
 1236              	.LCFI10:
 1237              		.cfi_def_cfa_offset 32
 1238 0006 0446     		mov	r4, r0
 1239 0008 1E46     		mov	r6, r3
 1240              	.LVL102:
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1241              		.loc 1 792 0
 1242 000a 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 1243              	.LVL103:
 1244 000e DBB2     		uxtb	r3, r3
 1245 0010 202B     		cmp	r3, #32
 1246 0012 6ED1     		bne	.L96
 1247 0014 0D46     		mov	r5, r1
 1248 0016 9046     		mov	r8, r2
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1249              		.loc 1 794 0
 1250 0018 002A     		cmp	r2, #0
 1251 001a 18BF     		it	ne
 1252 001c 0029     		cmpne	r1, #0
 1253 001e 6AD0     		beq	.L97
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1254              		.loc 1 800 0
ARM GAS  /tmp/cc1PyfWy.s 			page 56


 1255 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 1256 0024 012B     		cmp	r3, #1
 1257 0026 68D0     		beq	.L98
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1258              		.loc 1 800 0 is_stmt 0 discriminator 2
 1259 0028 0123     		movs	r3, #1
 1260 002a 80F86830 		strb	r3, [r0, #104]
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1261              		.loc 1 802 0 is_stmt 1 discriminator 2
 1262 002e 0023     		movs	r3, #0
 1263 0030 C366     		str	r3, [r0, #108]
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1264              		.loc 1 803 0 discriminator 2
 1265 0032 2223     		movs	r3, #34
 1266 0034 80F86A30 		strb	r3, [r0, #106]
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1267              		.loc 1 806 0 discriminator 2
 1268 0038 FFF7FEFF 		bl	HAL_GetTick
 1269              	.LVL104:
 1270 003c 0746     		mov	r7, r0
 1271              	.LVL105:
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1272              		.loc 1 808 0 discriminator 2
 1273 003e A4F85880 		strh	r8, [r4, #88]	@ movhi
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1274              		.loc 1 809 0 discriminator 2
 1275 0042 A4F85A80 		strh	r8, [r4, #90]	@ movhi
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1276              		.loc 1 812 0 discriminator 2
 1277 0046 A368     		ldr	r3, [r4, #8]
 1278 0048 B3F5805F 		cmp	r3, #4096
 1279 004c 0AD1     		bne	.L86
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1280              		.loc 1 812 0 is_stmt 0 discriminator 1
 1281 004e 2369     		ldr	r3, [r4, #16]
 1282 0050 23B9     		cbnz	r3, .L87
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1283              		.loc 1 812 0 discriminator 3
 1284 0052 40F2FF13 		movw	r3, #511
 1285 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1286 005a 1AE0     		b	.L88
 1287              	.L87:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1288              		.loc 1 812 0 discriminator 4
 1289 005c FF23     		movs	r3, #255
 1290 005e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1291 0062 16E0     		b	.L88
 1292              	.L86:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1293              		.loc 1 812 0 discriminator 2
 1294 0064 4BB9     		cbnz	r3, .L89
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1295              		.loc 1 812 0 discriminator 5
 1296 0066 2369     		ldr	r3, [r4, #16]
 1297 0068 1BB9     		cbnz	r3, .L90
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1298              		.loc 1 812 0 discriminator 7
ARM GAS  /tmp/cc1PyfWy.s 			page 57


 1299 006a FF23     		movs	r3, #255
 1300 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1301 0070 0FE0     		b	.L88
 1302              	.L90:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1303              		.loc 1 812 0 discriminator 8
 1304 0072 7F23     		movs	r3, #127
 1305 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1306 0078 0BE0     		b	.L88
 1307              	.L89:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1308              		.loc 1 812 0 discriminator 6
 1309 007a B3F1805F 		cmp	r3, #268435456
 1310 007e 08D1     		bne	.L88
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1311              		.loc 1 812 0 discriminator 9
 1312 0080 2369     		ldr	r3, [r4, #16]
 1313 0082 1BB9     		cbnz	r3, .L91
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1314              		.loc 1 812 0 discriminator 10
 1315 0084 7F23     		movs	r3, #127
 1316 0086 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1317 008a 02E0     		b	.L88
 1318              	.L91:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1319              		.loc 1 812 0 discriminator 11
 1320 008c 3F23     		movs	r3, #63
 1321 008e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1322              	.L88:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1323              		.loc 1 813 0 is_stmt 1
 1324 0092 B4F85C80 		ldrh	r8, [r4, #92]
 1325              	.LVL106:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1326              		.loc 1 816 0
 1327 0096 20E0     		b	.L92
 1328              	.LVL107:
 1329              	.L95:
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1330              		.loc 1 818 0
 1331 0098 B4F85A30 		ldrh	r3, [r4, #90]
 1332 009c 013B     		subs	r3, r3, #1
 1333 009e 9BB2     		uxth	r3, r3
 1334 00a0 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1335              		.loc 1 819 0
 1336 00a4 0096     		str	r6, [sp]
 1337 00a6 2046     		mov	r0, r4
 1338 00a8 2021     		movs	r1, #32
 1339 00aa 0022     		movs	r2, #0
 1340 00ac 3B46     		mov	r3, r7
 1341 00ae FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1342              	.LVL108:
 1343 00b2 20BB     		cbnz	r0, .L99
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1344              		.loc 1 823 0
 1345 00b4 A368     		ldr	r3, [r4, #8]
ARM GAS  /tmp/cc1PyfWy.s 			page 58


 1346 00b6 B3F5805F 		cmp	r3, #4096
 1347 00ba 08D1     		bne	.L93
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1348              		.loc 1 823 0 is_stmt 0 discriminator 1
 1349 00bc 2369     		ldr	r3, [r4, #16]
 1350 00be 33B9     		cbnz	r3, .L93
 1351              	.LVL109:
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 1352              		.loc 1 826 0 is_stmt 1
 1353 00c0 2368     		ldr	r3, [r4]
 1354 00c2 5B6A     		ldr	r3, [r3, #36]
 1355 00c4 08EA0303 		and	r3, r8, r3
 1356 00c8 25F8023B 		strh	r3, [r5], #2	@ movhi
 1357              	.LVL110:
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1358              		.loc 1 827 0
 1359 00cc 05E0     		b	.L92
 1360              	.LVL111:
 1361              	.L93:
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1362              		.loc 1 831 0
 1363 00ce 2368     		ldr	r3, [r4]
 1364 00d0 5B6A     		ldr	r3, [r3, #36]
 1365 00d2 08EA0303 		and	r3, r8, r3
 1366 00d6 2B70     		strb	r3, [r5]
 1367 00d8 0135     		adds	r5, r5, #1
 1368              	.LVL112:
 1369              	.L92:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1370              		.loc 1 816 0
 1371 00da B4F85A30 		ldrh	r3, [r4, #90]
 1372 00de 9BB2     		uxth	r3, r3
 1373 00e0 002B     		cmp	r3, #0
 1374 00e2 D9D1     		bne	.L95
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1375              		.loc 1 836 0
 1376 00e4 2023     		movs	r3, #32
 1377 00e6 84F86A30 		strb	r3, [r4, #106]
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1378              		.loc 1 839 0
 1379 00ea 0020     		movs	r0, #0
 1380 00ec 84F86800 		strb	r0, [r4, #104]
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1381              		.loc 1 841 0
 1382 00f0 06E0     		b	.L85
 1383              	.LVL113:
 1384              	.L96:
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1385              		.loc 1 845 0
 1386 00f2 0220     		movs	r0, #2
 1387              	.LVL114:
 1388 00f4 04E0     		b	.L85
 1389              	.LVL115:
 1390              	.L97:
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1391              		.loc 1 796 0
 1392 00f6 0120     		movs	r0, #1
ARM GAS  /tmp/cc1PyfWy.s 			page 59


 1393              	.LVL116:
 1394 00f8 02E0     		b	.L85
 1395              	.LVL117:
 1396              	.L98:
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1397              		.loc 1 800 0
 1398 00fa 0220     		movs	r0, #2
 1399              	.LVL118:
 1400 00fc 00E0     		b	.L85
 1401              	.LVL119:
 1402              	.L99:
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1403              		.loc 1 821 0
 1404 00fe 0320     		movs	r0, #3
 1405              	.LVL120:
 1406              	.L85:
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1407              		.loc 1 847 0
 1408 0100 02B0     		add	sp, sp, #8
 1409              	.LCFI11:
 1410              		.cfi_def_cfa_offset 24
 1411              		@ sp needed
 1412 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1413              		.cfi_endproc
 1414              	.LFE149:
 1416 0106 00BF     		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1417              		.align	2
 1418              		.weak	HAL_UART_TxCpltCallback
 1419              		.thumb
 1420              		.thumb_func
 1422              	HAL_UART_TxCpltCallback:
 1423              	.LFB165:
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1424              		.loc 1 1489 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              		@ link register save eliminated.
 1429              	.LVL121:
 1430 0000 7047     		bx	lr
 1431              		.cfi_endproc
 1432              	.LFE165:
 1434 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1435              		.align	2
 1436              		.thumb
 1437              		.thumb_func
 1439              	UART_DMATransmitCplt:
 1440              	.LFB159:
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1441              		.loc 1 1367 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445              	.LVL122:
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1446              		.loc 1 1367 0
 1447 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc1PyfWy.s 			page 60


 1448              	.LCFI12:
 1449              		.cfi_def_cfa_offset 8
 1450              		.cfi_offset 3, -8
 1451              		.cfi_offset 14, -4
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1452              		.loc 1 1368 0
 1453 0002 836B     		ldr	r3, [r0, #56]
 1454              	.LVL123:
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1455              		.loc 1 1371 0
 1456 0004 0268     		ldr	r2, [r0]
 1457 0006 1268     		ldr	r2, [r2]
 1458 0008 12F4807F 		tst	r2, #256
 1459 000c 0DD1     		bne	.L103
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1460              		.loc 1 1373 0
 1461 000e 0022     		movs	r2, #0
 1462 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1463              		.loc 1 1377 0
 1464 0014 1968     		ldr	r1, [r3]
 1465 0016 8A68     		ldr	r2, [r1, #8]
 1466 0018 22F08002 		bic	r2, r2, #128
 1467 001c 8A60     		str	r2, [r1, #8]
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1468              		.loc 1 1380 0
 1469 001e 1A68     		ldr	r2, [r3]
 1470 0020 1368     		ldr	r3, [r2]
 1471              	.LVL124:
 1472 0022 43F04003 		orr	r3, r3, #64
 1473 0026 1360     		str	r3, [r2]
 1474 0028 08BD     		pop	{r3, pc}
 1475              	.LVL125:
 1476              	.L103:
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1477              		.loc 1 1385 0
 1478 002a 1846     		mov	r0, r3
 1479              	.LVL126:
 1480 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1481              	.LVL127:
 1482 0030 08BD     		pop	{r3, pc}
 1483              		.cfi_endproc
 1484              	.LFE159:
 1486 0032 00BF     		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1487              		.align	2
 1488              		.thumb
 1489              		.thumb_func
 1491              	UART_EndTransmit_IT:
 1492              	.LFB171:
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 1493              		.loc 1 1614 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 1497              	.LVL128:
 1498 0000 08B5     		push	{r3, lr}
 1499              	.LCFI13:
ARM GAS  /tmp/cc1PyfWy.s 			page 61


 1500              		.cfi_def_cfa_offset 8
 1501              		.cfi_offset 3, -8
 1502              		.cfi_offset 14, -4
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1503              		.loc 1 1616 0
 1504 0002 0168     		ldr	r1, [r0]
 1505 0004 0B68     		ldr	r3, [r1]
 1506 0006 23F04003 		bic	r3, r3, #64
 1507 000a 0B60     		str	r3, [r1]
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1508              		.loc 1 1619 0
 1509 000c 2023     		movs	r3, #32
 1510 000e 80F86930 		strb	r3, [r0, #105]
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1511              		.loc 1 1621 0
 1512 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1513              	.LVL129:
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1514              		.loc 1 1624 0
 1515 0016 0020     		movs	r0, #0
 1516 0018 08BD     		pop	{r3, pc}
 1517              		.cfi_endproc
 1518              	.LFE171:
 1520 001a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1521              		.align	2
 1522              		.weak	HAL_UART_TxHalfCpltCallback
 1523              		.thumb
 1524              		.thumb_func
 1526              	HAL_UART_TxHalfCpltCallback:
 1527              	.LFB166:
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1528              		.loc 1 1504 0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 0
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532              		@ link register save eliminated.
 1533              	.LVL130:
 1534 0000 7047     		bx	lr
 1535              		.cfi_endproc
 1536              	.LFE166:
 1538 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1539              		.align	2
 1540              		.thumb
 1541              		.thumb_func
 1543              	UART_DMATxHalfCplt:
 1544              	.LFB160:
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1545              		.loc 1 1395 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 0
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 1549              	.LVL131:
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1550              		.loc 1 1395 0
 1551 0000 08B5     		push	{r3, lr}
 1552              	.LCFI14:
 1553              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc1PyfWy.s 			page 62


 1554              		.cfi_offset 3, -8
 1555              		.cfi_offset 14, -4
 1556              	.LVL132:
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1557              		.loc 1 1398 0
 1558 0002 806B     		ldr	r0, [r0, #56]
 1559              	.LVL133:
 1560 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1561              	.LVL134:
 1562 0008 08BD     		pop	{r3, pc}
 1563              		.cfi_endproc
 1564              	.LFE160:
 1566 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1567              		.align	2
 1568              		.weak	HAL_UART_RxCpltCallback
 1569              		.thumb
 1570              		.thumb_func
 1572              	HAL_UART_RxCpltCallback:
 1573              	.LFB167:
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1574              		.loc 1 1519 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
 1579              	.LVL135:
 1580 0000 7047     		bx	lr
 1581              		.cfi_endproc
 1582              	.LFE167:
 1584 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1585              		.align	2
 1586              		.thumb
 1587              		.thumb_func
 1589              	UART_DMAReceiveCplt:
 1590              	.LFB161:
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1591              		.loc 1 1407 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              	.LVL136:
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1596              		.loc 1 1407 0
 1597 0000 08B5     		push	{r3, lr}
 1598              	.LCFI15:
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 3, -8
 1601              		.cfi_offset 14, -4
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1602              		.loc 1 1408 0
 1603 0002 836B     		ldr	r3, [r0, #56]
 1604              	.LVL137:
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1605              		.loc 1 1411 0
 1606 0004 0268     		ldr	r2, [r0]
 1607 0006 1268     		ldr	r2, [r2]
 1608 0008 12F4807F 		tst	r2, #256
ARM GAS  /tmp/cc1PyfWy.s 			page 63


 1609 000c 14D1     		bne	.L113
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1610              		.loc 1 1413 0
 1611 000e 0022     		movs	r2, #0
 1612 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1613              		.loc 1 1416 0
 1614 0014 1968     		ldr	r1, [r3]
 1615 0016 0A68     		ldr	r2, [r1]
 1616 0018 22F48072 		bic	r2, r2, #256
 1617 001c 0A60     		str	r2, [r1]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1618              		.loc 1 1417 0
 1619 001e 1968     		ldr	r1, [r3]
 1620 0020 8A68     		ldr	r2, [r1, #8]
 1621 0022 22F00102 		bic	r2, r2, #1
 1622 0026 8A60     		str	r2, [r1, #8]
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1623              		.loc 1 1421 0
 1624 0028 1968     		ldr	r1, [r3]
 1625 002a 8A68     		ldr	r2, [r1, #8]
 1626 002c 22F04002 		bic	r2, r2, #64
 1627 0030 8A60     		str	r2, [r1, #8]
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1628              		.loc 1 1424 0
 1629 0032 2022     		movs	r2, #32
 1630 0034 83F86A20 		strb	r2, [r3, #106]
 1631              	.L113:
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1632              		.loc 1 1426 0
 1633 0038 1846     		mov	r0, r3
 1634              	.LVL138:
 1635 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1636              	.LVL139:
 1637 003e 08BD     		pop	{r3, pc}
 1638              		.cfi_endproc
 1639              	.LFE161:
 1641              		.section	.text.UART_Receive_IT,"ax",%progbits
 1642              		.align	2
 1643              		.thumb
 1644              		.thumb_func
 1646              	UART_Receive_IT:
 1647              	.LFB172:
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1648              		.loc 1 1634 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              	.LVL140:
 1653 0000 08B5     		push	{r3, lr}
 1654              	.LCFI16:
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 3, -8
 1657              		.cfi_offset 14, -4
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1658              		.loc 1 1636 0
 1659 0002 B0F85C20 		ldrh	r2, [r0, #92]
ARM GAS  /tmp/cc1PyfWy.s 			page 64


 1660              	.LVL141:
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1661              		.loc 1 1639 0
 1662 0006 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 1663 000a DBB2     		uxtb	r3, r3
 1664 000c 222B     		cmp	r3, #34
 1665 000e 2DD1     		bne	.L116
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1666              		.loc 1 1642 0
 1667 0010 8368     		ldr	r3, [r0, #8]
 1668 0012 B3F5805F 		cmp	r3, #4096
 1669 0016 0AD1     		bne	.L117
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1670              		.loc 1 1642 0 is_stmt 0 discriminator 1
 1671 0018 0369     		ldr	r3, [r0, #16]
 1672 001a 43B9     		cbnz	r3, .L117
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1673              		.loc 1 1644 0 is_stmt 1
 1674 001c 416D     		ldr	r1, [r0, #84]
 1675              	.LVL142:
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 1676              		.loc 1 1645 0
 1677 001e 0368     		ldr	r3, [r0]
 1678 0020 5B6A     		ldr	r3, [r3, #36]
 1679 0022 1A40     		ands	r2, r2, r3
 1680              	.LVL143:
 1681 0024 0A80     		strh	r2, [r1]	@ movhi
 1682              	.LVL144:
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1683              		.loc 1 1646 0
 1684 0026 436D     		ldr	r3, [r0, #84]
 1685 0028 0233     		adds	r3, r3, #2
 1686 002a 4365     		str	r3, [r0, #84]
 1687 002c 06E0     		b	.L118
 1688              	.LVL145:
 1689              	.L117:
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1690              		.loc 1 1650 0
 1691 002e 416D     		ldr	r1, [r0, #84]
 1692 0030 4B1C     		adds	r3, r1, #1
 1693 0032 4365     		str	r3, [r0, #84]
 1694 0034 0368     		ldr	r3, [r0]
 1695 0036 5B6A     		ldr	r3, [r3, #36]
 1696 0038 1A40     		ands	r2, r2, r3
 1697              	.LVL146:
 1698 003a 0A70     		strb	r2, [r1]
 1699              	.LVL147:
 1700              	.L118:
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1701              		.loc 1 1653 0
 1702 003c B0F85A30 		ldrh	r3, [r0, #90]
 1703 0040 013B     		subs	r3, r3, #1
 1704 0042 9BB2     		uxth	r3, r3
 1705 0044 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1706 0048 BBB9     		cbnz	r3, .L120
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1707              		.loc 1 1656 0
ARM GAS  /tmp/cc1PyfWy.s 			page 65


 1708 004a 0268     		ldr	r2, [r0]
 1709 004c 1368     		ldr	r3, [r2]
 1710 004e 23F49073 		bic	r3, r3, #288
 1711 0052 1360     		str	r3, [r2]
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1712              		.loc 1 1659 0
 1713 0054 0268     		ldr	r2, [r0]
 1714 0056 9368     		ldr	r3, [r2, #8]
 1715 0058 23F00103 		bic	r3, r3, #1
 1716 005c 9360     		str	r3, [r2, #8]
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1717              		.loc 1 1662 0
 1718 005e 2023     		movs	r3, #32
 1719 0060 80F86A30 		strb	r3, [r0, #106]
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1720              		.loc 1 1664 0
 1721 0064 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1722              	.LVL148:
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1723              		.loc 1 1666 0
 1724 0068 0020     		movs	r0, #0
 1725 006a 08BD     		pop	{r3, pc}
 1726              	.LVL149:
 1727              	.L116:
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1728              		.loc 1 1674 0
 1729 006c 0268     		ldr	r2, [r0]
 1730              	.LVL150:
 1731 006e 9369     		ldr	r3, [r2, #24]
 1732 0070 43F00803 		orr	r3, r3, #8
 1733 0074 9361     		str	r3, [r2, #24]
 1734              	.LVL151:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1735              		.loc 1 1676 0
 1736 0076 0220     		movs	r0, #2
 1737              	.LVL152:
 1738 0078 08BD     		pop	{r3, pc}
 1739              	.LVL153:
 1740              	.L120:
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1741              		.loc 1 1669 0
 1742 007a 0020     		movs	r0, #0
 1743              	.LVL154:
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1744              		.loc 1 1678 0
 1745 007c 08BD     		pop	{r3, pc}
 1746              		.cfi_endproc
 1747              	.LFE172:
 1749 007e 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1750              		.align	2
 1751              		.weak	HAL_UART_RxHalfCpltCallback
 1752              		.thumb
 1753              		.thumb_func
 1755              	HAL_UART_RxHalfCpltCallback:
 1756              	.LFB168:
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1757              		.loc 1 1534 0
ARM GAS  /tmp/cc1PyfWy.s 			page 66


 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
 1762              	.LVL155:
 1763 0000 7047     		bx	lr
 1764              		.cfi_endproc
 1765              	.LFE168:
 1767 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1768              		.align	2
 1769              		.thumb
 1770              		.thumb_func
 1772              	UART_DMARxHalfCplt:
 1773              	.LFB162:
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1774              		.loc 1 1435 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 0, uses_anonymous_args = 0
 1778              	.LVL156:
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1779              		.loc 1 1435 0
 1780 0000 08B5     		push	{r3, lr}
 1781              	.LCFI17:
 1782              		.cfi_def_cfa_offset 8
 1783              		.cfi_offset 3, -8
 1784              		.cfi_offset 14, -4
 1785              	.LVL157:
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1786              		.loc 1 1438 0
 1787 0002 806B     		ldr	r0, [r0, #56]
 1788              	.LVL158:
 1789 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1790              	.LVL159:
 1791 0008 08BD     		pop	{r3, pc}
 1792              		.cfi_endproc
 1793              	.LFE162:
 1795 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1796              		.align	2
 1797              		.weak	HAL_UART_ErrorCallback
 1798              		.thumb
 1799              		.thumb_func
 1801              	HAL_UART_ErrorCallback:
 1802              	.LFB169:
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1803              		.loc 1 1549 0
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 0
 1806              		@ frame_needed = 0, uses_anonymous_args = 0
 1807              		@ link register save eliminated.
 1808              	.LVL160:
 1809 0000 7047     		bx	lr
 1810              		.cfi_endproc
 1811              	.LFE169:
 1813 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 1814              		.align	2
 1815              		.thumb
ARM GAS  /tmp/cc1PyfWy.s 			page 67


 1816              		.thumb_func
 1818              	UART_DMAError:
 1819              	.LFB163:
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1820              		.loc 1 1447 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              	.LVL161:
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1825              		.loc 1 1447 0
 1826 0000 10B5     		push	{r4, lr}
 1827              	.LCFI18:
 1828              		.cfi_def_cfa_offset 8
 1829              		.cfi_offset 4, -8
 1830              		.cfi_offset 14, -4
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1831              		.loc 1 1448 0
 1832 0002 846B     		ldr	r4, [r0, #56]
 1833              	.LVL162:
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1834              		.loc 1 1449 0
 1835 0004 0023     		movs	r3, #0
 1836 0006 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
 1837              		.loc 1 1450 0
 1838 000a A4F85230 		strh	r3, [r4, #82]	@ movhi
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1839              		.loc 1 1452 0
 1840 000e 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 1841 0012 DBB2     		uxtb	r3, r3
 1842 0014 212B     		cmp	r3, #33
 1843 0016 07D1     		bne	.L127
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1844              		.loc 1 1453 0
 1845 0018 2368     		ldr	r3, [r4]
 1846 001a 9B68     		ldr	r3, [r3, #8]
 1847 001c 13F0800F 		tst	r3, #128
 1848 0020 02D0     		beq	.L127
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1849              		.loc 1 1455 0
 1850 0022 2046     		mov	r0, r4
 1851              	.LVL163:
 1852 0024 FFF7FEFF 		bl	UART_EndTxTransfer
 1853              	.LVL164:
 1854              	.L127:
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1855              		.loc 1 1459 0
 1856 0028 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 1857 002c DBB2     		uxtb	r3, r3
 1858 002e 222B     		cmp	r3, #34
 1859 0030 07D1     		bne	.L128
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1860              		.loc 1 1460 0
 1861 0032 2368     		ldr	r3, [r4]
 1862 0034 9B68     		ldr	r3, [r3, #8]
 1863 0036 13F0400F 		tst	r3, #64
ARM GAS  /tmp/cc1PyfWy.s 			page 68


 1864 003a 02D0     		beq	.L128
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1865              		.loc 1 1462 0
 1866 003c 2046     		mov	r0, r4
 1867 003e FFF7FEFF 		bl	UART_EndRxTransfer
 1868              	.LVL165:
 1869              	.L128:
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1870              		.loc 1 1464 0
 1871 0042 E36E     		ldr	r3, [r4, #108]
 1872 0044 43F01003 		orr	r3, r3, #16
 1873 0048 E366     		str	r3, [r4, #108]
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1874              		.loc 1 1465 0
 1875 004a 2046     		mov	r0, r4
 1876 004c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1877              	.LVL166:
 1878 0050 10BD     		pop	{r4, pc}
 1879              		.cfi_endproc
 1880              	.LFE163:
 1882 0052 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 1883              		.align	2
 1884              		.global	HAL_UART_IRQHandler
 1885              		.thumb
 1886              		.thumb_func
 1888              	HAL_UART_IRQHandler:
 1889              	.LFB157:
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 1890              		.loc 1 1191 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              	.LVL167:
 1895 0000 38B5     		push	{r3, r4, r5, lr}
 1896              	.LCFI19:
 1897              		.cfi_def_cfa_offset 16
 1898              		.cfi_offset 3, -16
 1899              		.cfi_offset 4, -12
 1900              		.cfi_offset 5, -8
 1901              		.cfi_offset 14, -4
 1902 0002 0446     		mov	r4, r0
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 1903              		.loc 1 1192 0
 1904 0004 0268     		ldr	r2, [r0]
 1905 0006 D369     		ldr	r3, [r2, #28]
 1906              	.LVL168:
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 1907              		.loc 1 1193 0
 1908 0008 1068     		ldr	r0, [r2]
 1909              	.LVL169:
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
 1910              		.loc 1 1194 0
 1911 000a 9168     		ldr	r1, [r2, #8]
 1912              	.LVL170:
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1913              		.loc 1 1199 0
 1914 000c 13F00F05 		ands	r5, r3, #15
ARM GAS  /tmp/cc1PyfWy.s 			page 69


 1915              	.LVL171:
 1916 0010 09D1     		bne	.L131
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1917              		.loc 1 1202 0
 1918 0012 13F0200F 		tst	r3, #32
 1919 0016 06D0     		beq	.L131
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1920              		.loc 1 1202 0 is_stmt 0 discriminator 1
 1921 0018 10F0200F 		tst	r0, #32
 1922 001c 03D0     		beq	.L131
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 1923              		.loc 1 1204 0 is_stmt 1
 1924 001e 2046     		mov	r0, r4
 1925              	.LVL172:
 1926 0020 FFF7FEFF 		bl	UART_Receive_IT
 1927              	.LVL173:
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1928              		.loc 1 1205 0
 1929 0024 38BD     		pop	{r3, r4, r5, pc}
 1930              	.LVL174:
 1931              	.L131:
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 1932              		.loc 1 1210 0
 1933 0026 002D     		cmp	r5, #0
 1934 0028 6ED0     		beq	.L133
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 1935              		.loc 1 1211 0
 1936 002a 11F00101 		ands	r1, r1, #1
 1937              	.LVL175:
 1938 002e 02D1     		bne	.L134
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1939              		.loc 1 1212 0
 1940 0030 10F4907F 		tst	r0, #288
 1941 0034 68D0     		beq	.L133
 1942              	.L134:
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1943              		.loc 1 1216 0
 1944 0036 13F0010F 		tst	r3, #1
 1945 003a 07D0     		beq	.L135
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1946              		.loc 1 1216 0 is_stmt 0 discriminator 1
 1947 003c 10F4807F 		tst	r0, #256
 1948 0040 04D0     		beq	.L135
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1949              		.loc 1 1218 0 is_stmt 1
 1950 0042 0125     		movs	r5, #1
 1951              	.LVL176:
 1952 0044 1562     		str	r5, [r2, #32]
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1953              		.loc 1 1220 0
 1954 0046 E26E     		ldr	r2, [r4, #108]
 1955 0048 2A43     		orrs	r2, r2, r5
 1956 004a E266     		str	r2, [r4, #108]
 1957              	.L135:
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1958              		.loc 1 1224 0
 1959 004c 13F0020F 		tst	r3, #2
ARM GAS  /tmp/cc1PyfWy.s 			page 70


 1960 0050 07D0     		beq	.L136
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1961              		.loc 1 1224 0 is_stmt 0 discriminator 1
 1962 0052 31B1     		cbz	r1, .L136
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1963              		.loc 1 1226 0 is_stmt 1
 1964 0054 2268     		ldr	r2, [r4]
 1965 0056 0225     		movs	r5, #2
 1966 0058 1562     		str	r5, [r2, #32]
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1967              		.loc 1 1228 0
 1968 005a E26E     		ldr	r2, [r4, #108]
 1969 005c 42F00402 		orr	r2, r2, #4
 1970 0060 E266     		str	r2, [r4, #108]
 1971              	.L136:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1972              		.loc 1 1232 0
 1973 0062 13F0040F 		tst	r3, #4
 1974 0066 07D0     		beq	.L137
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1975              		.loc 1 1232 0 is_stmt 0 discriminator 1
 1976 0068 31B1     		cbz	r1, .L137
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1977              		.loc 1 1234 0 is_stmt 1
 1978 006a 2268     		ldr	r2, [r4]
 1979 006c 0425     		movs	r5, #4
 1980 006e 1562     		str	r5, [r2, #32]
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1981              		.loc 1 1236 0
 1982 0070 E26E     		ldr	r2, [r4, #108]
 1983 0072 42F00202 		orr	r2, r2, #2
 1984 0076 E266     		str	r2, [r4, #108]
 1985              	.L137:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 1986              		.loc 1 1240 0
 1987 0078 13F0080F 		tst	r3, #8
 1988 007c 09D0     		beq	.L138
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 1989              		.loc 1 1240 0 is_stmt 0 discriminator 1
 1990 007e 10F0200F 		tst	r0, #32
 1991 0082 00D1     		bne	.L139
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1992              		.loc 1 1241 0 is_stmt 1
 1993 0084 29B1     		cbz	r1, .L138
 1994              	.L139:
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1995              		.loc 1 1243 0
 1996 0086 2268     		ldr	r2, [r4]
 1997 0088 0821     		movs	r1, #8
 1998 008a 1162     		str	r1, [r2, #32]
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1999              		.loc 1 1245 0
 2000 008c E26E     		ldr	r2, [r4, #108]
 2001 008e 0A43     		orrs	r2, r2, r1
 2002 0090 E266     		str	r2, [r4, #108]
 2003              	.L138:
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
ARM GAS  /tmp/cc1PyfWy.s 			page 71


 2004              		.loc 1 1249 0
 2005 0092 E26E     		ldr	r2, [r4, #108]
 2006 0094 002A     		cmp	r2, #0
 2007 0096 4AD0     		beq	.L130
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2008              		.loc 1 1252 0
 2009 0098 13F0200F 		tst	r3, #32
 2010 009c 05D0     		beq	.L140
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2011              		.loc 1 1252 0 is_stmt 0 discriminator 1
 2012 009e 10F0200F 		tst	r0, #32
 2013 00a2 02D0     		beq	.L140
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 2014              		.loc 1 1254 0 is_stmt 1
 2015 00a4 2046     		mov	r0, r4
 2016              	.LVL177:
 2017 00a6 FFF7FEFF 		bl	UART_Receive_IT
 2018              	.LVL178:
 2019              	.L140:
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2020              		.loc 1 1259 0
 2021 00aa E36E     		ldr	r3, [r4, #108]
 2022 00ac 13F0080F 		tst	r3, #8
 2023 00b0 04D1     		bne	.L141
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2024              		.loc 1 1260 0 discriminator 1
 2025 00b2 2368     		ldr	r3, [r4]
 2026 00b4 9B68     		ldr	r3, [r3, #8]
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2027              		.loc 1 1259 0 discriminator 1
 2028 00b6 13F0400F 		tst	r3, #64
 2029 00ba 1FD0     		beq	.L142
 2030              	.L141:
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2031              		.loc 1 1265 0
 2032 00bc 2046     		mov	r0, r4
 2033 00be FFF7FEFF 		bl	UART_EndRxTransfer
 2034              	.LVL179:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2035              		.loc 1 1268 0
 2036 00c2 2368     		ldr	r3, [r4]
 2037 00c4 9A68     		ldr	r2, [r3, #8]
 2038 00c6 12F0400F 		tst	r2, #64
 2039 00ca 13D0     		beq	.L143
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2040              		.loc 1 1270 0
 2041 00cc 9A68     		ldr	r2, [r3, #8]
 2042 00ce 22F04002 		bic	r2, r2, #64
 2043 00d2 9A60     		str	r2, [r3, #8]
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
 2044              		.loc 1 1273 0
 2045 00d4 636E     		ldr	r3, [r4, #100]
 2046 00d6 4BB1     		cbz	r3, .L144
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2047              		.loc 1 1277 0
 2048 00d8 154A     		ldr	r2, .L147
 2049 00da 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/cc1PyfWy.s 			page 72


1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
 2050              		.loc 1 1280 0
 2051 00dc 606E     		ldr	r0, [r4, #100]
 2052 00de FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2053              	.LVL180:
 2054 00e2 20B3     		cbz	r0, .L130
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
 2055              		.loc 1 1283 0
 2056 00e4 606E     		ldr	r0, [r4, #100]
 2057 00e6 036D     		ldr	r3, [r0, #80]
 2058 00e8 9847     		blx	r3
 2059              	.LVL181:
 2060 00ea 38BD     		pop	{r3, r4, r5, pc}
 2061              	.LVL182:
 2062              	.L144:
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
 2063              		.loc 1 1289 0
 2064 00ec 2046     		mov	r0, r4
 2065 00ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2066              	.LVL183:
 2067 00f2 38BD     		pop	{r3, r4, r5, pc}
 2068              	.LVL184:
 2069              	.L143:
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
 2070              		.loc 1 1295 0
 2071 00f4 2046     		mov	r0, r4
 2072 00f6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2073              	.LVL185:
 2074 00fa 38BD     		pop	{r3, r4, r5, pc}
 2075              	.LVL186:
 2076              	.L142:
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2077              		.loc 1 1302 0
 2078 00fc 2046     		mov	r0, r4
 2079 00fe FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2080              	.LVL187:
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 2081              		.loc 1 1303 0
 2082 0102 0023     		movs	r3, #0
 2083 0104 E366     		str	r3, [r4, #108]
 2084 0106 38BD     		pop	{r3, r4, r5, pc}
 2085              	.LVL188:
 2086              	.L133:
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2087              		.loc 1 1311 0
 2088 0108 13F0800F 		tst	r3, #128
 2089 010c 06D0     		beq	.L145
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2090              		.loc 1 1311 0 is_stmt 0 discriminator 1
 2091 010e 10F0800F 		tst	r0, #128
 2092 0112 03D0     		beq	.L145
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2093              		.loc 1 1313 0 is_stmt 1
 2094 0114 2046     		mov	r0, r4
 2095              	.LVL189:
 2096 0116 FFF7FEFF 		bl	UART_Transmit_IT
 2097              	.LVL190:
ARM GAS  /tmp/cc1PyfWy.s 			page 73


1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2098              		.loc 1 1314 0
 2099 011a 38BD     		pop	{r3, r4, r5, pc}
 2100              	.LVL191:
 2101              	.L145:
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2102              		.loc 1 1318 0
 2103 011c 13F0400F 		tst	r3, #64
 2104 0120 05D0     		beq	.L130
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2105              		.loc 1 1318 0 is_stmt 0 discriminator 1
 2106 0122 10F0400F 		tst	r0, #64
 2107 0126 02D0     		beq	.L130
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2108              		.loc 1 1320 0 is_stmt 1
 2109 0128 2046     		mov	r0, r4
 2110              	.LVL192:
 2111 012a FFF7FEFF 		bl	UART_EndTransmit_IT
 2112              	.LVL193:
 2113              	.L130:
 2114 012e 38BD     		pop	{r3, r4, r5, pc}
 2115              	.LVL194:
 2116              	.L148:
 2117              		.align	2
 2118              	.L147:
 2119 0130 00000000 		.word	UART_DMAAbortOnError
 2120              		.cfi_endproc
 2121              	.LFE157:
 2123              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2124              		.align	2
 2125              		.thumb
 2126              		.thumb_func
 2128              	UART_DMAAbortOnError:
 2129              	.LFB164:
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2130              		.loc 1 1475 0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 0
 2133              		@ frame_needed = 0, uses_anonymous_args = 0
 2134              	.LVL195:
 2135 0000 08B5     		push	{r3, lr}
 2136              	.LCFI20:
 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 3, -8
 2139              		.cfi_offset 14, -4
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2140              		.loc 1 1476 0
 2141 0002 806B     		ldr	r0, [r0, #56]
 2142              	.LVL196:
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2143              		.loc 1 1477 0
 2144 0004 0023     		movs	r3, #0
 2145 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2146              		.loc 1 1478 0
 2147 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
ARM GAS  /tmp/cc1PyfWy.s 			page 74


 2148              		.loc 1 1480 0
 2149 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2150              	.LVL197:
 2151 0012 08BD     		pop	{r3, pc}
 2152              		.cfi_endproc
 2153              	.LFE164:
 2155              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2156              		.align	2
 2157              		.global	HAL_MultiProcessor_EnterMuteMode
 2158              		.thumb
 2159              		.thumb_func
 2161              	HAL_MultiProcessor_EnterMuteMode:
 2162              	.LFB177:
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief   UART control functions
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_GetState() API is helpful to check in run-time the state of the UART peripheral.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	 (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enable UART in mute mode (doesn't mean UART enters mute mode;
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called)
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc1PyfWy.s 			page 75


1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Disable UART mute mode (doesn't mean it actually wakes up the software,
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2163              		.loc 1 1789 0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 2167              		@ link register save eliminated.
 2168              	.LVL198:
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2169              		.loc 1 1790 0
 2170 0000 0268     		ldr	r2, [r0]
 2171 0002 9369     		ldr	r3, [r2, #24]
 2172 0004 43F00403 		orr	r3, r3, #4
 2173 0008 9361     		str	r3, [r2, #24]
 2174 000a 7047     		bx	lr
 2175              		.cfi_endproc
 2176              	.LFE177:
 2178              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2179              		.align	2
 2180              		.global	HAL_UART_GetState
 2181              		.thumb
ARM GAS  /tmp/cc1PyfWy.s 			page 76


 2182              		.thumb_func
 2184              	HAL_UART_GetState:
 2185              	.LFB178:
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief return the UART state
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL state
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2186              		.loc 1 1801 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 0, uses_anonymous_args = 0
 2190              		@ link register save eliminated.
 2191              	.LVL199:
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp1 = huart->gState;
 2192              		.loc 1 1803 0
 2193 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2194              	.LVL200:
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp2 = huart->RxState;
 2195              		.loc 1 1804 0
 2196 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2197              	.LVL201:
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2198              		.loc 1 1807 0
 2199 0008 1843     		orrs	r0, r0, r3
 2200              	.LVL202:
 2201 000a 7047     		bx	lr
 2202              		.cfi_endproc
 2203              	.LFE178:
 2205              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2206              		.align	2
 2207              		.global	HAL_UART_GetError
 2208              		.thumb
 2209              		.thumb_func
 2211              	HAL_UART_GetError:
 2212              	.LFB179:
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @brief  Return the UART error code
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *              the configuration information for the specified UART.
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @retval UART Error Code
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2213              		.loc 1 1816 0
 2214              		.cfi_startproc
 2215              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc1PyfWy.s 			page 77


 2216              		@ frame_needed = 0, uses_anonymous_args = 0
 2217              		@ link register save eliminated.
 2218              	.LVL203:
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return huart->ErrorCode;
 2219              		.loc 1 1817 0
 2220 0000 C06E     		ldr	r0, [r0, #108]
 2221              	.LVL204:
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2222              		.loc 1 1818 0
 2223 0002 7047     		bx	lr
 2224              		.cfi_endproc
 2225              	.LFE179:
 2227              		.section	.text.UART_SetConfig,"ax",%progbits
 2228              		.align	2
 2229              		.global	UART_SetConfig
 2230              		.thumb
 2231              		.thumb_func
 2233              	UART_SetConfig:
 2234              	.LFB180:
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2235              		.loc 1 1826 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239              	.LVL205:
 2240 0000 38B5     		push	{r3, r4, r5, lr}
 2241              	.LCFI21:
 2242              		.cfi_def_cfa_offset 16
 2243              		.cfi_offset 3, -16
 2244              		.cfi_offset 4, -12
 2245              		.cfi_offset 5, -8
 2246              		.cfi_offset 14, -4
 2247 0002 0446     		mov	r4, r0
 2248              	.LVL206:
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc1PyfWy.s 			page 78


1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 2249              		.loc 1 1850 0
 2250 0004 8268     		ldr	r2, [r0, #8]
 2251 0006 0369     		ldr	r3, [r0, #16]
 2252 0008 1A43     		orrs	r2, r2, r3
 2253 000a 4369     		ldr	r3, [r0, #20]
 2254 000c 1A43     		orrs	r2, r2, r3
 2255 000e C369     		ldr	r3, [r0, #28]
 2256 0010 1343     		orrs	r3, r3, r2
 2257              	.LVL207:
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2258              		.loc 1 1851 0
 2259 0012 0168     		ldr	r1, [r0]
 2260 0014 0868     		ldr	r0, [r1]
 2261              	.LVL208:
 2262 0016 A34A     		ldr	r2, .L230
 2263 0018 0240     		ands	r2, r2, r0
 2264 001a 1343     		orrs	r3, r3, r2
 2265              	.LVL209:
 2266 001c 0B60     		str	r3, [r1]
 2267              	.LVL210:
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * to huart->Init.StopBits value */
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 2268              		.loc 1 1856 0
 2269 001e 2168     		ldr	r1, [r4]
 2270 0020 4B68     		ldr	r3, [r1, #4]
 2271 0022 23F44052 		bic	r2, r3, #12288
 2272 0026 E368     		ldr	r3, [r4, #12]
 2273 0028 1343     		orrs	r3, r3, r2
 2274 002a 4B60     		str	r3, [r1, #4]
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 2275              		.loc 1 1864 0
 2276 002c A269     		ldr	r2, [r4, #24]
 2277 002e 236A     		ldr	r3, [r4, #32]
 2278 0030 1343     		orrs	r3, r3, r2
 2279              	.LVL211:
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2280              		.loc 1 1865 0
 2281 0032 2168     		ldr	r1, [r4]
 2282 0034 8A68     		ldr	r2, [r1, #8]
ARM GAS  /tmp/cc1PyfWy.s 			page 79


 2283 0036 22F43062 		bic	r2, r2, #2816
 2284 003a 1343     		orrs	r3, r3, r2
 2285              	.LVL212:
 2286 003c 8B60     		str	r3, [r1, #8]
 2287              	.LVL213:
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 2288              		.loc 1 1868 0
 2289 003e 2568     		ldr	r5, [r4]
 2290 0040 994B     		ldr	r3, .L230+4
 2291 0042 9D42     		cmp	r5, r3
 2292 0044 13D1     		bne	.L155
 2293              		.loc 1 1868 0 is_stmt 0 discriminator 1
 2294 0046 03F59433 		add	r3, r3, #75776
 2295 004a D3F89030 		ldr	r3, [r3, #144]
 2296 004e 03F00303 		and	r3, r3, #3
 2297 0052 032B     		cmp	r3, #3
 2298 0054 03D8     		bhi	.L156
 2299 0056 DFE803F0 		tbb	[pc, r3]
 2300              	.L158:
 2301 005a D4       		.byte	(.L218-.L158)/2
 2302 005b 06       		.byte	(.L159-.L158)/2
 2303 005c 04       		.byte	(.L160-.L158)/2
 2304 005d 08       		.byte	(.L161-.L158)/2
 2305              		.p2align 1
 2306              	.L156:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2307              		.loc 1 1828 0 is_stmt 1
 2308 005e 1023     		movs	r3, #16
 2309 0060 E0E0     		b	.L157
 2310              	.L160:
 2311              	.LVL214:
 2312              		.loc 1 1868 0 discriminator 5
 2313 0062 0223     		movs	r3, #2
 2314 0064 DEE0     		b	.L157
 2315              	.LVL215:
 2316              	.L159:
 2317              		.loc 1 1868 0 is_stmt 0 discriminator 4
 2318 0066 0423     		movs	r3, #4
 2319 0068 DCE0     		b	.L157
 2320              	.LVL216:
 2321              	.L161:
 2322              		.loc 1 1868 0 discriminator 6
 2323 006a 0823     		movs	r3, #8
 2324 006c DAE0     		b	.L157
 2325              	.LVL217:
 2326              	.L155:
 2327              		.loc 1 1868 0 discriminator 2
 2328 006e 8F4B     		ldr	r3, .L230+8
 2329 0070 9D42     		cmp	r5, r3
 2330 0072 18D1     		bne	.L162
 2331              		.loc 1 1868 0 discriminator 7
 2332 0074 03F5FA33 		add	r3, r3, #128000
 2333 0078 D3F89030 		ldr	r3, [r3, #144]
 2334 007c 03F00C03 		and	r3, r3, #12
 2335 0080 0C2B     		cmp	r3, #12
ARM GAS  /tmp/cc1PyfWy.s 			page 80


 2336 0082 08D8     		bhi	.L163
 2337 0084 DFE803F0 		tbb	[pc, r3]
 2338              	.L164:
 2339 0088 BF       		.byte	(.L219-.L164)/2
 2340 0089 07       		.byte	(.L163-.L164)/2
 2341 008a 07       		.byte	(.L163-.L164)/2
 2342 008b 07       		.byte	(.L163-.L164)/2
 2343 008c 0B       		.byte	(.L165-.L164)/2
 2344 008d 07       		.byte	(.L163-.L164)/2
 2345 008e 07       		.byte	(.L163-.L164)/2
 2346 008f 07       		.byte	(.L163-.L164)/2
 2347 0090 09       		.byte	(.L166-.L164)/2
 2348 0091 07       		.byte	(.L163-.L164)/2
 2349 0092 07       		.byte	(.L163-.L164)/2
 2350 0093 07       		.byte	(.L163-.L164)/2
 2351 0094 0D       		.byte	(.L167-.L164)/2
 2352 0095 00       		.p2align 1
 2353              	.L163:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2354              		.loc 1 1828 0 is_stmt 1
 2355 0096 1023     		movs	r3, #16
 2356 0098 C4E0     		b	.L157
 2357              	.L166:
 2358              	.LVL218:
 2359              		.loc 1 1868 0 discriminator 11
 2360 009a 0223     		movs	r3, #2
 2361 009c C2E0     		b	.L157
 2362              	.LVL219:
 2363              	.L165:
 2364              		.loc 1 1868 0 is_stmt 0 discriminator 10
 2365 009e 0423     		movs	r3, #4
 2366 00a0 C0E0     		b	.L157
 2367              	.LVL220:
 2368              	.L167:
 2369              		.loc 1 1868 0 discriminator 12
 2370 00a2 0823     		movs	r3, #8
 2371 00a4 BEE0     		b	.L157
 2372              	.LVL221:
 2373              	.L162:
 2374              		.loc 1 1868 0 discriminator 8
 2375 00a6 824B     		ldr	r3, .L230+12
 2376 00a8 9D42     		cmp	r5, r3
 2377 00aa 18D1     		bne	.L168
 2378              		.loc 1 1868 0 discriminator 13
 2379 00ac 03F5F833 		add	r3, r3, #126976
 2380 00b0 D3F89030 		ldr	r3, [r3, #144]
 2381 00b4 03F03003 		and	r3, r3, #48
 2382 00b8 102B     		cmp	r3, #16
 2383 00ba 0CD0     		beq	.L170
 2384 00bc 03D8     		bhi	.L171
 2385 00be 002B     		cmp	r3, #0
 2386 00c0 00F0A380 		beq	.L220
 2387 00c4 03E0     		b	.L169
 2388              	.L171:
 2389 00c6 202B     		cmp	r3, #32
 2390 00c8 03D0     		beq	.L172
 2391 00ca 302B     		cmp	r3, #48
ARM GAS  /tmp/cc1PyfWy.s 			page 81


 2392 00cc 05D0     		beq	.L173
 2393              	.L169:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2394              		.loc 1 1828 0 is_stmt 1
 2395 00ce 1023     		movs	r3, #16
 2396 00d0 A8E0     		b	.L157
 2397              	.L172:
 2398              	.LVL222:
 2399              		.loc 1 1868 0 discriminator 17
 2400 00d2 0223     		movs	r3, #2
 2401 00d4 A6E0     		b	.L157
 2402              	.LVL223:
 2403              	.L170:
 2404              		.loc 1 1868 0 is_stmt 0 discriminator 16
 2405 00d6 0423     		movs	r3, #4
 2406 00d8 A4E0     		b	.L157
 2407              	.LVL224:
 2408              	.L173:
 2409              		.loc 1 1868 0 discriminator 18
 2410 00da 0823     		movs	r3, #8
 2411 00dc A2E0     		b	.L157
 2412              	.LVL225:
 2413              	.L168:
 2414              		.loc 1 1868 0 discriminator 14
 2415 00de 754B     		ldr	r3, .L230+16
 2416 00e0 9D42     		cmp	r5, r3
 2417 00e2 18D1     		bne	.L174
 2418              		.loc 1 1868 0 discriminator 19
 2419 00e4 03F5F633 		add	r3, r3, #125952
 2420 00e8 D3F89030 		ldr	r3, [r3, #144]
 2421 00ec 03F0C003 		and	r3, r3, #192
 2422 00f0 402B     		cmp	r3, #64
 2423 00f2 0CD0     		beq	.L176
 2424 00f4 03D8     		bhi	.L177
 2425 00f6 002B     		cmp	r3, #0
 2426 00f8 00F08980 		beq	.L221
 2427 00fc 03E0     		b	.L175
 2428              	.L177:
 2429 00fe 802B     		cmp	r3, #128
 2430 0100 03D0     		beq	.L178
 2431 0102 C02B     		cmp	r3, #192
 2432 0104 05D0     		beq	.L179
 2433              	.L175:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2434              		.loc 1 1828 0 is_stmt 1
 2435 0106 1023     		movs	r3, #16
 2436 0108 8CE0     		b	.L157
 2437              	.L178:
 2438              	.LVL226:
 2439              		.loc 1 1868 0 discriminator 23
 2440 010a 0223     		movs	r3, #2
 2441 010c 8AE0     		b	.L157
 2442              	.LVL227:
 2443              	.L176:
 2444              		.loc 1 1868 0 is_stmt 0 discriminator 22
 2445 010e 0423     		movs	r3, #4
 2446 0110 88E0     		b	.L157
ARM GAS  /tmp/cc1PyfWy.s 			page 82


 2447              	.LVL228:
 2448              	.L179:
 2449              		.loc 1 1868 0 discriminator 24
 2450 0112 0823     		movs	r3, #8
 2451 0114 86E0     		b	.L157
 2452              	.LVL229:
 2453              	.L174:
 2454              		.loc 1 1868 0 discriminator 20
 2455 0116 684B     		ldr	r3, .L230+20
 2456 0118 9D42     		cmp	r5, r3
 2457 011a 1AD1     		bne	.L180
 2458              		.loc 1 1868 0 discriminator 25
 2459 011c 03F5F433 		add	r3, r3, #124928
 2460 0120 D3F89030 		ldr	r3, [r3, #144]
 2461 0124 03F44073 		and	r3, r3, #768
 2462 0128 B3F5807F 		cmp	r3, #256
 2463 012c 0DD0     		beq	.L182
 2464 012e 02D8     		bhi	.L183
 2465 0130 002B     		cmp	r3, #0
 2466 0132 6ED0     		beq	.L222
 2467 0134 05E0     		b	.L181
 2468              	.L183:
 2469 0136 B3F5007F 		cmp	r3, #512
 2470 013a 04D0     		beq	.L184
 2471 013c B3F5407F 		cmp	r3, #768
 2472 0140 05D0     		beq	.L185
 2473              	.L181:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2474              		.loc 1 1828 0 is_stmt 1
 2475 0142 1023     		movs	r3, #16
 2476 0144 6EE0     		b	.L157
 2477              	.L184:
 2478              	.LVL230:
 2479              		.loc 1 1868 0 discriminator 29
 2480 0146 0223     		movs	r3, #2
 2481 0148 6CE0     		b	.L157
 2482              	.LVL231:
 2483              	.L182:
 2484              		.loc 1 1868 0 is_stmt 0 discriminator 28
 2485 014a 0423     		movs	r3, #4
 2486 014c 6AE0     		b	.L157
 2487              	.LVL232:
 2488              	.L185:
 2489              		.loc 1 1868 0 discriminator 30
 2490 014e 0823     		movs	r3, #8
 2491 0150 68E0     		b	.L157
 2492              	.LVL233:
 2493              	.L180:
 2494              		.loc 1 1868 0 discriminator 26
 2495 0152 5A4B     		ldr	r3, .L230+24
 2496 0154 9D42     		cmp	r5, r3
 2497 0156 1AD1     		bne	.L186
 2498              		.loc 1 1868 0 discriminator 31
 2499 0158 03F59233 		add	r3, r3, #74752
 2500 015c D3F89030 		ldr	r3, [r3, #144]
 2501 0160 03F44063 		and	r3, r3, #3072
 2502 0164 B3F5806F 		cmp	r3, #1024
ARM GAS  /tmp/cc1PyfWy.s 			page 83


 2503 0168 0DD0     		beq	.L188
 2504 016a 02D8     		bhi	.L189
 2505 016c 002B     		cmp	r3, #0
 2506 016e 52D0     		beq	.L223
 2507 0170 05E0     		b	.L187
 2508              	.L189:
 2509 0172 B3F5006F 		cmp	r3, #2048
 2510 0176 04D0     		beq	.L190
 2511 0178 B3F5406F 		cmp	r3, #3072
 2512 017c 05D0     		beq	.L191
 2513              	.L187:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2514              		.loc 1 1828 0 is_stmt 1
 2515 017e 1023     		movs	r3, #16
 2516 0180 50E0     		b	.L157
 2517              	.L190:
 2518              	.LVL234:
 2519              		.loc 1 1868 0 discriminator 35
 2520 0182 0223     		movs	r3, #2
 2521 0184 4EE0     		b	.L157
 2522              	.LVL235:
 2523              	.L188:
 2524              		.loc 1 1868 0 is_stmt 0 discriminator 34
 2525 0186 0423     		movs	r3, #4
 2526 0188 4CE0     		b	.L157
 2527              	.LVL236:
 2528              	.L191:
 2529              		.loc 1 1868 0 discriminator 36
 2530 018a 0823     		movs	r3, #8
 2531 018c 4AE0     		b	.L157
 2532              	.LVL237:
 2533              	.L186:
 2534              		.loc 1 1868 0 discriminator 32
 2535 018e 4C4B     		ldr	r3, .L230+28
 2536 0190 9D42     		cmp	r5, r3
 2537 0192 19D1     		bne	.L192
 2538              		.loc 1 1868 0 discriminator 37
 2539 0194 03F5E033 		add	r3, r3, #114688
 2540 0198 D3F89030 		ldr	r3, [r3, #144]
 2541 019c 03F44053 		and	r3, r3, #12288
 2542 01a0 B3F5805F 		cmp	r3, #4096
 2543 01a4 0CD0     		beq	.L194
 2544 01a6 01D8     		bhi	.L195
 2545 01a8 BBB3     		cbz	r3, .L224
 2546 01aa 05E0     		b	.L193
 2547              	.L195:
 2548 01ac B3F5005F 		cmp	r3, #8192
 2549 01b0 04D0     		beq	.L196
 2550 01b2 B3F5405F 		cmp	r3, #12288
 2551 01b6 05D0     		beq	.L197
 2552              	.L193:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2553              		.loc 1 1828 0 is_stmt 1
 2554 01b8 1023     		movs	r3, #16
 2555 01ba 33E0     		b	.L157
 2556              	.L196:
 2557              	.LVL238:
ARM GAS  /tmp/cc1PyfWy.s 			page 84


 2558              		.loc 1 1868 0 discriminator 41
 2559 01bc 0223     		movs	r3, #2
 2560 01be 31E0     		b	.L157
 2561              	.LVL239:
 2562              	.L194:
 2563              		.loc 1 1868 0 is_stmt 0 discriminator 40
 2564 01c0 0423     		movs	r3, #4
 2565 01c2 2FE0     		b	.L157
 2566              	.LVL240:
 2567              	.L197:
 2568              		.loc 1 1868 0 discriminator 42
 2569 01c4 0823     		movs	r3, #8
 2570 01c6 2DE0     		b	.L157
 2571              	.LVL241:
 2572              	.L192:
 2573              		.loc 1 1868 0 discriminator 38
 2574 01c8 3E4B     		ldr	r3, .L230+32
 2575 01ca 9D42     		cmp	r5, r3
 2576 01cc 27D1     		bne	.L225
 2577              		.loc 1 1868 0 discriminator 43
 2578 01ce 03F5DE33 		add	r3, r3, #113664
 2579 01d2 D3F89030 		ldr	r3, [r3, #144]
 2580 01d6 03F44043 		and	r3, r3, #49152
 2581 01da B3F5804F 		cmp	r3, #16384
 2582 01de 0CD0     		beq	.L199
 2583 01e0 01D8     		bhi	.L200
 2584 01e2 F3B1     		cbz	r3, .L226
 2585 01e4 05E0     		b	.L198
 2586              	.L200:
 2587 01e6 B3F5004F 		cmp	r3, #32768
 2588 01ea 04D0     		beq	.L201
 2589 01ec B3F5404F 		cmp	r3, #49152
 2590 01f0 05D0     		beq	.L202
 2591              	.L198:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2592              		.loc 1 1828 0 is_stmt 1
 2593 01f2 1023     		movs	r3, #16
 2594 01f4 16E0     		b	.L157
 2595              	.L201:
 2596              	.LVL242:
 2597              		.loc 1 1868 0 discriminator 46
 2598 01f6 0223     		movs	r3, #2
 2599 01f8 14E0     		b	.L157
 2600              	.LVL243:
 2601              	.L199:
 2602              		.loc 1 1868 0 is_stmt 0 discriminator 45
 2603 01fa 0423     		movs	r3, #4
 2604 01fc 12E0     		b	.L157
 2605              	.LVL244:
 2606              	.L202:
 2607              		.loc 1 1868 0 discriminator 47
 2608 01fe 0823     		movs	r3, #8
 2609 0200 10E0     		b	.L157
 2610              	.LVL245:
 2611              	.L218:
 2612              		.loc 1 1868 0
 2613 0202 0123     		movs	r3, #1
ARM GAS  /tmp/cc1PyfWy.s 			page 85


 2614 0204 0EE0     		b	.L157
 2615              	.L219:
 2616 0206 0023     		movs	r3, #0
 2617 0208 0CE0     		b	.L157
 2618              	.L220:
 2619 020a 0023     		movs	r3, #0
 2620 020c 0AE0     		b	.L157
 2621              	.L221:
 2622 020e 0023     		movs	r3, #0
 2623 0210 08E0     		b	.L157
 2624              	.L222:
 2625 0212 0023     		movs	r3, #0
 2626 0214 06E0     		b	.L157
 2627              	.L223:
 2628 0216 0123     		movs	r3, #1
 2629 0218 04E0     		b	.L157
 2630              	.L224:
 2631 021a 0023     		movs	r3, #0
 2632 021c 02E0     		b	.L157
 2633              	.L225:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2634              		.loc 1 1828 0 is_stmt 1
 2635 021e 1023     		movs	r3, #16
 2636 0220 00E0     		b	.L157
 2637              	.L226:
 2638              		.loc 1 1868 0
 2639 0222 0023     		movs	r3, #0
 2640              	.LVL246:
 2641              	.L157:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2642              		.loc 1 1871 0
 2643 0224 E269     		ldr	r2, [r4, #28]
 2644 0226 B2F5004F 		cmp	r2, #32768
 2645 022a 59D1     		bne	.L203
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 2646              		.loc 1 1873 0
 2647 022c 082B     		cmp	r3, #8
 2648 022e 4DD8     		bhi	.L227
 2649 0230 DFE803F0 		tbb	[pc, r3]
 2650              	.L206:
 2651 0234 05       		.byte	(.L205-.L206)/2
 2652 0235 10       		.byte	(.L207-.L206)/2
 2653 0236 1B       		.byte	(.L208-.L206)/2
 2654 0237 4C       		.byte	(.L227-.L206)/2
 2655 0238 24       		.byte	(.L209-.L206)/2
 2656 0239 4C       		.byte	(.L227-.L206)/2
 2657 023a 4C       		.byte	(.L227-.L206)/2
 2658 023b 4C       		.byte	(.L227-.L206)/2
 2659 023c 2F       		.byte	(.L210-.L206)/2
 2660 023d 00       		.p2align 1
 2661              	.L205:
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
ARM GAS  /tmp/cc1PyfWy.s 			page 86


 2662              		.loc 1 1876 0
 2663 023e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2664              	.LVL247:
 2665 0242 6368     		ldr	r3, [r4, #4]
 2666 0244 5A08     		lsrs	r2, r3, #1
 2667 0246 02EB4000 		add	r0, r2, r0, lsl #1
 2668 024a B0FBF3F3 		udiv	r3, r0, r3
 2669 024e 9BB2     		uxth	r3, r3
 2670              	.LVL248:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2671              		.loc 1 1831 0
 2672 0250 0020     		movs	r0, #0
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2673              		.loc 1 1877 0
 2674 0252 3DE0     		b	.L204
 2675              	.LVL249:
 2676              	.L207:
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 2677              		.loc 1 1879 0
 2678 0254 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2679              	.LVL250:
 2680 0258 6368     		ldr	r3, [r4, #4]
 2681 025a 5A08     		lsrs	r2, r3, #1
 2682 025c 02EB4000 		add	r0, r2, r0, lsl #1
 2683 0260 B0FBF3F3 		udiv	r3, r0, r3
 2684 0264 9BB2     		uxth	r3, r3
 2685              	.LVL251:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2686              		.loc 1 1831 0
 2687 0266 0020     		movs	r0, #0
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2688              		.loc 1 1880 0
 2689 0268 32E0     		b	.L204
 2690              	.LVL252:
 2691              	.L208:
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 2692              		.loc 1 1882 0
 2693 026a 6268     		ldr	r2, [r4, #4]
 2694 026c 164B     		ldr	r3, .L230+36
 2695              	.LVL253:
 2696 026e 03EB5203 		add	r3, r3, r2, lsr #1
 2697 0272 B3FBF2F3 		udiv	r3, r3, r2
 2698 0276 9BB2     		uxth	r3, r3
 2699              	.LVL254:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2700              		.loc 1 1831 0
 2701 0278 0020     		movs	r0, #0
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2702              		.loc 1 1883 0
 2703 027a 29E0     		b	.L204
 2704              	.LVL255:
 2705              	.L209:
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 2706              		.loc 1 1885 0
ARM GAS  /tmp/cc1PyfWy.s 			page 87


 2707 027c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2708              	.LVL256:
 2709 0280 6368     		ldr	r3, [r4, #4]
 2710 0282 5A08     		lsrs	r2, r3, #1
 2711 0284 02EB4000 		add	r0, r2, r0, lsl #1
 2712 0288 B0FBF3F3 		udiv	r3, r0, r3
 2713 028c 9BB2     		uxth	r3, r3
 2714              	.LVL257:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2715              		.loc 1 1831 0
 2716 028e 0020     		movs	r0, #0
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2717              		.loc 1 1886 0
 2718 0290 1EE0     		b	.L204
 2719              	.LVL258:
 2720              	.L210:
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 2721              		.loc 1 1888 0
 2722 0292 6268     		ldr	r2, [r4, #4]
 2723 0294 5308     		lsrs	r3, r2, #1
 2724              	.LVL259:
 2725 0296 03F58033 		add	r3, r3, #65536
 2726 029a B3FBF2F3 		udiv	r3, r3, r2
 2727 029e 9BB2     		uxth	r3, r3
 2728              	.LVL260:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2729              		.loc 1 1831 0
 2730 02a0 0020     		movs	r0, #0
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2731              		.loc 1 1889 0
 2732 02a2 15E0     		b	.L204
 2733              	.L231:
 2734              		.align	2
 2735              	.L230:
 2736 02a4 F369FFEF 		.word	-268473869
 2737 02a8 00100140 		.word	1073811456
 2738 02ac 00440040 		.word	1073759232
 2739 02b0 00480040 		.word	1073760256
 2740 02b4 004C0040 		.word	1073761280
 2741 02b8 00500040 		.word	1073762304
 2742 02bc 00140140 		.word	1073812480
 2743 02c0 00780040 		.word	1073772544
 2744 02c4 007C0040 		.word	1073773568
 2745 02c8 0048E801 		.word	32000000
 2746              	.LVL261:
 2747              	.L227:
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 2748              		.loc 1 1892 0
 2749 02cc 0120     		movs	r0, #1
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2750              		.loc 1 1830 0
 2751 02ce 0023     		movs	r3, #0
 2752              	.LVL262:
 2753              	.L204:
ARM GAS  /tmp/cc1PyfWy.s 			page 88


1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
 2754              		.loc 1 1896 0
 2755 02d0 23F00F02 		bic	r2, r3, #15
 2756              	.LVL263:
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2757              		.loc 1 1897 0
 2758 02d4 C3F34203 		ubfx	r3, r3, #1, #3
 2759              	.LVL264:
 2760 02d8 1343     		orrs	r3, r3, r2
 2761              	.LVL265:
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2762              		.loc 1 1898 0
 2763 02da 2268     		ldr	r2, [r4]
 2764 02dc D360     		str	r3, [r2, #12]
 2765 02de 38BD     		pop	{r3, r4, r5, pc}
 2766              	.LVL266:
 2767              	.L203:
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 2768              		.loc 1 1902 0
 2769 02e0 082B     		cmp	r3, #8
 2770 02e2 3BD8     		bhi	.L228
 2771 02e4 DFE803F0 		tbb	[pc, r3]
 2772              	.L213:
 2773 02e8 05       		.byte	(.L212-.L213)/2
 2774 02e9 10       		.byte	(.L214-.L213)/2
 2775 02ea 1B       		.byte	(.L215-.L213)/2
 2776 02eb 3A       		.byte	(.L228-.L213)/2
 2777 02ec 25       		.byte	(.L216-.L213)/2
 2778 02ed 3A       		.byte	(.L228-.L213)/2
 2779 02ee 3A       		.byte	(.L228-.L213)/2
 2780 02ef 3A       		.byte	(.L228-.L213)/2
 2781 02f0 30       		.byte	(.L217-.L213)/2
 2782 02f1 00       		.p2align 1
 2783              	.L212:
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
 2784              		.loc 1 1905 0
 2785 02f2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2786              	.LVL267:
 2787 02f6 6368     		ldr	r3, [r4, #4]
 2788 02f8 00EB5300 		add	r0, r0, r3, lsr #1
 2789 02fc B0FBF3F0 		udiv	r0, r0, r3
 2790 0300 80B2     		uxth	r0, r0
 2791 0302 E860     		str	r0, [r5, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2792              		.loc 1 1831 0
 2793 0304 0020     		movs	r0, #0
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2794              		.loc 1 1906 0
 2795 0306 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc1PyfWy.s 			page 89


 2796              	.LVL268:
 2797              	.L214:
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
 2798              		.loc 1 1908 0
 2799 0308 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2800              	.LVL269:
 2801 030c 6368     		ldr	r3, [r4, #4]
 2802 030e 00EB5300 		add	r0, r0, r3, lsr #1
 2803 0312 B0FBF3F0 		udiv	r0, r0, r3
 2804 0316 80B2     		uxth	r0, r0
 2805 0318 E860     		str	r0, [r5, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2806              		.loc 1 1831 0
 2807 031a 0020     		movs	r0, #0
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2808              		.loc 1 1909 0
 2809 031c 38BD     		pop	{r3, r4, r5, pc}
 2810              	.LVL270:
 2811              	.L215:
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 2812              		.loc 1 1911 0
 2813 031e 6268     		ldr	r2, [r4, #4]
 2814 0320 0F4B     		ldr	r3, .L232
 2815              	.LVL271:
 2816 0322 03EB5203 		add	r3, r3, r2, lsr #1
 2817 0326 B3FBF2F3 		udiv	r3, r3, r2
 2818 032a 9BB2     		uxth	r3, r3
 2819 032c EB60     		str	r3, [r5, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2820              		.loc 1 1831 0
 2821 032e 0020     		movs	r0, #0
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2822              		.loc 1 1912 0
 2823 0330 38BD     		pop	{r3, r4, r5, pc}
 2824              	.LVL272:
 2825              	.L216:
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
 2826              		.loc 1 1914 0
 2827 0332 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2828              	.LVL273:
 2829 0336 6368     		ldr	r3, [r4, #4]
 2830 0338 00EB5300 		add	r0, r0, r3, lsr #1
 2831 033c B0FBF3F0 		udiv	r0, r0, r3
 2832 0340 80B2     		uxth	r0, r0
 2833 0342 E860     		str	r0, [r5, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2834              		.loc 1 1831 0
 2835 0344 0020     		movs	r0, #0
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2836              		.loc 1 1915 0
 2837 0346 38BD     		pop	{r3, r4, r5, pc}
 2838              	.LVL274:
 2839              	.L217:
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
ARM GAS  /tmp/cc1PyfWy.s 			page 90


1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 2840              		.loc 1 1917 0
 2841 0348 6268     		ldr	r2, [r4, #4]
 2842 034a 5308     		lsrs	r3, r2, #1
 2843              	.LVL275:
 2844 034c 03F50043 		add	r3, r3, #32768
 2845 0350 B3FBF2F3 		udiv	r3, r3, r2
 2846 0354 9BB2     		uxth	r3, r3
 2847 0356 EB60     		str	r3, [r5, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2848              		.loc 1 1831 0
 2849 0358 0020     		movs	r0, #0
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2850              		.loc 1 1918 0
 2851 035a 38BD     		pop	{r3, r4, r5, pc}
 2852              	.LVL276:
 2853              	.L228:
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 2854              		.loc 1 1921 0
 2855 035c 0120     		movs	r0, #1
 2856              	.LVL277:
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return ret;
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2857              		.loc 1 1928 0
 2858 035e 38BD     		pop	{r3, r4, r5, pc}
 2859              	.LVL278:
 2860              	.L233:
 2861              		.align	2
 2862              	.L232:
 2863 0360 0024F400 		.word	16000000
 2864              		.cfi_endproc
 2865              	.LFE180:
 2867              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 2868              		.align	2
 2869              		.global	UART_AdvFeatureConfig
 2870              		.thumb
 2871              		.thumb_func
 2873              	UART_AdvFeatureConfig:
 2874              	.LFB181:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2875              		.loc 1 1937 0
 2876              		.cfi_startproc
ARM GAS  /tmp/cc1PyfWy.s 			page 91


 2877              		@ args = 0, pretend = 0, frame = 0
 2878              		@ frame_needed = 0, uses_anonymous_args = 0
 2879              		@ link register save eliminated.
 2880              	.LVL279:
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 2881              		.loc 1 1942 0
 2882 0000 436A     		ldr	r3, [r0, #36]
 2883 0002 13F0010F 		tst	r3, #1
 2884 0006 06D0     		beq	.L235
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 2885              		.loc 1 1945 0
 2886 0008 0168     		ldr	r1, [r0]
 2887 000a 4B68     		ldr	r3, [r1, #4]
 2888 000c 23F40032 		bic	r2, r3, #131072
 2889 0010 836A     		ldr	r3, [r0, #40]
 2890 0012 1343     		orrs	r3, r3, r2
 2891 0014 4B60     		str	r3, [r1, #4]
 2892              	.L235:
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 2893              		.loc 1 1949 0
 2894 0016 436A     		ldr	r3, [r0, #36]
 2895 0018 13F0020F 		tst	r3, #2
 2896 001c 06D0     		beq	.L236
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 2897              		.loc 1 1952 0
 2898 001e 0168     		ldr	r1, [r0]
 2899 0020 4B68     		ldr	r3, [r1, #4]
 2900 0022 23F48032 		bic	r2, r3, #65536
 2901 0026 C36A     		ldr	r3, [r0, #44]
 2902 0028 1343     		orrs	r3, r3, r2
 2903 002a 4B60     		str	r3, [r1, #4]
 2904              	.L236:
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure data inversion */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 2905              		.loc 1 1956 0
 2906 002c 436A     		ldr	r3, [r0, #36]
 2907 002e 13F0040F 		tst	r3, #4
 2908 0032 06D0     		beq	.L237
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 2909              		.loc 1 1959 0
 2910 0034 0168     		ldr	r1, [r0]
 2911 0036 4B68     		ldr	r3, [r1, #4]
ARM GAS  /tmp/cc1PyfWy.s 			page 92


 2912 0038 23F48022 		bic	r2, r3, #262144
 2913 003c 036B     		ldr	r3, [r0, #48]
 2914 003e 1343     		orrs	r3, r3, r2
 2915 0040 4B60     		str	r3, [r1, #4]
 2916              	.L237:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 2917              		.loc 1 1963 0
 2918 0042 436A     		ldr	r3, [r0, #36]
 2919 0044 13F0080F 		tst	r3, #8
 2920 0048 06D0     		beq	.L238
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 2921              		.loc 1 1966 0
 2922 004a 0168     		ldr	r1, [r0]
 2923 004c 4B68     		ldr	r3, [r1, #4]
 2924 004e 23F40042 		bic	r2, r3, #32768
 2925 0052 436B     		ldr	r3, [r0, #52]
 2926 0054 1343     		orrs	r3, r3, r2
 2927 0056 4B60     		str	r3, [r1, #4]
 2928              	.L238:
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 2929              		.loc 1 1970 0
 2930 0058 436A     		ldr	r3, [r0, #36]
 2931 005a 13F0100F 		tst	r3, #16
 2932 005e 06D0     		beq	.L239
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 2933              		.loc 1 1973 0
 2934 0060 0168     		ldr	r1, [r0]
 2935 0062 8B68     		ldr	r3, [r1, #8]
 2936 0064 23F48052 		bic	r2, r3, #4096
 2937 0068 836B     		ldr	r3, [r0, #56]
 2938 006a 1343     		orrs	r3, r3, r2
 2939 006c 8B60     		str	r3, [r1, #8]
 2940              	.L239:
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 2941              		.loc 1 1977 0
 2942 006e 436A     		ldr	r3, [r0, #36]
 2943 0070 13F0200F 		tst	r3, #32
 2944 0074 06D0     		beq	.L240
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 2945              		.loc 1 1980 0
 2946 0076 0168     		ldr	r1, [r0]
 2947 0078 8B68     		ldr	r3, [r1, #8]
ARM GAS  /tmp/cc1PyfWy.s 			page 93


 2948 007a 23F40052 		bic	r2, r3, #8192
 2949 007e C36B     		ldr	r3, [r0, #60]
 2950 0080 1343     		orrs	r3, r3, r2
 2951 0082 8B60     		str	r3, [r1, #8]
 2952              	.L240:
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 2953              		.loc 1 1984 0
 2954 0084 436A     		ldr	r3, [r0, #36]
 2955 0086 13F0400F 		tst	r3, #64
 2956 008a 11D0     		beq	.L241
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 2957              		.loc 1 1987 0
 2958 008c 0168     		ldr	r1, [r0]
 2959 008e 4B68     		ldr	r3, [r1, #4]
 2960 0090 23F48012 		bic	r2, r3, #1048576
 2961 0094 036C     		ldr	r3, [r0, #64]
 2962 0096 1343     		orrs	r3, r3, r2
 2963 0098 4B60     		str	r3, [r1, #4]
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 2964              		.loc 1 1989 0
 2965 009a 036C     		ldr	r3, [r0, #64]
 2966 009c B3F5801F 		cmp	r3, #1048576
 2967 00a0 06D1     		bne	.L241
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 2968              		.loc 1 1992 0
 2969 00a2 0168     		ldr	r1, [r0]
 2970 00a4 4B68     		ldr	r3, [r1, #4]
 2971 00a6 23F4C002 		bic	r2, r3, #6291456
 2972 00aa 436C     		ldr	r3, [r0, #68]
 2973 00ac 1343     		orrs	r3, r3, r2
 2974 00ae 4B60     		str	r3, [r1, #4]
 2975              	.L241:
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 2976              		.loc 1 1997 0
 2977 00b0 436A     		ldr	r3, [r0, #36]
 2978 00b2 13F0800F 		tst	r3, #128
 2979 00b6 06D0     		beq	.L234
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 2980              		.loc 1 2000 0
 2981 00b8 0168     		ldr	r1, [r0]
 2982 00ba 4B68     		ldr	r3, [r1, #4]
 2983 00bc 23F40022 		bic	r2, r3, #524288
 2984 00c0 836C     		ldr	r3, [r0, #72]
ARM GAS  /tmp/cc1PyfWy.s 			page 94


 2985 00c2 1343     		orrs	r3, r3, r2
 2986 00c4 4B60     		str	r3, [r1, #4]
 2987              	.L234:
 2988 00c6 7047     		bx	lr
 2989              		.cfi_endproc
 2990              	.LFE181:
 2992              		.section	.text.UART_CheckIdleState,"ax",%progbits
 2993              		.align	2
 2994              		.global	UART_CheckIdleState
 2995              		.thumb
 2996              		.thumb_func
 2998              	UART_CheckIdleState:
 2999              	.LFB182:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Check the UART Idle State
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3000              		.loc 1 2012 0
 3001              		.cfi_startproc
 3002              		@ args = 0, pretend = 0, frame = 0
 3003              		@ frame_needed = 0, uses_anonymous_args = 0
 3004              	.LVL280:
 3005 0000 10B5     		push	{r4, lr}
 3006              	.LCFI22:
 3007              		.cfi_def_cfa_offset 8
 3008              		.cfi_offset 4, -8
 3009              		.cfi_offset 14, -4
 3010 0002 82B0     		sub	sp, sp, #8
 3011              	.LCFI23:
 3012              		.cfi_def_cfa_offset 16
 3013 0004 0446     		mov	r4, r0
 3014              	.LVL281:
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3015              		.loc 1 2016 0
 3016 0006 0023     		movs	r3, #0
 3017 0008 C366     		str	r3, [r0, #108]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 3018              		.loc 1 2019 0
 3019 000a FFF7FEFF 		bl	HAL_GetTick
 3020              	.LVL282:
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 3021              		.loc 1 2022 0
ARM GAS  /tmp/cc1PyfWy.s 			page 95


 3022 000e 2268     		ldr	r2, [r4]
 3023 0010 1268     		ldr	r2, [r2]
 3024 0012 12F0080F 		tst	r2, #8
 3025 0016 0AD0     		beq	.L244
 3026 0018 0346     		mov	r3, r0
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 3027              		.loc 1 2025 0
 3028 001a 6FF07E42 		mvn	r2, #-33554432
 3029 001e 0092     		str	r2, [sp]
 3030 0020 2046     		mov	r0, r4
 3031 0022 4FF40011 		mov	r1, #2097152
 3032 0026 0022     		movs	r2, #0
 3033              	.LVL283:
 3034 0028 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3035              	.LVL284:
 3036 002c 40B9     		cbnz	r0, .L246
 3037              	.L244:
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Timeout Occurred */
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART State */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 3038              		.loc 1 2033 0
 3039 002e 2023     		movs	r3, #32
 3040 0030 84F86930 		strb	r3, [r4, #105]
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 3041              		.loc 1 2034 0
 3042 0034 84F86A30 		strb	r3, [r4, #106]
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3043              		.loc 1 2037 0
 3044 0038 0020     		movs	r0, #0
 3045              	.LVL285:
 3046 003a 84F86800 		strb	r0, [r4, #104]
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3047              		.loc 1 2039 0
 3048 003e 00E0     		b	.L245
 3049              	.LVL286:
 3050              	.L246:
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 3051              		.loc 1 2028 0
 3052 0040 0320     		movs	r0, #3
 3053              	.L245:
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3054              		.loc 1 2040 0
 3055 0042 02B0     		add	sp, sp, #8
 3056              	.LCFI24:
 3057              		.cfi_def_cfa_offset 8
 3058              		@ sp needed
 3059 0044 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc1PyfWy.s 			page 96


 3060              		.cfi_endproc
 3061              	.LFE182:
 3063 0046 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 3064              		.align	2
 3065              		.global	HAL_UART_Init
 3066              		.thumb
 3067              		.thumb_func
 3069              	HAL_UART_Init:
 3070              	.LFB140:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3071              		.loc 1 242 0
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 0
 3074              		@ frame_needed = 0, uses_anonymous_args = 0
 3075              	.LVL287:
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3076              		.loc 1 244 0
 3077 0000 80B3     		cbz	r0, .L252
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3078              		.loc 1 242 0
 3079 0002 10B5     		push	{r4, lr}
 3080              	.LCFI25:
 3081              		.cfi_def_cfa_offset 8
 3082              		.cfi_offset 4, -8
 3083              		.cfi_offset 14, -4
 3084 0004 0446     		mov	r4, r0
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3085              		.loc 1 260 0
 3086 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3087 000a 13F0FF0F 		tst	r3, #255
 3088 000e 04D1     		bne	.L250
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3089              		.loc 1 263 0
 3090 0010 0023     		movs	r3, #0
 3091 0012 80F86830 		strb	r3, [r0, #104]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3092              		.loc 1 266 0
 3093 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 3094              	.LVL288:
 3095              	.L250:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3096              		.loc 1 269 0
 3097 001a 2423     		movs	r3, #36
 3098 001c 84F86930 		strb	r3, [r4, #105]
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3099              		.loc 1 272 0
 3100 0020 2268     		ldr	r2, [r4]
 3101 0022 1368     		ldr	r3, [r2]
 3102 0024 23F00103 		bic	r3, r3, #1
 3103 0028 1360     		str	r3, [r2]
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3104              		.loc 1 275 0
 3105 002a 2046     		mov	r0, r4
 3106 002c FFF7FEFF 		bl	UART_SetConfig
 3107              	.LVL289:
 3108 0030 0128     		cmp	r0, #1
 3109 0032 19D0     		beq	.L249
ARM GAS  /tmp/cc1PyfWy.s 			page 97


 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3110              		.loc 1 280 0
 3111 0034 636A     		ldr	r3, [r4, #36]
 3112 0036 13B1     		cbz	r3, .L251
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3113              		.loc 1 282 0
 3114 0038 2046     		mov	r0, r4
 3115 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 3116              	.LVL290:
 3117              	.L251:
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3118              		.loc 1 288 0
 3119 003e 2268     		ldr	r2, [r4]
 3120 0040 5368     		ldr	r3, [r2, #4]
 3121 0042 23F49043 		bic	r3, r3, #18432
 3122 0046 5360     		str	r3, [r2, #4]
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3123              		.loc 1 289 0
 3124 0048 2268     		ldr	r2, [r4]
 3125 004a 9368     		ldr	r3, [r2, #8]
 3126 004c 23F02A03 		bic	r3, r3, #42
 3127 0050 9360     		str	r3, [r2, #8]
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3128              		.loc 1 292 0
 3129 0052 2268     		ldr	r2, [r4]
 3130 0054 1368     		ldr	r3, [r2]
 3131 0056 43F00103 		orr	r3, r3, #1
 3132 005a 1360     		str	r3, [r2]
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3133              		.loc 1 295 0
 3134 005c 2046     		mov	r0, r4
 3135 005e FFF7FEFF 		bl	UART_CheckIdleState
 3136              	.LVL291:
 3137 0062 10BD     		pop	{r4, pc}
 3138              	.LVL292:
 3139              	.L252:
 3140              	.LCFI26:
 3141              		.cfi_def_cfa_offset 0
 3142              		.cfi_restore 4
 3143              		.cfi_restore 14
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3144              		.loc 1 246 0
 3145 0064 0120     		movs	r0, #1
 3146              	.LVL293:
 3147 0066 7047     		bx	lr
 3148              	.LVL294:
 3149              	.L249:
 3150              	.LCFI27:
 3151              		.cfi_def_cfa_offset 8
 3152              		.cfi_offset 4, -8
 3153              		.cfi_offset 14, -4
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3154              		.loc 1 296 0
 3155 0068 10BD     		pop	{r4, pc}
 3156              		.cfi_endproc
 3157              	.LFE140:
 3159 006a 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
ARM GAS  /tmp/cc1PyfWy.s 			page 98


 3160              		.align	2
 3161              		.global	HAL_HalfDuplex_Init
 3162              		.thumb
 3163              		.thumb_func
 3165              	HAL_HalfDuplex_Init:
 3166              	.LFB141:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3167              		.loc 1 305 0
 3168              		.cfi_startproc
 3169              		@ args = 0, pretend = 0, frame = 0
 3170              		@ frame_needed = 0, uses_anonymous_args = 0
 3171              	.LVL295:
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3172              		.loc 1 307 0
 3173 0000 0028     		cmp	r0, #0
 3174 0002 35D0     		beq	.L259
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3175              		.loc 1 305 0
 3176 0004 10B5     		push	{r4, lr}
 3177              	.LCFI28:
 3178              		.cfi_def_cfa_offset 8
 3179              		.cfi_offset 4, -8
 3180              		.cfi_offset 14, -4
 3181 0006 0446     		mov	r4, r0
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3182              		.loc 1 312 0
 3183 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3184 000c 13F0FF0F 		tst	r3, #255
 3185 0010 04D1     		bne	.L257
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3186              		.loc 1 315 0
 3187 0012 0023     		movs	r3, #0
 3188 0014 80F86830 		strb	r3, [r0, #104]
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3189              		.loc 1 318 0
 3190 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 3191              	.LVL296:
 3192              	.L257:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3193              		.loc 1 321 0
 3194 001c 2423     		movs	r3, #36
 3195 001e 84F86930 		strb	r3, [r4, #105]
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3196              		.loc 1 324 0
 3197 0022 2268     		ldr	r2, [r4]
 3198 0024 1368     		ldr	r3, [r2]
 3199 0026 23F00103 		bic	r3, r3, #1
 3200 002a 1360     		str	r3, [r2]
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3201              		.loc 1 327 0
 3202 002c 2046     		mov	r0, r4
 3203 002e FFF7FEFF 		bl	UART_SetConfig
 3204              	.LVL297:
 3205 0032 0128     		cmp	r0, #1
 3206 0034 1ED0     		beq	.L256
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3207              		.loc 1 332 0
ARM GAS  /tmp/cc1PyfWy.s 			page 99


 3208 0036 636A     		ldr	r3, [r4, #36]
 3209 0038 13B1     		cbz	r3, .L258
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3210              		.loc 1 334 0
 3211 003a 2046     		mov	r0, r4
 3212 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3213              	.LVL298:
 3214              	.L258:
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 3215              		.loc 1 340 0
 3216 0040 2268     		ldr	r2, [r4]
 3217 0042 5368     		ldr	r3, [r2, #4]
 3218 0044 23F49043 		bic	r3, r3, #18432
 3219 0048 5360     		str	r3, [r2, #4]
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3220              		.loc 1 341 0
 3221 004a 2268     		ldr	r2, [r4]
 3222 004c 9368     		ldr	r3, [r2, #8]
 3223 004e 23F02203 		bic	r3, r3, #34
 3224 0052 9360     		str	r3, [r2, #8]
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3225              		.loc 1 344 0
 3226 0054 2268     		ldr	r2, [r4]
 3227 0056 9368     		ldr	r3, [r2, #8]
 3228 0058 43F00803 		orr	r3, r3, #8
 3229 005c 9360     		str	r3, [r2, #8]
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3230              		.loc 1 347 0
 3231 005e 2268     		ldr	r2, [r4]
 3232 0060 1368     		ldr	r3, [r2]
 3233 0062 43F00103 		orr	r3, r3, #1
 3234 0066 1360     		str	r3, [r2]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3235              		.loc 1 350 0
 3236 0068 2046     		mov	r0, r4
 3237 006a FFF7FEFF 		bl	UART_CheckIdleState
 3238              	.LVL299:
 3239 006e 10BD     		pop	{r4, pc}
 3240              	.LVL300:
 3241              	.L259:
 3242              	.LCFI29:
 3243              		.cfi_def_cfa_offset 0
 3244              		.cfi_restore 4
 3245              		.cfi_restore 14
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3246              		.loc 1 309 0
 3247 0070 0120     		movs	r0, #1
 3248              	.LVL301:
 3249 0072 7047     		bx	lr
 3250              	.LVL302:
 3251              	.L256:
 3252              	.LCFI30:
 3253              		.cfi_def_cfa_offset 8
 3254              		.cfi_offset 4, -8
 3255              		.cfi_offset 14, -4
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3256              		.loc 1 351 0
ARM GAS  /tmp/cc1PyfWy.s 			page 100


 3257 0074 10BD     		pop	{r4, pc}
 3258              		.cfi_endproc
 3259              	.LFE141:
 3261 0076 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 3262              		.align	2
 3263              		.global	HAL_LIN_Init
 3264              		.thumb
 3265              		.thumb_func
 3267              	HAL_LIN_Init:
 3268              	.LFB142:
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3269              		.loc 1 365 0
 3270              		.cfi_startproc
 3271              		@ args = 0, pretend = 0, frame = 0
 3272              		@ frame_needed = 0, uses_anonymous_args = 0
 3273              	.LVL303:
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3274              		.loc 1 367 0
 3275 0000 0028     		cmp	r0, #0
 3276 0002 3CD0     		beq	.L266
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3277              		.loc 1 365 0
 3278 0004 38B5     		push	{r3, r4, r5, lr}
 3279              	.LCFI31:
 3280              		.cfi_def_cfa_offset 16
 3281              		.cfi_offset 3, -16
 3282              		.cfi_offset 4, -12
 3283              		.cfi_offset 5, -8
 3284              		.cfi_offset 14, -4
 3285 0006 0446     		mov	r4, r0
 3286 0008 0D46     		mov	r5, r1
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3287              		.loc 1 377 0
 3288 000a 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3289 000e 13F0FF0F 		tst	r3, #255
 3290 0012 04D1     		bne	.L264
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3291              		.loc 1 380 0
 3292 0014 0023     		movs	r3, #0
 3293 0016 80F86830 		strb	r3, [r0, #104]
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3294              		.loc 1 383 0
 3295 001a FFF7FEFF 		bl	HAL_UART_MspInit
 3296              	.LVL304:
 3297              	.L264:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3298              		.loc 1 386 0
 3299 001e 2423     		movs	r3, #36
 3300 0020 84F86930 		strb	r3, [r4, #105]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3301              		.loc 1 389 0
 3302 0024 2268     		ldr	r2, [r4]
 3303 0026 1368     		ldr	r3, [r2]
 3304 0028 23F00103 		bic	r3, r3, #1
 3305 002c 1360     		str	r3, [r2]
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3306              		.loc 1 392 0
ARM GAS  /tmp/cc1PyfWy.s 			page 101


 3307 002e 2046     		mov	r0, r4
 3308 0030 FFF7FEFF 		bl	UART_SetConfig
 3309              	.LVL305:
 3310 0034 0128     		cmp	r0, #1
 3311 0036 24D0     		beq	.L263
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3312              		.loc 1 397 0
 3313 0038 636A     		ldr	r3, [r4, #36]
 3314 003a 13B1     		cbz	r3, .L265
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3315              		.loc 1 399 0
 3316 003c 2046     		mov	r0, r4
 3317 003e FFF7FEFF 		bl	UART_AdvFeatureConfig
 3318              	.LVL306:
 3319              	.L265:
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 3320              		.loc 1 405 0
 3321 0042 2268     		ldr	r2, [r4]
 3322 0044 5368     		ldr	r3, [r2, #4]
 3323 0046 23F40063 		bic	r3, r3, #2048
 3324 004a 5360     		str	r3, [r2, #4]
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3325              		.loc 1 406 0
 3326 004c 2268     		ldr	r2, [r4]
 3327 004e 9368     		ldr	r3, [r2, #8]
 3328 0050 23F02A03 		bic	r3, r3, #42
 3329 0054 9360     		str	r3, [r2, #8]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3330              		.loc 1 409 0
 3331 0056 2268     		ldr	r2, [r4]
 3332 0058 5368     		ldr	r3, [r2, #4]
 3333 005a 43F48043 		orr	r3, r3, #16384
 3334 005e 5360     		str	r3, [r2, #4]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3335              		.loc 1 412 0
 3336 0060 2368     		ldr	r3, [r4]
 3337 0062 5968     		ldr	r1, [r3, #4]
 3338 0064 21F02001 		bic	r1, r1, #32
 3339 0068 0D43     		orrs	r5, r5, r1
 3340              	.LVL307:
 3341 006a 5D60     		str	r5, [r3, #4]
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3342              		.loc 1 415 0
 3343 006c 2268     		ldr	r2, [r4]
 3344 006e 1368     		ldr	r3, [r2]
 3345 0070 43F00103 		orr	r3, r3, #1
 3346 0074 1360     		str	r3, [r2]
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3347              		.loc 1 418 0
 3348 0076 2046     		mov	r0, r4
 3349 0078 FFF7FEFF 		bl	UART_CheckIdleState
 3350              	.LVL308:
 3351 007c 38BD     		pop	{r3, r4, r5, pc}
 3352              	.LVL309:
 3353              	.L266:
 3354              	.LCFI32:
 3355              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc1PyfWy.s 			page 102


 3356              		.cfi_restore 3
 3357              		.cfi_restore 4
 3358              		.cfi_restore 5
 3359              		.cfi_restore 14
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3360              		.loc 1 369 0
 3361 007e 0120     		movs	r0, #1
 3362              	.LVL310:
 3363 0080 7047     		bx	lr
 3364              	.LVL311:
 3365              	.L263:
 3366              	.LCFI33:
 3367              		.cfi_def_cfa_offset 16
 3368              		.cfi_offset 3, -16
 3369              		.cfi_offset 4, -12
 3370              		.cfi_offset 5, -8
 3371              		.cfi_offset 14, -4
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3372              		.loc 1 419 0
 3373 0082 38BD     		pop	{r3, r4, r5, pc}
 3374              		.cfi_endproc
 3375              	.LFE142:
 3377              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3378              		.align	2
 3379              		.global	HAL_MultiProcessor_Init
 3380              		.thumb
 3381              		.thumb_func
 3383              	HAL_MultiProcessor_Init:
 3384              	.LFB143:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3385              		.loc 1 439 0
 3386              		.cfi_startproc
 3387              		@ args = 0, pretend = 0, frame = 0
 3388              		@ frame_needed = 0, uses_anonymous_args = 0
 3389              	.LVL312:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3390              		.loc 1 441 0
 3391 0000 0028     		cmp	r0, #0
 3392 0002 42D0     		beq	.L274
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3393              		.loc 1 439 0
 3394 0004 70B5     		push	{r4, r5, r6, lr}
 3395              	.LCFI34:
 3396              		.cfi_def_cfa_offset 16
 3397              		.cfi_offset 4, -16
 3398              		.cfi_offset 5, -12
 3399              		.cfi_offset 6, -8
 3400              		.cfi_offset 14, -4
 3401 0006 0446     		mov	r4, r0
 3402 0008 1546     		mov	r5, r2
 3403 000a 0E46     		mov	r6, r1
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3404              		.loc 1 449 0
 3405 000c 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3406 0010 13F0FF0F 		tst	r3, #255
 3407 0014 04D1     		bne	.L271
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc1PyfWy.s 			page 103


 3408              		.loc 1 452 0
 3409 0016 0023     		movs	r3, #0
 3410 0018 80F86830 		strb	r3, [r0, #104]
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3411              		.loc 1 455 0
 3412 001c FFF7FEFF 		bl	HAL_UART_MspInit
 3413              	.LVL313:
 3414              	.L271:
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3415              		.loc 1 458 0
 3416 0020 2423     		movs	r3, #36
 3417 0022 84F86930 		strb	r3, [r4, #105]
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3418              		.loc 1 461 0
 3419 0026 2268     		ldr	r2, [r4]
 3420 0028 1368     		ldr	r3, [r2]
 3421 002a 23F00103 		bic	r3, r3, #1
 3422 002e 1360     		str	r3, [r2]
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3423              		.loc 1 464 0
 3424 0030 2046     		mov	r0, r4
 3425 0032 FFF7FEFF 		bl	UART_SetConfig
 3426              	.LVL314:
 3427 0036 0128     		cmp	r0, #1
 3428 0038 29D0     		beq	.L270
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3429              		.loc 1 469 0
 3430 003a 636A     		ldr	r3, [r4, #36]
 3431 003c 13B1     		cbz	r3, .L272
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3432              		.loc 1 471 0
 3433 003e 2046     		mov	r0, r4
 3434 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3435              	.LVL315:
 3436              	.L272:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3437              		.loc 1 477 0
 3438 0044 2268     		ldr	r2, [r4]
 3439 0046 5368     		ldr	r3, [r2, #4]
 3440 0048 23F49043 		bic	r3, r3, #18432
 3441 004c 5360     		str	r3, [r2, #4]
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3442              		.loc 1 478 0
 3443 004e 2268     		ldr	r2, [r4]
 3444 0050 9368     		ldr	r3, [r2, #8]
 3445 0052 23F02A03 		bic	r3, r3, #42
 3446 0056 9360     		str	r3, [r2, #8]
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3447              		.loc 1 480 0
 3448 0058 B5F5006F 		cmp	r5, #2048
 3449 005c 06D1     		bne	.L273
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3450              		.loc 1 483 0
 3451 005e 2368     		ldr	r3, [r4]
 3452 0060 5968     		ldr	r1, [r3, #4]
 3453 0062 21F07F41 		bic	r1, r1, #-16777216
 3454 0066 41EA0666 		orr	r6, r1, r6, lsl #24
ARM GAS  /tmp/cc1PyfWy.s 			page 104


 3455 006a 5E60     		str	r6, [r3, #4]
 3456              	.L273:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3457              		.loc 1 487 0
 3458 006c 2368     		ldr	r3, [r4]
 3459 006e 1A68     		ldr	r2, [r3]
 3460 0070 22F40062 		bic	r2, r2, #2048
 3461 0074 1543     		orrs	r5, r5, r2
 3462              	.LVL316:
 3463 0076 1D60     		str	r5, [r3]
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3464              		.loc 1 490 0
 3465 0078 2268     		ldr	r2, [r4]
 3466 007a 1368     		ldr	r3, [r2]
 3467 007c 43F00103 		orr	r3, r3, #1
 3468 0080 1360     		str	r3, [r2]
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3469              		.loc 1 493 0
 3470 0082 2046     		mov	r0, r4
 3471 0084 FFF7FEFF 		bl	UART_CheckIdleState
 3472              	.LVL317:
 3473 0088 70BD     		pop	{r4, r5, r6, pc}
 3474              	.LVL318:
 3475              	.L274:
 3476              	.LCFI35:
 3477              		.cfi_def_cfa_offset 0
 3478              		.cfi_restore 4
 3479              		.cfi_restore 5
 3480              		.cfi_restore 6
 3481              		.cfi_restore 14
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3482              		.loc 1 443 0
 3483 008a 0120     		movs	r0, #1
 3484              	.LVL319:
 3485 008c 7047     		bx	lr
 3486              	.LVL320:
 3487              	.L270:
 3488              	.LCFI36:
 3489              		.cfi_def_cfa_offset 16
 3490              		.cfi_offset 4, -16
 3491              		.cfi_offset 5, -12
 3492              		.cfi_offset 6, -8
 3493              		.cfi_offset 14, -4
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3494              		.loc 1 494 0
 3495 008e 70BD     		pop	{r4, r5, r6, pc}
 3496              		.cfi_endproc
 3497              	.LFE143:
 3499              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 3500              		.align	2
 3501              		.global	HAL_RS485Ex_Init
 3502              		.thumb
 3503              		.thumb_func
 3505              	HAL_RS485Ex_Init:
 3506              	.LFB144:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 3507              		.loc 1 517 0
ARM GAS  /tmp/cc1PyfWy.s 			page 105


 3508              		.cfi_startproc
 3509              		@ args = 0, pretend = 0, frame = 0
 3510              		@ frame_needed = 0, uses_anonymous_args = 0
 3511              	.LVL321:
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3512              		.loc 1 521 0
 3513 0000 0028     		cmp	r0, #0
 3514 0002 3DD0     		beq	.L281
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 3515              		.loc 1 517 0
 3516 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3517              	.LCFI37:
 3518              		.cfi_def_cfa_offset 24
 3519              		.cfi_offset 3, -24
 3520              		.cfi_offset 4, -20
 3521              		.cfi_offset 5, -16
 3522              		.cfi_offset 6, -12
 3523              		.cfi_offset 7, -8
 3524              		.cfi_offset 14, -4
 3525 0006 0446     		mov	r4, r0
 3526 0008 1D46     		mov	r5, r3
 3527 000a 1746     		mov	r7, r2
 3528 000c 0E46     		mov	r6, r1
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3529              		.loc 1 537 0
 3530 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3531              	.LVL322:
 3532 0012 13F0FF0F 		tst	r3, #255
 3533 0016 04D1     		bne	.L279
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3534              		.loc 1 540 0
 3535 0018 0023     		movs	r3, #0
 3536 001a 80F86830 		strb	r3, [r0, #104]
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3537              		.loc 1 543 0
 3538 001e FFF7FEFF 		bl	HAL_UART_MspInit
 3539              	.LVL323:
 3540              	.L279:
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3541              		.loc 1 546 0
 3542 0022 2423     		movs	r3, #36
 3543 0024 84F86930 		strb	r3, [r4, #105]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3544              		.loc 1 549 0
 3545 0028 2268     		ldr	r2, [r4]
 3546 002a 1368     		ldr	r3, [r2]
 3547 002c 23F00103 		bic	r3, r3, #1
 3548 0030 1360     		str	r3, [r2]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3549              		.loc 1 552 0
 3550 0032 2046     		mov	r0, r4
 3551 0034 FFF7FEFF 		bl	UART_SetConfig
 3552              	.LVL324:
 3553 0038 0128     		cmp	r0, #1
 3554 003a 23D0     		beq	.L278
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3555              		.loc 1 557 0
ARM GAS  /tmp/cc1PyfWy.s 			page 106


 3556 003c 636A     		ldr	r3, [r4, #36]
 3557 003e 13B1     		cbz	r3, .L280
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3558              		.loc 1 559 0
 3559 0040 2046     		mov	r0, r4
 3560 0042 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3561              	.LVL325:
 3562              	.L280:
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3563              		.loc 1 563 0
 3564 0046 2268     		ldr	r2, [r4]
 3565 0048 9368     		ldr	r3, [r2, #8]
 3566 004a 43F48043 		orr	r3, r3, #16384
 3567 004e 9360     		str	r3, [r2, #8]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3568              		.loc 1 566 0
 3569 0050 2368     		ldr	r3, [r4]
 3570 0052 9968     		ldr	r1, [r3, #8]
 3571 0054 21F40041 		bic	r1, r1, #32768
 3572 0058 0E43     		orrs	r6, r6, r1
 3573              	.LVL326:
 3574 005a 9E60     		str	r6, [r3, #8]
 3575              	.LVL327:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 3576              		.loc 1 570 0
 3577 005c 2D04     		lsls	r5, r5, #16
 3578              	.LVL328:
 3579 005e 45EA4752 		orr	r2, r5, r7, lsl #21
 3580              	.LVL329:
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3581              		.loc 1 571 0
 3582 0062 2368     		ldr	r3, [r4]
 3583 0064 1968     		ldr	r1, [r3]
 3584 0066 084D     		ldr	r5, .L284
 3585 0068 0D40     		ands	r5, r5, r1
 3586 006a 1543     		orrs	r5, r5, r2
 3587 006c 1D60     		str	r5, [r3]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3588              		.loc 1 574 0
 3589 006e 2268     		ldr	r2, [r4]
 3590              	.LVL330:
 3591 0070 1368     		ldr	r3, [r2]
 3592 0072 43F00103 		orr	r3, r3, #1
 3593 0076 1360     		str	r3, [r2]
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3594              		.loc 1 577 0
 3595 0078 2046     		mov	r0, r4
 3596 007a FFF7FEFF 		bl	UART_CheckIdleState
 3597              	.LVL331:
 3598 007e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3599              	.LVL332:
 3600              	.L281:
 3601              	.LCFI38:
 3602              		.cfi_def_cfa_offset 0
 3603              		.cfi_restore 3
 3604              		.cfi_restore 4
 3605              		.cfi_restore 5
ARM GAS  /tmp/cc1PyfWy.s 			page 107


 3606              		.cfi_restore 6
 3607              		.cfi_restore 7
 3608              		.cfi_restore 14
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3609              		.loc 1 523 0
 3610 0080 0120     		movs	r0, #1
 3611              	.LVL333:
 3612 0082 7047     		bx	lr
 3613              	.LVL334:
 3614              	.L278:
 3615              	.LCFI39:
 3616              		.cfi_def_cfa_offset 24
 3617              		.cfi_offset 3, -24
 3618              		.cfi_offset 4, -20
 3619              		.cfi_offset 5, -16
 3620              		.cfi_offset 6, -12
 3621              		.cfi_offset 7, -8
 3622              		.cfi_offset 14, -4
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3623              		.loc 1 578 0
 3624 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3625              	.LVL335:
 3626              	.L285:
 3627 0086 00BF     		.align	2
 3628              	.L284:
 3629 0088 FFFF00FC 		.word	-67043329
 3630              		.cfi_endproc
 3631              	.LFE144:
 3633              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3634              		.align	2
 3635              		.global	HAL_MultiProcessor_EnableMuteMode
 3636              		.thumb
 3637              		.thumb_func
 3639              	HAL_MultiProcessor_EnableMuteMode:
 3640              	.LFB175:
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 3641              		.loc 1 1747 0
 3642              		.cfi_startproc
 3643              		@ args = 0, pretend = 0, frame = 0
 3644              		@ frame_needed = 0, uses_anonymous_args = 0
 3645              	.LVL336:
 3646 0000 08B5     		push	{r3, lr}
 3647              	.LCFI40:
 3648              		.cfi_def_cfa_offset 8
 3649              		.cfi_offset 3, -8
 3650              		.cfi_offset 14, -4
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3651              		.loc 1 1749 0
 3652 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3653 0006 012B     		cmp	r3, #1
 3654 0008 10D0     		beq	.L288
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3655              		.loc 1 1749 0 is_stmt 0 discriminator 2
 3656 000a 0123     		movs	r3, #1
 3657 000c 80F86830 		strb	r3, [r0, #104]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3658              		.loc 1 1751 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cc1PyfWy.s 			page 108


 3659 0010 2423     		movs	r3, #36
 3660 0012 80F86930 		strb	r3, [r0, #105]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3661              		.loc 1 1754 0 discriminator 2
 3662 0016 0268     		ldr	r2, [r0]
 3663 0018 1368     		ldr	r3, [r2]
 3664 001a 43F40053 		orr	r3, r3, #8192
 3665 001e 1360     		str	r3, [r2]
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3666              		.loc 1 1756 0 discriminator 2
 3667 0020 2023     		movs	r3, #32
 3668 0022 80F86930 		strb	r3, [r0, #105]
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3669              		.loc 1 1758 0 discriminator 2
 3670 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3671              	.LVL337:
 3672 002a 08BD     		pop	{r3, pc}
 3673              	.LVL338:
 3674              	.L288:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3675              		.loc 1 1749 0
 3676 002c 0220     		movs	r0, #2
 3677              	.LVL339:
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3678              		.loc 1 1759 0
 3679 002e 08BD     		pop	{r3, pc}
 3680              		.cfi_endproc
 3681              	.LFE175:
 3683              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3684              		.align	2
 3685              		.global	HAL_MultiProcessor_DisableMuteMode
 3686              		.thumb
 3687              		.thumb_func
 3689              	HAL_MultiProcessor_DisableMuteMode:
 3690              	.LFB176:
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 3691              		.loc 1 1768 0
 3692              		.cfi_startproc
 3693              		@ args = 0, pretend = 0, frame = 0
 3694              		@ frame_needed = 0, uses_anonymous_args = 0
 3695              	.LVL340:
 3696 0000 08B5     		push	{r3, lr}
 3697              	.LCFI41:
 3698              		.cfi_def_cfa_offset 8
 3699              		.cfi_offset 3, -8
 3700              		.cfi_offset 14, -4
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3701              		.loc 1 1770 0
 3702 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3703 0006 012B     		cmp	r3, #1
 3704 0008 10D0     		beq	.L292
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3705              		.loc 1 1770 0 is_stmt 0 discriminator 2
 3706 000a 0123     		movs	r3, #1
 3707 000c 80F86830 		strb	r3, [r0, #104]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3708              		.loc 1 1772 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cc1PyfWy.s 			page 109


 3709 0010 2423     		movs	r3, #36
 3710 0012 80F86930 		strb	r3, [r0, #105]
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3711              		.loc 1 1775 0 discriminator 2
 3712 0016 0268     		ldr	r2, [r0]
 3713 0018 1368     		ldr	r3, [r2]
 3714 001a 23F40053 		bic	r3, r3, #8192
 3715 001e 1360     		str	r3, [r2]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3716              		.loc 1 1777 0 discriminator 2
 3717 0020 2023     		movs	r3, #32
 3718 0022 80F86930 		strb	r3, [r0, #105]
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3719              		.loc 1 1779 0 discriminator 2
 3720 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3721              	.LVL341:
 3722 002a 08BD     		pop	{r3, pc}
 3723              	.LVL342:
 3724              	.L292:
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3725              		.loc 1 1770 0
 3726 002c 0220     		movs	r0, #2
 3727              	.LVL343:
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3728              		.loc 1 1780 0
 3729 002e 08BD     		pop	{r3, pc}
 3730              		.cfi_endproc
 3731              	.LFE176:
 3733              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3734              		.align	2
 3735              		.global	HAL_HalfDuplex_EnableTransmitter
 3736              		.thumb
 3737              		.thumb_func
 3739              	HAL_HalfDuplex_EnableTransmitter:
 3740              	.LFB183:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3741              		.loc 1 2049 0
 3742              		.cfi_startproc
 3743              		@ args = 0, pretend = 0, frame = 0
 3744              		@ frame_needed = 0, uses_anonymous_args = 0
 3745              		@ link register save eliminated.
 3746              	.LVL344:
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3747              		.loc 1 2051 0
 3748 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3749 0004 012B     		cmp	r3, #1
 3750 0006 17D0     		beq	.L296
 3751              		.loc 1 2051 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/cc1PyfWy.s 			page 110


 3752 0008 0123     		movs	r3, #1
 3753 000a 80F86830 		strb	r3, [r0, #104]
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3754              		.loc 1 2052 0 is_stmt 1 discriminator 2
 3755 000e 2423     		movs	r3, #36
 3756 0010 80F86930 		strb	r3, [r0, #105]
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 3757              		.loc 1 2055 0 discriminator 2
 3758 0014 0268     		ldr	r2, [r0]
 3759 0016 1368     		ldr	r3, [r2]
 3760 0018 23F00C03 		bic	r3, r3, #12
 3761 001c 1360     		str	r3, [r2]
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 3762              		.loc 1 2057 0 discriminator 2
 3763 001e 0268     		ldr	r2, [r0]
 3764 0020 1368     		ldr	r3, [r2]
 3765 0022 43F00803 		orr	r3, r3, #8
 3766 0026 1360     		str	r3, [r2]
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 3767              		.loc 1 2059 0 discriminator 2
 3768 0028 2023     		movs	r3, #32
 3769 002a 80F86930 		strb	r3, [r0, #105]
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3770              		.loc 1 2061 0 discriminator 2
 3771 002e 0023     		movs	r3, #0
 3772 0030 80F86830 		strb	r3, [r0, #104]
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3773              		.loc 1 2063 0 discriminator 2
 3774 0034 1846     		mov	r0, r3
 3775              	.LVL345:
 3776 0036 7047     		bx	lr
 3777              	.LVL346:
 3778              	.L296:
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3779              		.loc 1 2051 0
 3780 0038 0220     		movs	r0, #2
 3781              	.LVL347:
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3782              		.loc 1 2064 0
 3783 003a 7047     		bx	lr
 3784              		.cfi_endproc
 3785              	.LFE183:
 3787              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3788              		.align	2
 3789              		.global	HAL_HalfDuplex_EnableReceiver
 3790              		.thumb
 3791              		.thumb_func
 3793              	HAL_HalfDuplex_EnableReceiver:
 3794              	.LFB184:
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
ARM GAS  /tmp/cc1PyfWy.s 			page 111


2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3795              		.loc 1 2072 0
 3796              		.cfi_startproc
 3797              		@ args = 0, pretend = 0, frame = 0
 3798              		@ frame_needed = 0, uses_anonymous_args = 0
 3799              		@ link register save eliminated.
 3800              	.LVL348:
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3801              		.loc 1 2074 0
 3802 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3803 0004 012B     		cmp	r3, #1
 3804 0006 17D0     		beq	.L299
 3805              		.loc 1 2074 0 is_stmt 0 discriminator 2
 3806 0008 0123     		movs	r3, #1
 3807 000a 80F86830 		strb	r3, [r0, #104]
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3808              		.loc 1 2075 0 is_stmt 1 discriminator 2
 3809 000e 2423     		movs	r3, #36
 3810 0010 80F86930 		strb	r3, [r0, #105]
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 3811              		.loc 1 2078 0 discriminator 2
 3812 0014 0268     		ldr	r2, [r0]
 3813 0016 1368     		ldr	r3, [r2]
 3814 0018 23F00C03 		bic	r3, r3, #12
 3815 001c 1360     		str	r3, [r2]
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 3816              		.loc 1 2080 0 discriminator 2
 3817 001e 0268     		ldr	r2, [r0]
 3818 0020 1368     		ldr	r3, [r2]
 3819 0022 43F00403 		orr	r3, r3, #4
 3820 0026 1360     		str	r3, [r2]
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3821              		.loc 1 2082 0 discriminator 2
 3822 0028 2023     		movs	r3, #32
 3823 002a 80F86930 		strb	r3, [r0, #105]
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3824              		.loc 1 2084 0 discriminator 2
 3825 002e 0023     		movs	r3, #0
 3826 0030 80F86830 		strb	r3, [r0, #104]
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3827              		.loc 1 2086 0 discriminator 2
 3828 0034 1846     		mov	r0, r3
 3829              	.LVL349:
 3830 0036 7047     		bx	lr
 3831              	.LVL350:
ARM GAS  /tmp/cc1PyfWy.s 			page 112


 3832              	.L299:
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3833              		.loc 1 2074 0
 3834 0038 0220     		movs	r0, #2
 3835              	.LVL351:
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3836              		.loc 1 2087 0
 3837 003a 7047     		bx	lr
 3838              		.cfi_endproc
 3839              	.LFE184:
 3841              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3842              		.align	2
 3843              		.global	HAL_LIN_SendBreak
 3844              		.thumb
 3845              		.thumb_func
 3847              	HAL_LIN_SendBreak:
 3848              	.LFB185:
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Transmits break characters.
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3849              		.loc 1 2096 0
 3850              		.cfi_startproc
 3851              		@ args = 0, pretend = 0, frame = 0
 3852              		@ frame_needed = 0, uses_anonymous_args = 0
 3853              		@ link register save eliminated.
 3854              	.LVL352:
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3855              		.loc 1 2101 0
 3856 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3857 0004 012B     		cmp	r3, #1
 3858 0006 12D0     		beq	.L302
 3859              		.loc 1 2101 0 is_stmt 0 discriminator 2
 3860 0008 0123     		movs	r3, #1
 3861 000a 80F86830 		strb	r3, [r0, #104]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3862              		.loc 1 2103 0 is_stmt 1 discriminator 2
 3863 000e 2423     		movs	r3, #36
 3864 0010 80F86930 		strb	r3, [r0, #105]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Send break characters */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
 3865              		.loc 1 2106 0 discriminator 2
 3866 0014 0268     		ldr	r2, [r0]
 3867 0016 9369     		ldr	r3, [r2, #24]
 3868 0018 43F00203 		orr	r3, r3, #2
 3869 001c 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/cc1PyfWy.s 			page 113


2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3870              		.loc 1 2108 0 discriminator 2
 3871 001e 2023     		movs	r3, #32
 3872 0020 80F86930 		strb	r3, [r0, #105]
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3873              		.loc 1 2111 0 discriminator 2
 3874 0024 0023     		movs	r3, #0
 3875 0026 80F86830 		strb	r3, [r0, #104]
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3876              		.loc 1 2113 0 discriminator 2
 3877 002a 1846     		mov	r0, r3
 3878              	.LVL353:
 3879 002c 7047     		bx	lr
 3880              	.LVL354:
 3881              	.L302:
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3882              		.loc 1 2101 0
 3883 002e 0220     		movs	r0, #2
 3884              	.LVL355:
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3885              		.loc 1 2114 0
 3886 0030 7047     		bx	lr
 3887              		.cfi_endproc
 3888              	.LFE185:
 3890 0032 00BF     		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 3891              		.align	2
 3892              		.global	HAL_MultiProcessorEx_AddressLength_Set
 3893              		.thumb
 3894              		.thumb_func
 3896              	HAL_MultiProcessorEx_AddressLength_Set:
 3897              	.LFB186:
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        long).
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AddressLength this parameter can be one of the following values:
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3898              		.loc 1 2130 0
 3899              		.cfi_startproc
 3900              		@ args = 0, pretend = 0, frame = 0
 3901              		@ frame_needed = 0, uses_anonymous_args = 0
 3902              	.LVL356:
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/cc1PyfWy.s 			page 114


2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 3903              		.loc 1 2132 0
 3904 0000 B0B1     		cbz	r0, .L305
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3905              		.loc 1 2130 0
 3906 0002 08B5     		push	{r3, lr}
 3907              	.LCFI42:
 3908              		.cfi_def_cfa_offset 8
 3909              		.cfi_offset 3, -8
 3910              		.cfi_offset 14, -4
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the address length parameter */
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3911              		.loc 1 2140 0
 3912 0004 2423     		movs	r3, #36
 3913 0006 80F86930 		strb	r3, [r0, #105]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 3914              		.loc 1 2143 0
 3915 000a 0268     		ldr	r2, [r0]
 3916 000c 1368     		ldr	r3, [r2]
 3917 000e 23F00103 		bic	r3, r3, #1
 3918 0012 1360     		str	r3, [r2]
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the address length */
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 3919              		.loc 1 2146 0
 3920 0014 0268     		ldr	r2, [r0]
 3921 0016 5368     		ldr	r3, [r2, #4]
 3922 0018 23F01003 		bic	r3, r3, #16
 3923 001c 1943     		orrs	r1, r1, r3
 3924              	.LVL357:
 3925 001e 5160     		str	r1, [r2, #4]
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 3926              		.loc 1 2149 0
 3927 0020 0268     		ldr	r2, [r0]
 3928 0022 1368     		ldr	r3, [r2]
 3929 0024 43F00103 		orr	r3, r3, #1
 3930 0028 1360     		str	r3, [r2]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3931              		.loc 1 2152 0
 3932 002a FFF7FEFF 		bl	UART_CheckIdleState
 3933              	.LVL358:
 3934 002e 08BD     		pop	{r3, pc}
 3935              	.LVL359:
 3936              	.L305:
 3937              	.LCFI43:
ARM GAS  /tmp/cc1PyfWy.s 			page 115


 3938              		.cfi_def_cfa_offset 0
 3939              		.cfi_restore 3
 3940              		.cfi_restore 14
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3941              		.loc 1 2134 0
 3942 0030 0120     		movs	r0, #1
 3943              	.LVL360:
 3944 0032 7047     		bx	lr
 3945              		.cfi_endproc
 3946              	.LFE186:
 3948              		.text
 3949              	.Letext0:
 3950              		.file 2 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_ty
 3951              		.file 3 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 3952              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 3953              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3954              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3955              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3956              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 3957              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 3958              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 3959              		.file 11 "Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/cc1PyfWy.s 			page 116


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_uart.c
     /tmp/cc1PyfWy.s:20     .text.UART_Transmit_IT:00000000 $t
     /tmp/cc1PyfWy.s:24     .text.UART_Transmit_IT:00000000 UART_Transmit_IT
     /tmp/cc1PyfWy.s:109    .text.UART_EndTxTransfer:00000000 $t
     /tmp/cc1PyfWy.s:113    .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/cc1PyfWy.s:134    .text.UART_EndRxTransfer:00000000 $t
     /tmp/cc1PyfWy.s:138    .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/cc1PyfWy.s:164    .text.HAL_UART_MspInit:00000000 $t
     /tmp/cc1PyfWy.s:169    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/cc1PyfWy.s:182    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/cc1PyfWy.s:187    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/cc1PyfWy.s:200    .text.HAL_UART_DeInit:00000000 $t
     /tmp/cc1PyfWy.s:205    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/cc1PyfWy.s:271    .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/cc1PyfWy.s:276    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/cc1PyfWy.s:347    .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/cc1PyfWy.s:352    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/cc1PyfWy.s:478    .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/cc1PyfWy.s:483    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/cc1PyfWy.s:589    .text.HAL_UART_Transmit_DMA:00000080 $d
     /tmp/cc1PyfWy.s:1439   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/cc1PyfWy.s:1543   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/cc1PyfWy.s:1818   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/cc1PyfWy.s:596    .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/cc1PyfWy.s:601    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/cc1PyfWy.s:714    .text.HAL_UART_Receive_DMA:0000008c $d
     /tmp/cc1PyfWy.s:1589   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/cc1PyfWy.s:1772   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/cc1PyfWy.s:721    .text.HAL_UART_DMAPause:00000000 $t
     /tmp/cc1PyfWy.s:726    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/cc1PyfWy.s:801    .text.HAL_UART_DMAResume:00000000 $t
     /tmp/cc1PyfWy.s:806    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/cc1PyfWy.s:887    .text.HAL_UART_DMAStop:00000000 $t
     /tmp/cc1PyfWy.s:892    .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/cc1PyfWy.s:967    .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/cc1PyfWy.s:972    .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc1PyfWy.s:1050   .text.HAL_UART_Transmit:00000000 $t
     /tmp/cc1PyfWy.s:1055   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/cc1PyfWy.s:1214   .text.HAL_UART_Receive:00000000 $t
     /tmp/cc1PyfWy.s:1219   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/cc1PyfWy.s:1417   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/cc1PyfWy.s:1422   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/cc1PyfWy.s:1435   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/cc1PyfWy.s:1487   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/cc1PyfWy.s:1491   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/cc1PyfWy.s:1521   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/cc1PyfWy.s:1526   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc1PyfWy.s:1539   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/cc1PyfWy.s:1567   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/cc1PyfWy.s:1572   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/cc1PyfWy.s:1585   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/cc1PyfWy.s:1642   .text.UART_Receive_IT:00000000 $t
     /tmp/cc1PyfWy.s:1646   .text.UART_Receive_IT:00000000 UART_Receive_IT
     /tmp/cc1PyfWy.s:1750   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/cc1PyfWy.s:1755   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc1PyfWy.s:1768   .text.UART_DMARxHalfCplt:00000000 $t
ARM GAS  /tmp/cc1PyfWy.s 			page 117


     /tmp/cc1PyfWy.s:1796   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/cc1PyfWy.s:1801   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/cc1PyfWy.s:1814   .text.UART_DMAError:00000000 $t
     /tmp/cc1PyfWy.s:1883   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/cc1PyfWy.s:1888   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/cc1PyfWy.s:2119   .text.HAL_UART_IRQHandler:00000130 $d
     /tmp/cc1PyfWy.s:2128   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/cc1PyfWy.s:2124   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/cc1PyfWy.s:2156   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/cc1PyfWy.s:2161   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc1PyfWy.s:2179   .text.HAL_UART_GetState:00000000 $t
     /tmp/cc1PyfWy.s:2184   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/cc1PyfWy.s:2206   .text.HAL_UART_GetError:00000000 $t
     /tmp/cc1PyfWy.s:2211   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
     /tmp/cc1PyfWy.s:2228   .text.UART_SetConfig:00000000 $t
     /tmp/cc1PyfWy.s:2233   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/cc1PyfWy.s:2301   .text.UART_SetConfig:0000005a $d
     /tmp/cc1PyfWy.s:2305   .text.UART_SetConfig:0000005e $t
     /tmp/cc1PyfWy.s:2339   .text.UART_SetConfig:00000088 $d
     /tmp/cc1PyfWy.s:2651   .text.UART_SetConfig:00000234 $d
     /tmp/cc1PyfWy.s:2736   .text.UART_SetConfig:000002a4 $d
     /tmp/cc1PyfWy.s:2749   .text.UART_SetConfig:000002cc $t
     /tmp/cc1PyfWy.s:2773   .text.UART_SetConfig:000002e8 $d
     /tmp/cc1PyfWy.s:2863   .text.UART_SetConfig:00000360 $d
     /tmp/cc1PyfWy.s:2868   .text.UART_AdvFeatureConfig:00000000 $t
     /tmp/cc1PyfWy.s:2873   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
     /tmp/cc1PyfWy.s:2993   .text.UART_CheckIdleState:00000000 $t
     /tmp/cc1PyfWy.s:2998   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/cc1PyfWy.s:3064   .text.HAL_UART_Init:00000000 $t
     /tmp/cc1PyfWy.s:3069   .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/cc1PyfWy.s:3160   .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/cc1PyfWy.s:3165   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/cc1PyfWy.s:3262   .text.HAL_LIN_Init:00000000 $t
     /tmp/cc1PyfWy.s:3267   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     /tmp/cc1PyfWy.s:3378   .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/cc1PyfWy.s:3383   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/cc1PyfWy.s:3500   .text.HAL_RS485Ex_Init:00000000 $t
     /tmp/cc1PyfWy.s:3505   .text.HAL_RS485Ex_Init:00000000 HAL_RS485Ex_Init
     /tmp/cc1PyfWy.s:3629   .text.HAL_RS485Ex_Init:00000088 $d
     /tmp/cc1PyfWy.s:3634   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
     /tmp/cc1PyfWy.s:3639   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc1PyfWy.s:3684   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
     /tmp/cc1PyfWy.s:3689   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cc1PyfWy.s:3734   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/cc1PyfWy.s:3739   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc1PyfWy.s:3788   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/cc1PyfWy.s:3793   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc1PyfWy.s:3842   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/cc1PyfWy.s:3847   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/cc1PyfWy.s:3891   .text.HAL_MultiProcessorEx_AddressLength_Set:00000000 $t
     /tmp/cc1PyfWy.s:3896   .text.HAL_MultiProcessorEx_AddressLength_Set:00000000 HAL_MultiProcessorEx_AddressLength_Set
                     .debug_frame:00000010 $d
     /tmp/cc1PyfWy.s:2352   .text.UART_SetConfig:00000095 $d
     /tmp/cc1PyfWy.s:2352   .text.UART_SetConfig:00000096 $t
     /tmp/cc1PyfWy.s:2660   .text.UART_SetConfig:0000023d $d
     /tmp/cc1PyfWy.s:2660   .text.UART_SetConfig:0000023e $t
     /tmp/cc1PyfWy.s:2782   .text.UART_SetConfig:000002f1 $d
ARM GAS  /tmp/cc1PyfWy.s 			page 118


     /tmp/cc1PyfWy.s:2782   .text.UART_SetConfig:000002f2 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_GetTick
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
