ARM GAS  /tmp/ccWq92bU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f7xx_hal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	2
  21              		.weak	HAL_MspInit
  22              		.thumb
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB142:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
ARM GAS  /tmp/ccWq92bU.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.2.6
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x02) /*!< [23:16] sub1 version */
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x06) /*!< [15:8]  sub2 version */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Variables
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
ARM GAS  /tmp/ccWq92bU.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
ARM GAS  /tmp/ccWq92bU.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCLERATOR_ENABLE != 0)
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    __HAL_FLASH_ART_ENABLE();
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCLERATOR_ENABLE */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
ARM GAS  /tmp/ccWq92bU.s 			page 5


 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  28              		.loc 1 214 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE142:
  37 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	2
  39              		.weak	HAL_MspDeInit
  40              		.thumb
  41              		.thumb_func
  43              	HAL_MspDeInit:
  44              	.LFB143:
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  45              		.loc 1 225 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE143:
  54 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  55              		.align	2
  56              		.global	HAL_DeInit
  57              		.thumb
  58              		.thumb_func
  60              	HAL_DeInit:
  61              	.LFB141:
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  62              		.loc 1 185 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccWq92bU.s 			page 6


  65              		@ frame_needed = 0, uses_anonymous_args = 0
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 185 0
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  72              		.loc 1 187 0
  73 0002 094B     		ldr	r3, .L5
  74 0004 4FF0FF32 		mov	r2, #-1
  75 0008 1A62     		str	r2, [r3, #32]
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  76              		.loc 1 188 0
  77 000a 0024     		movs	r4, #0
  78 000c 1C62     		str	r4, [r3, #32]
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  79              		.loc 1 190 0
  80 000e 5A62     		str	r2, [r3, #36]
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  81              		.loc 1 191 0
  82 0010 5C62     		str	r4, [r3, #36]
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  83              		.loc 1 193 0
  84 0012 1A61     		str	r2, [r3, #16]
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  85              		.loc 1 194 0
  86 0014 1C61     		str	r4, [r3, #16]
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  87              		.loc 1 196 0
  88 0016 5A61     		str	r2, [r3, #20]
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  89              		.loc 1 197 0
  90 0018 5C61     		str	r4, [r3, #20]
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  91              		.loc 1 199 0
  92 001a 9A61     		str	r2, [r3, #24]
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  93              		.loc 1 200 0
  94 001c 9C61     		str	r4, [r3, #24]
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
  95              		.loc 1 203 0
  96 001e FFF7FEFF 		bl	HAL_MspDeInit
  97              	.LVL0:
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  98              		.loc 1 207 0
  99 0022 2046     		mov	r0, r4
 100 0024 10BD     		pop	{r4, pc}
 101              	.L6:
 102 0026 00BF     		.align	2
 103              	.L5:
 104 0028 00380240 		.word	1073887232
 105              		.cfi_endproc
 106              	.LFE141:
 108              		.section	.text.HAL_InitTick,"ax",%progbits
 109              		.align	2
ARM GAS  /tmp/ccWq92bU.s 			page 7


 110              		.weak	HAL_InitTick
 111              		.thumb
 112              		.thumb_func
 114              	HAL_InitTick:
 115              	.LFB144:
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 116              		.loc 1 248 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              	.LVL1:
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI1:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 126 0002 0446     		mov	r4, r0
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 127              		.loc 1 250 0
 128 0004 0E4B     		ldr	r3, .L12
 129 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 130              	.LVL2:
 131 0008 4FF47A73 		mov	r3, #1000
 132 000c B3FBF0F3 		udiv	r3, r3, r0
 133 0010 0C4A     		ldr	r2, .L12+4
 134 0012 1068     		ldr	r0, [r2]
 135 0014 B0FBF3F0 		udiv	r0, r0, r3
 136 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 137              	.LVL3:
 138 001c 58B9     		cbnz	r0, .L9
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/ccWq92bU.s 			page 8


 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 139              		.loc 1 256 0
 140 001e 0F2C     		cmp	r4, #15
 141 0020 0BD8     		bhi	.L10
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 142              		.loc 1 258 0
 143 0022 4FF0FF30 		mov	r0, #-1
 144 0026 2146     		mov	r1, r4
 145 0028 0022     		movs	r2, #0
 146 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 147              	.LVL4:
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 148              		.loc 1 259 0
 149 002e 064B     		ldr	r3, .L12+8
 150 0030 1C60     		str	r4, [r3]
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 151              		.loc 1 267 0
 152 0032 0020     		movs	r0, #0
 153 0034 10BD     		pop	{r4, pc}
 154              	.LVL5:
 155              	.L9:
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 156              		.loc 1 252 0
 157 0036 0120     		movs	r0, #1
 158 0038 10BD     		pop	{r4, pc}
 159              	.LVL6:
 160              	.L10:
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 161              		.loc 1 263 0
 162 003a 0120     		movs	r0, #1
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 163              		.loc 1 268 0
 164 003c 10BD     		pop	{r4, pc}
 165              	.LVL7:
 166              	.L13:
 167 003e 00BF     		.align	2
 168              	.L12:
 169 0040 00000000 		.word	.LANCHOR0
 170 0044 00000000 		.word	SystemCoreClock
 171 0048 00000000 		.word	.LANCHOR1
 172              		.cfi_endproc
 173              	.LFE144:
 175              		.section	.text.HAL_Init,"ax",%progbits
 176              		.align	2
 177              		.global	HAL_Init
 178              		.thumb
 179              		.thumb_func
 181              	HAL_Init:
ARM GAS  /tmp/ccWq92bU.s 			page 9


 182              	.LFB140:
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 183              		.loc 1 155 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 08B5     		push	{r3, lr}
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 192              		.loc 1 167 0
 193 0002 0320     		movs	r0, #3
 194 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 195              	.LVL8:
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 196              		.loc 1 170 0
 197 0008 0F20     		movs	r0, #15
 198 000a FFF7FEFF 		bl	HAL_InitTick
 199              	.LVL9:
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 200              		.loc 1 173 0
 201 000e FFF7FEFF 		bl	HAL_MspInit
 202              	.LVL10:
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 203              		.loc 1 177 0
 204 0012 0020     		movs	r0, #0
 205 0014 08BD     		pop	{r3, pc}
 206              		.cfi_endproc
 207              	.LFE140:
 209 0016 00BF     		.section	.text.HAL_IncTick,"ax",%progbits
 210              		.align	2
 211              		.weak	HAL_IncTick
 212              		.thumb
 213              		.thumb_func
 215              	HAL_IncTick:
 216              	.LFB145:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
ARM GAS  /tmp/ccWq92bU.s 			page 10


 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 217              		.loc 1 307 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 222              		.loc 1 308 0
 223 0000 034A     		ldr	r2, .L17
 224 0002 1368     		ldr	r3, [r2]
 225 0004 0349     		ldr	r1, .L17+4
 226 0006 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 227 0008 0B44     		add	r3, r3, r1
 228 000a 1360     		str	r3, [r2]
 229 000c 7047     		bx	lr
 230              	.L18:
 231 000e 00BF     		.align	2
 232              	.L17:
 233 0010 00000000 		.word	uwTick
 234 0014 00000000 		.word	.LANCHOR0
 235              		.cfi_endproc
 236              	.LFE145:
 238              		.section	.text.HAL_GetTick,"ax",%progbits
 239              		.align	2
 240              		.weak	HAL_GetTick
 241              		.thumb
 242              		.thumb_func
 244              	HAL_GetTick:
 245              	.LFB146:
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
ARM GAS  /tmp/ccWq92bU.s 			page 11


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 246              		.loc 1 318 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 251              		.loc 1 319 0
 252 0000 014B     		ldr	r3, .L20
 253 0002 1868     		ldr	r0, [r3]
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 254              		.loc 1 320 0
 255 0004 7047     		bx	lr
 256              	.L21:
 257 0006 00BF     		.align	2
 258              	.L20:
 259 0008 00000000 		.word	uwTick
 260              		.cfi_endproc
 261              	.LFE146:
 263              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 264              		.align	2
 265              		.global	HAL_GetTickPrio
 266              		.thumb
 267              		.thumb_func
 269              	HAL_GetTickPrio:
 270              	.LFB147:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 271              		.loc 1 327 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 276              		.loc 1 329 0
 277 0000 014B     		ldr	r3, .L23
 278 0002 1868     		ldr	r0, [r3]
 279 0004 7047     		bx	lr
 280              	.L24:
 281 0006 00BF     		.align	2
 282              	.L23:
 283 0008 00000000 		.word	.LANCHOR1
 284              		.cfi_endproc
 285              	.LFE147:
 287              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 288              		.align	2
 289              		.global	HAL_SetTickFreq
 290              		.thumb
 291              		.thumb_func
 293              	HAL_SetTickFreq:
 294              	.LFB148:
ARM GAS  /tmp/ccWq92bU.s 			page 12


 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 295              		.loc 1 336 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              	.LVL11:
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 305              	.LVL12:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 306              		.loc 1 340 0
 307 0002 064B     		ldr	r3, .L29
 308 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309 0006 8342     		cmp	r3, r0
 310 0008 06D0     		beq	.L27
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 311              		.loc 1 342 0
 312 000a 044B     		ldr	r3, .L29
 313 000c 1870     		strb	r0, [r3]
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 314              		.loc 1 345 0
 315 000e 044B     		ldr	r3, .L29+4
 316 0010 1868     		ldr	r0, [r3]
 317              	.LVL13:
 318 0012 FFF7FEFF 		bl	HAL_InitTick
 319              	.LVL14:
 320 0016 08BD     		pop	{r3, pc}
 321              	.LVL15:
 322              	.L27:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 323              		.loc 1 337 0
 324 0018 0020     		movs	r0, #0
 325              	.LVL16:
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 326              		.loc 1 349 0
 327 001a 08BD     		pop	{r3, pc}
 328              	.L30:
 329              		.align	2
 330              	.L29:
ARM GAS  /tmp/ccWq92bU.s 			page 13


 331 001c 00000000 		.word	.LANCHOR0
 332 0020 00000000 		.word	.LANCHOR1
 333              		.cfi_endproc
 334              	.LFE148:
 336              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 337              		.align	2
 338              		.global	HAL_GetTickFreq
 339              		.thumb
 340              		.thumb_func
 342              	HAL_GetTickFreq:
 343              	.LFB149:
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 344              		.loc 1 356 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 349              		.loc 1 358 0
 350 0000 014B     		ldr	r3, .L32
 351 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 352 0004 7047     		bx	lr
 353              	.L33:
 354 0006 00BF     		.align	2
 355              	.L32:
 356 0008 00000000 		.word	.LANCHOR0
 357              		.cfi_endproc
 358              	.LFE149:
 360              		.section	.text.HAL_Delay,"ax",%progbits
 361              		.align	2
 362              		.weak	HAL_Delay
 363              		.thumb
 364              		.thumb_func
 366              	HAL_Delay:
 367              	.LFB150:
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 368              		.loc 1 372 0
ARM GAS  /tmp/ccWq92bU.s 			page 14


 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              	.LVL17:
 373 0000 38B5     		push	{r3, r4, r5, lr}
 374              	.LCFI4:
 375              		.cfi_def_cfa_offset 16
 376              		.cfi_offset 3, -16
 377              		.cfi_offset 4, -12
 378              		.cfi_offset 5, -8
 379              		.cfi_offset 14, -4
 380 0002 0446     		mov	r4, r0
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 381              		.loc 1 373 0
 382 0004 FFF7FEFF 		bl	HAL_GetTick
 383              	.LVL18:
 384 0008 0546     		mov	r5, r0
 385              	.LVL19:
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 386              		.loc 1 377 0
 387 000a B4F1FF3F 		cmp	r4, #-1
 388 000e 02D0     		beq	.L36
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 389              		.loc 1 379 0
 390 0010 044B     		ldr	r3, .L38
 391 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 0014 1C44     		add	r4, r4, r3
 393              	.LVL20:
 394              	.L36:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 395              		.loc 1 382 0 discriminator 1
 396 0016 FFF7FEFF 		bl	HAL_GetTick
 397              	.LVL21:
 398 001a 401B     		subs	r0, r0, r5
 399 001c 8442     		cmp	r4, r0
 400 001e FAD8     		bhi	.L36
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 401              		.loc 1 385 0
 402 0020 38BD     		pop	{r3, r4, r5, pc}
 403              	.LVL22:
 404              	.L39:
 405 0022 00BF     		.align	2
 406              	.L38:
 407 0024 00000000 		.word	.LANCHOR0
 408              		.cfi_endproc
 409              	.LFE150:
 411              		.section	.text.HAL_SuspendTick,"ax",%progbits
 412              		.align	2
 413              		.weak	HAL_SuspendTick
ARM GAS  /tmp/ccWq92bU.s 			page 15


 414              		.thumb
 415              		.thumb_func
 417              	HAL_SuspendTick:
 418              	.LFB151:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 419              		.loc 1 398 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 424              		.loc 1 400 0
 425 0000 024A     		ldr	r2, .L41
 426 0002 1368     		ldr	r3, [r2]
 427 0004 23F00203 		bic	r3, r3, #2
 428 0008 1360     		str	r3, [r2]
 429 000a 7047     		bx	lr
 430              	.L42:
 431              		.align	2
 432              	.L41:
 433 000c 10E000E0 		.word	-536813552
 434              		.cfi_endproc
 435              	.LFE151:
 437              		.section	.text.HAL_ResumeTick,"ax",%progbits
 438              		.align	2
 439              		.weak	HAL_ResumeTick
 440              		.thumb
 441              		.thumb_func
 443              	HAL_ResumeTick:
 444              	.LFB152:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
ARM GAS  /tmp/ccWq92bU.s 			page 16


 445              		.loc 1 414 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 450              		.loc 1 416 0
 451 0000 024A     		ldr	r2, .L44
 452 0002 1368     		ldr	r3, [r2]
 453 0004 43F00203 		orr	r3, r3, #2
 454 0008 1360     		str	r3, [r2]
 455 000a 7047     		bx	lr
 456              	.L45:
 457              		.align	2
 458              	.L44:
 459 000c 10E000E0 		.word	-536813552
 460              		.cfi_endproc
 461              	.LFE152:
 463              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 464              		.align	2
 465              		.global	HAL_GetHalVersion
 466              		.thumb
 467              		.thumb_func
 469              	HAL_GetHalVersion:
 470              	.LFB153:
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 471              		.loc 1 424 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  return __STM32F7xx_HAL_VERSION;
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 476              		.loc 1 426 0
 477 0000 0048     		ldr	r0, .L47
 478 0002 7047     		bx	lr
 479              	.L48:
 480              		.align	2
 481              	.L47:
 482 0004 00060201 		.word	16909824
 483              		.cfi_endproc
 484              	.LFE153:
 486              		.section	.text.HAL_GetREVID,"ax",%progbits
 487              		.align	2
 488              		.global	HAL_GetREVID
 489              		.thumb
 490              		.thumb_func
 492              	HAL_GetREVID:
 493              	.LFB154:
ARM GAS  /tmp/ccWq92bU.s 			page 17


 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 494              		.loc 1 433 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 499              		.loc 1 434 0
 500 0000 014B     		ldr	r3, .L50
 501 0002 1868     		ldr	r0, [r3]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 502              		.loc 1 435 0
 503 0004 000C     		lsrs	r0, r0, #16
 504 0006 7047     		bx	lr
 505              	.L51:
 506              		.align	2
 507              	.L50:
 508 0008 002004E0 		.word	-536600576
 509              		.cfi_endproc
 510              	.LFE154:
 512              		.section	.text.HAL_GetDEVID,"ax",%progbits
 513              		.align	2
 514              		.global	HAL_GetDEVID
 515              		.thumb
 516              		.thumb_func
 518              	HAL_GetDEVID:
 519              	.LFB155:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 520              		.loc 1 442 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 525              		.loc 1 443 0
 526 0000 024B     		ldr	r3, .L53
 527 0002 1868     		ldr	r0, [r3]
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 528              		.loc 1 444 0
 529 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 530 0008 7047     		bx	lr
 531              	.L54:
 532 000a 00BF     		.align	2
 533              	.L53:
 534 000c 002004E0 		.word	-536600576
ARM GAS  /tmp/ccWq92bU.s 			page 18


 535              		.cfi_endproc
 536              	.LFE155:
 538              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 539              		.align	2
 540              		.global	HAL_GetUIDw0
 541              		.thumb
 542              		.thumb_func
 544              	HAL_GetUIDw0:
 545              	.LFB156:
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 546              		.loc 1 451 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 551              		.loc 1 453 0
 552 0000 014B     		ldr	r3, .L56
 553 0002 1868     		ldr	r0, [r3]
 554 0004 7047     		bx	lr
 555              	.L57:
 556 0006 00BF     		.align	2
 557              	.L56:
 558 0008 20F4F01F 		.word	535884832
 559              		.cfi_endproc
 560              	.LFE156:
 562              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 563              		.align	2
 564              		.global	HAL_GetUIDw1
 565              		.thumb
 566              		.thumb_func
 568              	HAL_GetUIDw1:
 569              	.LFB157:
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 570              		.loc 1 460 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 575              		.loc 1 462 0
 576 0000 014B     		ldr	r3, .L59
 577 0002 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccWq92bU.s 			page 19


 578 0004 7047     		bx	lr
 579              	.L60:
 580 0006 00BF     		.align	2
 581              	.L59:
 582 0008 24F4F01F 		.word	535884836
 583              		.cfi_endproc
 584              	.LFE157:
 586              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 587              		.align	2
 588              		.global	HAL_GetUIDw2
 589              		.thumb
 590              		.thumb_func
 592              	HAL_GetUIDw2:
 593              	.LFB158:
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 594              		.loc 1 469 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 599              		.loc 1 471 0
 600 0000 014B     		ldr	r3, .L62
 601 0002 1868     		ldr	r0, [r3]
 602 0004 7047     		bx	lr
 603              	.L63:
 604 0006 00BF     		.align	2
 605              	.L62:
 606 0008 28F4F01F 		.word	535884840
 607              		.cfi_endproc
 608              	.LFE158:
 610              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 611              		.align	2
 612              		.global	HAL_DBGMCU_EnableDBGSleepMode
 613              		.thumb
 614              		.thumb_func
 616              	HAL_DBGMCU_EnableDBGSleepMode:
 617              	.LFB159:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 618              		.loc 1 478 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
ARM GAS  /tmp/ccWq92bU.s 			page 20


 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 623              		.loc 1 479 0
 624 0000 024A     		ldr	r2, .L65
 625 0002 5368     		ldr	r3, [r2, #4]
 626 0004 43F00103 		orr	r3, r3, #1
 627 0008 5360     		str	r3, [r2, #4]
 628 000a 7047     		bx	lr
 629              	.L66:
 630              		.align	2
 631              	.L65:
 632 000c 002004E0 		.word	-536600576
 633              		.cfi_endproc
 634              	.LFE159:
 636              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 637              		.align	2
 638              		.global	HAL_DBGMCU_DisableDBGSleepMode
 639              		.thumb
 640              		.thumb_func
 642              	HAL_DBGMCU_DisableDBGSleepMode:
 643              	.LFB160:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 644              		.loc 1 487 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 649              		.loc 1 488 0
 650 0000 024A     		ldr	r2, .L68
 651 0002 5368     		ldr	r3, [r2, #4]
 652 0004 23F00103 		bic	r3, r3, #1
 653 0008 5360     		str	r3, [r2, #4]
 654 000a 7047     		bx	lr
 655              	.L69:
 656              		.align	2
 657              	.L68:
 658 000c 002004E0 		.word	-536600576
 659              		.cfi_endproc
 660              	.LFE160:
 662              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 663              		.align	2
 664              		.global	HAL_DBGMCU_EnableDBGStopMode
 665              		.thumb
 666              		.thumb_func
 668              	HAL_DBGMCU_EnableDBGStopMode:
 669              	.LFB161:
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
ARM GAS  /tmp/ccWq92bU.s 			page 21


 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 670              		.loc 1 496 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 675              		.loc 1 497 0
 676 0000 024A     		ldr	r2, .L71
 677 0002 5368     		ldr	r3, [r2, #4]
 678 0004 43F00203 		orr	r3, r3, #2
 679 0008 5360     		str	r3, [r2, #4]
 680 000a 7047     		bx	lr
 681              	.L72:
 682              		.align	2
 683              	.L71:
 684 000c 002004E0 		.word	-536600576
 685              		.cfi_endproc
 686              	.LFE161:
 688              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 689              		.align	2
 690              		.global	HAL_DBGMCU_DisableDBGStopMode
 691              		.thumb
 692              		.thumb_func
 694              	HAL_DBGMCU_DisableDBGStopMode:
 695              	.LFB162:
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 696              		.loc 1 505 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 701              		.loc 1 506 0
 702 0000 024A     		ldr	r2, .L74
 703 0002 5368     		ldr	r3, [r2, #4]
 704 0004 23F00203 		bic	r3, r3, #2
 705 0008 5360     		str	r3, [r2, #4]
 706 000a 7047     		bx	lr
 707              	.L75:
 708              		.align	2
 709              	.L74:
 710 000c 002004E0 		.word	-536600576
 711              		.cfi_endproc
 712              	.LFE162:
 714              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 715              		.align	2
ARM GAS  /tmp/ccWq92bU.s 			page 22


 716              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 717              		.thumb
 718              		.thumb_func
 720              	HAL_DBGMCU_EnableDBGStandbyMode:
 721              	.LFB163:
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 722              		.loc 1 514 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 727              		.loc 1 515 0
 728 0000 024A     		ldr	r2, .L77
 729 0002 5368     		ldr	r3, [r2, #4]
 730 0004 43F00403 		orr	r3, r3, #4
 731 0008 5360     		str	r3, [r2, #4]
 732 000a 7047     		bx	lr
 733              	.L78:
 734              		.align	2
 735              	.L77:
 736 000c 002004E0 		.word	-536600576
 737              		.cfi_endproc
 738              	.LFE163:
 740              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 741              		.align	2
 742              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 743              		.thumb
 744              		.thumb_func
 746              	HAL_DBGMCU_DisableDBGStandbyMode:
 747              	.LFB164:
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 748              		.loc 1 523 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 753              		.loc 1 524 0
 754 0000 024A     		ldr	r2, .L80
 755 0002 5368     		ldr	r3, [r2, #4]
 756 0004 23F00403 		bic	r3, r3, #4
 757 0008 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccWq92bU.s 			page 23


 758 000a 7047     		bx	lr
 759              	.L81:
 760              		.align	2
 761              	.L80:
 762 000c 002004E0 		.word	-536600576
 763              		.cfi_endproc
 764              	.LFE164:
 766              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 767              		.align	2
 768              		.global	HAL_EnableCompensationCell
 769              		.thumb
 770              		.thumb_func
 772              	HAL_EnableCompensationCell:
 773              	.LFB165:
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 774              		.loc 1 534 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
 779              		.loc 1 535 0
 780 0000 024A     		ldr	r2, .L83
 781 0002 136A     		ldr	r3, [r2, #32]
 782 0004 43F00103 		orr	r3, r3, #1
 783 0008 1362     		str	r3, [r2, #32]
 784 000a 7047     		bx	lr
 785              	.L84:
 786              		.align	2
 787              	.L83:
 788 000c 00380140 		.word	1073821696
 789              		.cfi_endproc
 790              	.LFE165:
 792              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 793              		.align	2
 794              		.global	HAL_DisableCompensationCell
 795              		.thumb
 796              		.thumb_func
 798              	HAL_DisableCompensationCell:
 799              	.LFB166:
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
ARM GAS  /tmp/ccWq92bU.s 			page 24


 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 800              		.loc 1 545 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
 805              		.loc 1 546 0
 806 0000 024A     		ldr	r2, .L86
 807 0002 136A     		ldr	r3, [r2, #32]
 808 0004 23F00103 		bic	r3, r3, #1
 809 0008 1362     		str	r3, [r2, #32]
 810 000a 7047     		bx	lr
 811              	.L87:
 812              		.align	2
 813              	.L86:
 814 000c 00380140 		.word	1073821696
 815              		.cfi_endproc
 816              	.LFE166:
 818              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 819              		.align	2
 820              		.global	HAL_EnableFMCMemorySwapping
 821              		.thumb
 822              		.thumb_func
 824              	HAL_EnableFMCMemorySwapping:
 825              	.LFB167:
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 826              		.loc 1 558 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
 831              		.loc 1 559 0
 832 0000 024A     		ldr	r2, .L89
 833 0002 1368     		ldr	r3, [r2]
 834 0004 43F48063 		orr	r3, r3, #1024
 835 0008 1360     		str	r3, [r2]
 836 000a 7047     		bx	lr
 837              	.L90:
 838              		.align	2
 839              	.L89:
 840 000c 00380140 		.word	1073821696
 841              		.cfi_endproc
 842              	.LFE167:
ARM GAS  /tmp/ccWq92bU.s 			page 25


 844              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 845              		.align	2
 846              		.global	HAL_DisableFMCMemorySwapping
 847              		.thumb
 848              		.thumb_func
 850              	HAL_DisableFMCMemorySwapping:
 851              	.LFB168:
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 852              		.loc 1 571 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 857              		.loc 1 573 0
 858 0000 024A     		ldr	r2, .L92
 859 0002 1368     		ldr	r3, [r2]
 860 0004 23F44063 		bic	r3, r3, #3072
 861 0008 1360     		str	r3, [r2]
 862 000a 7047     		bx	lr
 863              	.L93:
 864              		.align	2
 865              	.L92:
 866 000c 00380140 		.word	1073821696
 867              		.cfi_endproc
 868              	.LFE168:
 870              		.section	.text.HAL_EnableMemorySwappingBank,"ax",%progbits
 871              		.align	2
 872              		.global	HAL_EnableMemorySwappingBank
 873              		.thumb
 874              		.thumb_func
 876              	HAL_EnableMemorySwappingBank:
 877              	.LFB169:
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if defined (STM32F765xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Enable the Internal FLASH Bank Swapping.
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   Flash Bank2 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank1 mapped at 0x08100000 (AXI) (aliased at 0x00300000 (TCM))   
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
ARM GAS  /tmp/ccWq92bU.s 			page 26


 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableMemorySwappingBank(void)
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 878              		.loc 1 588 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 883              		.loc 1 589 0
 884 0000 024A     		ldr	r2, .L95
 885 0002 1368     		ldr	r3, [r2]
 886 0004 43F48073 		orr	r3, r3, #256
 887 0008 1360     		str	r3, [r2]
 888 000a 7047     		bx	lr
 889              	.L96:
 890              		.align	2
 891              	.L95:
 892 000c 00380140 		.word	1073821696
 893              		.cfi_endproc
 894              	.LFE169:
 896              		.section	.text.HAL_DisableMemorySwappingBank,"ax",%progbits
 897              		.align	2
 898              		.global	HAL_DisableMemorySwappingBank
 899              		.thumb
 900              		.thumb_func
 902              	HAL_DisableMemorySwappingBank:
 903              	.LFB170:
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Disable the Internal FLASH Bank Swapping.
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   The default state : Flash Bank1 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank2 mapped at 0x08100000 (AXI)( aliased at 0x00300000 (TCM)) 
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *           
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableMemorySwappingBank(void)
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 904              		.loc 1 603 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 909              		.loc 1 604 0
 910 0000 024A     		ldr	r2, .L98
 911 0002 1368     		ldr	r3, [r2]
 912 0004 23F48073 		bic	r3, r3, #256
 913 0008 1360     		str	r3, [r2]
 914 000a 7047     		bx	lr
 915              	.L99:
 916              		.align	2
 917              	.L98:
ARM GAS  /tmp/ccWq92bU.s 			page 27


 918 000c 00380140 		.word	1073821696
 919              		.cfi_endproc
 920              	.LFE170:
 922              		.global	uwTickFreq
 923              		.global	uwTickPrio
 924              		.comm	uwTick,4,4
 925              		.section	.data.uwTickPrio,"aw",%progbits
 926              		.align	2
 927              		.set	.LANCHOR1,. + 0
 930              	uwTickPrio:
 931 0000 10000000 		.word	16
 932              		.section	.data.uwTickFreq,"aw",%progbits
 933              		.set	.LANCHOR0,. + 0
 936              	uwTickFreq:
 937 0000 01       		.byte	1
 938              		.text
 939              	.Letext0:
 940              		.file 2 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_ty
 941              		.file 3 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 942              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 943              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 944              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 945              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 946              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 947              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccWq92bU.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal.c
     /tmp/ccWq92bU.s:20     .text.HAL_MspInit:00000000 $t
     /tmp/ccWq92bU.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccWq92bU.s:38     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccWq92bU.s:43     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccWq92bU.s:55     .text.HAL_DeInit:00000000 $t
     /tmp/ccWq92bU.s:60     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccWq92bU.s:104    .text.HAL_DeInit:00000028 $d
     /tmp/ccWq92bU.s:109    .text.HAL_InitTick:00000000 $t
     /tmp/ccWq92bU.s:114    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccWq92bU.s:169    .text.HAL_InitTick:00000040 $d
     /tmp/ccWq92bU.s:176    .text.HAL_Init:00000000 $t
     /tmp/ccWq92bU.s:181    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccWq92bU.s:210    .text.HAL_IncTick:00000000 $t
     /tmp/ccWq92bU.s:215    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccWq92bU.s:233    .text.HAL_IncTick:00000010 $d
                            *COM*:00000004 uwTick
     /tmp/ccWq92bU.s:239    .text.HAL_GetTick:00000000 $t
     /tmp/ccWq92bU.s:244    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccWq92bU.s:259    .text.HAL_GetTick:00000008 $d
     /tmp/ccWq92bU.s:264    .text.HAL_GetTickPrio:00000000 $t
     /tmp/ccWq92bU.s:269    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
     /tmp/ccWq92bU.s:283    .text.HAL_GetTickPrio:00000008 $d
     /tmp/ccWq92bU.s:288    .text.HAL_SetTickFreq:00000000 $t
     /tmp/ccWq92bU.s:293    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
     /tmp/ccWq92bU.s:331    .text.HAL_SetTickFreq:0000001c $d
     /tmp/ccWq92bU.s:337    .text.HAL_GetTickFreq:00000000 $t
     /tmp/ccWq92bU.s:342    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
     /tmp/ccWq92bU.s:356    .text.HAL_GetTickFreq:00000008 $d
     /tmp/ccWq92bU.s:361    .text.HAL_Delay:00000000 $t
     /tmp/ccWq92bU.s:366    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccWq92bU.s:407    .text.HAL_Delay:00000024 $d
     /tmp/ccWq92bU.s:412    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccWq92bU.s:417    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccWq92bU.s:433    .text.HAL_SuspendTick:0000000c $d
     /tmp/ccWq92bU.s:438    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccWq92bU.s:443    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccWq92bU.s:459    .text.HAL_ResumeTick:0000000c $d
     /tmp/ccWq92bU.s:464    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccWq92bU.s:469    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccWq92bU.s:482    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccWq92bU.s:487    .text.HAL_GetREVID:00000000 $t
     /tmp/ccWq92bU.s:492    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccWq92bU.s:508    .text.HAL_GetREVID:00000008 $d
     /tmp/ccWq92bU.s:513    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccWq92bU.s:518    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccWq92bU.s:534    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccWq92bU.s:539    .text.HAL_GetUIDw0:00000000 $t
     /tmp/ccWq92bU.s:544    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
     /tmp/ccWq92bU.s:558    .text.HAL_GetUIDw0:00000008 $d
     /tmp/ccWq92bU.s:563    .text.HAL_GetUIDw1:00000000 $t
     /tmp/ccWq92bU.s:568    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
     /tmp/ccWq92bU.s:582    .text.HAL_GetUIDw1:00000008 $d
     /tmp/ccWq92bU.s:587    .text.HAL_GetUIDw2:00000000 $t
     /tmp/ccWq92bU.s:592    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
     /tmp/ccWq92bU.s:606    .text.HAL_GetUIDw2:00000008 $d
ARM GAS  /tmp/ccWq92bU.s 			page 29


     /tmp/ccWq92bU.s:611    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
     /tmp/ccWq92bU.s:616    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccWq92bU.s:632    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
     /tmp/ccWq92bU.s:637    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
     /tmp/ccWq92bU.s:642    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccWq92bU.s:658    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
     /tmp/ccWq92bU.s:663    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccWq92bU.s:668    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccWq92bU.s:684    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccWq92bU.s:689    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccWq92bU.s:694    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccWq92bU.s:710    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccWq92bU.s:715    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccWq92bU.s:720    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccWq92bU.s:736    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccWq92bU.s:741    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccWq92bU.s:746    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccWq92bU.s:762    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
     /tmp/ccWq92bU.s:767    .text.HAL_EnableCompensationCell:00000000 $t
     /tmp/ccWq92bU.s:772    .text.HAL_EnableCompensationCell:00000000 HAL_EnableCompensationCell
     /tmp/ccWq92bU.s:788    .text.HAL_EnableCompensationCell:0000000c $d
     /tmp/ccWq92bU.s:793    .text.HAL_DisableCompensationCell:00000000 $t
     /tmp/ccWq92bU.s:798    .text.HAL_DisableCompensationCell:00000000 HAL_DisableCompensationCell
     /tmp/ccWq92bU.s:814    .text.HAL_DisableCompensationCell:0000000c $d
     /tmp/ccWq92bU.s:819    .text.HAL_EnableFMCMemorySwapping:00000000 $t
     /tmp/ccWq92bU.s:824    .text.HAL_EnableFMCMemorySwapping:00000000 HAL_EnableFMCMemorySwapping
     /tmp/ccWq92bU.s:840    .text.HAL_EnableFMCMemorySwapping:0000000c $d
     /tmp/ccWq92bU.s:845    .text.HAL_DisableFMCMemorySwapping:00000000 $t
     /tmp/ccWq92bU.s:850    .text.HAL_DisableFMCMemorySwapping:00000000 HAL_DisableFMCMemorySwapping
     /tmp/ccWq92bU.s:866    .text.HAL_DisableFMCMemorySwapping:0000000c $d
     /tmp/ccWq92bU.s:871    .text.HAL_EnableMemorySwappingBank:00000000 $t
     /tmp/ccWq92bU.s:876    .text.HAL_EnableMemorySwappingBank:00000000 HAL_EnableMemorySwappingBank
     /tmp/ccWq92bU.s:892    .text.HAL_EnableMemorySwappingBank:0000000c $d
     /tmp/ccWq92bU.s:897    .text.HAL_DisableMemorySwappingBank:00000000 $t
     /tmp/ccWq92bU.s:902    .text.HAL_DisableMemorySwappingBank:00000000 HAL_DisableMemorySwappingBank
     /tmp/ccWq92bU.s:918    .text.HAL_DisableMemorySwappingBank:0000000c $d
     /tmp/ccWq92bU.s:936    .data.uwTickFreq:00000000 uwTickFreq
     /tmp/ccWq92bU.s:930    .data.uwTickPrio:00000000 uwTickPrio
     /tmp/ccWq92bU.s:926    .data.uwTickPrio:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
