ARM GAS  /tmp/ccILxYxn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f7xx_hal_dma.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DMA_SetConfig,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	DMA_SetConfig:
  25              	.LFB152:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @file    stm32f7xx_hal_dma.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *    
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + IO operation functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @verbatim     
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        and DMA requests.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Polling mode IO operation ***
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =================================
ARM GAS  /tmp/ccILxYxn.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      ===================================
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Select Callbacks functions using HAL_DMA_RegisterCallback()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case the DMA interrupt is configured 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          detection.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            a single access to a Word in the Memory).
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =============================================
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @endverbatim
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @attention
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * Redistribution and use in source and binary forms, with or without modification,
ARM GAS  /tmp/ccILxYxn.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * are permitted provided that the following conditions are met:
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      this list of conditions and the following disclaimer.
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      this list of conditions and the following disclaimer in the documentation
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      and/or other materials provided with the distribution.
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      may be used to endorse or promote products derived from this software
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      without specific prior written permission.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */ 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #include "stm32f7xx_hal.h"
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup STM32F7xx_HAL_Driver
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @defgroup DMA DMA
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief DMA HAL module driver
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** typedef struct
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t Reserved0;
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** } DMA_Base_Registers;
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  * @{
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  */
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    ((uint32_t)5)  /* 5 ms */
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
ARM GAS  /tmp/ccILxYxn.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */  
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     reference manual.
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
ARM GAS  /tmp/ccILxYxn.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      when FIFO mode is enabled */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Allocate lock resource */
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Change DMA peripheral state */
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the peripheral */
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout */
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_TIMEOUT;
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the CR register value */
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
ARM GAS  /tmp/ccILxYxn.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the FCR register value */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the FIFO threshold */
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_ERROR; 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the error code */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the DMA state */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccILxYxn.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_BUSY;
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR  = (uint32_t)0x00000021U;
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clean all callbacks */
ARM GAS  /tmp/ccILxYxn.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;  
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the error code */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the DMA state */
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim   
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       #####  IO operation functions  #####
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           Start DMA transfer with interrupt
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Abort DMA transfer
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Poll for transfer complete
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccILxYxn.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
ARM GAS  /tmp/ccILxYxn.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable Common interrupts*/
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                   
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        this single data is finished.  
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
ARM GAS  /tmp/ccILxYxn.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Check for the Timeout */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change the DMA state*/
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
ARM GAS  /tmp/ccILxYxn.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Set Abort State  */
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma          pointer to a DMA_HandleTypeDef structure that contains
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         This model could be used for debug purpose.
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* No transfer ongoing */
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Transfer Complete flag */
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
ARM GAS  /tmp/ccILxYxn.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Half Transfer Complete flag */
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the ISR register value */
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmpisr = regs->ISR;
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
ARM GAS  /tmp/ccILxYxn.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_ERROR;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer flag */
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval None
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t count = 0;
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccILxYxn.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the direct mode error flag */
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
ARM GAS  /tmp/ccILxYxn.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Half transfer callback */
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer complete flag */
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
ARM GAS  /tmp/ccILxYxn.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return;
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Process Unlocked */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Change the DMA state */
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Transfer complete callback */
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* manage error case */
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
ARM GAS  /tmp/ccILxYxn.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the stream */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       do
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if (++count > timeout)
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           break;
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Transfer error callback */
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Register callbacks
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to 
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */                      
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccILxYxn.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status =  HAL_ERROR;
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  UnRegister callbacks
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */              
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
ARM GAS  /tmp/ccILxYxn.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_ERROR;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                     ##### State and Errors functions #####
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
ARM GAS  /tmp/ccILxYxn.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This subsection provides functions allowing to
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Check the DMA state
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Get error code
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA state.
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL state
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Return the DMA error code
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval DMA Error Code
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  27              		.loc 1 1169 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccILxYxn.s 			page 22


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 30B4     		push	{r4, r5}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 5, -4
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear DBM bit */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
  38              		.loc 1 1171 0
  39 0002 0568     		ldr	r5, [r0]
  40 0004 2C68     		ldr	r4, [r5]
  41 0006 24F48024 		bic	r4, r4, #262144
  42 000a 2C60     		str	r4, [r5]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Configure DMA Stream data length */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
  43              		.loc 1 1174 0
  44 000c 0468     		ldr	r4, [r0]
  45 000e 6360     		str	r3, [r4, #4]
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory to Peripheral */
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
  46              		.loc 1 1177 0
  47 0010 8368     		ldr	r3, [r0, #8]
  48              	.LVL1:
  49 0012 402B     		cmp	r3, #64
  50 0014 04D1     		bne	.L2
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
  51              		.loc 1 1180 0
  52 0016 0368     		ldr	r3, [r0]
  53 0018 9A60     		str	r2, [r3, #8]
  54              	.LVL2:
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
  55              		.loc 1 1183 0
  56 001a 0368     		ldr	r3, [r0]
  57 001c D960     		str	r1, [r3, #12]
  58 001e 03E0     		b	.L1
  59              	.LVL3:
  60              	.L2:
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Peripheral to Memory */
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
  61              		.loc 1 1189 0
  62 0020 0368     		ldr	r3, [r0]
  63 0022 9960     		str	r1, [r3, #8]
  64              	.LVL4:
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
ARM GAS  /tmp/ccILxYxn.s 			page 23


1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
  65              		.loc 1 1192 0
  66 0024 0368     		ldr	r3, [r0]
  67 0026 DA60     		str	r2, [r3, #12]
  68              	.L1:
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
  69              		.loc 1 1194 0
  70 0028 30BC     		pop	{r4, r5}
  71              	.LCFI1:
  72              		.cfi_restore 5
  73              		.cfi_restore 4
  74              		.cfi_def_cfa_offset 0
  75 002a 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE152:
  79              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
  80              		.align	2
  81              		.thumb
  82              		.thumb_func
  84              	DMA_CalcBaseAndBitshift:
  85              	.LFB153:
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval Stream base address
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  86              		.loc 1 1203 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL5:
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
  92              		.loc 1 1204 0
  93 0000 0268     		ldr	r2, [r0]
  94 0002 D3B2     		uxtb	r3, r2
  95 0004 103B     		subs	r3, r3, #16
  96 0006 0949     		ldr	r1, .L8
  97 0008 A1FB0313 		umull	r1, r3, r1, r3
  98 000c 1B09     		lsrs	r3, r3, #4
  99              	.LVL6:
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 100              		.loc 1 1208 0
 101 000e 0849     		ldr	r1, .L8+4
 102 0010 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 103 0012 C165     		str	r1, [r0, #92]
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if (stream_number > 3U)
 104              		.loc 1 1210 0
ARM GAS  /tmp/ccILxYxn.s 			page 24


 105 0014 032B     		cmp	r3, #3
 106 0016 04D9     		bls	.L6
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 107              		.loc 1 1213 0
 108 0018 064B     		ldr	r3, .L8+8
 109              	.LVL7:
 110 001a 1340     		ands	r3, r3, r2
 111 001c 0433     		adds	r3, r3, #4
 112 001e 8365     		str	r3, [r0, #88]
 113 0020 02E0     		b	.L7
 114              	.LVL8:
 115              	.L6:
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 116              		.loc 1 1218 0
 117 0022 044B     		ldr	r3, .L8+8
 118              	.LVL9:
 119 0024 1340     		ands	r3, r3, r2
 120 0026 8365     		str	r3, [r0, #88]
 121              	.L7:
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->StreamBaseAddress;
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 122              		.loc 1 1222 0
 123 0028 806D     		ldr	r0, [r0, #88]
 124              	.LVL10:
 125 002a 7047     		bx	lr
 126              	.L9:
 127              		.align	2
 128              	.L8:
 129 002c ABAAAAAA 		.word	-1431655765
 130 0030 00000000 		.word	.LANCHOR0
 131 0034 00FCFFFF 		.word	-1024
 132              		.cfi_endproc
 133              	.LFE153:
 135              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 136              		.align	2
 137              		.thumb
 138              		.thumb_func
 140              	DMA_CheckFifoParam:
 141              	.LFB154:
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 142              		.loc 1 1231 0
ARM GAS  /tmp/ccILxYxn.s 			page 25


 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147              	.LVL11:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 148              		.loc 1 1233 0
 149 0000 836A     		ldr	r3, [r0, #40]
 150              	.LVL12:
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 151              		.loc 1 1236 0
 152 0002 8269     		ldr	r2, [r0, #24]
 153 0004 82B9     		cbnz	r2, .L11
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 154              		.loc 1 1238 0
 155 0006 012B     		cmp	r3, #1
 156 0008 08D0     		beq	.L13
 157 000a 0BB1     		cbz	r3, .L14
 158 000c 022B     		cmp	r3, #2
 159 000e 2ED1     		bne	.L30
 160              	.L14:
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 161              		.loc 1 1242 0
 162 0010 C36A     		ldr	r3, [r0, #44]
 163              	.LVL13:
 164 0012 13F0807F 		tst	r3, #16777216
 165 0016 2CD1     		bne	.L23
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 166              		.loc 1 1232 0
 167 0018 0020     		movs	r0, #0
 168              	.LVL14:
 169 001a 7047     		bx	lr
 170              	.LVL15:
 171              	.L13:
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 172              		.loc 1 1248 0
 173 001c C36A     		ldr	r3, [r0, #44]
 174              	.LVL16:
 175 001e B3F1C07F 		cmp	r3, #25165824
 176 0022 28D0     		beq	.L24
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 177              		.loc 1 1232 0
 178 0024 0020     		movs	r0, #0
 179              	.LVL17:
 180 0026 7047     		bx	lr
ARM GAS  /tmp/ccILxYxn.s 			page 26


 181              	.LVL18:
 182              	.L11:
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 183              		.loc 1 1261 0
 184 0028 B2F5005F 		cmp	r2, #8192
 185 002c 13D1     		bne	.L15
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 186              		.loc 1 1263 0
 187 002e 032B     		cmp	r3, #3
 188 0030 03D8     		bhi	.L16
 189 0032 DFE803F0 		tbb	[pc, r3]
 190              	.L17:
 191 0036 22       		.byte	(.L25-.L17)/2
 192 0037 04       		.byte	(.L18-.L17)/2
 193 0038 22       		.byte	(.L25-.L17)/2
 194 0039 0A       		.byte	(.L19-.L17)/2
 195              		.p2align 1
 196              	.L16:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 197              		.loc 1 1232 0
 198 003a 0020     		movs	r0, #0
 199              	.LVL19:
 200 003c 7047     		bx	lr
 201              	.LVL20:
 202              	.L18:
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 203              		.loc 1 1270 0
 204 003e C36A     		ldr	r3, [r0, #44]
 205              	.LVL21:
 206 0040 13F0807F 		tst	r3, #16777216
 207 0044 1BD1     		bne	.L26
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 208              		.loc 1 1232 0
 209 0046 0020     		movs	r0, #0
 210              	.LVL22:
 211 0048 7047     		bx	lr
 212              	.LVL23:
 213              	.L19:
ARM GAS  /tmp/ccILxYxn.s 			page 27


1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 214              		.loc 1 1276 0
 215 004a C36A     		ldr	r3, [r0, #44]
 216              	.LVL24:
 217 004c B3F1C07F 		cmp	r3, #25165824
 218 0050 17D0     		beq	.L27
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 219              		.loc 1 1232 0
 220 0052 0020     		movs	r0, #0
 221              	.LVL25:
 222 0054 7047     		bx	lr
 223              	.LVL26:
 224              	.L15:
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;   
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Word */
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 225              		.loc 1 1289 0
 226 0056 022B     		cmp	r3, #2
 227 0058 15D9     		bls	.L28
 228 005a 032B     		cmp	r3, #3
 229 005c 01D0     		beq	.L21
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 230              		.loc 1 1232 0
 231 005e 0020     		movs	r0, #0
 232              	.LVL27:
 233 0060 7047     		bx	lr
 234              	.LVL28:
 235              	.L21:
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 236              		.loc 1 1297 0
 237 0062 C36A     		ldr	r3, [r0, #44]
 238              	.LVL29:
 239 0064 13F0807F 		tst	r3, #16777216
 240 0068 0FD1     		bne	.L29
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
ARM GAS  /tmp/ccILxYxn.s 			page 28


 241              		.loc 1 1232 0
 242 006a 0020     		movs	r0, #0
 243              	.LVL30:
 244 006c 7047     		bx	lr
 245              	.LVL31:
 246              	.L30:
 247 006e 0020     		movs	r0, #0
 248              	.LVL32:
 249 0070 7047     		bx	lr
 250              	.LVL33:
 251              	.L23:
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 252              		.loc 1 1244 0
 253 0072 0120     		movs	r0, #1
 254              	.LVL34:
 255 0074 7047     		bx	lr
 256              	.LVL35:
 257              	.L24:
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 258              		.loc 1 1250 0
 259 0076 0120     		movs	r0, #1
 260              	.LVL36:
 261 0078 7047     		bx	lr
 262              	.LVL37:
 263              	.L25:
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 264              		.loc 1 1267 0
 265 007a 0120     		movs	r0, #1
 266              	.LVL38:
 267 007c 7047     		bx	lr
 268              	.LVL39:
 269              	.L26:
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 270              		.loc 1 1272 0
 271 007e 0120     		movs	r0, #1
 272              	.LVL40:
 273 0080 7047     		bx	lr
 274              	.LVL41:
 275              	.L27:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 276              		.loc 1 1278 0
 277 0082 0120     		movs	r0, #1
 278              	.LVL42:
 279 0084 7047     		bx	lr
 280              	.LVL43:
 281              	.L28:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 282              		.loc 1 1294 0
 283 0086 0120     		movs	r0, #1
 284              	.LVL44:
 285 0088 7047     		bx	lr
 286              	.LVL45:
 287              	.L29:
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 288              		.loc 1 1299 0
 289 008a 0120     		movs	r0, #1
ARM GAS  /tmp/ccILxYxn.s 			page 29


 290              	.LVL46:
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 291              		.loc 1 1308 0
 292 008c 7047     		bx	lr
 293              		.cfi_endproc
 294              	.LFE154:
 296 008e 00BF     		.section	.text.HAL_DMA_Init,"ax",%progbits
 297              		.align	2
 298              		.global	HAL_DMA_Init
 299              		.thumb
 300              		.thumb_func
 302              	HAL_DMA_Init:
 303              	.LFB140:
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
 304              		.loc 1 189 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              	.LVL47:
 309 0000 70B5     		push	{r4, r5, r6, lr}
 310              	.LCFI2:
 311              		.cfi_def_cfa_offset 16
 312              		.cfi_offset 4, -16
 313              		.cfi_offset 5, -12
 314              		.cfi_offset 6, -8
 315              		.cfi_offset 14, -4
 316 0002 0446     		mov	r4, r0
 317              	.LVL48:
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 318              		.loc 1 191 0
 319 0004 FFF7FEFF 		bl	HAL_GetTick
 320              	.LVL49:
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 321              		.loc 1 195 0
 322 0008 002C     		cmp	r4, #0
 323 000a 5BD0     		beq	.L37
 324 000c 0546     		mov	r5, r0
 325              	.LVL50:
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 326              		.loc 1 221 0
 327 000e 0023     		movs	r3, #0
 328 0010 84F83430 		strb	r3, [r4, #52]
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 329              		.loc 1 224 0
 330 0014 0223     		movs	r3, #2
 331 0016 84F83530 		strb	r3, [r4, #53]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 332              		.loc 1 227 0
 333 001a 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccILxYxn.s 			page 30


 334 001c 1368     		ldr	r3, [r2]
 335 001e 23F00103 		bic	r3, r3, #1
 336 0022 1360     		str	r3, [r2]
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 337              		.loc 1 230 0
 338 0024 0AE0     		b	.L33
 339              	.L34:
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 340              		.loc 1 233 0
 341 0026 FFF7FEFF 		bl	HAL_GetTick
 342              	.LVL51:
 343 002a 401B     		subs	r0, r0, r5
 344 002c 0528     		cmp	r0, #5
 345 002e 05D9     		bls	.L33
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 346              		.loc 1 236 0
 347 0030 2023     		movs	r3, #32
 348 0032 6365     		str	r3, [r4, #84]
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 349              		.loc 1 239 0
 350 0034 0320     		movs	r0, #3
 351 0036 84F83500 		strb	r0, [r4, #53]
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 352              		.loc 1 241 0
 353 003a 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL52:
 355              	.L33:
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 356              		.loc 1 230 0
 357 003c 2368     		ldr	r3, [r4]
 358 003e 1A68     		ldr	r2, [r3]
 359 0040 12F0010F 		tst	r2, #1
 360 0044 EFD1     		bne	.L34
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 361              		.loc 1 246 0
 362 0046 1968     		ldr	r1, [r3]
 363              	.LVL53:
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 364              		.loc 1 249 0
 365 0048 1F4A     		ldr	r2, .L39
 366 004a 0A40     		ands	r2, r2, r1
 367              	.LVL54:
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 368              		.loc 1 255 0
 369 004c 6068     		ldr	r0, [r4, #4]
 370 004e A168     		ldr	r1, [r4, #8]
 371 0050 0843     		orrs	r0, r0, r1
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 372              		.loc 1 256 0
 373 0052 E168     		ldr	r1, [r4, #12]
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 374              		.loc 1 255 0
 375 0054 0843     		orrs	r0, r0, r1
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 376              		.loc 1 256 0
 377 0056 2169     		ldr	r1, [r4, #16]
 378 0058 0843     		orrs	r0, r0, r1
ARM GAS  /tmp/ccILxYxn.s 			page 31


 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 379              		.loc 1 257 0
 380 005a 6169     		ldr	r1, [r4, #20]
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 381              		.loc 1 256 0
 382 005c 0843     		orrs	r0, r0, r1
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 383              		.loc 1 257 0
 384 005e A169     		ldr	r1, [r4, #24]
 385 0060 0843     		orrs	r0, r0, r1
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 386              		.loc 1 258 0
 387 0062 E169     		ldr	r1, [r4, #28]
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 388              		.loc 1 257 0
 389 0064 0843     		orrs	r0, r0, r1
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 390              		.loc 1 258 0
 391 0066 216A     		ldr	r1, [r4, #32]
 392 0068 0143     		orrs	r1, r1, r0
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 393              		.loc 1 255 0
 394 006a 0A43     		orrs	r2, r2, r1
 395              	.LVL55:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 396              		.loc 1 261 0
 397 006c 616A     		ldr	r1, [r4, #36]
 398 006e 0429     		cmp	r1, #4
 399 0070 03D1     		bne	.L35
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 400              		.loc 1 264 0
 401 0072 E06A     		ldr	r0, [r4, #44]
 402 0074 216B     		ldr	r1, [r4, #48]
 403 0076 0143     		orrs	r1, r1, r0
 404 0078 0A43     		orrs	r2, r2, r1
 405              	.LVL56:
 406              	.L35:
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 407              		.loc 1 268 0
 408 007a 1A60     		str	r2, [r3]
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 409              		.loc 1 271 0
 410 007c 2668     		ldr	r6, [r4]
 411 007e 7569     		ldr	r5, [r6, #20]
 412              	.LVL57:
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 413              		.loc 1 274 0
 414 0080 25F00705 		bic	r5, r5, #7
 415              	.LVL58:
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 416              		.loc 1 277 0
 417 0084 636A     		ldr	r3, [r4, #36]
 418 0086 1D43     		orrs	r5, r5, r3
 419              	.LVL59:
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 420              		.loc 1 280 0
 421 0088 042B     		cmp	r3, #4
ARM GAS  /tmp/ccILxYxn.s 			page 32


 422 008a 0DD1     		bne	.L36
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 423              		.loc 1 283 0
 424 008c A36A     		ldr	r3, [r4, #40]
 425 008e 1D43     		orrs	r5, r5, r3
 426              	.LVL60:
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 427              		.loc 1 287 0
 428 0090 E36A     		ldr	r3, [r4, #44]
 429 0092 4BB1     		cbz	r3, .L36
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 430              		.loc 1 289 0
 431 0094 2046     		mov	r0, r4
 432 0096 FFF7FEFF 		bl	DMA_CheckFifoParam
 433              	.LVL61:
 434 009a 28B1     		cbz	r0, .L36
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 435              		.loc 1 292 0
 436 009c 4023     		movs	r3, #64
 437 009e 6365     		str	r3, [r4, #84]
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 438              		.loc 1 295 0
 439 00a0 0120     		movs	r0, #1
 440 00a2 84F83500 		strb	r0, [r4, #53]
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 441              		.loc 1 297 0
 442 00a6 70BD     		pop	{r4, r5, r6, pc}
 443              	.LVL62:
 444              	.L36:
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 445              		.loc 1 303 0
 446 00a8 7561     		str	r5, [r6, #20]
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 447              		.loc 1 307 0
 448 00aa 2046     		mov	r0, r4
 449 00ac FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 450              	.LVL63:
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 451              		.loc 1 310 0
 452 00b0 E26D     		ldr	r2, [r4, #92]
 453 00b2 3F23     		movs	r3, #63
 454 00b4 9340     		lsls	r3, r3, r2
 455 00b6 8360     		str	r3, [r0, #8]
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
 456              		.loc 1 313 0
 457 00b8 0020     		movs	r0, #0
 458              	.LVL64:
 459 00ba 6065     		str	r0, [r4, #84]
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 460              		.loc 1 316 0
 461 00bc 0123     		movs	r3, #1
 462 00be 84F83530 		strb	r3, [r4, #53]
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 463              		.loc 1 318 0
 464 00c2 70BD     		pop	{r4, r5, r6, pc}
 465              	.LVL65:
 466              	.L37:
ARM GAS  /tmp/ccILxYxn.s 			page 33


 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 467              		.loc 1 197 0
 468 00c4 0120     		movs	r0, #1
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 469              		.loc 1 319 0
 470 00c6 70BD     		pop	{r4, r5, r6, pc}
 471              	.LVL66:
 472              	.L40:
 473              		.align	2
 474              	.L39:
 475 00c8 3F8010E0 		.word	-535789505
 476              		.cfi_endproc
 477              	.LFE140:
 479              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 480              		.align	2
 481              		.global	HAL_DMA_DeInit
 482              		.thumb
 483              		.thumb_func
 485              	HAL_DMA_DeInit:
 486              	.LFB141:
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 487              		.loc 1 328 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL67:
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 492              		.loc 1 332 0
 493 0000 0028     		cmp	r0, #0
 494 0002 2CD0     		beq	.L43
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 495              		.loc 1 328 0
 496 0004 38B5     		push	{r3, r4, r5, lr}
 497              	.LCFI3:
 498              		.cfi_def_cfa_offset 16
 499              		.cfi_offset 3, -16
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
 503 0006 0446     		mov	r4, r0
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 504              		.loc 1 338 0
 505 0008 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 506 000c DBB2     		uxtb	r3, r3
 507 000e 022B     		cmp	r3, #2
 508 0010 27D0     		beq	.L44
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 509              		.loc 1 348 0
 510 0012 0268     		ldr	r2, [r0]
 511 0014 1368     		ldr	r3, [r2]
 512 0016 23F00103 		bic	r3, r3, #1
 513 001a 1360     		str	r3, [r2]
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 514              		.loc 1 351 0
 515 001c 0368     		ldr	r3, [r0]
 516 001e 0025     		movs	r5, #0
 517 0020 1D60     		str	r5, [r3]
ARM GAS  /tmp/ccILxYxn.s 			page 34


 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 518              		.loc 1 354 0
 519 0022 0368     		ldr	r3, [r0]
 520 0024 5D60     		str	r5, [r3, #4]
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 521              		.loc 1 357 0
 522 0026 0368     		ldr	r3, [r0]
 523 0028 9D60     		str	r5, [r3, #8]
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 524              		.loc 1 360 0
 525 002a 0368     		ldr	r3, [r0]
 526 002c DD60     		str	r5, [r3, #12]
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 527              		.loc 1 363 0
 528 002e 0368     		ldr	r3, [r0]
 529 0030 1D61     		str	r5, [r3, #16]
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 530              		.loc 1 366 0
 531 0032 0368     		ldr	r3, [r0]
 532 0034 2122     		movs	r2, #33
 533 0036 5A61     		str	r2, [r3, #20]
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 534              		.loc 1 369 0
 535 0038 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 536              	.LVL68:
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 537              		.loc 1 372 0
 538 003c E26D     		ldr	r2, [r4, #92]
 539 003e 3F23     		movs	r3, #63
 540 0040 9340     		lsls	r3, r3, r2
 541 0042 8360     		str	r3, [r0, #8]
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 542              		.loc 1 375 0
 543 0044 E563     		str	r5, [r4, #60]
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 544              		.loc 1 376 0
 545 0046 2564     		str	r5, [r4, #64]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 546              		.loc 1 377 0
 547 0048 6564     		str	r5, [r4, #68]
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 548              		.loc 1 378 0
 549 004a A564     		str	r5, [r4, #72]
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;  
 550              		.loc 1 379 0
 551 004c E564     		str	r5, [r4, #76]
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 552              		.loc 1 380 0
 553 004e 2565     		str	r5, [r4, #80]
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 554              		.loc 1 383 0
 555 0050 6565     		str	r5, [r4, #84]
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 556              		.loc 1 386 0
 557 0052 84F83550 		strb	r5, [r4, #53]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 558              		.loc 1 389 0
ARM GAS  /tmp/ccILxYxn.s 			page 35


 559 0056 84F83450 		strb	r5, [r4, #52]
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 560              		.loc 1 391 0
 561 005a 2846     		mov	r0, r5
 562              	.LVL69:
 563 005c 38BD     		pop	{r3, r4, r5, pc}
 564              	.LVL70:
 565              	.L43:
 566              	.LCFI4:
 567              		.cfi_def_cfa_offset 0
 568              		.cfi_restore 3
 569              		.cfi_restore 4
 570              		.cfi_restore 5
 571              		.cfi_restore 14
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 572              		.loc 1 334 0
 573 005e 0120     		movs	r0, #1
 574              	.LVL71:
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 575              		.loc 1 392 0
 576 0060 7047     		bx	lr
 577              	.LVL72:
 578              	.L44:
 579              	.LCFI5:
 580              		.cfi_def_cfa_offset 16
 581              		.cfi_offset 3, -16
 582              		.cfi_offset 4, -12
 583              		.cfi_offset 5, -8
 584              		.cfi_offset 14, -4
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 585              		.loc 1 341 0
 586 0062 0220     		movs	r0, #2
 587              	.LVL73:
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 588              		.loc 1 392 0
 589 0064 38BD     		pop	{r3, r4, r5, pc}
 590              		.cfi_endproc
 591              	.LFE141:
 593 0066 00BF     		.section	.text.HAL_DMA_Start,"ax",%progbits
 594              		.align	2
 595              		.global	HAL_DMA_Start
 596              		.thumb
 597              		.thumb_func
 599              	HAL_DMA_Start:
 600              	.LFB142:
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 601              		.loc 1 426 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              	.LVL74:
 606 0000 38B5     		push	{r3, r4, r5, lr}
 607              	.LCFI6:
 608              		.cfi_def_cfa_offset 16
 609              		.cfi_offset 3, -16
 610              		.cfi_offset 4, -12
 611              		.cfi_offset 5, -8
ARM GAS  /tmp/ccILxYxn.s 			page 36


 612              		.cfi_offset 14, -4
 613              	.LVL75:
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 614              		.loc 1 433 0
 615 0002 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 616 0006 012C     		cmp	r4, #1
 617 0008 1CD0     		beq	.L50
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 618              		.loc 1 433 0 is_stmt 0 discriminator 2
 619 000a 0124     		movs	r4, #1
 620 000c 80F83440 		strb	r4, [r0, #52]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 621              		.loc 1 435 0 is_stmt 1 discriminator 2
 622 0010 90F83540 		ldrb	r4, [r0, #53]	@ zero_extendqisi2
 623 0014 E4B2     		uxtb	r4, r4
 624 0016 012C     		cmp	r4, #1
 625 0018 0FD1     		bne	.L48
 626 001a 0546     		mov	r5, r0
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 627              		.loc 1 438 0
 628 001c 0220     		movs	r0, #2
 629              	.LVL76:
 630 001e 85F83500 		strb	r0, [r5, #53]
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 631              		.loc 1 441 0
 632 0022 0024     		movs	r4, #0
 633 0024 6C65     		str	r4, [r5, #84]
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 634              		.loc 1 444 0
 635 0026 2846     		mov	r0, r5
 636 0028 FFF7FEFF 		bl	DMA_SetConfig
 637              	.LVL77:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 638              		.loc 1 447 0
 639 002c 2A68     		ldr	r2, [r5]
 640 002e 1368     		ldr	r3, [r2]
 641 0030 43F00103 		orr	r3, r3, #1
 642 0034 1360     		str	r3, [r2]
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 643              		.loc 1 427 0
 644 0036 2046     		mov	r0, r4
 645 0038 38BD     		pop	{r3, r4, r5, pc}
 646              	.LVL78:
 647              	.L48:
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 648              		.loc 1 452 0
 649 003a 0023     		movs	r3, #0
 650              	.LVL79:
 651 003c 80F83430 		strb	r3, [r0, #52]
 652              	.LVL80:
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 653              		.loc 1 455 0
 654 0040 0220     		movs	r0, #2
 655              	.LVL81:
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 656              		.loc 1 457 0
 657 0042 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccILxYxn.s 			page 37


 658              	.LVL82:
 659              	.L50:
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 660              		.loc 1 433 0
 661 0044 0220     		movs	r0, #2
 662              	.LVL83:
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 663              		.loc 1 458 0
 664 0046 38BD     		pop	{r3, r4, r5, pc}
 665              		.cfi_endproc
 666              	.LFE142:
 668              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 669              		.align	2
 670              		.global	HAL_DMA_Start_IT
 671              		.thumb
 672              		.thumb_func
 674              	HAL_DMA_Start_IT:
 675              	.LFB143:
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 676              		.loc 1 470 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              	.LVL84:
 681 0000 38B5     		push	{r3, r4, r5, lr}
 682              	.LCFI7:
 683              		.cfi_def_cfa_offset 16
 684              		.cfi_offset 3, -16
 685              		.cfi_offset 4, -12
 686              		.cfi_offset 5, -8
 687              		.cfi_offset 14, -4
 688              	.LVL85:
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 689              		.loc 1 474 0
 690 0002 856D     		ldr	r5, [r0, #88]
 691              	.LVL86:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 692              		.loc 1 480 0
 693 0004 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 694 0008 012C     		cmp	r4, #1
 695 000a 31D0     		beq	.L57
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 696              		.loc 1 480 0 is_stmt 0 discriminator 2
 697 000c 0124     		movs	r4, #1
 698 000e 80F83440 		strb	r4, [r0, #52]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 699              		.loc 1 482 0 is_stmt 1 discriminator 2
 700 0012 90F83540 		ldrb	r4, [r0, #53]	@ zero_extendqisi2
 701 0016 E4B2     		uxtb	r4, r4
 702 0018 012C     		cmp	r4, #1
 703 001a 24D1     		bne	.L54
 704 001c 0446     		mov	r4, r0
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 705              		.loc 1 485 0
 706 001e 0220     		movs	r0, #2
 707              	.LVL87:
 708 0020 84F83500 		strb	r0, [r4, #53]
ARM GAS  /tmp/ccILxYxn.s 			page 38


 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 709              		.loc 1 488 0
 710 0024 0020     		movs	r0, #0
 711 0026 6065     		str	r0, [r4, #84]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 712              		.loc 1 491 0
 713 0028 2046     		mov	r0, r4
 714 002a FFF7FEFF 		bl	DMA_SetConfig
 715              	.LVL88:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 716              		.loc 1 494 0
 717 002e E26D     		ldr	r2, [r4, #92]
 718 0030 3F23     		movs	r3, #63
 719 0032 9340     		lsls	r3, r3, r2
 720 0034 AB60     		str	r3, [r5, #8]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 721              		.loc 1 497 0
 722 0036 2268     		ldr	r2, [r4]
 723 0038 1368     		ldr	r3, [r2]
 724 003a 43F01603 		orr	r3, r3, #22
 725 003e 1360     		str	r3, [r2]
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 726              		.loc 1 498 0
 727 0040 2268     		ldr	r2, [r4]
 728 0042 5369     		ldr	r3, [r2, #20]
 729 0044 43F08003 		orr	r3, r3, #128
 730 0048 5361     		str	r3, [r2, #20]
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 731              		.loc 1 500 0
 732 004a 236C     		ldr	r3, [r4, #64]
 733 004c 23B1     		cbz	r3, .L55
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 734              		.loc 1 502 0
 735 004e 2268     		ldr	r2, [r4]
 736 0050 1368     		ldr	r3, [r2]
 737 0052 43F00803 		orr	r3, r3, #8
 738 0056 1360     		str	r3, [r2]
 739              	.L55:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 740              		.loc 1 506 0
 741 0058 2268     		ldr	r2, [r4]
 742 005a 1368     		ldr	r3, [r2]
 743 005c 43F00103 		orr	r3, r3, #1
 744 0060 1360     		str	r3, [r2]
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 745              		.loc 1 471 0
 746 0062 0020     		movs	r0, #0
 747 0064 38BD     		pop	{r3, r4, r5, pc}
 748              	.LVL89:
 749              	.L54:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 750              		.loc 1 511 0
 751 0066 0023     		movs	r3, #0
 752              	.LVL90:
 753 0068 80F83430 		strb	r3, [r0, #52]
 754              	.LVL91:
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
ARM GAS  /tmp/ccILxYxn.s 			page 39


 755              		.loc 1 514 0
 756 006c 0220     		movs	r0, #2
 757              	.LVL92:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 758              		.loc 1 517 0
 759 006e 38BD     		pop	{r3, r4, r5, pc}
 760              	.LVL93:
 761              	.L57:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 762              		.loc 1 480 0
 763 0070 0220     		movs	r0, #2
 764              	.LVL94:
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 765              		.loc 1 518 0
 766 0072 38BD     		pop	{r3, r4, r5, pc}
 767              		.cfi_endproc
 768              	.LFE143:
 770              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 771              		.align	2
 772              		.global	HAL_DMA_Abort
 773              		.thumb
 774              		.thumb_func
 776              	HAL_DMA_Abort:
 777              	.LFB144:
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 778              		.loc 1 533 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              	.LVL95:
 783 0000 70B5     		push	{r4, r5, r6, lr}
 784              	.LCFI8:
 785              		.cfi_def_cfa_offset 16
 786              		.cfi_offset 4, -16
 787              		.cfi_offset 5, -12
 788              		.cfi_offset 6, -8
 789              		.cfi_offset 14, -4
 790 0002 0446     		mov	r4, r0
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 791              		.loc 1 535 0
 792 0004 866D     		ldr	r6, [r0, #88]
 793              	.LVL96:
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 794              		.loc 1 537 0
 795 0006 FFF7FEFF 		bl	HAL_GetTick
 796              	.LVL97:
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 797              		.loc 1 539 0
 798 000a 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 799 000e DBB2     		uxtb	r3, r3
 800 0010 022B     		cmp	r3, #2
 801 0012 06D0     		beq	.L60
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 802              		.loc 1 541 0
 803 0014 8023     		movs	r3, #128
 804 0016 6365     		str	r3, [r4, #84]
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
ARM GAS  /tmp/ccILxYxn.s 			page 40


 805              		.loc 1 544 0
 806 0018 0023     		movs	r3, #0
 807 001a 84F83430 		strb	r3, [r4, #52]
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 808              		.loc 1 546 0
 809 001e 0120     		movs	r0, #1
 810 0020 70BD     		pop	{r4, r5, r6, pc}
 811              	.LVL98:
 812              	.L60:
 813 0022 0546     		mov	r5, r0
 814              	.LVL99:
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 815              		.loc 1 551 0
 816 0024 2268     		ldr	r2, [r4]
 817 0026 1368     		ldr	r3, [r2]
 818 0028 23F01603 		bic	r3, r3, #22
 819 002c 1360     		str	r3, [r2]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 820              		.loc 1 552 0
 821 002e 2268     		ldr	r2, [r4]
 822 0030 5369     		ldr	r3, [r2, #20]
 823 0032 23F08003 		bic	r3, r3, #128
 824 0036 5361     		str	r3, [r2, #20]
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 825              		.loc 1 554 0
 826 0038 236C     		ldr	r3, [r4, #64]
 827 003a 0BB9     		cbnz	r3, .L62
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 828              		.loc 1 554 0 is_stmt 0 discriminator 1
 829 003c A36C     		ldr	r3, [r4, #72]
 830 003e 23B1     		cbz	r3, .L63
 831              	.L62:
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 832              		.loc 1 556 0 is_stmt 1
 833 0040 2268     		ldr	r2, [r4]
 834 0042 1368     		ldr	r3, [r2]
 835 0044 23F00803 		bic	r3, r3, #8
 836 0048 1360     		str	r3, [r2]
 837              	.L63:
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 838              		.loc 1 560 0
 839 004a 2268     		ldr	r2, [r4]
 840 004c 1368     		ldr	r3, [r2]
 841 004e 23F00103 		bic	r3, r3, #1
 842 0052 1360     		str	r3, [r2]
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 843              		.loc 1 563 0
 844 0054 0DE0     		b	.L64
 845              	.L65:
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 846              		.loc 1 566 0
 847 0056 FFF7FEFF 		bl	HAL_GetTick
 848              	.LVL100:
 849 005a 401B     		subs	r0, r0, r5
 850 005c 0528     		cmp	r0, #5
 851 005e 08D9     		bls	.L64
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
ARM GAS  /tmp/ccILxYxn.s 			page 41


 852              		.loc 1 569 0
 853 0060 2023     		movs	r3, #32
 854 0062 6365     		str	r3, [r4, #84]
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 855              		.loc 1 572 0
 856 0064 0023     		movs	r3, #0
 857 0066 84F83430 		strb	r3, [r4, #52]
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 858              		.loc 1 575 0
 859 006a 0320     		movs	r0, #3
 860 006c 84F83500 		strb	r0, [r4, #53]
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 861              		.loc 1 577 0
 862 0070 70BD     		pop	{r4, r5, r6, pc}
 863              	.LVL101:
 864              	.L64:
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 865              		.loc 1 563 0
 866 0072 2368     		ldr	r3, [r4]
 867 0074 1B68     		ldr	r3, [r3]
 868 0076 13F0010F 		tst	r3, #1
 869 007a ECD1     		bne	.L65
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 870              		.loc 1 582 0
 871 007c E26D     		ldr	r2, [r4, #92]
 872 007e 3F23     		movs	r3, #63
 873 0080 9340     		lsls	r3, r3, r2
 874 0082 B360     		str	r3, [r6, #8]
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 875              		.loc 1 585 0
 876 0084 0020     		movs	r0, #0
 877 0086 84F83400 		strb	r0, [r4, #52]
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 878              		.loc 1 588 0
 879 008a 0123     		movs	r3, #1
 880 008c 84F83530 		strb	r3, [r4, #53]
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 881              		.loc 1 591 0
 882 0090 70BD     		pop	{r4, r5, r6, pc}
 883              		.cfi_endproc
 884              	.LFE144:
 886 0092 00BF     		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 887              		.align	2
 888              		.global	HAL_DMA_Abort_IT
 889              		.thumb
 890              		.thumb_func
 892              	HAL_DMA_Abort_IT:
 893              	.LFB145:
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 894              		.loc 1 600 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899              	.LVL102:
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 900              		.loc 1 601 0
ARM GAS  /tmp/ccILxYxn.s 			page 42


 901 0000 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 902 0004 DBB2     		uxtb	r3, r3
 903 0006 022B     		cmp	r3, #2
 904 0008 03D0     		beq	.L68
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 905              		.loc 1 603 0
 906 000a 8023     		movs	r3, #128
 907 000c 4365     		str	r3, [r0, #84]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 908              		.loc 1 604 0
 909 000e 0120     		movs	r0, #1
 910              	.LVL103:
 911 0010 7047     		bx	lr
 912              	.LVL104:
 913              	.L68:
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 914              		.loc 1 609 0
 915 0012 0523     		movs	r3, #5
 916 0014 80F83530 		strb	r3, [r0, #53]
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 917              		.loc 1 612 0
 918 0018 0268     		ldr	r2, [r0]
 919 001a 1368     		ldr	r3, [r2]
 920 001c 23F00103 		bic	r3, r3, #1
 921 0020 1360     		str	r3, [r2]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 922              		.loc 1 615 0
 923 0022 0020     		movs	r0, #0
 924              	.LVL105:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 925              		.loc 1 616 0
 926 0024 7047     		bx	lr
 927              		.cfi_endproc
 928              	.LFE145:
 930 0026 00BF     		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 931              		.align	2
 932              		.global	HAL_DMA_PollForTransfer
 933              		.thumb
 934              		.thumb_func
 936              	HAL_DMA_PollForTransfer:
 937              	.LFB146:
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 938              		.loc 1 630 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              	.LVL106:
 943 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 944              	.LCFI9:
 945              		.cfi_def_cfa_offset 32
 946              		.cfi_offset 3, -32
 947              		.cfi_offset 4, -28
 948              		.cfi_offset 5, -24
 949              		.cfi_offset 6, -20
 950              		.cfi_offset 7, -16
 951              		.cfi_offset 8, -12
 952              		.cfi_offset 9, -8
ARM GAS  /tmp/ccILxYxn.s 			page 43


 953              		.cfi_offset 14, -4
 954 0004 0446     		mov	r4, r0
 955 0006 8946     		mov	r9, r1
 956 0008 1546     		mov	r5, r2
 957              	.LVL107:
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 958              		.loc 1 633 0
 959 000a FFF7FEFF 		bl	HAL_GetTick
 960              	.LVL108:
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 961              		.loc 1 639 0
 962 000e 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 963 0012 DBB2     		uxtb	r3, r3
 964 0014 022B     		cmp	r3, #2
 965 0016 07D0     		beq	.L71
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 966              		.loc 1 642 0
 967 0018 8023     		movs	r3, #128
 968 001a 6365     		str	r3, [r4, #84]
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 969              		.loc 1 643 0
 970 001c 0023     		movs	r3, #0
 971 001e 84F83430 		strb	r3, [r4, #52]
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 972              		.loc 1 644 0
 973 0022 0120     		movs	r0, #1
 974 0024 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 975              	.LVL109:
 976              	.L71:
 977 0028 8046     		mov	r8, r0
 978              	.LVL110:
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 979              		.loc 1 648 0
 980 002a 2368     		ldr	r3, [r4]
 981 002c 1B68     		ldr	r3, [r3]
 982 002e 13F4807F 		tst	r3, #256
 983 0032 05D0     		beq	.L73
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 984              		.loc 1 650 0
 985 0034 4FF48073 		mov	r3, #256
 986 0038 6365     		str	r3, [r4, #84]
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 987              		.loc 1 651 0
 988 003a 0120     		movs	r0, #1
 989 003c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 990              	.LVL111:
 991              	.L73:
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 992              		.loc 1 655 0
 993 0040 B9F1000F 		cmp	r9, #0
 994 0044 03D1     		bne	.L74
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 995              		.loc 1 658 0
 996 0046 E36D     		ldr	r3, [r4, #92]
 997 0048 2027     		movs	r7, #32
 998 004a 9F40     		lsls	r7, r7, r3
 999              	.LVL112:
ARM GAS  /tmp/ccILxYxn.s 			page 44


 1000 004c 02E0     		b	.L75
 1001              	.LVL113:
 1002              	.L74:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1003              		.loc 1 663 0
 1004 004e E36D     		ldr	r3, [r4, #92]
 1005 0050 1027     		movs	r7, #16
 1006 0052 9F40     		lsls	r7, r7, r3
 1007              	.LVL114:
 1008              	.L75:
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 1009              		.loc 1 666 0
 1010 0054 A66D     		ldr	r6, [r4, #88]
 1011              	.LVL115:
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1012              		.loc 1 667 0
 1013 0056 3368     		ldr	r3, [r6]
 1014              	.LVL116:
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1015              		.loc 1 669 0
 1016 0058 33E0     		b	.L76
 1017              	.LVL117:
 1018              	.L83:
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1019              		.loc 1 672 0
 1020 005a B5F1FF3F 		cmp	r5, #-1
 1021 005e 11D0     		beq	.L77
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1022              		.loc 1 674 0
 1023 0060 2DB1     		cbz	r5, .L78
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1024              		.loc 1 674 0 is_stmt 0 discriminator 1
 1025 0062 FFF7FEFF 		bl	HAL_GetTick
 1026              	.LVL118:
 1027 0066 C8EB0000 		rsb	r0, r8, r0
 1028 006a A842     		cmp	r0, r5
 1029 006c 0AD9     		bls	.L77
 1030              	.L78:
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1031              		.loc 1 677 0 is_stmt 1
 1032 006e 2023     		movs	r3, #32
 1033 0070 6365     		str	r3, [r4, #84]
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 1034              		.loc 1 680 0
 1035 0072 0023     		movs	r3, #0
 1036 0074 84F83430 		strb	r3, [r4, #52]
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 1037              		.loc 1 683 0
 1038 0078 0123     		movs	r3, #1
 1039 007a 84F83530 		strb	r3, [r4, #53]
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 1040              		.loc 1 685 0
 1041 007e 0320     		movs	r0, #3
 1042 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1043              	.LVL119:
 1044              	.L77:
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccILxYxn.s 			page 45


 1045              		.loc 1 690 0
 1046 0084 3368     		ldr	r3, [r6]
 1047              	.LVL120:
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1048              		.loc 1 692 0
 1049 0086 E16D     		ldr	r1, [r4, #92]
 1050 0088 0822     		movs	r2, #8
 1051 008a 8A40     		lsls	r2, r2, r1
 1052 008c 1A42     		tst	r2, r3
 1053 008e 04D0     		beq	.L79
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1054              		.loc 1 695 0
 1055 0090 616D     		ldr	r1, [r4, #84]
 1056 0092 41F00101 		orr	r1, r1, #1
 1057 0096 6165     		str	r1, [r4, #84]
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1058              		.loc 1 698 0
 1059 0098 B260     		str	r2, [r6, #8]
 1060              	.L79:
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1061              		.loc 1 701 0
 1062 009a E16D     		ldr	r1, [r4, #92]
 1063 009c 0122     		movs	r2, #1
 1064 009e 8A40     		lsls	r2, r2, r1
 1065 00a0 1A42     		tst	r2, r3
 1066 00a2 04D0     		beq	.L80
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1067              		.loc 1 704 0
 1068 00a4 616D     		ldr	r1, [r4, #84]
 1069 00a6 41F00201 		orr	r1, r1, #2
 1070 00aa 6165     		str	r1, [r4, #84]
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1071              		.loc 1 707 0
 1072 00ac B260     		str	r2, [r6, #8]
 1073              	.L80:
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1074              		.loc 1 710 0
 1075 00ae E16D     		ldr	r1, [r4, #92]
 1076 00b0 0422     		movs	r2, #4
 1077 00b2 8A40     		lsls	r2, r2, r1
 1078 00b4 1A42     		tst	r2, r3
 1079 00b6 04D0     		beq	.L76
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1080              		.loc 1 713 0
 1081 00b8 616D     		ldr	r1, [r4, #84]
 1082 00ba 41F00401 		orr	r1, r1, #4
 1083 00be 6165     		str	r1, [r4, #84]
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1084              		.loc 1 716 0
 1085 00c0 B260     		str	r2, [r6, #8]
 1086              	.L76:
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1087              		.loc 1 669 0
 1088 00c2 3B42     		tst	r3, r7
 1089 00c4 03D1     		bne	.L82
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1090              		.loc 1 669 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccILxYxn.s 			page 46


 1091 00c6 636D     		ldr	r3, [r4, #84]
 1092              	.LVL121:
 1093 00c8 13F0010F 		tst	r3, #1
 1094 00cc C5D0     		beq	.L83
 1095              	.L82:
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1096              		.loc 1 720 0 is_stmt 1
 1097 00ce 636D     		ldr	r3, [r4, #84]
 1098 00d0 93B1     		cbz	r3, .L84
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1099              		.loc 1 722 0
 1100 00d2 636D     		ldr	r3, [r4, #84]
 1101 00d4 13F0010F 		tst	r3, #1
 1102 00d8 0ED0     		beq	.L84
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1103              		.loc 1 724 0
 1104 00da 2046     		mov	r0, r4
 1105 00dc FFF7FEFF 		bl	HAL_DMA_Abort
 1106              	.LVL122:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1107              		.loc 1 727 0
 1108 00e0 E26D     		ldr	r2, [r4, #92]
 1109 00e2 3023     		movs	r3, #48
 1110 00e4 9340     		lsls	r3, r3, r2
 1111 00e6 B360     		str	r3, [r6, #8]
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1112              		.loc 1 730 0
 1113 00e8 0023     		movs	r3, #0
 1114 00ea 84F83430 		strb	r3, [r4, #52]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1115              		.loc 1 733 0
 1116 00ee 0120     		movs	r0, #1
 1117 00f0 84F83500 		strb	r0, [r4, #53]
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
 1118              		.loc 1 735 0
 1119 00f4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1120              	.LVL123:
 1121              	.L84:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1122              		.loc 1 740 0
 1123 00f8 B9F1000F 		cmp	r9, #0
 1124 00fc 0BD1     		bne	.L85
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1125              		.loc 1 743 0
 1126 00fe E26D     		ldr	r2, [r4, #92]
 1127 0100 3023     		movs	r3, #48
 1128 0102 9340     		lsls	r3, r3, r2
 1129 0104 B360     		str	r3, [r6, #8]
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1130              		.loc 1 746 0
 1131 0106 0020     		movs	r0, #0
 1132 0108 84F83400 		strb	r0, [r4, #52]
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1133              		.loc 1 748 0
 1134 010c 0123     		movs	r3, #1
 1135 010e 84F83530 		strb	r3, [r4, #53]
 1136 0112 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccILxYxn.s 			page 47


 1137              	.LVL124:
 1138              	.L85:
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1139              		.loc 1 753 0
 1140 0116 E26D     		ldr	r2, [r4, #92]
 1141 0118 1023     		movs	r3, #16
 1142 011a 9340     		lsls	r3, r3, r2
 1143 011c B360     		str	r3, [r6, #8]
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1144              		.loc 1 756 0
 1145 011e 0020     		movs	r0, #0
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1146              		.loc 1 757 0
 1147 0120 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1148              		.cfi_endproc
 1149              	.LFE146:
 1151              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1152              		.align	2
 1153              		.global	HAL_DMA_IRQHandler
 1154              		.thumb
 1155              		.thumb_func
 1157              	HAL_DMA_IRQHandler:
 1158              	.LFB147:
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 1159              		.loc 1 766 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 8
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163              	.LVL125:
 1164 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1165              	.LCFI10:
 1166              		.cfi_def_cfa_offset 20
 1167              		.cfi_offset 4, -20
 1168              		.cfi_offset 5, -16
 1169              		.cfi_offset 6, -12
 1170              		.cfi_offset 7, -8
 1171              		.cfi_offset 14, -4
 1172 0002 83B0     		sub	sp, sp, #12
 1173              	.LCFI11:
 1174              		.cfi_def_cfa_offset 32
 1175 0004 0446     		mov	r4, r0
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 1176              		.loc 1 768 0
 1177 0006 0023     		movs	r3, #0
 1178 0008 0193     		str	r3, [sp, #4]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1179              		.loc 1 769 0
 1180 000a 714B     		ldr	r3, .L107
 1181 000c 1B68     		ldr	r3, [r3]
 1182 000e 714D     		ldr	r5, .L107+4
 1183 0010 A5FB0335 		umull	r3, r5, r5, r3
 1184 0014 AD0A     		lsrs	r5, r5, #10
 1185              	.LVL126:
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1186              		.loc 1 772 0
 1187 0016 876D     		ldr	r7, [r0, #88]
 1188              	.LVL127:
ARM GAS  /tmp/ccILxYxn.s 			page 48


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1189              		.loc 1 774 0
 1190 0018 3E68     		ldr	r6, [r7]
 1191              	.LVL128:
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1192              		.loc 1 777 0
 1193 001a C26D     		ldr	r2, [r0, #92]
 1194 001c 0823     		movs	r3, #8
 1195 001e 9340     		lsls	r3, r3, r2
 1196 0020 3342     		tst	r3, r6
 1197 0022 10D0     		beq	.L88
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1198              		.loc 1 779 0
 1199 0024 0368     		ldr	r3, [r0]
 1200 0026 1A68     		ldr	r2, [r3]
 1201 0028 12F0040F 		tst	r2, #4
 1202 002c 0BD0     		beq	.L88
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1203              		.loc 1 782 0
 1204 002e 1A68     		ldr	r2, [r3]
 1205 0030 22F00402 		bic	r2, r2, #4
 1206 0034 1A60     		str	r2, [r3]
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1207              		.loc 1 785 0
 1208 0036 C26D     		ldr	r2, [r0, #92]
 1209 0038 0823     		movs	r3, #8
 1210 003a 9340     		lsls	r3, r3, r2
 1211 003c BB60     		str	r3, [r7, #8]
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1212              		.loc 1 788 0
 1213 003e 436D     		ldr	r3, [r0, #84]
 1214 0040 43F00103 		orr	r3, r3, #1
 1215 0044 4365     		str	r3, [r0, #84]
 1216              	.L88:
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1217              		.loc 1 792 0
 1218 0046 E26D     		ldr	r2, [r4, #92]
 1219 0048 0123     		movs	r3, #1
 1220 004a 9340     		lsls	r3, r3, r2
 1221 004c 3342     		tst	r3, r6
 1222 004e 09D0     		beq	.L89
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1223              		.loc 1 794 0
 1224 0050 2268     		ldr	r2, [r4]
 1225 0052 5269     		ldr	r2, [r2, #20]
 1226 0054 12F0800F 		tst	r2, #128
 1227 0058 04D0     		beq	.L89
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1228              		.loc 1 797 0
 1229 005a BB60     		str	r3, [r7, #8]
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1230              		.loc 1 800 0
 1231 005c 636D     		ldr	r3, [r4, #84]
 1232 005e 43F00203 		orr	r3, r3, #2
 1233 0062 6365     		str	r3, [r4, #84]
 1234              	.L89:
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
ARM GAS  /tmp/ccILxYxn.s 			page 49


 1235              		.loc 1 804 0
 1236 0064 E26D     		ldr	r2, [r4, #92]
 1237 0066 0423     		movs	r3, #4
 1238 0068 9340     		lsls	r3, r3, r2
 1239 006a 3342     		tst	r3, r6
 1240 006c 09D0     		beq	.L90
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1241              		.loc 1 806 0
 1242 006e 2268     		ldr	r2, [r4]
 1243 0070 1268     		ldr	r2, [r2]
 1244 0072 12F0020F 		tst	r2, #2
 1245 0076 04D0     		beq	.L90
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1246              		.loc 1 809 0
 1247 0078 BB60     		str	r3, [r7, #8]
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1248              		.loc 1 812 0
 1249 007a 636D     		ldr	r3, [r4, #84]
 1250 007c 43F00403 		orr	r3, r3, #4
 1251 0080 6365     		str	r3, [r4, #84]
 1252              	.L90:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1253              		.loc 1 816 0
 1254 0082 E26D     		ldr	r2, [r4, #92]
 1255 0084 1023     		movs	r3, #16
 1256 0086 9340     		lsls	r3, r3, r2
 1257 0088 3342     		tst	r3, r6
 1258 008a 24D0     		beq	.L91
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1259              		.loc 1 818 0
 1260 008c 2268     		ldr	r2, [r4]
 1261 008e 1268     		ldr	r2, [r2]
 1262 0090 12F0080F 		tst	r2, #8
 1263 0094 1FD0     		beq	.L91
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1264              		.loc 1 821 0
 1265 0096 BB60     		str	r3, [r7, #8]
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1266              		.loc 1 824 0
 1267 0098 2368     		ldr	r3, [r4]
 1268 009a 1A68     		ldr	r2, [r3]
 1269 009c 12F4802F 		tst	r2, #262144
 1270 00a0 0DD0     		beq	.L92
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1271              		.loc 1 827 0
 1272 00a2 1B68     		ldr	r3, [r3]
 1273 00a4 13F4002F 		tst	r3, #524288
 1274 00a8 04D1     		bne	.L93
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1275              		.loc 1 829 0
 1276 00aa 236C     		ldr	r3, [r4, #64]
 1277 00ac 9BB1     		cbz	r3, .L91
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1278              		.loc 1 832 0
 1279 00ae 2046     		mov	r0, r4
 1280              	.LVL129:
 1281 00b0 9847     		blx	r3
ARM GAS  /tmp/ccILxYxn.s 			page 50


 1282              	.LVL130:
 1283 00b2 10E0     		b	.L91
 1284              	.LVL131:
 1285              	.L93:
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1286              		.loc 1 838 0
 1287 00b4 A36C     		ldr	r3, [r4, #72]
 1288 00b6 73B1     		cbz	r3, .L91
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1289              		.loc 1 841 0
 1290 00b8 2046     		mov	r0, r4
 1291              	.LVL132:
 1292 00ba 9847     		blx	r3
 1293              	.LVL133:
 1294 00bc 0BE0     		b	.L91
 1295              	.LVL134:
 1296              	.L92:
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1297              		.loc 1 848 0
 1298 00be 1A68     		ldr	r2, [r3]
 1299 00c0 12F4807F 		tst	r2, #256
 1300 00c4 03D1     		bne	.L94
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1301              		.loc 1 851 0
 1302 00c6 1A68     		ldr	r2, [r3]
 1303 00c8 22F00802 		bic	r2, r2, #8
 1304 00cc 1A60     		str	r2, [r3]
 1305              	.L94:
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1306              		.loc 1 854 0
 1307 00ce 236C     		ldr	r3, [r4, #64]
 1308 00d0 0BB1     		cbz	r3, .L91
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1309              		.loc 1 857 0
 1310 00d2 2046     		mov	r0, r4
 1311              	.LVL135:
 1312 00d4 9847     		blx	r3
 1313              	.LVL136:
 1314              	.L91:
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1315              		.loc 1 863 0
 1316 00d6 E26D     		ldr	r2, [r4, #92]
 1317 00d8 2023     		movs	r3, #32
 1318 00da 9340     		lsls	r3, r3, r2
 1319 00dc 3342     		tst	r3, r6
 1320 00de 52D0     		beq	.L95
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1321              		.loc 1 865 0
 1322 00e0 2268     		ldr	r2, [r4]
 1323 00e2 1268     		ldr	r2, [r2]
 1324 00e4 12F0100F 		tst	r2, #16
 1325 00e8 4DD0     		beq	.L95
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1326              		.loc 1 868 0
 1327 00ea BB60     		str	r3, [r7, #8]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1328              		.loc 1 870 0
ARM GAS  /tmp/ccILxYxn.s 			page 51


 1329 00ec 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 1330 00f0 DBB2     		uxtb	r3, r3
 1331 00f2 052B     		cmp	r3, #5
 1332 00f4 22D1     		bne	.L96
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1333              		.loc 1 873 0
 1334 00f6 2268     		ldr	r2, [r4]
 1335 00f8 1368     		ldr	r3, [r2]
 1336 00fa 23F01603 		bic	r3, r3, #22
 1337 00fe 1360     		str	r3, [r2]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 1338              		.loc 1 874 0
 1339 0100 2268     		ldr	r2, [r4]
 1340 0102 5369     		ldr	r3, [r2, #20]
 1341 0104 23F08003 		bic	r3, r3, #128
 1342 0108 5361     		str	r3, [r2, #20]
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1343              		.loc 1 876 0
 1344 010a 236C     		ldr	r3, [r4, #64]
 1345 010c 0BB9     		cbnz	r3, .L97
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1346              		.loc 1 876 0 is_stmt 0 discriminator 1
 1347 010e A36C     		ldr	r3, [r4, #72]
 1348 0110 23B1     		cbz	r3, .L98
 1349              	.L97:
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1350              		.loc 1 878 0 is_stmt 1
 1351 0112 2268     		ldr	r2, [r4]
 1352 0114 1368     		ldr	r3, [r2]
 1353 0116 23F00803 		bic	r3, r3, #8
 1354 011a 1360     		str	r3, [r2]
 1355              	.L98:
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1356              		.loc 1 882 0
 1357 011c E26D     		ldr	r2, [r4, #92]
 1358 011e 3F23     		movs	r3, #63
 1359 0120 9340     		lsls	r3, r3, r2
 1360 0122 BB60     		str	r3, [r7, #8]
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1361              		.loc 1 885 0
 1362 0124 0023     		movs	r3, #0
 1363 0126 84F83430 		strb	r3, [r4, #52]
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1364              		.loc 1 888 0
 1365 012a 0123     		movs	r3, #1
 1366 012c 84F83530 		strb	r3, [r4, #53]
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1367              		.loc 1 890 0
 1368 0130 236D     		ldr	r3, [r4, #80]
 1369 0132 002B     		cmp	r3, #0
 1370 0134 49D0     		beq	.L87
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1371              		.loc 1 892 0
 1372 0136 2046     		mov	r0, r4
 1373 0138 9847     		blx	r3
 1374              	.LVL137:
 1375 013a 46E0     		b	.L87
ARM GAS  /tmp/ccILxYxn.s 			page 52


 1376              	.L96:
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1377              		.loc 1 897 0
 1378 013c 2368     		ldr	r3, [r4]
 1379 013e 1A68     		ldr	r2, [r3]
 1380 0140 12F4802F 		tst	r2, #262144
 1381 0144 0DD0     		beq	.L100
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1382              		.loc 1 900 0
 1383 0146 1B68     		ldr	r3, [r3]
 1384 0148 13F4002F 		tst	r3, #524288
 1385 014c 04D1     		bne	.L101
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1386              		.loc 1 902 0
 1387 014e 636C     		ldr	r3, [r4, #68]
 1388 0150 CBB1     		cbz	r3, .L95
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1389              		.loc 1 905 0
 1390 0152 2046     		mov	r0, r4
 1391 0154 9847     		blx	r3
 1392              	.LVL138:
 1393 0156 16E0     		b	.L95
 1394              	.L101:
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1395              		.loc 1 911 0
 1396 0158 E36B     		ldr	r3, [r4, #60]
 1397 015a A3B1     		cbz	r3, .L95
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1398              		.loc 1 914 0
 1399 015c 2046     		mov	r0, r4
 1400 015e 9847     		blx	r3
 1401              	.LVL139:
 1402 0160 11E0     		b	.L95
 1403              	.L100:
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1404              		.loc 1 921 0
 1405 0162 1A68     		ldr	r2, [r3]
 1406 0164 12F4807F 		tst	r2, #256
 1407 0168 09D1     		bne	.L102
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1408              		.loc 1 924 0
 1409 016a 1A68     		ldr	r2, [r3]
 1410 016c 22F01002 		bic	r2, r2, #16
 1411 0170 1A60     		str	r2, [r3]
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1412              		.loc 1 927 0
 1413 0172 0023     		movs	r3, #0
 1414 0174 84F83430 		strb	r3, [r4, #52]
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1415              		.loc 1 930 0
 1416 0178 0123     		movs	r3, #1
 1417 017a 84F83530 		strb	r3, [r4, #53]
 1418              	.L102:
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1419              		.loc 1 933 0
 1420 017e E36B     		ldr	r3, [r4, #60]
 1421 0180 0BB1     		cbz	r3, .L95
ARM GAS  /tmp/ccILxYxn.s 			page 53


 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1422              		.loc 1 936 0
 1423 0182 2046     		mov	r0, r4
 1424 0184 9847     		blx	r3
 1425              	.LVL140:
 1426              	.L95:
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1427              		.loc 1 943 0
 1428 0186 636D     		ldr	r3, [r4, #84]
 1429 0188 FBB1     		cbz	r3, .L87
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1430              		.loc 1 945 0
 1431 018a 636D     		ldr	r3, [r4, #84]
 1432 018c 13F0010F 		tst	r3, #1
 1433 0190 17D0     		beq	.L103
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1434              		.loc 1 947 0
 1435 0192 0523     		movs	r3, #5
 1436 0194 84F83530 		strb	r3, [r4, #53]
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1437              		.loc 1 950 0
 1438 0198 2268     		ldr	r2, [r4]
 1439 019a 1368     		ldr	r3, [r2]
 1440 019c 23F00103 		bic	r3, r3, #1
 1441 01a0 1360     		str	r3, [r2]
 1442              	.L105:
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1443              		.loc 1 954 0
 1444 01a2 019B     		ldr	r3, [sp, #4]
 1445 01a4 0133     		adds	r3, r3, #1
 1446 01a6 0193     		str	r3, [sp, #4]
 1447 01a8 9D42     		cmp	r5, r3
 1448 01aa 04D3     		bcc	.L104
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1449              		.loc 1 959 0
 1450 01ac 2368     		ldr	r3, [r4]
 1451 01ae 1B68     		ldr	r3, [r3]
 1452 01b0 13F0010F 		tst	r3, #1
 1453 01b4 F5D1     		bne	.L105
 1454              	.L104:
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1455              		.loc 1 962 0
 1456 01b6 0023     		movs	r3, #0
 1457 01b8 84F83430 		strb	r3, [r4, #52]
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1458              		.loc 1 965 0
 1459 01bc 0123     		movs	r3, #1
 1460 01be 84F83530 		strb	r3, [r4, #53]
 1461              	.L103:
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1462              		.loc 1 968 0
 1463 01c2 E36C     		ldr	r3, [r4, #76]
 1464 01c4 0BB1     		cbz	r3, .L87
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1465              		.loc 1 971 0
 1466 01c6 2046     		mov	r0, r4
 1467 01c8 9847     		blx	r3
ARM GAS  /tmp/ccILxYxn.s 			page 54


 1468              	.LVL141:
 1469              	.L87:
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1470              		.loc 1 974 0
 1471 01ca 03B0     		add	sp, sp, #12
 1472              	.LCFI12:
 1473              		.cfi_def_cfa_offset 20
 1474              		@ sp needed
 1475 01cc F0BD     		pop	{r4, r5, r6, r7, pc}
 1476              	.LVL142:
 1477              	.L108:
 1478 01ce 00BF     		.align	2
 1479              	.L107:
 1480 01d0 00000000 		.word	SystemCoreClock
 1481 01d4 B5814E1B 		.word	458129845
 1482              		.cfi_endproc
 1483              	.LFE147:
 1485              		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1486              		.align	2
 1487              		.global	HAL_DMA_RegisterCallback
 1488              		.thumb
 1489              		.thumb_func
 1491              	HAL_DMA_RegisterCallback:
 1492              	.LFB148:
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1493              		.loc 1 987 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 1497              		@ link register save eliminated.
 1498              	.LVL143:
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1499              		.loc 1 992 0
 1500 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1501 0004 012B     		cmp	r3, #1
 1502 0006 28D0     		beq	.L119
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1503              		.loc 1 992 0 is_stmt 0 discriminator 2
 1504 0008 0123     		movs	r3, #1
 1505 000a 80F83430 		strb	r3, [r0, #52]
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1506              		.loc 1 994 0 is_stmt 1 discriminator 2
 1507 000e 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1508 0012 DBB2     		uxtb	r3, r3
 1509 0014 012B     		cmp	r3, #1
 1510 0016 18D1     		bne	.L120
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1511              		.loc 1 996 0
 1512 0018 0529     		cmp	r1, #5
 1513 001a 18D8     		bhi	.L121
 1514 001c DFE801F0 		tbb	[pc, r1]
 1515              	.L113:
 1516 0020 03       		.byte	(.L112-.L113)/2
 1517 0021 06       		.byte	(.L114-.L113)/2
 1518 0022 09       		.byte	(.L115-.L113)/2
 1519 0023 0C       		.byte	(.L116-.L113)/2
 1520 0024 0F       		.byte	(.L117-.L113)/2
ARM GAS  /tmp/ccILxYxn.s 			page 55


 1521 0025 12       		.byte	(.L118-.L113)/2
 1522              		.p2align 1
 1523              	.L112:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1524              		.loc 1 999 0
 1525 0026 C263     		str	r2, [r0, #60]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1526              		.loc 1 989 0
 1527 0028 0023     		movs	r3, #0
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1528              		.loc 1 1000 0
 1529 002a 11E0     		b	.L111
 1530              	.L114:
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1531              		.loc 1 1003 0
 1532 002c 0264     		str	r2, [r0, #64]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1533              		.loc 1 989 0
 1534 002e 0023     		movs	r3, #0
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1535              		.loc 1 1004 0
 1536 0030 0EE0     		b	.L111
 1537              	.L115:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1538              		.loc 1 1007 0
 1539 0032 4264     		str	r2, [r0, #68]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1540              		.loc 1 989 0
 1541 0034 0023     		movs	r3, #0
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1542              		.loc 1 1008 0
 1543 0036 0BE0     		b	.L111
 1544              	.L116:
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1545              		.loc 1 1011 0
 1546 0038 8264     		str	r2, [r0, #72]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1547              		.loc 1 989 0
 1548 003a 0023     		movs	r3, #0
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1549              		.loc 1 1012 0
 1550 003c 08E0     		b	.L111
 1551              	.L117:
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1552              		.loc 1 1015 0
 1553 003e C264     		str	r2, [r0, #76]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1554              		.loc 1 989 0
 1555 0040 0023     		movs	r3, #0
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1556              		.loc 1 1016 0
 1557 0042 05E0     		b	.L111
 1558              	.L118:
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1559              		.loc 1 1019 0
 1560 0044 0265     		str	r2, [r0, #80]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccILxYxn.s 			page 56


 1561              		.loc 1 989 0
 1562 0046 0023     		movs	r3, #0
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1563              		.loc 1 1020 0
 1564 0048 02E0     		b	.L111
 1565              	.L120:
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1566              		.loc 1 1029 0
 1567 004a 0123     		movs	r3, #1
 1568 004c 00E0     		b	.L111
 1569              	.L121:
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1570              		.loc 1 989 0
 1571 004e 0023     		movs	r3, #0
 1572              	.L111:
 1573              	.LVL144:
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1574              		.loc 1 1033 0
 1575 0050 0022     		movs	r2, #0
 1576              	.LVL145:
 1577 0052 80F83420 		strb	r2, [r0, #52]
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1578              		.loc 1 1035 0
 1579 0056 1846     		mov	r0, r3
 1580              	.LVL146:
 1581 0058 7047     		bx	lr
 1582              	.LVL147:
 1583              	.L119:
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1584              		.loc 1 992 0
 1585 005a 0220     		movs	r0, #2
 1586              	.LVL148:
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1587              		.loc 1 1036 0
 1588 005c 7047     		bx	lr
 1589              		.cfi_endproc
 1590              	.LFE148:
 1592 005e 00BF     		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1593              		.align	2
 1594              		.global	HAL_DMA_UnRegisterCallback
 1595              		.thumb
 1596              		.thumb_func
 1598              	HAL_DMA_UnRegisterCallback:
 1599              	.LFB149:
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1600              		.loc 1 1047 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 0
 1603              		@ frame_needed = 0, uses_anonymous_args = 0
 1604              		@ link register save eliminated.
 1605              	.LVL149:
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1606              		.loc 1 1051 0
 1607 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1608 0004 012B     		cmp	r3, #1
 1609 0006 31D0     		beq	.L133
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
ARM GAS  /tmp/ccILxYxn.s 			page 57


 1610              		.loc 1 1051 0 is_stmt 0 discriminator 2
 1611 0008 0123     		movs	r3, #1
 1612 000a 80F83430 		strb	r3, [r0, #52]
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1613              		.loc 1 1053 0 is_stmt 1 discriminator 2
 1614 000e 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1615 0012 DBB2     		uxtb	r3, r3
 1616 0014 012B     		cmp	r3, #1
 1617 0016 21D1     		bne	.L134
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1618              		.loc 1 1055 0
 1619 0018 0629     		cmp	r1, #6
 1620 001a 21D8     		bhi	.L135
 1621 001c DFE801F0 		tbb	[pc, r1]
 1622              	.L126:
 1623 0020 04       		.byte	(.L125-.L126)/2
 1624 0021 07       		.byte	(.L127-.L126)/2
 1625 0022 0A       		.byte	(.L128-.L126)/2
 1626 0023 0D       		.byte	(.L129-.L126)/2
 1627 0024 10       		.byte	(.L130-.L126)/2
 1628 0025 13       		.byte	(.L131-.L126)/2
 1629 0026 16       		.byte	(.L132-.L126)/2
 1630 0027 00       		.p2align 1
 1631              	.L125:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1632              		.loc 1 1058 0
 1633 0028 0023     		movs	r3, #0
 1634 002a C363     		str	r3, [r0, #60]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1635              		.loc 1 1059 0
 1636 002c 19E0     		b	.L124
 1637              	.L127:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1638              		.loc 1 1062 0
 1639 002e 0023     		movs	r3, #0
 1640 0030 0364     		str	r3, [r0, #64]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1641              		.loc 1 1063 0
 1642 0032 16E0     		b	.L124
 1643              	.L128:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1644              		.loc 1 1066 0
 1645 0034 0023     		movs	r3, #0
 1646 0036 4364     		str	r3, [r0, #68]
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1647              		.loc 1 1067 0
 1648 0038 13E0     		b	.L124
 1649              	.L129:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1650              		.loc 1 1070 0
 1651 003a 0023     		movs	r3, #0
 1652 003c 8364     		str	r3, [r0, #72]
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1653              		.loc 1 1071 0
 1654 003e 10E0     		b	.L124
 1655              	.L130:
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
ARM GAS  /tmp/ccILxYxn.s 			page 58


 1656              		.loc 1 1074 0
 1657 0040 0023     		movs	r3, #0
 1658 0042 C364     		str	r3, [r0, #76]
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1659              		.loc 1 1075 0
 1660 0044 0DE0     		b	.L124
 1661              	.L131:
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1662              		.loc 1 1078 0
 1663 0046 0023     		movs	r3, #0
 1664 0048 0365     		str	r3, [r0, #80]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1665              		.loc 1 1079 0
 1666 004a 0AE0     		b	.L124
 1667              	.L132:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1668              		.loc 1 1082 0
 1669 004c 0023     		movs	r3, #0
 1670 004e C363     		str	r3, [r0, #60]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1671              		.loc 1 1083 0
 1672 0050 0364     		str	r3, [r0, #64]
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1673              		.loc 1 1084 0
 1674 0052 4364     		str	r3, [r0, #68]
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1675              		.loc 1 1085 0
 1676 0054 8364     		str	r3, [r0, #72]
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1677              		.loc 1 1086 0
 1678 0056 C364     		str	r3, [r0, #76]
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1679              		.loc 1 1087 0
 1680 0058 0365     		str	r3, [r0, #80]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1681              		.loc 1 1088 0
 1682 005a 02E0     		b	.L124
 1683              	.L134:
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1684              		.loc 1 1097 0
 1685 005c 0123     		movs	r3, #1
 1686 005e 00E0     		b	.L124
 1687              	.L135:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1688              		.loc 1 1091 0
 1689 0060 0123     		movs	r3, #1
 1690              	.L124:
 1691              	.LVL150:
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1692              		.loc 1 1101 0
 1693 0062 0022     		movs	r2, #0
 1694 0064 80F83420 		strb	r2, [r0, #52]
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1695              		.loc 1 1103 0
 1696 0068 1846     		mov	r0, r3
 1697              	.LVL151:
 1698 006a 7047     		bx	lr
ARM GAS  /tmp/ccILxYxn.s 			page 59


 1699              	.LVL152:
 1700              	.L133:
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1701              		.loc 1 1051 0
 1702 006c 0220     		movs	r0, #2
 1703              	.LVL153:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1704              		.loc 1 1104 0
 1705 006e 7047     		bx	lr
 1706              		.cfi_endproc
 1707              	.LFE149:
 1709              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1710              		.align	2
 1711              		.global	HAL_DMA_GetState
 1712              		.thumb
 1713              		.thumb_func
 1715              	HAL_DMA_GetState:
 1716              	.LFB150:
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
 1717              		.loc 1 1132 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721              		@ link register save eliminated.
 1722              	.LVL154:
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1723              		.loc 1 1133 0
 1724 0000 90F83500 		ldrb	r0, [r0, #53]	@ zero_extendqisi2
 1725              	.LVL155:
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1726              		.loc 1 1134 0
 1727 0004 7047     		bx	lr
 1728              		.cfi_endproc
 1729              	.LFE150:
 1731 0006 00BF     		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1732              		.align	2
 1733              		.global	HAL_DMA_GetError
 1734              		.thumb
 1735              		.thumb_func
 1737              	HAL_DMA_GetError:
 1738              	.LFB151:
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
 1739              		.loc 1 1143 0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 0
 1742              		@ frame_needed = 0, uses_anonymous_args = 0
 1743              		@ link register save eliminated.
 1744              	.LVL156:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1745              		.loc 1 1144 0
 1746 0000 406D     		ldr	r0, [r0, #84]
 1747              	.LVL157:
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1748              		.loc 1 1145 0
 1749 0002 7047     		bx	lr
 1750              		.cfi_endproc
 1751              	.LFE151:
ARM GAS  /tmp/ccILxYxn.s 			page 60


 1753              		.section	.rodata.flagBitshiftOffset.9541,"a",%progbits
 1754              		.align	2
 1755              		.set	.LANCHOR0,. + 0
 1758              	flagBitshiftOffset.9541:
 1759 0000 00       		.byte	0
 1760 0001 06       		.byte	6
 1761 0002 10       		.byte	16
 1762 0003 16       		.byte	22
 1763 0004 00       		.byte	0
 1764 0005 06       		.byte	6
 1765 0006 10       		.byte	16
 1766 0007 16       		.byte	22
 1767              		.text
 1768              	.Letext0:
 1769              		.file 2 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_ty
 1770              		.file 3 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 1771              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1772              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1773              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1774              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1775              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1776              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1777              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccILxYxn.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_dma.c
     /tmp/ccILxYxn.s:20     .text.DMA_SetConfig:00000000 $t
     /tmp/ccILxYxn.s:24     .text.DMA_SetConfig:00000000 DMA_SetConfig
     /tmp/ccILxYxn.s:80     .text.DMA_CalcBaseAndBitshift:00000000 $t
     /tmp/ccILxYxn.s:84     .text.DMA_CalcBaseAndBitshift:00000000 DMA_CalcBaseAndBitshift
     /tmp/ccILxYxn.s:129    .text.DMA_CalcBaseAndBitshift:0000002c $d
     /tmp/ccILxYxn.s:136    .text.DMA_CheckFifoParam:00000000 $t
     /tmp/ccILxYxn.s:140    .text.DMA_CheckFifoParam:00000000 DMA_CheckFifoParam
     /tmp/ccILxYxn.s:191    .text.DMA_CheckFifoParam:00000036 $d
     /tmp/ccILxYxn.s:195    .text.DMA_CheckFifoParam:0000003a $t
     /tmp/ccILxYxn.s:297    .text.HAL_DMA_Init:00000000 $t
     /tmp/ccILxYxn.s:302    .text.HAL_DMA_Init:00000000 HAL_DMA_Init
     /tmp/ccILxYxn.s:475    .text.HAL_DMA_Init:000000c8 $d
     /tmp/ccILxYxn.s:480    .text.HAL_DMA_DeInit:00000000 $t
     /tmp/ccILxYxn.s:485    .text.HAL_DMA_DeInit:00000000 HAL_DMA_DeInit
     /tmp/ccILxYxn.s:594    .text.HAL_DMA_Start:00000000 $t
     /tmp/ccILxYxn.s:599    .text.HAL_DMA_Start:00000000 HAL_DMA_Start
     /tmp/ccILxYxn.s:669    .text.HAL_DMA_Start_IT:00000000 $t
     /tmp/ccILxYxn.s:674    .text.HAL_DMA_Start_IT:00000000 HAL_DMA_Start_IT
     /tmp/ccILxYxn.s:771    .text.HAL_DMA_Abort:00000000 $t
     /tmp/ccILxYxn.s:776    .text.HAL_DMA_Abort:00000000 HAL_DMA_Abort
     /tmp/ccILxYxn.s:887    .text.HAL_DMA_Abort_IT:00000000 $t
     /tmp/ccILxYxn.s:892    .text.HAL_DMA_Abort_IT:00000000 HAL_DMA_Abort_IT
     /tmp/ccILxYxn.s:931    .text.HAL_DMA_PollForTransfer:00000000 $t
     /tmp/ccILxYxn.s:936    .text.HAL_DMA_PollForTransfer:00000000 HAL_DMA_PollForTransfer
     /tmp/ccILxYxn.s:1152   .text.HAL_DMA_IRQHandler:00000000 $t
     /tmp/ccILxYxn.s:1157   .text.HAL_DMA_IRQHandler:00000000 HAL_DMA_IRQHandler
     /tmp/ccILxYxn.s:1480   .text.HAL_DMA_IRQHandler:000001d0 $d
     /tmp/ccILxYxn.s:1486   .text.HAL_DMA_RegisterCallback:00000000 $t
     /tmp/ccILxYxn.s:1491   .text.HAL_DMA_RegisterCallback:00000000 HAL_DMA_RegisterCallback
     /tmp/ccILxYxn.s:1516   .text.HAL_DMA_RegisterCallback:00000020 $d
     /tmp/ccILxYxn.s:1522   .text.HAL_DMA_RegisterCallback:00000026 $t
     /tmp/ccILxYxn.s:1593   .text.HAL_DMA_UnRegisterCallback:00000000 $t
     /tmp/ccILxYxn.s:1598   .text.HAL_DMA_UnRegisterCallback:00000000 HAL_DMA_UnRegisterCallback
     /tmp/ccILxYxn.s:1623   .text.HAL_DMA_UnRegisterCallback:00000020 $d
     /tmp/ccILxYxn.s:1710   .text.HAL_DMA_GetState:00000000 $t
     /tmp/ccILxYxn.s:1715   .text.HAL_DMA_GetState:00000000 HAL_DMA_GetState
     /tmp/ccILxYxn.s:1732   .text.HAL_DMA_GetError:00000000 $t
     /tmp/ccILxYxn.s:1737   .text.HAL_DMA_GetError:00000000 HAL_DMA_GetError
     /tmp/ccILxYxn.s:1754   .rodata.flagBitshiftOffset.9541:00000000 $d
     /tmp/ccILxYxn.s:1758   .rodata.flagBitshiftOffset.9541:00000000 flagBitshiftOffset.9541
                     .debug_frame:00000010 $d
     /tmp/ccILxYxn.s:1630   .text.HAL_DMA_UnRegisterCallback:00000027 $d
     /tmp/ccILxYxn.s:1630   .text.HAL_DMA_UnRegisterCallback:00000028 $t

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
