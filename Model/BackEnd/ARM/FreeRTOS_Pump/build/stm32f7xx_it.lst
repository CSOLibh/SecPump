ARM GAS  /tmp/ccQ8zQ0h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f7xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB140:
  27              		.file 1 "Src/stm32f7xx_it.c"
   1:Src/stm32f7xx_it.c **** /**
   2:Src/stm32f7xx_it.c ****   ******************************************************************************
   3:Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   4:Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f7xx_it.c ****   ******************************************************************************
   6:Src/stm32f7xx_it.c ****   *
   7:Src/stm32f7xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f7xx_it.c ****   *
   9:Src/stm32f7xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f7xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f7xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f7xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f7xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f7xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f7xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f7xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f7xx_it.c ****   *
  20:Src/stm32f7xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f7xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f7xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f7xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f7xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f7xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f7xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f7xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f7xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f7xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f7xx_it.c ****   *
  31:Src/stm32f7xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccQ8zQ0h.s 			page 2


  32:Src/stm32f7xx_it.c ****   */
  33:Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f7xx_it.c **** #include "stm32f7xx_hal.h"
  35:Src/stm32f7xx_it.c **** #include "stm32f7xx.h"
  36:Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  37:Src/stm32f7xx_it.c **** #include "cmsis_os.h"
  38:Src/stm32f7xx_it.c **** 
  39:Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  40:Src/stm32f7xx_it.c **** 
  41:Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32f7xx_it.c **** 
  43:Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart3;
  45:Src/stm32f7xx_it.c **** 
  46:Src/stm32f7xx_it.c **** /******************************************************************************/
  47:Src/stm32f7xx_it.c **** /*            Cortex-M7 Processor Interruption and Exception Handlers         */ 
  48:Src/stm32f7xx_it.c **** /******************************************************************************/
  49:Src/stm32f7xx_it.c **** 
  50:Src/stm32f7xx_it.c **** /**
  51:Src/stm32f7xx_it.c **** * @brief This function handles Non maskable interrupt.
  52:Src/stm32f7xx_it.c **** */
  53:Src/stm32f7xx_it.c **** void NMI_Handler(void)
  54:Src/stm32f7xx_it.c **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE140:
  37 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	2
  39              		.global	HardFault_Handler
  40              		.thumb
  41              		.thumb_func
  43              	HardFault_Handler:
  44              	.LFB141:
  55:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  56:Src/stm32f7xx_it.c **** 
  57:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  58:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  59:Src/stm32f7xx_it.c **** 
  60:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  61:Src/stm32f7xx_it.c **** }
  62:Src/stm32f7xx_it.c **** 
  63:Src/stm32f7xx_it.c **** /**
  64:Src/stm32f7xx_it.c **** * @brief This function handles Hard fault interrupt.
  65:Src/stm32f7xx_it.c **** */
  66:Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  67:Src/stm32f7xx_it.c **** {
  45              		.loc 1 67 0
  46              		.cfi_startproc
  47              		@ Volatile: function does not return.
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
ARM GAS  /tmp/ccQ8zQ0h.s 			page 3


  51              	.L3:
  68:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  69:Src/stm32f7xx_it.c **** 
  70:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  71:Src/stm32f7xx_it.c ****   while (1)
  72:Src/stm32f7xx_it.c ****   {
  73:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  74:Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  75:Src/stm32f7xx_it.c ****   }
  52              		.loc 1 75 0 discriminator 1
  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE141:
  57 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	2
  59              		.global	MemManage_Handler
  60              		.thumb
  61              		.thumb_func
  63              	MemManage_Handler:
  64              	.LFB142:
  76:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  77:Src/stm32f7xx_it.c **** 
  78:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  79:Src/stm32f7xx_it.c **** }
  80:Src/stm32f7xx_it.c **** 
  81:Src/stm32f7xx_it.c **** /**
  82:Src/stm32f7xx_it.c **** * @brief This function handles Memory management fault.
  83:Src/stm32f7xx_it.c **** */
  84:Src/stm32f7xx_it.c **** void MemManage_Handler(void)
  85:Src/stm32f7xx_it.c **** {
  65              		.loc 1 85 0
  66              		.cfi_startproc
  67              		@ Volatile: function does not return.
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.L5:
  86:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  87:Src/stm32f7xx_it.c **** 
  88:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  89:Src/stm32f7xx_it.c ****   while (1)
  90:Src/stm32f7xx_it.c ****   {
  91:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  92:Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  93:Src/stm32f7xx_it.c ****   }
  72              		.loc 1 93 0 discriminator 1
  73 0000 FEE7     		b	.L5
  74              		.cfi_endproc
  75              	.LFE142:
  77 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	BusFault_Handler
  80              		.thumb
  81              		.thumb_func
  83              	BusFault_Handler:
  84              	.LFB143:
  94:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
ARM GAS  /tmp/ccQ8zQ0h.s 			page 4


  95:Src/stm32f7xx_it.c **** 
  96:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  97:Src/stm32f7xx_it.c **** }
  98:Src/stm32f7xx_it.c **** 
  99:Src/stm32f7xx_it.c **** /**
 100:Src/stm32f7xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 101:Src/stm32f7xx_it.c **** */
 102:Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 103:Src/stm32f7xx_it.c **** {
  85              		.loc 1 103 0
  86              		.cfi_startproc
  87              		@ Volatile: function does not return.
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.L7:
 104:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 105:Src/stm32f7xx_it.c **** 
 106:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 107:Src/stm32f7xx_it.c ****   while (1)
 108:Src/stm32f7xx_it.c ****   {
 109:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 110:Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 111:Src/stm32f7xx_it.c ****   }
  92              		.loc 1 111 0 discriminator 1
  93 0000 FEE7     		b	.L7
  94              		.cfi_endproc
  95              	.LFE143:
  97 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  98              		.align	2
  99              		.global	UsageFault_Handler
 100              		.thumb
 101              		.thumb_func
 103              	UsageFault_Handler:
 104              	.LFB144:
 112:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 113:Src/stm32f7xx_it.c **** 
 114:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 115:Src/stm32f7xx_it.c **** }
 116:Src/stm32f7xx_it.c **** 
 117:Src/stm32f7xx_it.c **** /**
 118:Src/stm32f7xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 119:Src/stm32f7xx_it.c **** */
 120:Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 121:Src/stm32f7xx_it.c **** {
 105              		.loc 1 121 0
 106              		.cfi_startproc
 107              		@ Volatile: function does not return.
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111              	.L9:
 122:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 123:Src/stm32f7xx_it.c **** 
 124:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 125:Src/stm32f7xx_it.c ****   while (1)
 126:Src/stm32f7xx_it.c ****   {
ARM GAS  /tmp/ccQ8zQ0h.s 			page 5


 127:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 128:Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 129:Src/stm32f7xx_it.c ****   }
 112              		.loc 1 129 0 discriminator 1
 113 0000 FEE7     		b	.L9
 114              		.cfi_endproc
 115              	.LFE144:
 117 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 118              		.align	2
 119              		.global	DebugMon_Handler
 120              		.thumb
 121              		.thumb_func
 123              	DebugMon_Handler:
 124              	.LFB145:
 130:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 131:Src/stm32f7xx_it.c **** 
 132:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 133:Src/stm32f7xx_it.c **** }
 134:Src/stm32f7xx_it.c **** 
 135:Src/stm32f7xx_it.c **** /**
 136:Src/stm32f7xx_it.c **** * @brief This function handles Debug monitor.
 137:Src/stm32f7xx_it.c **** */
 138:Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 139:Src/stm32f7xx_it.c **** {
 125              		.loc 1 139 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130 0000 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE145:
 134 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 135              		.align	2
 136              		.global	SysTick_Handler
 137              		.thumb
 138              		.thumb_func
 140              	SysTick_Handler:
 141              	.LFB146:
 140:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 141:Src/stm32f7xx_it.c **** 
 142:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 143:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 144:Src/stm32f7xx_it.c **** 
 145:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 146:Src/stm32f7xx_it.c **** }
 147:Src/stm32f7xx_it.c **** 
 148:Src/stm32f7xx_it.c **** /**
 149:Src/stm32f7xx_it.c **** * @brief This function handles System tick timer.
 150:Src/stm32f7xx_it.c **** */
 151:Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 152:Src/stm32f7xx_it.c **** {
 142              		.loc 1 152 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		.loc 1 152 0
ARM GAS  /tmp/ccQ8zQ0h.s 			page 6


 147 0000 08B5     		push	{r3, lr}
 148              	.LCFI0:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
 153:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 154:Src/stm32f7xx_it.c **** 
 155:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 156:Src/stm32f7xx_it.c ****   HAL_IncTick();
 152              		.loc 1 156 0
 153 0002 FFF7FEFF 		bl	HAL_IncTick
 154              	.LVL0:
 157:Src/stm32f7xx_it.c ****   osSystickHandler();
 155              		.loc 1 157 0
 156 0006 FFF7FEFF 		bl	osSystickHandler
 157              	.LVL1:
 158 000a 08BD     		pop	{r3, pc}
 159              		.cfi_endproc
 160              	.LFE146:
 162              		.section	.text.USART3_IRQHandler,"ax",%progbits
 163              		.align	2
 164              		.global	USART3_IRQHandler
 165              		.thumb
 166              		.thumb_func
 168              	USART3_IRQHandler:
 169              	.LFB147:
 158:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 159:Src/stm32f7xx_it.c **** 
 160:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 161:Src/stm32f7xx_it.c **** }
 162:Src/stm32f7xx_it.c **** 
 163:Src/stm32f7xx_it.c **** /******************************************************************************/
 164:Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 165:Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 166:Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 167:Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 168:Src/stm32f7xx_it.c **** /******************************************************************************/
 169:Src/stm32f7xx_it.c **** 
 170:Src/stm32f7xx_it.c **** /**
 171:Src/stm32f7xx_it.c **** * @brief This function handles USART3 global interrupt.
 172:Src/stm32f7xx_it.c **** */
 173:Src/stm32f7xx_it.c **** void USART3_IRQHandler(void)
 174:Src/stm32f7xx_it.c **** {
 170              		.loc 1 174 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 08B5     		push	{r3, lr}
 175              	.LCFI1:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 3, -8
 178              		.cfi_offset 14, -4
 175:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 176:Src/stm32f7xx_it.c **** 
 177:Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 178:Src/stm32f7xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 179              		.loc 1 178 0
ARM GAS  /tmp/ccQ8zQ0h.s 			page 7


 180 0002 0248     		ldr	r0, .L15
 181 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 182              	.LVL2:
 183 0008 08BD     		pop	{r3, pc}
 184              	.L16:
 185 000a 00BF     		.align	2
 186              	.L15:
 187 000c 00000000 		.word	huart3
 188              		.cfi_endproc
 189              	.LFE147:
 191              		.text
 192              	.Letext0:
 193              		.file 2 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_ty
 194              		.file 3 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 195              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 196              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 197              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 198              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 199              		.file 8 "Drivers/CMSIS/Include/core_cm7.h"
 200              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 201              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccQ8zQ0h.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
     /tmp/ccQ8zQ0h.s:20     .text.NMI_Handler:00000000 $t
     /tmp/ccQ8zQ0h.s:25     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccQ8zQ0h.s:38     .text.HardFault_Handler:00000000 $t
     /tmp/ccQ8zQ0h.s:43     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccQ8zQ0h.s:58     .text.MemManage_Handler:00000000 $t
     /tmp/ccQ8zQ0h.s:63     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/ccQ8zQ0h.s:78     .text.BusFault_Handler:00000000 $t
     /tmp/ccQ8zQ0h.s:83     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/ccQ8zQ0h.s:98     .text.UsageFault_Handler:00000000 $t
     /tmp/ccQ8zQ0h.s:103    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/ccQ8zQ0h.s:118    .text.DebugMon_Handler:00000000 $t
     /tmp/ccQ8zQ0h.s:123    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/ccQ8zQ0h.s:135    .text.SysTick_Handler:00000000 $t
     /tmp/ccQ8zQ0h.s:140    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccQ8zQ0h.s:163    .text.USART3_IRQHandler:00000000 $t
     /tmp/ccQ8zQ0h.s:168    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
     /tmp/ccQ8zQ0h.s:187    .text.USART3_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
osSystickHandler
HAL_UART_IRQHandler
huart3
