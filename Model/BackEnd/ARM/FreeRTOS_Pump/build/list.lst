ARM GAS  /tmp/cceFE19L.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"list.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.vListInitialise,"ax",%progbits
  20              		.align	2
  21              		.global	vListInitialise
  22              		.thumb
  23              		.thumb_func
  25              	vListInitialise:
  26              	.LFB140:
  27              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/list.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
ARM GAS  /tmp/cceFE19L.s 			page 2


  32:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/list.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "stm32f7xx_hal.h"
  73:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  74:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "list.h"
  75:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  76:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  77:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  78:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  79:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  80:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  81:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  28              		.loc 1 81 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  82:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
ARM GAS  /tmp/cceFE19L.s 			page 3


  83:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  84:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	as the only list entry. */
  85:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list struc
  34              		.loc 1 85 0
  35 0000 00F10803 		add	r3, r0, #8
  36 0004 4360     		str	r3, [r0, #4]
  86:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  87:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  88:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  89:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  37              		.loc 1 89 0
  38 0006 4FF0FF32 		mov	r2, #-1
  39 000a 8260     		str	r2, [r0, #8]
  90:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  92:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	when the list is empty. */
  93:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list
  40              		.loc 1 93 0
  41 000c C360     		str	r3, [r0, #12]
  94:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini l
  42              		.loc 1 94 0
  43 000e 0361     		str	r3, [r0, #16]
  95:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  44              		.loc 1 96 0
  45 0010 0023     		movs	r3, #0
  46 0012 0360     		str	r3, [r0]
  47 0014 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE140:
  51 0016 00BF     		.section	.text.vListInitialiseItem,"ax",%progbits
  52              		.align	2
  53              		.global	vListInitialiseItem
  54              		.thumb
  55              		.thumb_func
  57              	vListInitialiseItem:
  58              	.LFB141:
  97:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  98:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  99:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
 100:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
 101:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
 102:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 103:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 104:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 105:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
 106:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  59              		.loc 1 106 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL1:
 107:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
 108:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItem->pvContainer = NULL;
  65              		.loc 1 108 0
  66 0000 0023     		movs	r3, #0
ARM GAS  /tmp/cceFE19L.s 			page 4


  67 0002 0361     		str	r3, [r0, #16]
  68 0004 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE141:
  72 0006 00BF     		.section	.text.vListInsertEnd,"ax",%progbits
  73              		.align	2
  74              		.global	vListInsertEnd
  75              		.thumb
  76              		.thumb_func
  78              	vListInsertEnd:
  79              	.LFB142:
 109:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 110:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
 111:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
 112:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
 113:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
 114:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 115:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 116:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
 118:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  80              		.loc 1 118 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL2:
 119:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
  86              		.loc 1 119 0
  87 0000 4368     		ldr	r3, [r0, #4]
  88              	.LVL3:
 120:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 122:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 123:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 125:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 126:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
 128:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
 129:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
 130:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
  89              		.loc 1 130 0
  90 0002 4B60     		str	r3, [r1, #4]
 131:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
  91              		.loc 1 131 0
  92 0004 9A68     		ldr	r2, [r3, #8]
  93 0006 8A60     		str	r2, [r1, #8]
 132:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 134:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
  94              		.loc 1 136 0
  95 0008 9A68     		ldr	r2, [r3, #8]
  96 000a 5160     		str	r1, [r2, #4]
 137:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
ARM GAS  /tmp/cceFE19L.s 			page 5


  97              		.loc 1 137 0
  98 000c 9960     		str	r1, [r3, #8]
 138:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
 140:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
  99              		.loc 1 140 0
 100 000e 0861     		str	r0, [r1, #16]
 141:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 101              		.loc 1 142 0
 102 0010 0368     		ldr	r3, [r0]
 103              	.LVL4:
 104 0012 0133     		adds	r3, r3, #1
 105 0014 0360     		str	r3, [r0]
 106 0016 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE142:
 110              		.section	.text.vListInsert,"ax",%progbits
 111              		.align	2
 112              		.global	vListInsert
 113              		.thumb
 114              		.thumb_func
 116              	vListInsert:
 117              	.LFB143:
 143:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 144:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 145:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 147:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 118              		.loc 1 147 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL5:
 124 0000 30B4     		push	{r4, r5}
 125              	.LCFI0:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 4, -8
 128              		.cfi_offset 5, -4
 148:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 149:Middlewares/Third_Party/FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 129              		.loc 1 149 0
 130 0002 0D68     		ldr	r5, [r1]
 131              	.LVL6:
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 152:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 153:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 154:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 155:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 156:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 158:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 160:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCB's which are
 161:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
ARM GAS  /tmp/cceFE19L.s 			page 6


 162:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 163:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 164:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 165:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 132              		.loc 1 165 0
 133 0004 B5F1FF3F 		cmp	r5, #-1
 134 0008 01D1     		bne	.L5
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 167:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 135              		.loc 1 167 0
 136 000a 0269     		ldr	r2, [r0, #16]
 137              	.LVL7:
 138 000c 07E0     		b	.L6
 139              	.LVL8:
 140              	.L5:
 168:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 169:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 170:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 171:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 172:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 173:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		listed below.  In addition see http://www.freertos.org/FAQHelp.html for
 174:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 175:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		http://www.freertos.org/a00110.html#configASSERT
 176:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 178:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 179:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 180:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 181:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 182:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 183:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 184:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/a00110.html
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 186:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 187:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 188:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 189:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 190:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 191:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		**********************************************************************/
 192:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 141              		.loc 1 193 0
 142 000e 00F10802 		add	r2, r0, #8
 143              	.LVL9:
 144 0012 00E0     		b	.L7
 145              	.L8:
 146 0014 1A46     		mov	r2, r3
 147              	.LVL10:
 148              	.L7:
 149              		.loc 1 193 0 is_stmt 0 discriminator 1
 150 0016 5368     		ldr	r3, [r2, #4]
 151 0018 1C68     		ldr	r4, [r3]
 152 001a AC42     		cmp	r4, r5
 153 001c FAD9     		bls	.L8
 154              	.L6:
 194:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 195:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
ARM GAS  /tmp/cceFE19L.s 			page 7


 196:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			insertion position. */
 197:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		}
 198:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 199:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 200:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 155              		.loc 1 200 0 is_stmt 1
 156 001e 5368     		ldr	r3, [r2, #4]
 157 0020 4B60     		str	r3, [r1, #4]
 201:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 158              		.loc 1 201 0
 159 0022 9960     		str	r1, [r3, #8]
 202:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 160              		.loc 1 202 0
 161 0024 8A60     		str	r2, [r1, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 162              		.loc 1 203 0
 163 0026 5160     		str	r1, [r2, #4]
 204:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 206:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	item later. */
 207:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 164              		.loc 1 207 0
 165 0028 0861     		str	r0, [r1, #16]
 208:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 166              		.loc 1 209 0
 167 002a 0368     		ldr	r3, [r0]
 168 002c 0133     		adds	r3, r3, #1
 169 002e 0360     		str	r3, [r0]
 210:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 170              		.loc 1 210 0
 171 0030 30BC     		pop	{r4, r5}
 172              	.LCFI1:
 173              		.cfi_restore 5
 174              		.cfi_restore 4
 175              		.cfi_def_cfa_offset 0
 176              	.LVL11:
 177 0032 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE143:
 181              		.section	.text.uxListRemove,"ax",%progbits
 182              		.align	2
 183              		.global	uxListRemove
 184              		.thumb
 185              		.thumb_func
 187              	uxListRemove:
 188              	.LFB144:
 211:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 212:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 214:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 189              		.loc 1 214 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL12:
ARM GAS  /tmp/cceFE19L.s 			page 8


 215:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 216:Middlewares/Third_Party/FreeRTOS/Source/list.c **** item. */
 217:Middlewares/Third_Party/FreeRTOS/Source/list.c **** List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
 195              		.loc 1 217 0
 196 0000 0369     		ldr	r3, [r0, #16]
 197              	.LVL13:
 218:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 198              		.loc 1 219 0
 199 0002 4268     		ldr	r2, [r0, #4]
 200 0004 8168     		ldr	r1, [r0, #8]
 201 0006 9160     		str	r1, [r2, #8]
 220:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 202              		.loc 1 220 0
 203 0008 8268     		ldr	r2, [r0, #8]
 204 000a 4168     		ldr	r1, [r0, #4]
 205 000c 5160     		str	r1, [r2, #4]
 221:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 222:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 223:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 224:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 226:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 206              		.loc 1 226 0
 207 000e 5A68     		ldr	r2, [r3, #4]
 208 0010 8242     		cmp	r2, r0
 209 0012 01D1     		bne	.L11
 227:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 228:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 210              		.loc 1 228 0
 211 0014 8268     		ldr	r2, [r0, #8]
 212 0016 5A60     		str	r2, [r3, #4]
 213              	.L11:
 229:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 230:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 231:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 232:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 233:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 234:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pvContainer = NULL;
 214              		.loc 1 235 0
 215 0018 0022     		movs	r2, #0
 216 001a 0261     		str	r2, [r0, #16]
 236:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 217              		.loc 1 236 0
 218 001c 1868     		ldr	r0, [r3]
 219              	.LVL14:
 220 001e 0138     		subs	r0, r0, #1
 221 0020 1860     		str	r0, [r3]
 237:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 238:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 239:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 222              		.loc 1 239 0
 223 0022 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE144:
 227              		.text
ARM GAS  /tmp/cceFE19L.s 			page 9


 228              	.Letext0:
 229              		.file 2 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_ty
 230              		.file 3 "/home/reglisse/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 231              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 232              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 233              		.file 6 "Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/cceFE19L.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 list.c
     /tmp/cceFE19L.s:20     .text.vListInitialise:00000000 $t
     /tmp/cceFE19L.s:25     .text.vListInitialise:00000000 vListInitialise
     /tmp/cceFE19L.s:52     .text.vListInitialiseItem:00000000 $t
     /tmp/cceFE19L.s:57     .text.vListInitialiseItem:00000000 vListInitialiseItem
     /tmp/cceFE19L.s:73     .text.vListInsertEnd:00000000 $t
     /tmp/cceFE19L.s:78     .text.vListInsertEnd:00000000 vListInsertEnd
     /tmp/cceFE19L.s:111    .text.vListInsert:00000000 $t
     /tmp/cceFE19L.s:116    .text.vListInsert:00000000 vListInsert
     /tmp/cceFE19L.s:182    .text.uxListRemove:00000000 $t
     /tmp/cceFE19L.s:187    .text.uxListRemove:00000000 uxListRemove
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
