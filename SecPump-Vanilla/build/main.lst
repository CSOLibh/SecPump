ARM GAS  /tmp/ccdaU4a9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemClock_Config
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	SystemClock_Config:
  28              	.LFB134:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** // Copyright (C) 2019 LCIS Laboratory - Cyril Bresch
   2:Src/main.c    **** // This program is free software: you can redistribute it and/or modify
   3:Src/main.c    **** // it under the terms of the GNU General Public License as published by
   4:Src/main.c    **** // the Free Software Foundation, in version 3.
   5:Src/main.c    **** // This program is distributed in the hope that it will be useful,
   6:Src/main.c    **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
   7:Src/main.c    **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   8:Src/main.c    **** // GNU General Public License for more details.
   9:Src/main.c    **** // You should have received a copy of the GNU General Public License
  10:Src/main.c    **** // along with this program. If not, see <http://www.gnu.org/licenses/>.
  11:Src/main.c    **** // This program is part of the SecPump @https://github.com/r3glisss/SecPump
  12:Src/main.c    **** 
  13:Src/main.c    **** /******************************************************************************
  14:Src/main.c    ****  * @file           : main.c
  15:Src/main.c    ****  * @brief          : Main program body
  16:Src/main.c    ****  ******************************************************************************
  17:Src/main.c    ****  * @attention
  18:Src/main.c    ****  *
  19:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  20:Src/main.c    ****  * All rights reserved.</center></h2>
  21:Src/main.c    ****  *
  22:Src/main.c    ****  * This software component is licensed by ST under Ultimate Liberty license
  23:Src/main.c    ****  * SLA0044, the "License"; You may not use this file except in compliance with
  24:Src/main.c    ****  * the License. You may obtain a copy of the License at:
  25:Src/main.c    ****  *                             www.st.com/SLA0044
  26:Src/main.c    ****  *
  27:Src/main.c    ****  ******************************************************************************
  28:Src/main.c    ****  */
  29:Src/main.c    **** 
ARM GAS  /tmp/ccdaU4a9.s 			page 2


  30:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  31:Src/main.c    **** #include "main.h"
  32:Src/main.c    **** #include "app_x-cube-ble1.h"
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN Includes */
  36:Src/main.c    **** #include <errno.h>
  37:Src/main.c    **** #include <string.h>
  38:Src/main.c    **** #include <sys/stat.h>
  39:Src/main.c    **** #include <sys/types.h>
  40:Src/main.c    **** #include <unistd.h>
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END Includes */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PTD */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PTD */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN PD */
  51:Src/main.c    **** /* USER CODE END PD */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  54:Src/main.c    **** /* USER CODE BEGIN PM */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PM */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PV */
  61:Src/main.c    **** /* USER CODE END PV */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** void SystemClock_Config(void);
  65:Src/main.c    **** static void MX_USART2_UART_Init(void);
  66:Src/main.c    **** static void MX_GPIO_Init(void);
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PFP */
  69:Src/main.c    **** /* USER CODE END PFP */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  72:Src/main.c    **** /* USER CODE BEGIN 0 */
  73:Src/main.c    **** uint8_t OPERATING_MODE = 0;
  74:Src/main.c    **** uint8_t FloatBuffer[32];
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****  * @brief  The application entry point.
  80:Src/main.c    ****  * @retval int
  81:Src/main.c    ****  */
  82:Src/main.c    **** int main(void) {
  83:Src/main.c    ****   /* USER CODE BEGIN 1 */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END 1 */
  86:Src/main.c    **** 
ARM GAS  /tmp/ccdaU4a9.s 			page 3


  87:Src/main.c    ****   /* MCU
  88:Src/main.c    ****    * Configuration--------------------------------------------------------*/
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the
  91:Src/main.c    ****    * Systick. */
  92:Src/main.c    ****   HAL_Init();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN Init */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Configure the system clock */
  99:Src/main.c    ****   SystemClock_Config();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 102:Src/main.c    ****   /* USER CODE END SysInit */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Initialize all configured peripherals */
 105:Src/main.c    ****   MX_GPIO_Init();
 106:Src/main.c    ****   MX_USART2_UART_Init();
 107:Src/main.c    ****   MX_BlueNRG_MS_Init();
 108:Src/main.c    ****   /* USER CODE BEGIN 2 */
 109:Src/main.c    **** 
 110:Src/main.c    ****   HAL_UART_Receive_IT(&huart2, FloatBuffer, 32);
 111:Src/main.c    ****   /* USER CODE END 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 114:Src/main.c    ****   while (1) {
 115:Src/main.c    ****     /* USER CODE END WHILE */
 116:Src/main.c    **** 
 117:Src/main.c    ****     /* Process the BLE packets */
 118:Src/main.c    ****     MX_BlueNRG_MS_Process();
 119:Src/main.c    **** 
 120:Src/main.c    ****     /* USER CODE BEGIN 3 */
 121:Src/main.c    ****   }
 122:Src/main.c    ****   /* USER CODE END 3 */
 123:Src/main.c    **** }
 124:Src/main.c    **** 
 125:Src/main.c    **** /**
 126:Src/main.c    ****  * @brief System Clock Configuration
 127:Src/main.c    ****  * @retval None
 128:Src/main.c    ****  */
 129:Src/main.c    **** void SystemClock_Config(void) {
  30              		.loc 1 129 31 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 80
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 130:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  34              		.loc 1 130 3 view .LVU1
 129:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  35              		.loc 1 129 31 is_stmt 0 view .LVU2
  36 0000 30B5     		push	{r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
ARM GAS  /tmp/ccdaU4a9.s 			page 4


  42              		.loc 1 130 22 view .LVU3
  43 0002 0024     		movs	r4, #0
 129:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  44              		.loc 1 129 31 view .LVU4
  45 0004 95B0     		sub	sp, sp, #84
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 96
  48              		.loc 1 130 22 view .LVU5
  49 0006 CDE90A44 		strd	r4, r4, [sp, #40]
  50 000a CDE90844 		strd	r4, r4, [sp, #32]
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  51              		.loc 1 131 22 view .LVU6
  52 000e CDE90344 		strd	r4, r4, [sp, #12]
  53 0012 CDE90544 		strd	r4, r4, [sp, #20]
  54              	.LBB10:
 132:Src/main.c    **** 
 133:Src/main.c    ****   /** Configure the main internal regulator output voltage
 134:Src/main.c    ****    */
 135:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 135 3 view .LVU7
  56 0016 1D4B     		ldr	r3, .L4
  57 0018 0094     		str	r4, [sp]
  58              	.LBE10:
 130:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  59              		.loc 1 130 22 view .LVU8
  60 001a 0C94     		str	r4, [sp, #48]
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  61              		.loc 1 131 3 is_stmt 1 view .LVU9
  62              		.loc 1 135 3 view .LVU10
  63              	.LBB11:
  64              		.loc 1 135 3 view .LVU11
  65              		.loc 1 135 3 view .LVU12
  66              	.LBE11:
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  67              		.loc 1 131 22 is_stmt 0 view .LVU13
  68 001c 0294     		str	r4, [sp, #8]
  69              	.LBB12:
  70              		.loc 1 135 3 view .LVU14
  71 001e 196C     		ldr	r1, [r3, #64]
  72              	.LBE12:
  73              	.LBB13:
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  74              		.loc 1 136 3 view .LVU15
  75 0020 1B4A     		ldr	r2, .L4+4
  76              	.LBE13:
  77              	.LBB14:
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  78              		.loc 1 135 3 view .LVU16
  79 0022 41F08051 		orr	r1, r1, #268435456
  80 0026 1964     		str	r1, [r3, #64]
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  81              		.loc 1 135 3 is_stmt 1 view .LVU17
  82 0028 1B6C     		ldr	r3, [r3, #64]
  83 002a 03F08053 		and	r3, r3, #268435456
  84 002e 0093     		str	r3, [sp]
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  85              		.loc 1 135 3 view .LVU18
ARM GAS  /tmp/ccdaU4a9.s 			page 5


  86 0030 009B     		ldr	r3, [sp]
  87              	.LBE14:
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  88              		.loc 1 135 3 view .LVU19
  89              		.loc 1 136 3 view .LVU20
  90              	.LBB15:
  91              		.loc 1 136 3 view .LVU21
  92 0032 0194     		str	r4, [sp, #4]
  93              		.loc 1 136 3 view .LVU22
  94 0034 1368     		ldr	r3, [r2]
  95 0036 23F44043 		bic	r3, r3, #49152
  96 003a 43F48043 		orr	r3, r3, #16384
  97 003e 1360     		str	r3, [r2]
  98              		.loc 1 136 3 view .LVU23
  99 0040 1368     		ldr	r3, [r2]
 100              	.LBE15:
 137:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 138:Src/main.c    ****    */
 139:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 101              		.loc 1 143 35 is_stmt 0 view .LVU24
 102 0042 0E94     		str	r4, [sp, #56]
 103              	.LBB16:
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 104              		.loc 1 136 3 view .LVU25
 105 0044 03F44043 		and	r3, r3, #49152
 106 0048 0193     		str	r3, [sp, #4]
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 107              		.loc 1 136 3 is_stmt 1 view .LVU26
 108              	.LBE16:
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 109              		.loc 1 140 30 is_stmt 0 view .LVU27
 110 004a 0122     		movs	r2, #1
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 111              		.loc 1 139 36 view .LVU28
 112 004c 0225     		movs	r5, #2
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 113              		.loc 1 141 41 view .LVU29
 114 004e 1023     		movs	r3, #16
 115              	.LBB17:
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 116              		.loc 1 136 3 view .LVU30
 117 0050 0198     		ldr	r0, [sp, #4]
 118              	.LBE17:
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 119              		.loc 1 136 3 is_stmt 1 view .LVU31
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 120              		.loc 1 139 3 view .LVU32
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 121              		.loc 1 140 30 is_stmt 0 view .LVU33
 122 0052 0A92     		str	r2, [sp, #40]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 123              		.loc 1 145 30 view .LVU34
ARM GAS  /tmp/ccdaU4a9.s 			page 6


 124 0054 4FF4A871 		mov	r1, #336
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 125              		.loc 1 146 30 view .LVU35
 126 0058 0422     		movs	r2, #4
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 149:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 127              		.loc 1 149 7 view .LVU36
 128 005a 07A8     		add	r0, sp, #28
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 129              		.loc 1 141 41 view .LVU37
 130 005c 0B93     		str	r3, [sp, #44]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 131              		.loc 1 144 30 view .LVU38
 132 005e 0F93     		str	r3, [sp, #60]
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 133              		.loc 1 148 30 view .LVU39
 134 0060 CDE91255 		strd	r5, r5, [sp, #72]
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135              		.loc 1 139 36 view .LVU40
 136 0064 0795     		str	r5, [sp, #28]
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 137              		.loc 1 140 3 is_stmt 1 view .LVU41
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 138              		.loc 1 141 3 view .LVU42
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 139              		.loc 1 142 3 view .LVU43
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 140              		.loc 1 143 3 view .LVU44
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 141              		.loc 1 144 3 view .LVU45
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 142              		.loc 1 145 3 view .LVU46
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 143              		.loc 1 142 34 is_stmt 0 view .LVU47
 144 0066 0D95     		str	r5, [sp, #52]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 145              		.loc 1 146 30 view .LVU48
 146 0068 CDE91012 		strd	r1, r2, [sp, #64]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 147              		.loc 1 147 3 is_stmt 1 view .LVU49
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 148              		.loc 1 148 3 view .LVU50
 149              		.loc 1 149 3 view .LVU51
 150              		.loc 1 149 7 is_stmt 0 view .LVU52
 151 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 152              	.LVL0:
 150:Src/main.c    ****     Error_Handler();
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 153:Src/main.c    ****    */
 154:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 153              		.loc 1 154 3 is_stmt 1 view .LVU53
 154              		.loc 1 154 31 is_stmt 0 view .LVU54
 155 0070 0F22     		movs	r2, #15
 155:Src/main.c    ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 156:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  /tmp/ccdaU4a9.s 			page 7


 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 156              		.loc 1 158 36 view .LVU55
 157 0072 4FF48053 		mov	r3, #4096
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Src/main.c    **** 
 161:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 158              		.loc 1 161 7 view .LVU56
 159 0076 02A8     		add	r0, sp, #8
 160 0078 2946     		mov	r1, r5
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 161              		.loc 1 157 35 view .LVU57
 162 007a CDE90354 		strd	r5, r4, [sp, #12]
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 163              		.loc 1 159 36 view .LVU58
 164 007e 0694     		str	r4, [sp, #24]
 154:Src/main.c    ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 165              		.loc 1 154 31 view .LVU59
 166 0080 0292     		str	r2, [sp, #8]
 156:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167              		.loc 1 156 3 is_stmt 1 view .LVU60
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 168              		.loc 1 157 3 view .LVU61
 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 169              		.loc 1 158 3 view .LVU62
 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 170              		.loc 1 158 36 is_stmt 0 view .LVU63
 171 0082 0593     		str	r3, [sp, #20]
 159:Src/main.c    **** 
 172              		.loc 1 159 3 is_stmt 1 view .LVU64
 173              		.loc 1 161 3 view .LVU65
 174              		.loc 1 161 7 is_stmt 0 view .LVU66
 175 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 176              	.LVL1:
 162:Src/main.c    ****     Error_Handler();
 163:Src/main.c    ****   }
 164:Src/main.c    **** }
 177              		.loc 1 164 1 view .LVU67
 178 0088 15B0     		add	sp, sp, #84
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 12
 181              		@ sp needed
 182 008a 30BD     		pop	{r4, r5, pc}
 183              	.L5:
 184              		.align	2
 185              	.L4:
 186 008c 00380240 		.word	1073887232
 187 0090 00700040 		.word	1073770496
 188              		.cfi_endproc
 189              	.LFE134:
 191              		.section	.text.startup.main,"ax",%progbits
 192              		.align	1
 193              		.p2align 2,,3
 194              		.global	main
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
ARM GAS  /tmp/ccdaU4a9.s 			page 8


 198              		.fpu fpv4-sp-d16
 200              	main:
 201              	.LFB133:
  82:Src/main.c    ****   /* USER CODE BEGIN 1 */
 202              		.loc 1 82 16 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ Volatile: function does not return.
 205              		@ args = 0, pretend = 0, frame = 40
 206              		@ frame_needed = 0, uses_anonymous_args = 0
  92:Src/main.c    **** 
 207              		.loc 1 92 3 view .LVU69
  82:Src/main.c    ****   /* USER CODE BEGIN 1 */
 208              		.loc 1 82 16 is_stmt 0 view .LVU70
 209 0000 00B5     		push	{lr}
 210              	.LCFI3:
 211              		.cfi_def_cfa_offset 4
 212              		.cfi_offset 14, -4
 213              	.LBB26:
 214              	.LBB27:
 165:Src/main.c    **** 
 166:Src/main.c    **** /**
 167:Src/main.c    ****  * @brief USART2 Initialization Function
 168:Src/main.c    ****  * @param None
 169:Src/main.c    ****  * @retval None
 170:Src/main.c    ****  */
 171:Src/main.c    **** static void MX_USART2_UART_Init(void) {
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 178:Src/main.c    **** 
 179:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 180:Src/main.c    ****   huart2.Instance = USART2;
 181:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 182:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 183:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 184:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 185:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 186:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 187:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 188:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 189:Src/main.c    ****     Error_Handler();
 190:Src/main.c    ****   }
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* UART Interrupt Init */
 193:Src/main.c    ****   HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 194:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART2_IRQn);
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 199:Src/main.c    **** }
 200:Src/main.c    **** 
 201:Src/main.c    **** /**
 202:Src/main.c    ****  * @brief GPIO Initialization Function
ARM GAS  /tmp/ccdaU4a9.s 			page 9


 203:Src/main.c    ****  * @param None
 204:Src/main.c    ****  * @retval None
 205:Src/main.c    ****  */
 206:Src/main.c    **** static void MX_GPIO_Init(void) {
 207:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 215              		.loc 1 207 20 view .LVU71
 216 0002 0024     		movs	r4, #0
 217              	.LBE27:
 218              	.LBE26:
  82:Src/main.c    ****   /* USER CODE BEGIN 1 */
 219              		.loc 1 82 16 view .LVU72
 220 0004 8BB0     		sub	sp, sp, #44
 221              	.LCFI4:
 222              		.cfi_def_cfa_offset 48
  92:Src/main.c    **** 
 223              		.loc 1 92 3 view .LVU73
 224 0006 FFF7FEFF 		bl	HAL_Init
 225              	.LVL2:
  99:Src/main.c    **** 
 226              		.loc 1 99 3 is_stmt 1 view .LVU74
 227 000a FFF7FEFF 		bl	SystemClock_Config
 228              	.LVL3:
 105:Src/main.c    ****   MX_USART2_UART_Init();
 229              		.loc 1 105 3 view .LVU75
 230              	.LBB37:
 231              	.LBI26:
 206:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 232              		.loc 1 206 13 view .LVU76
 233              	.LBB35:
 234              		.loc 1 207 3 view .LVU77
 235              		.loc 1 207 20 is_stmt 0 view .LVU78
 236 000e CDE90544 		strd	r4, r4, [sp, #20]
 237 0012 CDE90744 		strd	r4, r4, [sp, #28]
 238              	.LBB28:
 208:Src/main.c    **** 
 209:Src/main.c    ****   /* GPIO Ports Clock Enable */
 210:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 239              		.loc 1 210 3 view .LVU79
 240 0016 3B4B     		ldr	r3, .L9
 241 0018 0194     		str	r4, [sp, #4]
 242              	.LBE28:
 207:Src/main.c    **** 
 243              		.loc 1 207 20 view .LVU80
 244 001a 0994     		str	r4, [sp, #36]
 245              		.loc 1 210 3 is_stmt 1 view .LVU81
 246              	.LBB29:
 247              		.loc 1 210 3 view .LVU82
 248              		.loc 1 210 3 view .LVU83
 249 001c 1A6B     		ldr	r2, [r3, #48]
 250              	.LBE29:
 211:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 212:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 213:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 214:Src/main.c    **** 
 215:Src/main.c    ****   /*Configure GPIO pin Output Level */
 216:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1 | LD2_Pin | GPIO_PIN_8, GPIO_PIN_RESET);
 251              		.loc 1 216 3 is_stmt 0 view .LVU84
ARM GAS  /tmp/ccdaU4a9.s 			page 10


 252 001e 3A48     		ldr	r0, .L9+4
 253              	.LBE35:
 254              	.LBE37:
 255              	.LBB38:
 256              	.LBB39:
 180:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 257              		.loc 1 180 19 view .LVU85
 258 0020 3A4D     		ldr	r5, .L9+8
 259              	.LBE39:
 260              	.LBE38:
 261              	.LBB41:
 262              	.LBB36:
 263              	.LBB30:
 210:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 264              		.loc 1 210 3 view .LVU86
 265 0022 42F00402 		orr	r2, r2, #4
 266 0026 1A63     		str	r2, [r3, #48]
 210:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 267              		.loc 1 210 3 is_stmt 1 view .LVU87
 268 0028 1A6B     		ldr	r2, [r3, #48]
 269 002a 02F00402 		and	r2, r2, #4
 270 002e 0192     		str	r2, [sp, #4]
 210:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 271              		.loc 1 210 3 view .LVU88
 272 0030 019A     		ldr	r2, [sp, #4]
 273              	.LBE30:
 210:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 274              		.loc 1 210 3 view .LVU89
 211:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 275              		.loc 1 211 3 view .LVU90
 276              	.LBB31:
 211:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 277              		.loc 1 211 3 view .LVU91
 278 0032 0294     		str	r4, [sp, #8]
 211:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 279              		.loc 1 211 3 view .LVU92
 280 0034 1A6B     		ldr	r2, [r3, #48]
 281 0036 42F08002 		orr	r2, r2, #128
 282 003a 1A63     		str	r2, [r3, #48]
 211:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 283              		.loc 1 211 3 view .LVU93
 284 003c 1A6B     		ldr	r2, [r3, #48]
 285 003e 02F08002 		and	r2, r2, #128
 286 0042 0292     		str	r2, [sp, #8]
 211:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 287              		.loc 1 211 3 view .LVU94
 288 0044 029A     		ldr	r2, [sp, #8]
 289              	.LBE31:
 211:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 290              		.loc 1 211 3 view .LVU95
 212:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 291              		.loc 1 212 3 view .LVU96
 292              	.LBB32:
 212:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 293              		.loc 1 212 3 view .LVU97
 294 0046 0394     		str	r4, [sp, #12]
 212:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  /tmp/ccdaU4a9.s 			page 11


 295              		.loc 1 212 3 view .LVU98
 296 0048 1A6B     		ldr	r2, [r3, #48]
 297 004a 42F00102 		orr	r2, r2, #1
 298 004e 1A63     		str	r2, [r3, #48]
 212:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 299              		.loc 1 212 3 view .LVU99
 300 0050 1A6B     		ldr	r2, [r3, #48]
 301 0052 02F00102 		and	r2, r2, #1
 302 0056 0392     		str	r2, [sp, #12]
 212:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 303              		.loc 1 212 3 view .LVU100
 304 0058 039A     		ldr	r2, [sp, #12]
 305              	.LBE32:
 212:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 306              		.loc 1 212 3 view .LVU101
 213:Src/main.c    **** 
 307              		.loc 1 213 3 view .LVU102
 308              	.LBB33:
 213:Src/main.c    **** 
 309              		.loc 1 213 3 view .LVU103
 310 005a 0494     		str	r4, [sp, #16]
 213:Src/main.c    **** 
 311              		.loc 1 213 3 view .LVU104
 312 005c 1A6B     		ldr	r2, [r3, #48]
 313 005e 42F00202 		orr	r2, r2, #2
 314 0062 1A63     		str	r2, [r3, #48]
 213:Src/main.c    **** 
 315              		.loc 1 213 3 view .LVU105
 316 0064 1B6B     		ldr	r3, [r3, #48]
 317 0066 03F00203 		and	r3, r3, #2
 318 006a 0493     		str	r3, [sp, #16]
 213:Src/main.c    **** 
 319              		.loc 1 213 3 view .LVU106
 320              	.LBE33:
 321              		.loc 1 216 3 is_stmt 0 view .LVU107
 322 006c 2246     		mov	r2, r4
 323 006e 4FF49171 		mov	r1, #290
 324              	.LBB34:
 213:Src/main.c    **** 
 325              		.loc 1 213 3 view .LVU108
 326 0072 049B     		ldr	r3, [sp, #16]
 327              	.LBE34:
 213:Src/main.c    **** 
 328              		.loc 1 213 3 is_stmt 1 view .LVU109
 329              		.loc 1 216 3 view .LVU110
 330 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 331              	.LVL4:
 217:Src/main.c    **** 
 218:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 219:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 332              		.loc 1 219 3 view .LVU111
 333              		.loc 1 219 23 is_stmt 0 view .LVU112
 334 0078 4FF40052 		mov	r2, #8192
 220:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 335              		.loc 1 220 24 view .LVU113
 336 007c 244B     		ldr	r3, .L9+12
 221:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccdaU4a9.s 			page 12


 222:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 337              		.loc 1 222 3 view .LVU114
 338 007e 2548     		ldr	r0, .L9+16
 219:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 339              		.loc 1 219 23 view .LVU115
 340 0080 0592     		str	r2, [sp, #20]
 220:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 341              		.loc 1 220 3 is_stmt 1 view .LVU116
 342              		.loc 1 222 3 is_stmt 0 view .LVU117
 343 0082 05A9     		add	r1, sp, #20
 220:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 344              		.loc 1 220 24 view .LVU118
 345 0084 0693     		str	r3, [sp, #24]
 221:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 346              		.loc 1 221 3 is_stmt 1 view .LVU119
 347              		.loc 1 222 3 view .LVU120
 221:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 348              		.loc 1 221 24 is_stmt 0 view .LVU121
 349 0086 0794     		str	r4, [sp, #28]
 350              		.loc 1 222 3 view .LVU122
 351 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 352              	.LVL5:
 223:Src/main.c    **** 
 224:Src/main.c    ****   /*Configure GPIO pin : PA0 */
 225:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 353              		.loc 1 225 3 is_stmt 1 view .LVU123
 226:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 354              		.loc 1 226 24 is_stmt 0 view .LVU124
 355 008c 224B     		ldr	r3, .L9+20
 227:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 228:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 356              		.loc 1 228 3 view .LVU125
 357 008e 1E48     		ldr	r0, .L9+4
 227:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 358              		.loc 1 227 24 view .LVU126
 359 0090 0794     		str	r4, [sp, #28]
 225:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 360              		.loc 1 225 23 view .LVU127
 361 0092 0126     		movs	r6, #1
 362              		.loc 1 228 3 view .LVU128
 363 0094 05A9     		add	r1, sp, #20
 226:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 364              		.loc 1 226 24 view .LVU129
 365 0096 CDE90563 		strd	r6, r3, [sp, #20]
 227:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 366              		.loc 1 227 3 is_stmt 1 view .LVU130
 367              		.loc 1 228 3 view .LVU131
 368 009a FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL6:
 229:Src/main.c    **** 
 230:Src/main.c    ****   /*Configure GPIO pins : PA1 LD2_Pin PA8 */
 231:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_1 | LD2_Pin | GPIO_PIN_8;
 370              		.loc 1 231 3 view .LVU132
 371              		.loc 1 231 23 is_stmt 0 view .LVU133
 372 009e 4FF49173 		mov	r3, #290
 232:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 233:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccdaU4a9.s 			page 13


 234:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 235:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 373              		.loc 1 235 3 view .LVU134
 374 00a2 1948     		ldr	r0, .L9+4
 231:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 375              		.loc 1 231 23 view .LVU135
 376 00a4 0593     		str	r3, [sp, #20]
 232:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 377              		.loc 1 232 3 is_stmt 1 view .LVU136
 233:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 378              		.loc 1 233 3 view .LVU137
 234:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 379              		.loc 1 234 3 view .LVU138
 380              		.loc 1 235 3 view .LVU139
 381 00a6 05A9     		add	r1, sp, #20
 233:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 382              		.loc 1 233 24 is_stmt 0 view .LVU140
 383 00a8 CDE90664 		strd	r6, r4, [sp, #24]
 234:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 384              		.loc 1 234 25 view .LVU141
 385 00ac 0894     		str	r4, [sp, #32]
 386              		.loc 1 235 3 view .LVU142
 387 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 388              	.LVL7:
 236:Src/main.c    **** 
 237:Src/main.c    ****   /* EXTI interrupt init*/
 238:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 389              		.loc 1 238 3 is_stmt 1 view .LVU143
 390 00b2 2246     		mov	r2, r4
 391 00b4 0521     		movs	r1, #5
 392 00b6 0620     		movs	r0, #6
 393 00b8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 394              	.LVL8:
 239:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 395              		.loc 1 239 3 view .LVU144
 396 00bc 0620     		movs	r0, #6
 397 00be FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 398              	.LVL9:
 399              	.LBE36:
 400              	.LBE41:
 106:Src/main.c    ****   MX_BlueNRG_MS_Init();
 401              		.loc 1 106 3 view .LVU145
 402              	.LBB42:
 403              	.LBI38:
 171:Src/main.c    **** 
 404              		.loc 1 171 13 view .LVU146
 405              	.LBB40:
 180:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 406              		.loc 1 180 3 view .LVU147
 180:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 407              		.loc 1 180 19 is_stmt 0 view .LVU148
 408 00c2 1649     		ldr	r1, .L9+24
 182:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 409              		.loc 1 182 26 view .LVU149
 410 00c4 AC60     		str	r4, [r5, #8]
 185:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 411              		.loc 1 185 20 view .LVU150
ARM GAS  /tmp/ccdaU4a9.s 			page 14


 412 00c6 0C23     		movs	r3, #12
 181:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 413              		.loc 1 181 24 view .LVU151
 414 00c8 4FF4E132 		mov	r2, #115200
 188:Src/main.c    ****     Error_Handler();
 415              		.loc 1 188 7 view .LVU152
 416 00cc 2846     		mov	r0, r5
 185:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 417              		.loc 1 185 20 view .LVU153
 418 00ce 6B61     		str	r3, [r5, #20]
 181:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 419              		.loc 1 181 24 view .LVU154
 420 00d0 C5E90012 		strd	r1, r2, [r5]
 182:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 421              		.loc 1 182 3 is_stmt 1 view .LVU155
 183:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 422              		.loc 1 183 3 view .LVU156
 184:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 423              		.loc 1 184 3 view .LVU157
 185:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 424              		.loc 1 185 3 view .LVU158
 186:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 425              		.loc 1 186 3 view .LVU159
 187:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 426              		.loc 1 187 3 view .LVU160
 188:Src/main.c    ****     Error_Handler();
 427              		.loc 1 188 3 view .LVU161
 184:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 428              		.loc 1 184 22 is_stmt 0 view .LVU162
 429 00d4 C5E90344 		strd	r4, r4, [r5, #12]
 187:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 430              		.loc 1 187 28 view .LVU163
 431 00d8 C5E90644 		strd	r4, r4, [r5, #24]
 188:Src/main.c    ****     Error_Handler();
 432              		.loc 1 188 7 view .LVU164
 433 00dc FFF7FEFF 		bl	HAL_UART_Init
 434              	.LVL10:
 193:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART2_IRQn);
 435              		.loc 1 193 3 is_stmt 1 view .LVU165
 436 00e0 2246     		mov	r2, r4
 437 00e2 2146     		mov	r1, r4
 438 00e4 2620     		movs	r0, #38
 439 00e6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 440              	.LVL11:
 194:Src/main.c    **** 
 441              		.loc 1 194 3 view .LVU166
 442 00ea 2620     		movs	r0, #38
 443 00ec FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 444              	.LVL12:
 445              	.LBE40:
 446              	.LBE42:
 107:Src/main.c    ****   /* USER CODE BEGIN 2 */
 447              		.loc 1 107 3 view .LVU167
 448 00f0 FFF7FEFF 		bl	MX_BlueNRG_MS_Init
 449              	.LVL13:
 110:Src/main.c    ****   /* USER CODE END 2 */
 450              		.loc 1 110 3 view .LVU168
ARM GAS  /tmp/ccdaU4a9.s 			page 15


 451 00f4 0A49     		ldr	r1, .L9+28
 452 00f6 2846     		mov	r0, r5
 453 00f8 2022     		movs	r2, #32
 454 00fa FFF7FEFF 		bl	HAL_UART_Receive_IT
 455              	.LVL14:
 456              	.L7:
 114:Src/main.c    ****     /* USER CODE END WHILE */
 457              		.loc 1 114 3 discriminator 1 view .LVU169
 118:Src/main.c    **** 
 458              		.loc 1 118 5 discriminator 1 view .LVU170
 459 00fe FFF7FEFF 		bl	MX_BlueNRG_MS_Process
 460              	.LVL15:
 114:Src/main.c    ****     /* USER CODE END WHILE */
 461              		.loc 1 114 9 discriminator 1 view .LVU171
 462 0102 FCE7     		b	.L7
 463              	.L10:
 464              		.align	2
 465              	.L9:
 466 0104 00380240 		.word	1073887232
 467 0108 00000240 		.word	1073872896
 468 010c 00000000 		.word	hcom_uart
 469 0110 00002110 		.word	270598144
 470 0114 00080240 		.word	1073874944
 471 0118 00001110 		.word	269549568
 472 011c 00440040 		.word	1073759232
 473 0120 00000000 		.word	FloatBuffer
 474              		.cfi_endproc
 475              	.LFE133:
 477              		.section	.text._isatty,"ax",%progbits
 478              		.align	1
 479              		.p2align 2,,3
 480              		.global	_isatty
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu fpv4-sp-d16
 486              	_isatty:
 487              	.LVL16:
 488              	.LFB137:
 240:Src/main.c    **** }
 241:Src/main.c    **** 
 242:Src/main.c    **** /* USER CODE BEGIN 4 */
 243:Src/main.c    **** int _isatty(int fd) {
 489              		.loc 1 243 21 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 244:Src/main.c    ****   if (fd >= STDIN_FILENO && fd <= STDERR_FILENO)
 494              		.loc 1 244 3 view .LVU173
 245:Src/main.c    ****     return 1;
 246:Src/main.c    **** 
 247:Src/main.c    ****   // errno = EBADF;
 248:Src/main.c    ****   return 0;
 249:Src/main.c    **** }
 495              		.loc 1 249 1 is_stmt 0 view .LVU174
 496 0000 0228     		cmp	r0, #2
ARM GAS  /tmp/ccdaU4a9.s 			page 16


 497 0002 8CBF     		ite	hi
 498 0004 0020     		movhi	r0, #0
 499              	.LVL17:
 500              		.loc 1 249 1 view .LVU175
 501 0006 0120     		movls	r0, #1
 502 0008 7047     		bx	lr
 503              		.cfi_endproc
 504              	.LFE137:
 506 000a 00BF     		.section	.text._write,"ax",%progbits
 507              		.align	1
 508              		.p2align 2,,3
 509              		.global	_write
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv4-sp-d16
 515              	_write:
 516              	.LVL18:
 517              	.LFB138:
 250:Src/main.c    **** 
 251:Src/main.c    **** int _write(int file, char *data, int len) {
 518              		.loc 1 251 43 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 252:Src/main.c    ****   if ((file != STDOUT_FILENO) && (file != STDERR_FILENO)) {
 522              		.loc 1 252 3 view .LVU177
 523              		.loc 1 252 31 is_stmt 0 view .LVU178
 524 0000 0138     		subs	r0, r0, #1
 525              	.LVL19:
 526              		.loc 1 252 6 view .LVU179
 527 0002 0128     		cmp	r0, #1
 528 0004 0CD8     		bhi	.L14
 253:Src/main.c    ****     // errno = EBADF;
 254:Src/main.c    ****     return -1;
 255:Src/main.c    ****   }
 256:Src/main.c    ****   HAL_StatusTypeDef status;
 529              		.loc 1 256 3 is_stmt 1 view .LVU180
 257:Src/main.c    **** 
 258:Src/main.c    ****   // if equal zero we got the mutex
 259:Src/main.c    ****   status = HAL_UART_Transmit(&huart2, (uint8_t *)data, len, 0xFFFF);
 530              		.loc 1 259 3 view .LVU181
 251:Src/main.c    ****   if ((file != STDOUT_FILENO) && (file != STDERR_FILENO)) {
 531              		.loc 1 251 43 is_stmt 0 view .LVU182
 532 0006 10B5     		push	{r4, lr}
 533              	.LCFI5:
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 4, -8
 536              		.cfi_offset 14, -4
 537              		.loc 1 259 12 view .LVU183
 538 0008 4FF6FF73 		movw	r3, #65535
 539 000c 1446     		mov	r4, r2
 540 000e 0648     		ldr	r0, .L20
 541              	.LVL20:
 542              		.loc 1 259 12 view .LVU184
 543 0010 92B2     		uxth	r2, r2
 544              	.LVL21:
ARM GAS  /tmp/ccdaU4a9.s 			page 17


 545              		.loc 1 259 12 view .LVU185
 546 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 547              	.LVL22:
 260:Src/main.c    **** 
 261:Src/main.c    ****   // return # of bytes written - as best we can tell
 262:Src/main.c    ****   return (status == HAL_OK ? len : 0);
 548              		.loc 1 262 3 is_stmt 1 view .LVU186
 549              		.loc 1 262 34 is_stmt 0 view .LVU187
 550 0016 0028     		cmp	r0, #0
 551 0018 0CBF     		ite	eq
 552 001a 2046     		moveq	r0, r4
 553              	.LVL23:
 554              		.loc 1 262 34 view .LVU188
 555 001c 0020     		movne	r0, #0
 263:Src/main.c    **** }
 556              		.loc 1 263 1 view .LVU189
 557 001e 10BD     		pop	{r4, pc}
 558              	.LVL24:
 559              	.L14:
 560              	.LCFI6:
 561              		.cfi_def_cfa_offset 0
 562              		.cfi_restore 4
 563              		.cfi_restore 14
 254:Src/main.c    ****   }
 564              		.loc 1 254 12 view .LVU190
 565 0020 4FF0FF30 		mov	r0, #-1
 566              		.loc 1 263 1 view .LVU191
 567 0024 7047     		bx	lr
 568              	.L21:
 569 0026 00BF     		.align	2
 570              	.L20:
 571 0028 00000000 		.word	hcom_uart
 572              		.cfi_endproc
 573              	.LFE138:
 575              		.section	.text._close,"ax",%progbits
 576              		.align	1
 577              		.p2align 2,,3
 578              		.global	_close
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 582              		.fpu fpv4-sp-d16
 584              	_close:
 585              	.LVL25:
 586              	.LFB139:
 264:Src/main.c    **** 
 265:Src/main.c    **** int _close(int fd) {
 587              		.loc 1 265 20 is_stmt 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 266:Src/main.c    ****   if (fd >= STDIN_FILENO && fd <= STDERR_FILENO)
 592              		.loc 1 266 3 view .LVU193
 267:Src/main.c    ****     return 0;
 268:Src/main.c    **** 
 269:Src/main.c    ****   // errno = EBADF;
ARM GAS  /tmp/ccdaU4a9.s 			page 18


 270:Src/main.c    ****   return -1;
 271:Src/main.c    **** }
 593              		.loc 1 271 1 is_stmt 0 view .LVU194
 594 0000 0228     		cmp	r0, #2
 595 0002 4FF0FF30 		mov	r0, #-1
 596              	.LVL26:
 597              		.loc 1 271 1 view .LVU195
 598 0006 98BF     		it	ls
 599 0008 0020     		movls	r0, #0
 600 000a 7047     		bx	lr
 601              		.cfi_endproc
 602              	.LFE139:
 604              		.section	.text._lseek,"ax",%progbits
 605              		.align	1
 606              		.p2align 2,,3
 607              		.global	_lseek
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv4-sp-d16
 613              	_lseek:
 614              	.LVL27:
 615              	.LFB140:
 272:Src/main.c    **** 
 273:Src/main.c    **** int _lseek(int fd, int ptr, int dir) {
 616              		.loc 1 273 38 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 274:Src/main.c    ****   (void)fd;
 621              		.loc 1 274 3 view .LVU197
 275:Src/main.c    ****   (void)ptr;
 622              		.loc 1 275 3 view .LVU198
 276:Src/main.c    ****   (void)dir;
 623              		.loc 1 276 3 view .LVU199
 277:Src/main.c    **** 
 278:Src/main.c    ****   // errno = EBADF;
 279:Src/main.c    ****   return -1;
 624              		.loc 1 279 3 view .LVU200
 280:Src/main.c    **** }
 625              		.loc 1 280 1 is_stmt 0 view .LVU201
 626 0000 4FF0FF30 		mov	r0, #-1
 627              	.LVL28:
 628              		.loc 1 280 1 view .LVU202
 629 0004 7047     		bx	lr
 630              		.cfi_endproc
 631              	.LFE140:
 633 0006 00BF     		.section	.text._read,"ax",%progbits
 634              		.align	1
 635              		.p2align 2,,3
 636              		.global	_read
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv4-sp-d16
 642              	_read:
ARM GAS  /tmp/ccdaU4a9.s 			page 19


 643              	.LVL29:
 644              	.LFB141:
 281:Src/main.c    **** 
 282:Src/main.c    **** int _read(int fd, char *ptr, int len) {
 645              		.loc 1 282 39 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 283:Src/main.c    ****   HAL_StatusTypeDef status;
 649              		.loc 1 283 3 view .LVU204
 284:Src/main.c    **** 
 285:Src/main.c    ****   if (fd == STDIN_FILENO) {
 650              		.loc 1 285 3 view .LVU205
 651              		.loc 1 285 6 is_stmt 0 view .LVU206
 652 0000 58B9     		cbnz	r0, .L26
 286:Src/main.c    ****     // if equal zero we got the mutex
 287:Src/main.c    ****     // arbitrary time-out
 288:Src/main.c    ****     status = HAL_UART_Receive(&huart2, (uint8_t *)ptr, 1, HAL_MAX_DELAY);
 653              		.loc 1 288 5 is_stmt 1 view .LVU207
 282:Src/main.c    ****   HAL_StatusTypeDef status;
 654              		.loc 1 282 39 is_stmt 0 view .LVU208
 655 0002 08B5     		push	{r3, lr}
 656              	.LCFI7:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 3, -8
 659              		.cfi_offset 14, -4
 660              		.loc 1 288 14 view .LVU209
 661 0004 0122     		movs	r2, #1
 662              	.LVL30:
 663              		.loc 1 288 14 view .LVU210
 664 0006 4FF0FF33 		mov	r3, #-1
 665 000a 0548     		ldr	r0, .L32
 666              	.LVL31:
 667              		.loc 1 288 14 view .LVU211
 668 000c FFF7FEFF 		bl	HAL_UART_Receive
 669              	.LVL32:
 289:Src/main.c    **** 
 290:Src/main.c    ****     if (status == HAL_OK) {
 670              		.loc 1 290 5 is_stmt 1 view .LVU212
 671              		.loc 1 290 8 is_stmt 0 view .LVU213
 672 0010 0028     		cmp	r0, #0
 291:Src/main.c    ****       return 1;
 292:Src/main.c    ****     } else {
 293:Src/main.c    ****       return EIO;
 673              		.loc 1 293 14 view .LVU214
 674 0012 0CBF     		ite	eq
 675 0014 0120     		moveq	r0, #1
 676              	.LVL33:
 677              		.loc 1 293 14 view .LVU215
 678 0016 0520     		movne	r0, #5
 294:Src/main.c    ****     }
 295:Src/main.c    ****   }
 296:Src/main.c    ****   return -1;
 297:Src/main.c    **** }
 679              		.loc 1 297 1 view .LVU216
 680 0018 08BD     		pop	{r3, pc}
 681              	.LVL34:
ARM GAS  /tmp/ccdaU4a9.s 			page 20


 682              	.L26:
 683              	.LCFI8:
 684              		.cfi_def_cfa_offset 0
 685              		.cfi_restore 3
 686              		.cfi_restore 14
 296:Src/main.c    **** }
 687              		.loc 1 296 10 view .LVU217
 688 001a 4FF0FF30 		mov	r0, #-1
 689              	.LVL35:
 690              		.loc 1 297 1 view .LVU218
 691 001e 7047     		bx	lr
 692              	.L33:
 693              		.align	2
 694              	.L32:
 695 0020 00000000 		.word	hcom_uart
 696              		.cfi_endproc
 697              	.LFE141:
 699              		.section	.text._fstat,"ax",%progbits
 700              		.align	1
 701              		.p2align 2,,3
 702              		.global	_fstat
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu fpv4-sp-d16
 708              	_fstat:
 709              	.LVL36:
 710              	.LFB142:
 298:Src/main.c    **** 
 299:Src/main.c    **** int _fstat(int fd, struct stat *st) {
 711              		.loc 1 299 37 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 300:Src/main.c    ****   if (fd >= STDIN_FILENO && fd <= STDERR_FILENO) {
 716              		.loc 1 300 3 view .LVU220
 717              		.loc 1 300 6 is_stmt 0 view .LVU221
 718 0000 0228     		cmp	r0, #2
 301:Src/main.c    ****     st->st_mode = S_IFCHR;
 719              		.loc 1 301 5 is_stmt 1 view .LVU222
 720              		.loc 1 301 17 is_stmt 0 view .LVU223
 721 0002 9CBF     		itt	ls
 722 0004 4FF40053 		movls	r3, #8192
 723 0008 4B60     		strls	r3, [r1, #4]
 302:Src/main.c    ****     return 0;
 724              		.loc 1 302 5 is_stmt 1 view .LVU224
 303:Src/main.c    ****   }
 304:Src/main.c    **** 
 305:Src/main.c    ****   // errno = EBADF;
 306:Src/main.c    ****   return 0;
 307:Src/main.c    **** }
 725              		.loc 1 307 1 is_stmt 0 view .LVU225
 726 000a 0020     		movs	r0, #0
 727              	.LVL37:
 728              		.loc 1 307 1 view .LVU226
 729 000c 7047     		bx	lr
ARM GAS  /tmp/ccdaU4a9.s 			page 21


 730              		.cfi_endproc
 731              	.LFE142:
 733 000e 00BF     		.section	.text.USART2_IRQHandler,"ax",%progbits
 734              		.align	1
 735              		.p2align 2,,3
 736              		.global	USART2_IRQHandler
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 740              		.fpu fpv4-sp-d16
 742              	USART2_IRQHandler:
 743              	.LFB143:
 308:Src/main.c    **** 
 309:Src/main.c    **** /* UART2 Interrupt Service Routine */
 310:Src/main.c    **** void USART2_IRQHandler(void) { HAL_UART_IRQHandler(&huart2); }
 744              		.loc 1 310 30 is_stmt 1 view -0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              		.loc 1 310 32 view .LVU228
 750 0000 0148     		ldr	r0, .L37
 751 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 752              	.LVL38:
 753              	.L38:
 754 0006 00BF     		.align	2
 755              	.L37:
 756 0008 00000000 		.word	hcom_uart
 757              		.cfi_endproc
 758              	.LFE143:
 760              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 761              		.align	2
 762              	.LC0:
 763 0000 5B215D20 		.ascii	"[!] ERROR UNKNOWN MODE\000"
 763      4552524F 
 763      5220554E 
 763      4B4E4F57 
 763      4E204D4F 
 764              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 765              		.align	1
 766              		.p2align 2,,3
 767              		.global	HAL_UART_RxCpltCallback
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv4-sp-d16
 773              	HAL_UART_RxCpltCallback:
 774              	.LVL39:
 775              	.LFB144:
 311:Src/main.c    **** 
 312:Src/main.c    **** /* This callback is called by the HAL_UART_IRQHandler when the given number of
 313:Src/main.c    ****  * bytes are received */
 314:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 776              		.loc 1 314 57 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccdaU4a9.s 			page 22


 315:Src/main.c    ****   if (huart->Instance == USART2) {
 780              		.loc 1 315 3 view .LVU230
 314:Src/main.c    ****   if (huart->Instance == USART2) {
 781              		.loc 1 314 57 is_stmt 0 view .LVU231
 782 0000 08B5     		push	{r3, lr}
 783              	.LCFI9:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 3, -8
 786              		.cfi_offset 14, -4
 787              		.loc 1 315 6 view .LVU232
 788 0002 0268     		ldr	r2, [r0]
 789 0004 0D4B     		ldr	r3, .L49
 790 0006 9A42     		cmp	r2, r3
 791 0008 00D0     		beq	.L47
 316:Src/main.c    ****     /// Pump MODE
 317:Src/main.c    ****     switch (OPERATING_MODE) {
 318:Src/main.c    ****     case 0:
 319:Src/main.c    ****       InsulinController(FloatBuffer);
 320:Src/main.c    ****       break;
 321:Src/main.c    **** 
 322:Src/main.c    ****     case 1:
 323:Src/main.c    ****       InsulinManualController(FloatBuffer);
 324:Src/main.c    ****       break;
 325:Src/main.c    **** 
 326:Src/main.c    ****     default:
 327:Src/main.c    ****       printf("[!] ERROR UNKNOWN MODE");
 328:Src/main.c    ****       break;
 329:Src/main.c    ****     }
 330:Src/main.c    **** 
 331:Src/main.c    ****     HAL_UART_Receive_IT(&huart2, FloatBuffer, 32);
 332:Src/main.c    ****   }
 333:Src/main.c    **** }
 792              		.loc 1 333 1 view .LVU233
 793 000a 08BD     		pop	{r3, pc}
 794              	.L47:
 317:Src/main.c    ****     case 0:
 795              		.loc 1 317 5 is_stmt 1 view .LVU234
 796 000c 0C4B     		ldr	r3, .L49+4
 797 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 798 0010 7BB1     		cbz	r3, .L41
 799 0012 012B     		cmp	r3, #1
 800 0014 09D1     		bne	.L48
 323:Src/main.c    ****       break;
 801              		.loc 1 323 7 view .LVU235
 802 0016 0B48     		ldr	r0, .L49+8
 803              	.LVL40:
 323:Src/main.c    ****       break;
 804              		.loc 1 323 7 is_stmt 0 view .LVU236
 805 0018 FFF7FEFF 		bl	InsulinManualController
 806              	.LVL41:
 324:Src/main.c    **** 
 807              		.loc 1 324 7 is_stmt 1 view .LVU237
 808              	.L44:
 331:Src/main.c    ****   }
 809              		.loc 1 331 5 view .LVU238
 810              		.loc 1 333 1 is_stmt 0 view .LVU239
 811 001c BDE80840 		pop	{r3, lr}
ARM GAS  /tmp/ccdaU4a9.s 			page 23


 812              	.LCFI10:
 813              		.cfi_remember_state
 814              		.cfi_restore 14
 815              		.cfi_restore 3
 816              		.cfi_def_cfa_offset 0
 331:Src/main.c    ****   }
 817              		.loc 1 331 5 view .LVU240
 818 0020 0849     		ldr	r1, .L49+8
 819 0022 0948     		ldr	r0, .L49+12
 820 0024 2022     		movs	r2, #32
 821 0026 FFF7FEBF 		b	HAL_UART_Receive_IT
 822              	.LVL42:
 823              	.L48:
 824              	.LCFI11:
 825              		.cfi_restore_state
 327:Src/main.c    ****       break;
 826              		.loc 1 327 7 is_stmt 1 view .LVU241
 827 002a 0848     		ldr	r0, .L49+16
 828              	.LVL43:
 327:Src/main.c    ****       break;
 829              		.loc 1 327 7 is_stmt 0 view .LVU242
 830 002c FFF7FEFF 		bl	printf
 831              	.LVL44:
 328:Src/main.c    ****     }
 832              		.loc 1 328 7 is_stmt 1 view .LVU243
 833 0030 F4E7     		b	.L44
 834              	.LVL45:
 835              	.L41:
 319:Src/main.c    ****       break;
 836              		.loc 1 319 7 view .LVU244
 837 0032 0448     		ldr	r0, .L49+8
 838              	.LVL46:
 319:Src/main.c    ****       break;
 839              		.loc 1 319 7 is_stmt 0 view .LVU245
 840 0034 FFF7FEFF 		bl	InsulinController
 841              	.LVL47:
 320:Src/main.c    **** 
 842              		.loc 1 320 7 is_stmt 1 view .LVU246
 843 0038 F0E7     		b	.L44
 844              	.L50:
 845 003a 00BF     		.align	2
 846              	.L49:
 847 003c 00440040 		.word	1073759232
 848 0040 00000000 		.word	.LANCHOR0
 849 0044 00000000 		.word	FloatBuffer
 850 0048 00000000 		.word	hcom_uart
 851 004c 00000000 		.word	.LC0
 852              		.cfi_endproc
 853              	.LFE144:
 855              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 856              		.align	1
 857              		.p2align 2,,3
 858              		.global	HAL_TIM_PeriodElapsedCallback
 859              		.syntax unified
 860              		.thumb
 861              		.thumb_func
 862              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccdaU4a9.s 			page 24


 864              	HAL_TIM_PeriodElapsedCallback:
 865              	.LVL48:
 866              	.LFB145:
 334:Src/main.c    **** 
 335:Src/main.c    **** /* USER CODE END 4 */
 336:Src/main.c    **** 
 337:Src/main.c    **** /**
 338:Src/main.c    ****  * @brief  Period elapsed callback in non blocking mode
 339:Src/main.c    ****  * @note   This function is called  when TIM1 interrupt took place, inside
 340:Src/main.c    ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 341:Src/main.c    ****  * a global variable "uwTick" used as application time base.
 342:Src/main.c    ****  * @param  htim : TIM handle
 343:Src/main.c    ****  * @retval None
 344:Src/main.c    ****  */
 345:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 867              		.loc 1 345 61 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 346:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE END Callback 0 */
 349:Src/main.c    ****   if (htim->Instance == TIM1) {
 872              		.loc 1 349 3 view .LVU248
 873              		.loc 1 349 6 is_stmt 0 view .LVU249
 874 0000 034B     		ldr	r3, .L54
 875 0002 0268     		ldr	r2, [r0]
 876 0004 9A42     		cmp	r2, r3
 877 0006 00D0     		beq	.L53
 350:Src/main.c    ****     HAL_IncTick();
 351:Src/main.c    ****   }
 352:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 353:Src/main.c    **** 
 354:Src/main.c    ****   /* USER CODE END Callback 1 */
 355:Src/main.c    **** }
 878              		.loc 1 355 1 view .LVU250
 879 0008 7047     		bx	lr
 880              	.L53:
 350:Src/main.c    ****     HAL_IncTick();
 881              		.loc 1 350 5 is_stmt 1 view .LVU251
 882 000a FFF7FEBF 		b	HAL_IncTick
 883              	.LVL49:
 884              	.L55:
 350:Src/main.c    ****     HAL_IncTick();
 885              		.loc 1 350 5 is_stmt 0 view .LVU252
 886 000e 00BF     		.align	2
 887              	.L54:
 888 0010 00000140 		.word	1073807360
 889              		.cfi_endproc
 890              	.LFE145:
 892              		.section	.text.Error_Handler,"ax",%progbits
 893              		.align	1
 894              		.p2align 2,,3
 895              		.global	Error_Handler
 896              		.syntax unified
 897              		.thumb
ARM GAS  /tmp/ccdaU4a9.s 			page 25


 898              		.thumb_func
 899              		.fpu fpv4-sp-d16
 901              	Error_Handler:
 902              	.LFB146:
 356:Src/main.c    **** 
 357:Src/main.c    **** /**
 358:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 359:Src/main.c    ****  * @retval None
 360:Src/main.c    ****  */
 361:Src/main.c    **** void Error_Handler(void) {
 903              		.loc 1 361 26 is_stmt 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 362:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 363:Src/main.c    ****   /* User can add his own implementation to report the HAL error return
 364:Src/main.c    ****    * state */
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 367:Src/main.c    **** }
 908              		.loc 1 367 1 view .LVU254
 909 0000 7047     		bx	lr
 910              		.cfi_endproc
 911              	.LFE146:
 913              		.comm	FloatBuffer,32,4
 914              		.global	OPERATING_MODE
 915 0002 00BF     		.section	.bss.OPERATING_MODE,"aw",%nobits
 916              		.set	.LANCHOR0,. + 0
 919              	OPERATING_MODE:
 920 0000 00       		.space	1
 921              		.text
 922              	.Letext0:
 923              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 924              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 925              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 926              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 927              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 928              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 929              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 930              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h"
 931              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 932              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 933              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 934              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 935              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 936              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 937              		.file 16 "Inc/stm32f4xx_nucleo_bus.h"
 938              		.file 17 "Inc/hci_tl_interface.h"
 939              		.file 18 "Drivers/BSP/STM32F4xx_Nucleo/stm32f4xx_nucleo.h"
 940              		.file 19 "/usr/include/newlib/machine/_default_types.h"
 941              		.file 20 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 942              		.file 21 "/usr/include/newlib/sys/_types.h"
 943              		.file 22 "/usr/include/newlib/sys/reent.h"
 944              		.file 23 "/usr/include/newlib/sys/lock.h"
 945              		.file 24 "/usr/include/newlib/sys/_timeval.h"
 946              		.file 25 "/usr/include/newlib/sys/_timespec.h"
ARM GAS  /tmp/ccdaU4a9.s 			page 26


 947              		.file 26 "/usr/include/newlib/sys/types.h"
 948              		.file 27 "/usr/include/newlib/stdlib.h"
 949              		.file 28 "/usr/include/newlib/sys/errno.h"
 950              		.file 29 "/usr/include/newlib/time.h"
 951              		.file 30 "/usr/include/newlib/sys/stat.h"
 952              		.file 31 "/usr/include/newlib/sys/unistd.h"
 953              		.file 32 "Inc/InsulinController.h"
 954              		.file 33 "/usr/include/newlib/stdio.h"
 955              		.file 34 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 956              		.file 35 "Inc/app_x-cube-ble1.h"
ARM GAS  /tmp/ccdaU4a9.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccdaU4a9.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccdaU4a9.s:27     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccdaU4a9.s:186    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccdaU4a9.s:192    .text.startup.main:0000000000000000 $t
     /tmp/ccdaU4a9.s:200    .text.startup.main:0000000000000000 main
     /tmp/ccdaU4a9.s:466    .text.startup.main:0000000000000104 $d
                            *COM*:0000000000000020 FloatBuffer
     /tmp/ccdaU4a9.s:478    .text._isatty:0000000000000000 $t
     /tmp/ccdaU4a9.s:486    .text._isatty:0000000000000000 _isatty
     /tmp/ccdaU4a9.s:507    .text._write:0000000000000000 $t
     /tmp/ccdaU4a9.s:515    .text._write:0000000000000000 _write
     /tmp/ccdaU4a9.s:571    .text._write:0000000000000028 $d
     /tmp/ccdaU4a9.s:576    .text._close:0000000000000000 $t
     /tmp/ccdaU4a9.s:584    .text._close:0000000000000000 _close
     /tmp/ccdaU4a9.s:605    .text._lseek:0000000000000000 $t
     /tmp/ccdaU4a9.s:613    .text._lseek:0000000000000000 _lseek
     /tmp/ccdaU4a9.s:634    .text._read:0000000000000000 $t
     /tmp/ccdaU4a9.s:642    .text._read:0000000000000000 _read
     /tmp/ccdaU4a9.s:695    .text._read:0000000000000020 $d
     /tmp/ccdaU4a9.s:700    .text._fstat:0000000000000000 $t
     /tmp/ccdaU4a9.s:708    .text._fstat:0000000000000000 _fstat
     /tmp/ccdaU4a9.s:734    .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/ccdaU4a9.s:742    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/ccdaU4a9.s:756    .text.USART2_IRQHandler:0000000000000008 $d
     /tmp/ccdaU4a9.s:761    .rodata.HAL_UART_RxCpltCallback.str1.4:0000000000000000 $d
     /tmp/ccdaU4a9.s:765    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccdaU4a9.s:773    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccdaU4a9.s:847    .text.HAL_UART_RxCpltCallback:000000000000003c $d
     /tmp/ccdaU4a9.s:856    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccdaU4a9.s:864    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccdaU4a9.s:888    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccdaU4a9.s:893    .text.Error_Handler:0000000000000000 $t
     /tmp/ccdaU4a9.s:901    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccdaU4a9.s:919    .bss.OPERATING_MODE:0000000000000000 OPERATING_MODE
     /tmp/ccdaU4a9.s:920    .bss.OPERATING_MODE:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
MX_BlueNRG_MS_Init
HAL_UART_Receive_IT
MX_BlueNRG_MS_Process
hcom_uart
HAL_UART_Transmit
HAL_UART_Receive
HAL_UART_IRQHandler
InsulinManualController
printf
InsulinController
ARM GAS  /tmp/ccdaU4a9.s 			page 28


HAL_IncTick
